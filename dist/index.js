require('./sourcemap-register.js');/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 1864:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getBooleanInput = exports.getStringInput = exports.getInputOptions = void 0;
const core_1 = __nccwpck_require__(2186);
function getInputOptions() {
    var _a;
    const inputs = {
        capitalize: getBooleanInput('capitalize'),
        contributors: getBooleanInput('contributors'),
        draft: getBooleanInput('draft'),
        dry: getBooleanInput('dry'),
        // https://github.com/antfu/changelogithub/blob/main/src/cli.ts#L20
        emoji: (_a = getBooleanInput('emoji')) !== null && _a !== void 0 ? _a : true,
        from: getStringInput('from'),
        github: getStringInput('github'),
        group: getBooleanInput('group'),
        name: getStringInput('name'),
        prerelease: getBooleanInput('prerelease'),
        to: getStringInput('to'),
        token: getStringInput('token'),
        types: {
            feat: { title: '🚀 Features' },
            fix: { title: '🐞 Bug Fixes' },
            perf: { title: '🏎 Performance' },
            refactor: { title: "💅 Refactors" },
            improve: { title: "💡 Improvements" },
            tweak: { title: "🔧 Tweaks" },
            docs: { title: "📖 Documentation" },
            build: { title: "📦 Build" },
            types: { title: "🌊 Types" },
            chore: { title: "🏡 Chore" },
            examples: { title: "🏀 Examples" },
            test: { title: "✅ Tests" },
            style: { title: "🎨 Styles" },
            ci: { title: "🤖 CI" },
        },
    };
    const options = {};
    // https://github.com/actions/toolkit/issues/272
    for (const [key, value] of Object.entries(inputs)) {
        if (value !== undefined) {
            if (key == "types") {
                let types = (0, core_1.getMultilineInput)('types');
                if (types.length > 0) {
                    Object.assign(options, { [key]: Object.fromEntries(Object.entries(value).filter(([key]) => types.includes(key))) });
                }
                else {
                    Object.assign(options, { [key]: value });
                }
            }
            else {
                Object.assign(options, { [key]: value });
            }
        }
    }
    return options;
}
exports.getInputOptions = getInputOptions;
function getStringInput(name, options) {
    const input = (0, core_1.getInput)(name, options);
    if (input === '') {
        return undefined;
    }
    return input;
}
exports.getStringInput = getStringInput;
function getBooleanInput(name, options) {
    const input = (0, core_1.getInput)(name, options);
    if (input === '') {
        return undefined;
    }
    return input === 'true';
}
exports.getBooleanInput = getBooleanInput;


/***/ }),

/***/ 5930:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generateChangelog = exports.run = void 0;
const core_1 = __nccwpck_require__(2186);
const changelogithub_1 = __nccwpck_require__(8750);
const action_1 = __nccwpck_require__(1864);
function run() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const inputOptions = (0, action_1.getInputOptions)();
            yield generateChangelog(inputOptions);
        }
        catch (error) {
            (0, core_1.setFailed)(`Action changelogithub failed with error: ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
exports.run = run;
function generateChangelog(inputOptions) {
    return __awaiter(this, void 0, void 0, function* () {
        const { commits, config, md } = yield (0, changelogithub_1.generate)(inputOptions);
        if (config.dry) {
            (0, core_1.info)('Dry run. Release skipped.');
            return;
        }
        if (!config.token) {
            throw new Error('No GitHub token found, specify it via the `token` action input. Release skipped.');
        }
        if (!(yield (0, changelogithub_1.hasTagOnGitHub)(config.to, config))) {
            throw new Error(`Current ref "${config.to}" is not available as tags on GitHub. Release skipped.`);
        }
        let changelog = md.replace('### &nbsp;&nbsp;&nbsp;', '## ')
            .replace('##### &nbsp;&nbsp;&nbsp;&nbsp;', '**Full Changelog**: ')
            .replace('View changes on GitHub', `${config.from}...${config.to}`);
        (0, core_1.setOutput)('changelog', changelog);
        setFileChangelogOutput(config, md);
        if (commits.length === 0 && (yield (0, changelogithub_1.isRepoShallow)())) {
            throw new Error('The repo seems to be cloned shallowly, which make changelog failed to generate. You might want to specify `fetch-depth: 0` in your CI config.');
        }
    });
}
exports.generateChangelog = generateChangelog;
function setFileChangelogOutput(config, md) {
    let d = new Date();
    let year = d.getFullYear();
    let month = (d.getMonth() + 1).toString().padStart(2, '0');
    let day = d.getDate().toString().padStart(2, '0');
    let header = `## ${config.to} (${year}-${month}-${day})\n`;
    let changelog = md.replace(/##### &nbsp;&nbsp;&nbsp;&nbsp;.+/i, '');
    (0, core_1.setOutput)('changelog_with_version', header + changelog);
}


/***/ }),

/***/ 7351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(2037));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 2186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(7351);
const file_command_1 = __nccwpck_require__(717);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(2037));
const path = __importStar(__nccwpck_require__(1017));
const oidc_utils_1 = __nccwpck_require__(8041);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));
    }
    command_1.issueCommand('set-env', { name }, convertedVal);
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueFileCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    if (options && options.trimWhitespace === false) {
        return inputs;
    }
    return inputs.map(input => input.trim());
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    const filePath = process.env['GITHUB_OUTPUT'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));
    }
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    const filePath = process.env['GITHUB_STATE'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));
    }
    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __nccwpck_require__(1327);
Object.defineProperty(exports, "summary", ({ enumerable: true, get: function () { return summary_1.summary; } }));
/**
 * @deprecated use core.summary
 */
var summary_2 = __nccwpck_require__(1327);
Object.defineProperty(exports, "markdownSummary", ({ enumerable: true, get: function () { return summary_2.markdownSummary; } }));
/**
 * Path exports
 */
var path_utils_1 = __nccwpck_require__(2981);
Object.defineProperty(exports, "toPosixPath", ({ enumerable: true, get: function () { return path_utils_1.toPosixPath; } }));
Object.defineProperty(exports, "toWin32Path", ({ enumerable: true, get: function () { return path_utils_1.toWin32Path; } }));
Object.defineProperty(exports, "toPlatformPath", ({ enumerable: true, get: function () { return path_utils_1.toPlatformPath; } }));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 717:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareKeyValueMessage = exports.issueFileCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(7147));
const os = __importStar(__nccwpck_require__(2037));
const uuid_1 = __nccwpck_require__(5840);
const utils_1 = __nccwpck_require__(5278);
function issueFileCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueFileCommand = issueFileCommand;
function prepareKeyValueMessage(key, value) {
    const delimiter = `ghadelimiter_${uuid_1.v4()}`;
    const convertedValue = utils_1.toCommandValue(value);
    // These should realistically never happen, but just in case someone finds a
    // way to exploit uuid generation let's not allow keys or values that contain
    // the delimiter.
    if (key.includes(delimiter)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
    }
    if (convertedValue.includes(delimiter)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
    }
    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
}
exports.prepareKeyValueMessage = prepareKeyValueMessage;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 8041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(6255);
const auth_1 = __nccwpck_require__(5526);
const core_1 = __nccwpck_require__(2186);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.result.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 2981:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
const path = __importStar(__nccwpck_require__(1017));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
    return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
    return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
    return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ 1327:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
const os_1 = __nccwpck_require__(2037);
const fs_1 = __nccwpck_require__(7147);
const { access, appendFile, writeFile } = fs_1.promises;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
class Summary {
    constructor() {
        this._buffer = '';
    }
    /**
     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
     * Also checks r/w permissions.
     *
     * @returns step summary file path
     */
    filePath() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._filePath) {
                return this._filePath;
            }
            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
            if (!pathFromEnv) {
                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            }
            catch (_a) {
                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = pathFromEnv;
            return this._filePath;
        });
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
    wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs)
            .map(([key, value]) => ` ${key}="${value}"`)
            .join('');
        if (!content) {
            return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
    write(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
            const filePath = yield this.filePath();
            const writeFunc = overwrite ? writeFile : appendFile;
            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });
            return this.emptyBuffer();
        });
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
        });
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
    stringify() {
        return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
    isEmptyBuffer() {
        return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
    emptyBuffer() {
        this._buffer = '';
        return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
    addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
    addEOL() {
        return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
    addCodeBlock(code, lang) {
        const attrs = Object.assign({}, (lang && { lang }));
        const element = this.wrap('pre', this.wrap('code', code), attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
    addList(items, ordered = false) {
        const tag = ordered ? 'ol' : 'ul';
        const listItems = items.map(item => this.wrap('li', item)).join('');
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
    addTable(rows) {
        const tableBody = rows
            .map(row => {
            const cells = row
                .map(cell => {
                if (typeof cell === 'string') {
                    return this.wrap('td', cell);
                }
                const { header, data, colspan, rowspan } = cell;
                const tag = header ? 'th' : 'td';
                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));
                return this.wrap(tag, data, attrs);
            })
                .join('');
            return this.wrap('tr', cells);
        })
            .join('');
        const element = this.wrap('table', tableBody);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
    addDetails(label, content) {
        const element = this.wrap('details', this.wrap('summary', label) + content);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
    addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));
        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
    addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)
            ? tag
            : 'h1';
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addSeparator() {
        const element = this.wrap('hr', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addBreak() {
        const element = this.wrap('br', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
    addQuote(text, cite) {
        const attrs = Object.assign({}, (cite && { cite }));
        const element = this.wrap('blockquote', text, attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
    addLink(text, href) {
        const element = this.wrap('a', text, { href });
        return this.addRaw(element).addEOL();
    }
}
const _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 5526:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Bearer ${this.token}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ 6255:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/* eslint-disable @typescript-eslint/no-explicit-any */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
const http = __importStar(__nccwpck_require__(3685));
const https = __importStar(__nccwpck_require__(5687));
const pm = __importStar(__nccwpck_require__(9835));
const tunnel = __importStar(__nccwpck_require__(4294));
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let output = Buffer.alloc(0);
                this.message.on('data', (chunk) => {
                    output = Buffer.concat([output, chunk]);
                });
                this.message.on('end', () => {
                    resolve(output.toString());
                });
            }));
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
        });
    }
    get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('GET', requestUrl, null, additionalHeaders || {});
        });
    }
    del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('DELETE', requestUrl, null, additionalHeaders || {});
        });
    }
    post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('POST', requestUrl, data, additionalHeaders || {});
        });
    }
    patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PATCH', requestUrl, data, additionalHeaders || {});
        });
    }
    put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PUT', requestUrl, data, additionalHeaders || {});
        });
    }
    head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('HEAD', requestUrl, null, additionalHeaders || {});
        });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(verb, requestUrl, stream, additionalHeaders);
        });
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            const res = yield this.get(requestUrl, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.post(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.put(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.patch(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._disposed) {
                throw new Error('Client has already been disposed.');
            }
            const parsedUrl = new URL(requestUrl);
            let info = this._prepareRequest(verb, parsedUrl, headers);
            // Only perform retries on reads since writes may not be idempotent.
            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)
                ? this._maxRetries + 1
                : 1;
            let numTries = 0;
            let response;
            do {
                response = yield this.requestRaw(info, data);
                // Check if it's an authentication challenge
                if (response &&
                    response.message &&
                    response.message.statusCode === HttpCodes.Unauthorized) {
                    let authenticationHandler;
                    for (const handler of this.handlers) {
                        if (handler.canHandleAuthentication(response)) {
                            authenticationHandler = handler;
                            break;
                        }
                    }
                    if (authenticationHandler) {
                        return authenticationHandler.handleAuthentication(this, info, data);
                    }
                    else {
                        // We have received an unauthorized response but have no handlers to handle it.
                        // Let the response return to the caller.
                        return response;
                    }
                }
                let redirectsRemaining = this._maxRedirects;
                while (response.message.statusCode &&
                    HttpRedirectCodes.includes(response.message.statusCode) &&
                    this._allowRedirects &&
                    redirectsRemaining > 0) {
                    const redirectUrl = response.message.headers['location'];
                    if (!redirectUrl) {
                        // if there's no location to redirect to, we won't
                        break;
                    }
                    const parsedRedirectUrl = new URL(redirectUrl);
                    if (parsedUrl.protocol === 'https:' &&
                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&
                        !this._allowRedirectDowngrade) {
                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                    }
                    // we need to finish reading the response before reassigning response
                    // which will leak the open socket.
                    yield response.readBody();
                    // strip authorization header if redirected to a different hostname
                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                        for (const header in headers) {
                            // header names are case insensitive
                            if (header.toLowerCase() === 'authorization') {
                                delete headers[header];
                            }
                        }
                    }
                    // let's make the request with the new redirectUrl
                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                    response = yield this.requestRaw(info, data);
                    redirectsRemaining--;
                }
                if (!response.message.statusCode ||
                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {
                    // If not a retry code, return immediately instead of retrying
                    return response;
                }
                numTries += 1;
                if (numTries < maxTries) {
                    yield response.readBody();
                    yield this._performExponentialBackoff(numTries);
                }
            } while (numTries < maxTries);
            return response;
        });
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                function callbackForResult(err, res) {
                    if (err) {
                        reject(err);
                    }
                    else if (!res) {
                        // If `err` is not passed, then `res` must be passed.
                        reject(new Error('Unknown error'));
                    }
                    else {
                        resolve(res);
                    }
                }
                this.requestRawWithCallback(info, data, callbackForResult);
            });
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        if (typeof data === 'string') {
            if (!info.options.headers) {
                info.options.headers = {};
            }
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        function handleResult(err, res) {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        }
        const req = info.httpModule.request(info.options, (msg) => {
            const res = new HttpClientResponse(msg);
            handleResult(undefined, res);
        });
        let socket;
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            for (const handler of this.handlers) {
                handler.prepareRequest(info.options);
            }
        }
        return info;
    }
    _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
        if (proxyUrl && proxyUrl.hostname) {
            const agentOptions = {
                maxSockets,
                keepAlive: this._keepAlive,
                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {
                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                })), { host: proxyUrl.hostname, port: proxyUrl.port })
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
            return new Promise(resolve => setTimeout(() => resolve(), ms));
        });
    }
    _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                const statusCode = res.message.statusCode || 0;
                const response = {
                    statusCode,
                    result: null,
                    headers: {}
                };
                // not found leads to null obj returned
                if (statusCode === HttpCodes.NotFound) {
                    resolve(response);
                }
                // get the result from the body
                function dateTimeDeserializer(key, value) {
                    if (typeof value === 'string') {
                        const a = new Date(value);
                        if (!isNaN(a.valueOf())) {
                            return a;
                        }
                    }
                    return value;
                }
                let obj;
                let contents;
                try {
                    contents = yield res.readBody();
                    if (contents && contents.length > 0) {
                        if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                        }
                        else {
                            obj = JSON.parse(contents);
                        }
                        response.result = obj;
                    }
                    response.headers = res.message.headers;
                }
                catch (err) {
                    // Invalid resource (contents not json);  leaving result obj null
                }
                // note that 3xx redirects are handled by the http layer.
                if (statusCode > 299) {
                    let msg;
                    // if exception/error in body, attempt to get better error
                    if (obj && obj.message) {
                        msg = obj.message;
                    }
                    else if (contents && contents.length > 0) {
                        // it may be the case that the exception is in the body message as string
                        msg = contents;
                    }
                    else {
                        msg = `Failed request: (${statusCode})`;
                    }
                    const err = new HttpClientError(msg, statusCode);
                    err.result = response.result;
                    reject(err);
                }
                else {
                    resolve(response);
                }
            }));
        });
    }
}
exports.HttpClient = HttpClient;
const lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 9835:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
    const usingSsl = reqUrl.protocol === 'https:';
    if (checkBypass(reqUrl)) {
        return undefined;
    }
    const proxyVar = (() => {
        if (usingSsl) {
            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
        }
        else {
            return process.env['http_proxy'] || process.env['HTTP_PROXY'];
        }
    })();
    if (proxyVar) {
        return new URL(proxyVar);
    }
    else {
        return undefined;
    }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (const upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperReqHosts.some(x => x === upperNoProxyItem)) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ 390:
/***/ (function(__unused_webpack_module, exports) {

(function (global, factory) {
   true ? factory(exports) :
  0;
})(this, (function (exports) { 'use strict';

  // This file was generated. Do not modify manually!
  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];

  // This file was generated. Do not modify manually!
  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];

  // This file was generated. Do not modify manually!
  var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u0898-\u089f\u08ca-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3c\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0cf3\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ece\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u180f-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf-\u1ace\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";

  // This file was generated. Do not modify manually!
  var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u0870-\u0887\u0889-\u088e\u08a0-\u08c9\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c5d\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cdd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u1711\u171f-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ca\ua7d0\ua7d1\ua7d3\ua7d5-\ua7d9\ua7f2-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";

  // These are a run-length and offset encoded representation of the
  // >0xffff code points that are a valid part of identifiers. The
  // offset starts at 0x10000, and each pair of numbers represents an
  // offset to the next range, and then a size of the range.

  // Reserved word lists for various dialects of the language

  var reservedWords = {
    3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
    5: "class enum extends super const export import",
    6: "enum",
    strict: "implements interface let package private protected public static yield",
    strictBind: "eval arguments"
  };

  // And the keywords

  var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";

  var keywords$1 = {
    5: ecma5AndLessKeywords,
    "5module": ecma5AndLessKeywords + " export import",
    6: ecma5AndLessKeywords + " const class extends export import super"
  };

  var keywordRelationalOperator = /^in(stanceof)?$/;

  // ## Character categories

  var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
  var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

  // This has a complexity linear to the value of the code. The
  // assumption is that looking up astral identifier characters is
  // rare.
  function isInAstralSet(code, set) {
    var pos = 0x10000;
    for (var i = 0; i < set.length; i += 2) {
      pos += set[i];
      if (pos > code) { return false }
      pos += set[i + 1];
      if (pos >= code) { return true }
    }
    return false
  }

  // Test whether a given character code starts an identifier.

  function isIdentifierStart(code, astral) {
    if (code < 65) { return code === 36 }
    if (code < 91) { return true }
    if (code < 97) { return code === 95 }
    if (code < 123) { return true }
    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }
    if (astral === false) { return false }
    return isInAstralSet(code, astralIdentifierStartCodes)
  }

  // Test whether a given character is part of an identifier.

  function isIdentifierChar(code, astral) {
    if (code < 48) { return code === 36 }
    if (code < 58) { return true }
    if (code < 65) { return false }
    if (code < 91) { return true }
    if (code < 97) { return code === 95 }
    if (code < 123) { return true }
    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }
    if (astral === false) { return false }
    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)
  }

  // ## Token types

  // The assignment of fine-grained, information-carrying type objects
  // allows the tokenizer to store the information it has about a
  // token in a way that is very cheap for the parser to look up.

  // All token type variables start with an underscore, to make them
  // easy to recognize.

  // The `beforeExpr` property is used to disambiguate between regular
  // expressions and divisions. It is set on all token types that can
  // be followed by an expression (thus, a slash after them would be a
  // regular expression).
  //
  // The `startsExpr` property is used to check if the token ends a
  // `yield` expression. It is set on all token types that either can
  // directly start an expression (like a quotation mark) or can
  // continue an expression (like the body of a string).
  //
  // `isLoop` marks a keyword as starting a loop, which is important
  // to know when parsing a label, in order to allow or disallow
  // continue jumps to that label.

  var TokenType = function TokenType(label, conf) {
    if ( conf === void 0 ) conf = {};

    this.label = label;
    this.keyword = conf.keyword;
    this.beforeExpr = !!conf.beforeExpr;
    this.startsExpr = !!conf.startsExpr;
    this.isLoop = !!conf.isLoop;
    this.isAssign = !!conf.isAssign;
    this.prefix = !!conf.prefix;
    this.postfix = !!conf.postfix;
    this.binop = conf.binop || null;
    this.updateContext = null;
  };

  function binop(name, prec) {
    return new TokenType(name, {beforeExpr: true, binop: prec})
  }
  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};

  // Map keyword names to token types.

  var keywords = {};

  // Succinct definitions of keyword token types
  function kw(name, options) {
    if ( options === void 0 ) options = {};

    options.keyword = name;
    return keywords[name] = new TokenType(name, options)
  }

  var types$1 = {
    num: new TokenType("num", startsExpr),
    regexp: new TokenType("regexp", startsExpr),
    string: new TokenType("string", startsExpr),
    name: new TokenType("name", startsExpr),
    privateId: new TokenType("privateId", startsExpr),
    eof: new TokenType("eof"),

    // Punctuation token types.
    bracketL: new TokenType("[", {beforeExpr: true, startsExpr: true}),
    bracketR: new TokenType("]"),
    braceL: new TokenType("{", {beforeExpr: true, startsExpr: true}),
    braceR: new TokenType("}"),
    parenL: new TokenType("(", {beforeExpr: true, startsExpr: true}),
    parenR: new TokenType(")"),
    comma: new TokenType(",", beforeExpr),
    semi: new TokenType(";", beforeExpr),
    colon: new TokenType(":", beforeExpr),
    dot: new TokenType("."),
    question: new TokenType("?", beforeExpr),
    questionDot: new TokenType("?."),
    arrow: new TokenType("=>", beforeExpr),
    template: new TokenType("template"),
    invalidTemplate: new TokenType("invalidTemplate"),
    ellipsis: new TokenType("...", beforeExpr),
    backQuote: new TokenType("`", startsExpr),
    dollarBraceL: new TokenType("${", {beforeExpr: true, startsExpr: true}),

    // Operators. These carry several kinds of properties to help the
    // parser use them properly (the presence of these properties is
    // what categorizes them as operators).
    //
    // `binop`, when present, specifies that this operator is a binary
    // operator, and will refer to its precedence.
    //
    // `prefix` and `postfix` mark the operator as a prefix or postfix
    // unary operator.
    //
    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
    // binary operators with a very low precedence, that should result
    // in AssignmentExpression nodes.

    eq: new TokenType("=", {beforeExpr: true, isAssign: true}),
    assign: new TokenType("_=", {beforeExpr: true, isAssign: true}),
    incDec: new TokenType("++/--", {prefix: true, postfix: true, startsExpr: true}),
    prefix: new TokenType("!/~", {beforeExpr: true, prefix: true, startsExpr: true}),
    logicalOR: binop("||", 1),
    logicalAND: binop("&&", 2),
    bitwiseOR: binop("|", 3),
    bitwiseXOR: binop("^", 4),
    bitwiseAND: binop("&", 5),
    equality: binop("==/!=/===/!==", 6),
    relational: binop("</>/<=/>=", 7),
    bitShift: binop("<</>>/>>>", 8),
    plusMin: new TokenType("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),
    modulo: binop("%", 10),
    star: binop("*", 10),
    slash: binop("/", 10),
    starstar: new TokenType("**", {beforeExpr: true}),
    coalesce: binop("??", 1),

    // Keyword token types.
    _break: kw("break"),
    _case: kw("case", beforeExpr),
    _catch: kw("catch"),
    _continue: kw("continue"),
    _debugger: kw("debugger"),
    _default: kw("default", beforeExpr),
    _do: kw("do", {isLoop: true, beforeExpr: true}),
    _else: kw("else", beforeExpr),
    _finally: kw("finally"),
    _for: kw("for", {isLoop: true}),
    _function: kw("function", startsExpr),
    _if: kw("if"),
    _return: kw("return", beforeExpr),
    _switch: kw("switch"),
    _throw: kw("throw", beforeExpr),
    _try: kw("try"),
    _var: kw("var"),
    _const: kw("const"),
    _while: kw("while", {isLoop: true}),
    _with: kw("with"),
    _new: kw("new", {beforeExpr: true, startsExpr: true}),
    _this: kw("this", startsExpr),
    _super: kw("super", startsExpr),
    _class: kw("class", startsExpr),
    _extends: kw("extends", beforeExpr),
    _export: kw("export"),
    _import: kw("import", startsExpr),
    _null: kw("null", startsExpr),
    _true: kw("true", startsExpr),
    _false: kw("false", startsExpr),
    _in: kw("in", {beforeExpr: true, binop: 7}),
    _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),
    _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: true}),
    _void: kw("void", {beforeExpr: true, prefix: true, startsExpr: true}),
    _delete: kw("delete", {beforeExpr: true, prefix: true, startsExpr: true})
  };

  // Matches a whole line break (where CRLF is considered a single
  // line break). Used to count lines.

  var lineBreak = /\r\n?|\n|\u2028|\u2029/;
  var lineBreakG = new RegExp(lineBreak.source, "g");

  function isNewLine(code) {
    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029
  }

  function nextLineBreak(code, from, end) {
    if ( end === void 0 ) end = code.length;

    for (var i = from; i < end; i++) {
      var next = code.charCodeAt(i);
      if (isNewLine(next))
        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }
    }
    return -1
  }

  var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

  var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;

  var ref = Object.prototype;
  var hasOwnProperty = ref.hasOwnProperty;
  var toString = ref.toString;

  var hasOwn = Object.hasOwn || (function (obj, propName) { return (
    hasOwnProperty.call(obj, propName)
  ); });

  var isArray = Array.isArray || (function (obj) { return (
    toString.call(obj) === "[object Array]"
  ); });

  function wordsRegexp(words) {
    return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$")
  }

  function codePointToString(code) {
    // UTF-16 Decoding
    if (code <= 0xFFFF) { return String.fromCharCode(code) }
    code -= 0x10000;
    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)
  }

  var loneSurrogate = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;

  // These are used when `options.locations` is on, for the
  // `startLoc` and `endLoc` properties.

  var Position = function Position(line, col) {
    this.line = line;
    this.column = col;
  };

  Position.prototype.offset = function offset (n) {
    return new Position(this.line, this.column + n)
  };

  var SourceLocation = function SourceLocation(p, start, end) {
    this.start = start;
    this.end = end;
    if (p.sourceFile !== null) { this.source = p.sourceFile; }
  };

  // The `getLineInfo` function is mostly useful when the
  // `locations` option is off (for performance reasons) and you
  // want to find the line/column position for a given character
  // offset. `input` should be the code string that the offset refers
  // into.

  function getLineInfo(input, offset) {
    for (var line = 1, cur = 0;;) {
      var nextBreak = nextLineBreak(input, cur, offset);
      if (nextBreak < 0) { return new Position(line, offset - cur) }
      ++line;
      cur = nextBreak;
    }
  }

  // A second argument must be given to configure the parser process.
  // These options are recognized (only `ecmaVersion` is required):

  var defaultOptions = {
    // `ecmaVersion` indicates the ECMAScript version to parse. Must be
    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10
    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`
    // (the latest version the library supports). This influences
    // support for strict mode, the set of reserved words, and support
    // for new syntax features.
    ecmaVersion: null,
    // `sourceType` indicates the mode the code should be parsed in.
    // Can be either `"script"` or `"module"`. This influences global
    // strict mode and parsing of `import` and `export` declarations.
    sourceType: "script",
    // `onInsertedSemicolon` can be a callback that will be called
    // when a semicolon is automatically inserted. It will be passed
    // the position of the comma as an offset, and if `locations` is
    // enabled, it is given the location as a `{line, column}` object
    // as second argument.
    onInsertedSemicolon: null,
    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
    // trailing commas.
    onTrailingComma: null,
    // By default, reserved words are only enforced if ecmaVersion >= 5.
    // Set `allowReserved` to a boolean value to explicitly turn this on
    // an off. When this option has the value "never", reserved words
    // and keywords can also not be used as property names.
    allowReserved: null,
    // When enabled, a return at the top level is not considered an
    // error.
    allowReturnOutsideFunction: false,
    // When enabled, import/export statements are not constrained to
    // appearing at the top of the program, and an import.meta expression
    // in a script isn't considered an error.
    allowImportExportEverywhere: false,
    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.
    // When enabled, await identifiers are allowed to appear at the top-level scope,
    // but they are still not allowed in non-async functions.
    allowAwaitOutsideFunction: null,
    // When enabled, super identifiers are not constrained to
    // appearing in methods and do not raise an error when they appear elsewhere.
    allowSuperOutsideMethod: null,
    // When enabled, hashbang directive in the beginning of file is
    // allowed and treated as a line comment. Enabled by default when
    // `ecmaVersion` >= 2023.
    allowHashBang: false,
    // By default, the parser will verify that private properties are
    // only used in places where they are valid and have been declared.
    // Set this to false to turn such checks off.
    checkPrivateFields: true,
    // When `locations` is on, `loc` properties holding objects with
    // `start` and `end` properties in `{line, column}` form (with
    // line being 1-based and column 0-based) will be attached to the
    // nodes.
    locations: false,
    // A function can be passed as `onToken` option, which will
    // cause Acorn to call that function with object in the same
    // format as tokens returned from `tokenizer().getToken()`. Note
    // that you are not allowed to call the parser from the
    // callback—that will corrupt its internal state.
    onToken: null,
    // A function can be passed as `onComment` option, which will
    // cause Acorn to call that function with `(block, text, start,
    // end)` parameters whenever a comment is skipped. `block` is a
    // boolean indicating whether this is a block (`/* */`) comment,
    // `text` is the content of the comment, and `start` and `end` are
    // character offsets that denote the start and end of the comment.
    // When the `locations` option is on, two more parameters are
    // passed, the full `{line, column}` locations of the start and
    // end of the comments. Note that you are not allowed to call the
    // parser from the callback—that will corrupt its internal state.
    onComment: null,
    // Nodes have their start and end characters offsets recorded in
    // `start` and `end` properties (directly on the node, rather than
    // the `loc` object, which holds line/column data. To also add a
    // [semi-standardized][range] `range` property holding a `[start,
    // end]` array with the same numbers, set the `ranges` option to
    // `true`.
    //
    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
    ranges: false,
    // It is possible to parse multiple files into a single AST by
    // passing the tree produced by parsing the first file as
    // `program` option in subsequent parses. This will add the
    // toplevel forms of the parsed file to the `Program` (top) node
    // of an existing parse tree.
    program: null,
    // When `locations` is on, you can pass this to record the source
    // file in every node's `loc` object.
    sourceFile: null,
    // This value, if given, is stored in every node, whether
    // `locations` is on or off.
    directSourceFile: null,
    // When enabled, parenthesized expressions are represented by
    // (non-standard) ParenthesizedExpression nodes
    preserveParens: false
  };

  // Interpret and default an options object

  var warnedAboutEcmaVersion = false;

  function getOptions(opts) {
    var options = {};

    for (var opt in defaultOptions)
      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }

    if (options.ecmaVersion === "latest") {
      options.ecmaVersion = 1e8;
    } else if (options.ecmaVersion == null) {
      if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {
        warnedAboutEcmaVersion = true;
        console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.");
      }
      options.ecmaVersion = 11;
    } else if (options.ecmaVersion >= 2015) {
      options.ecmaVersion -= 2009;
    }

    if (options.allowReserved == null)
      { options.allowReserved = options.ecmaVersion < 5; }

    if (!opts || opts.allowHashBang == null)
      { options.allowHashBang = options.ecmaVersion >= 14; }

    if (isArray(options.onToken)) {
      var tokens = options.onToken;
      options.onToken = function (token) { return tokens.push(token); };
    }
    if (isArray(options.onComment))
      { options.onComment = pushComment(options, options.onComment); }

    return options
  }

  function pushComment(options, array) {
    return function(block, text, start, end, startLoc, endLoc) {
      var comment = {
        type: block ? "Block" : "Line",
        value: text,
        start: start,
        end: end
      };
      if (options.locations)
        { comment.loc = new SourceLocation(this, startLoc, endLoc); }
      if (options.ranges)
        { comment.range = [start, end]; }
      array.push(comment);
    }
  }

  // Each scope gets a bitset that may contain these flags
  var
      SCOPE_TOP = 1,
      SCOPE_FUNCTION = 2,
      SCOPE_ASYNC = 4,
      SCOPE_GENERATOR = 8,
      SCOPE_ARROW = 16,
      SCOPE_SIMPLE_CATCH = 32,
      SCOPE_SUPER = 64,
      SCOPE_DIRECT_SUPER = 128,
      SCOPE_CLASS_STATIC_BLOCK = 256,
      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;

  function functionFlags(async, generator) {
    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)
  }

  // Used in checkLVal* and declareName to determine the type of a binding
  var
      BIND_NONE = 0, // Not a binding
      BIND_VAR = 1, // Var-style binding
      BIND_LEXICAL = 2, // Let- or const-style binding
      BIND_FUNCTION = 3, // Function declaration
      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding
      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function

  var Parser = function Parser(options, input, startPos) {
    this.options = options = getOptions(options);
    this.sourceFile = options.sourceFile;
    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
    var reserved = "";
    if (options.allowReserved !== true) {
      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];
      if (options.sourceType === "module") { reserved += " await"; }
    }
    this.reservedWords = wordsRegexp(reserved);
    var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
    this.reservedWordsStrict = wordsRegexp(reservedStrict);
    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
    this.input = String(input);

    // Used to signal to callers of `readWord1` whether the word
    // contained any escape sequences. This is needed because words with
    // escape sequences must not be interpreted as keywords.
    this.containsEsc = false;

    // Set up token state

    // The current position of the tokenizer in the input.
    if (startPos) {
      this.pos = startPos;
      this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
    } else {
      this.pos = this.lineStart = 0;
      this.curLine = 1;
    }

    // Properties of the current token:
    // Its type
    this.type = types$1.eof;
    // For tokens that include more information than their type, the value
    this.value = null;
    // Its start and end offset
    this.start = this.end = this.pos;
    // And, if locations are used, the {line, column} object
    // corresponding to those offsets
    this.startLoc = this.endLoc = this.curPosition();

    // Position information for the previous token
    this.lastTokEndLoc = this.lastTokStartLoc = null;
    this.lastTokStart = this.lastTokEnd = this.pos;

    // The context stack is used to superficially track syntactic
    // context to predict whether a regular expression is allowed in a
    // given position.
    this.context = this.initialContext();
    this.exprAllowed = true;

    // Figure out if it's a module code.
    this.inModule = options.sourceType === "module";
    this.strict = this.inModule || this.strictDirective(this.pos);

    // Used to signify the start of a potential arrow function
    this.potentialArrowAt = -1;
    this.potentialArrowInForAwait = false;

    // Positions to delayed-check that yield/await does not exist in default parameters.
    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
    // Labels in scope.
    this.labels = [];
    // Thus-far undefined exports.
    this.undefinedExports = Object.create(null);

    // If enabled, skip leading hashbang line.
    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!")
      { this.skipLineComment(2); }

    // Scope tracking for duplicate variable names (see scope.js)
    this.scopeStack = [];
    this.enterScope(SCOPE_TOP);

    // For RegExp validation
    this.regexpState = null;

    // The stack of private names.
    // Each element has two properties: 'declared' and 'used'.
    // When it exited from the outermost class definition, all used private names must be declared.
    this.privateNameStack = [];
  };

  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };

  Parser.prototype.parse = function parse () {
    var node = this.options.program || this.startNode();
    this.nextToken();
    return this.parseTopLevel(node)
  };

  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };

  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };

  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };

  prototypeAccessors.canAwait.get = function () {
    for (var i = this.scopeStack.length - 1; i >= 0; i--) {
      var scope = this.scopeStack[i];
      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }
      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }
    }
    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction
  };

  prototypeAccessors.allowSuper.get = function () {
    var ref = this.currentThisScope();
      var flags = ref.flags;
      var inClassFieldInit = ref.inClassFieldInit;
    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod
  };

  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };

  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };

  prototypeAccessors.allowNewDotTarget.get = function () {
    var ref = this.currentThisScope();
      var flags = ref.flags;
      var inClassFieldInit = ref.inClassFieldInit;
    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit
  };

  prototypeAccessors.inClassStaticBlock.get = function () {
    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0
  };

  Parser.extend = function extend () {
      var plugins = [], len = arguments.length;
      while ( len-- ) plugins[ len ] = arguments[ len ];

    var cls = this;
    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }
    return cls
  };

  Parser.parse = function parse (input, options) {
    return new this(options, input).parse()
  };

  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {
    var parser = new this(options, input, pos);
    parser.nextToken();
    return parser.parseExpression()
  };

  Parser.tokenizer = function tokenizer (input, options) {
    return new this(options, input)
  };

  Object.defineProperties( Parser.prototype, prototypeAccessors );

  var pp$9 = Parser.prototype;

  // ## Parser utilities

  var literal = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
  pp$9.strictDirective = function(start) {
    if (this.options.ecmaVersion < 5) { return false }
    for (;;) {
      // Try to find string literal.
      skipWhiteSpace.lastIndex = start;
      start += skipWhiteSpace.exec(this.input)[0].length;
      var match = literal.exec(this.input.slice(start));
      if (!match) { return false }
      if ((match[1] || match[2]) === "use strict") {
        skipWhiteSpace.lastIndex = start + match[0].length;
        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
        var next = this.input.charAt(end);
        return next === ";" || next === "}" ||
          (lineBreak.test(spaceAfter[0]) &&
           !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "="))
      }
      start += match[0].length;

      // Skip semicolon, if any.
      skipWhiteSpace.lastIndex = start;
      start += skipWhiteSpace.exec(this.input)[0].length;
      if (this.input[start] === ";")
        { start++; }
    }
  };

  // Predicate that tests whether the next token is of the given
  // type, and if yes, consumes it as a side effect.

  pp$9.eat = function(type) {
    if (this.type === type) {
      this.next();
      return true
    } else {
      return false
    }
  };

  // Tests whether parsed token is a contextual keyword.

  pp$9.isContextual = function(name) {
    return this.type === types$1.name && this.value === name && !this.containsEsc
  };

  // Consumes contextual keyword if possible.

  pp$9.eatContextual = function(name) {
    if (!this.isContextual(name)) { return false }
    this.next();
    return true
  };

  // Asserts that following token is given contextual keyword.

  pp$9.expectContextual = function(name) {
    if (!this.eatContextual(name)) { this.unexpected(); }
  };

  // Test whether a semicolon can be inserted at the current position.

  pp$9.canInsertSemicolon = function() {
    return this.type === types$1.eof ||
      this.type === types$1.braceR ||
      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
  };

  pp$9.insertSemicolon = function() {
    if (this.canInsertSemicolon()) {
      if (this.options.onInsertedSemicolon)
        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }
      return true
    }
  };

  // Consume a semicolon, or, failing that, see if we are allowed to
  // pretend that there is a semicolon at this position.

  pp$9.semicolon = function() {
    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }
  };

  pp$9.afterTrailingComma = function(tokType, notNext) {
    if (this.type === tokType) {
      if (this.options.onTrailingComma)
        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }
      if (!notNext)
        { this.next(); }
      return true
    }
  };

  // Expect a token of a given type. If found, consume it, otherwise,
  // raise an unexpected token error.

  pp$9.expect = function(type) {
    this.eat(type) || this.unexpected();
  };

  // Raise an unexpected token error.

  pp$9.unexpected = function(pos) {
    this.raise(pos != null ? pos : this.start, "Unexpected token");
  };

  var DestructuringErrors = function DestructuringErrors() {
    this.shorthandAssign =
    this.trailingComma =
    this.parenthesizedAssign =
    this.parenthesizedBind =
    this.doubleProto =
      -1;
  };

  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {
    if (!refDestructuringErrors) { return }
    if (refDestructuringErrors.trailingComma > -1)
      { this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element"); }
    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? "Assigning to rvalue" : "Parenthesized pattern"); }
  };

  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
    if (!refDestructuringErrors) { return false }
    var shorthandAssign = refDestructuringErrors.shorthandAssign;
    var doubleProto = refDestructuringErrors.doubleProto;
    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }
    if (shorthandAssign >= 0)
      { this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns"); }
    if (doubleProto >= 0)
      { this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property"); }
  };

  pp$9.checkYieldAwaitInDefaultParams = function() {
    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))
      { this.raise(this.yieldPos, "Yield expression cannot be a default value"); }
    if (this.awaitPos)
      { this.raise(this.awaitPos, "Await expression cannot be a default value"); }
  };

  pp$9.isSimpleAssignTarget = function(expr) {
    if (expr.type === "ParenthesizedExpression")
      { return this.isSimpleAssignTarget(expr.expression) }
    return expr.type === "Identifier" || expr.type === "MemberExpression"
  };

  var pp$8 = Parser.prototype;

  // ### Statement parsing

  // Parse a program. Initializes the parser, reads any number of
  // statements, and wraps them in a Program node.  Optionally takes a
  // `program` argument.  If present, the statements will be appended
  // to its body instead of creating a new node.

  pp$8.parseTopLevel = function(node) {
    var exports = Object.create(null);
    if (!node.body) { node.body = []; }
    while (this.type !== types$1.eof) {
      var stmt = this.parseStatement(null, true, exports);
      node.body.push(stmt);
    }
    if (this.inModule)
      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)
        {
          var name = list[i];

          this.raiseRecoverable(this.undefinedExports[name].start, ("Export '" + name + "' is not defined"));
        } }
    this.adaptDirectivePrologue(node.body);
    this.next();
    node.sourceType = this.options.sourceType;
    return this.finishNode(node, "Program")
  };

  var loopLabel = {kind: "loop"}, switchLabel = {kind: "switch"};

  pp$8.isLet = function(context) {
    if (this.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }
    skipWhiteSpace.lastIndex = this.pos;
    var skip = skipWhiteSpace.exec(this.input);
    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
    // For ambiguous cases, determine if a LexicalDeclaration (or only a
    // Statement) is allowed here. If context is not empty then only a Statement
    // is allowed. However, `let [` is an explicit negative lookahead for
    // ExpressionStatement, so special-case it first.
    if (nextCh === 91 || nextCh === 92) { return true } // '[', '/'
    if (context) { return false }

    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral
    if (isIdentifierStart(nextCh, true)) {
      var pos = next + 1;
      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }
      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }
      var ident = this.input.slice(next, pos);
      if (!keywordRelationalOperator.test(ident)) { return true }
    }
    return false
  };

  // check 'async [no LineTerminator here] function'
  // - 'async /*foo*/ function' is OK.
  // - 'async /*\n*/ function' is invalid.
  pp$8.isAsyncFunction = function() {
    if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
      { return false }

    skipWhiteSpace.lastIndex = this.pos;
    var skip = skipWhiteSpace.exec(this.input);
    var next = this.pos + skip[0].length, after;
    return !lineBreak.test(this.input.slice(this.pos, next)) &&
      this.input.slice(next, next + 8) === "function" &&
      (next + 8 === this.input.length ||
       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))
  };

  // Parse a single statement.
  //
  // If expecting a statement and finding a slash operator, parse a
  // regular expression literal. This is to handle cases like
  // `if (foo) /blah/.exec(foo)`, where looking at the previous token
  // does not help.

  pp$8.parseStatement = function(context, topLevel, exports) {
    var starttype = this.type, node = this.startNode(), kind;

    if (this.isLet(context)) {
      starttype = types$1._var;
      kind = "let";
    }

    // Most types of statements are recognized by the keyword they
    // start with. Many are trivial to parse, some require a bit of
    // complexity.

    switch (starttype) {
    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)
    case types$1._debugger: return this.parseDebuggerStatement(node)
    case types$1._do: return this.parseDoStatement(node)
    case types$1._for: return this.parseForStatement(node)
    case types$1._function:
      // Function as sole body of either an if statement or a labeled statement
      // works, but not when it is part of a labeled statement that is the sole
      // body of an if statement.
      if ((context && (this.strict || context !== "if" && context !== "label")) && this.options.ecmaVersion >= 6) { this.unexpected(); }
      return this.parseFunctionStatement(node, false, !context)
    case types$1._class:
      if (context) { this.unexpected(); }
      return this.parseClass(node, true)
    case types$1._if: return this.parseIfStatement(node)
    case types$1._return: return this.parseReturnStatement(node)
    case types$1._switch: return this.parseSwitchStatement(node)
    case types$1._throw: return this.parseThrowStatement(node)
    case types$1._try: return this.parseTryStatement(node)
    case types$1._const: case types$1._var:
      kind = kind || this.value;
      if (context && kind !== "var") { this.unexpected(); }
      return this.parseVarStatement(node, kind)
    case types$1._while: return this.parseWhileStatement(node)
    case types$1._with: return this.parseWithStatement(node)
    case types$1.braceL: return this.parseBlock(true, node)
    case types$1.semi: return this.parseEmptyStatement(node)
    case types$1._export:
    case types$1._import:
      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {
        skipWhiteSpace.lastIndex = this.pos;
        var skip = skipWhiteSpace.exec(this.input);
        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
        if (nextCh === 40 || nextCh === 46) // '(' or '.'
          { return this.parseExpressionStatement(node, this.parseExpression()) }
      }

      if (!this.options.allowImportExportEverywhere) {
        if (!topLevel)
          { this.raise(this.start, "'import' and 'export' may only appear at the top level"); }
        if (!this.inModule)
          { this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'"); }
      }
      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)

      // If the statement does not start with a statement keyword or a
      // brace, it's an ExpressionStatement or LabeledStatement. We
      // simply start parsing an expression, and afterwards, if the
      // next token is a colon and the expression was a simple
      // Identifier node, we switch to interpreting it as a label.
    default:
      if (this.isAsyncFunction()) {
        if (context) { this.unexpected(); }
        this.next();
        return this.parseFunctionStatement(node, true, !context)
      }

      var maybeName = this.value, expr = this.parseExpression();
      if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon))
        { return this.parseLabeledStatement(node, maybeName, expr, context) }
      else { return this.parseExpressionStatement(node, expr) }
    }
  };

  pp$8.parseBreakContinueStatement = function(node, keyword) {
    var isBreak = keyword === "break";
    this.next();
    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }
    else if (this.type !== types$1.name) { this.unexpected(); }
    else {
      node.label = this.parseIdent();
      this.semicolon();
    }

    // Verify that there is an actual destination to break or
    // continue to.
    var i = 0;
    for (; i < this.labels.length; ++i) {
      var lab = this.labels[i];
      if (node.label == null || lab.name === node.label.name) {
        if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }
        if (node.label && isBreak) { break }
      }
    }
    if (i === this.labels.length) { this.raise(node.start, "Unsyntactic " + keyword); }
    return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement")
  };

  pp$8.parseDebuggerStatement = function(node) {
    this.next();
    this.semicolon();
    return this.finishNode(node, "DebuggerStatement")
  };

  pp$8.parseDoStatement = function(node) {
    this.next();
    this.labels.push(loopLabel);
    node.body = this.parseStatement("do");
    this.labels.pop();
    this.expect(types$1._while);
    node.test = this.parseParenExpression();
    if (this.options.ecmaVersion >= 6)
      { this.eat(types$1.semi); }
    else
      { this.semicolon(); }
    return this.finishNode(node, "DoWhileStatement")
  };

  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`
  // loop is non-trivial. Basically, we have to parse the init `var`
  // statement or expression, disallowing the `in` operator (see
  // the second parameter to `parseExpression`), and then check
  // whether the next token is `in` or `of`. When there is no init
  // part (semicolon immediately after the opening parenthesis), it
  // is a regular `for` loop.

  pp$8.parseForStatement = function(node) {
    this.next();
    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await")) ? this.lastTokStart : -1;
    this.labels.push(loopLabel);
    this.enterScope(0);
    this.expect(types$1.parenL);
    if (this.type === types$1.semi) {
      if (awaitAt > -1) { this.unexpected(awaitAt); }
      return this.parseFor(node, null)
    }
    var isLet = this.isLet();
    if (this.type === types$1._var || this.type === types$1._const || isLet) {
      var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
      this.next();
      this.parseVar(init$1, true, kind);
      this.finishNode(init$1, "VariableDeclaration");
      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.length === 1) {
        if (this.options.ecmaVersion >= 9) {
          if (this.type === types$1._in) {
            if (awaitAt > -1) { this.unexpected(awaitAt); }
          } else { node.await = awaitAt > -1; }
        }
        return this.parseForIn(node, init$1)
      }
      if (awaitAt > -1) { this.unexpected(awaitAt); }
      return this.parseFor(node, init$1)
    }
    var startsWithLet = this.isContextual("let"), isForOf = false;
    var refDestructuringErrors = new DestructuringErrors;
    var init = this.parseExpression(awaitAt > -1 ? "await" : true, refDestructuringErrors);
    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
      if (this.options.ecmaVersion >= 9) {
        if (this.type === types$1._in) {
          if (awaitAt > -1) { this.unexpected(awaitAt); }
        } else { node.await = awaitAt > -1; }
      }
      if (startsWithLet && isForOf) { this.raise(init.start, "The left-hand side of a for-of loop may not start with 'let'."); }
      this.toAssignable(init, false, refDestructuringErrors);
      this.checkLValPattern(init);
      return this.parseForIn(node, init)
    } else {
      this.checkExpressionErrors(refDestructuringErrors, true);
    }
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, init)
  };

  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {
    this.next();
    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)
  };

  pp$8.parseIfStatement = function(node) {
    this.next();
    node.test = this.parseParenExpression();
    // allow function declarations in branches, but only in non-strict mode
    node.consequent = this.parseStatement("if");
    node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;
    return this.finishNode(node, "IfStatement")
  };

  pp$8.parseReturnStatement = function(node) {
    if (!this.inFunction && !this.options.allowReturnOutsideFunction)
      { this.raise(this.start, "'return' outside of function"); }
    this.next();

    // In `return` (and `break`/`continue`), the keywords with
    // optional arguments, we eagerly look for a semicolon or the
    // possibility to insert one.

    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }
    else { node.argument = this.parseExpression(); this.semicolon(); }
    return this.finishNode(node, "ReturnStatement")
  };

  pp$8.parseSwitchStatement = function(node) {
    this.next();
    node.discriminant = this.parseParenExpression();
    node.cases = [];
    this.expect(types$1.braceL);
    this.labels.push(switchLabel);
    this.enterScope(0);

    // Statements under must be grouped (by label) in SwitchCase
    // nodes. `cur` is used to keep the node that we are currently
    // adding statements to.

    var cur;
    for (var sawDefault = false; this.type !== types$1.braceR;) {
      if (this.type === types$1._case || this.type === types$1._default) {
        var isCase = this.type === types$1._case;
        if (cur) { this.finishNode(cur, "SwitchCase"); }
        node.cases.push(cur = this.startNode());
        cur.consequent = [];
        this.next();
        if (isCase) {
          cur.test = this.parseExpression();
        } else {
          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"); }
          sawDefault = true;
          cur.test = null;
        }
        this.expect(types$1.colon);
      } else {
        if (!cur) { this.unexpected(); }
        cur.consequent.push(this.parseStatement(null));
      }
    }
    this.exitScope();
    if (cur) { this.finishNode(cur, "SwitchCase"); }
    this.next(); // Closing brace
    this.labels.pop();
    return this.finishNode(node, "SwitchStatement")
  };

  pp$8.parseThrowStatement = function(node) {
    this.next();
    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
      { this.raise(this.lastTokEnd, "Illegal newline after throw"); }
    node.argument = this.parseExpression();
    this.semicolon();
    return this.finishNode(node, "ThrowStatement")
  };

  // Reused empty array added for node fields that are always empty.

  var empty$1 = [];

  pp$8.parseCatchClauseParam = function() {
    var param = this.parseBindingAtom();
    var simple = param.type === "Identifier";
    this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
    this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
    this.expect(types$1.parenR);

    return param
  };

  pp$8.parseTryStatement = function(node) {
    this.next();
    node.block = this.parseBlock();
    node.handler = null;
    if (this.type === types$1._catch) {
      var clause = this.startNode();
      this.next();
      if (this.eat(types$1.parenL)) {
        clause.param = this.parseCatchClauseParam();
      } else {
        if (this.options.ecmaVersion < 10) { this.unexpected(); }
        clause.param = null;
        this.enterScope(0);
      }
      clause.body = this.parseBlock(false);
      this.exitScope();
      node.handler = this.finishNode(clause, "CatchClause");
    }
    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;
    if (!node.handler && !node.finalizer)
      { this.raise(node.start, "Missing catch or finally clause"); }
    return this.finishNode(node, "TryStatement")
  };

  pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {
    this.next();
    this.parseVar(node, false, kind, allowMissingInitializer);
    this.semicolon();
    return this.finishNode(node, "VariableDeclaration")
  };

  pp$8.parseWhileStatement = function(node) {
    this.next();
    node.test = this.parseParenExpression();
    this.labels.push(loopLabel);
    node.body = this.parseStatement("while");
    this.labels.pop();
    return this.finishNode(node, "WhileStatement")
  };

  pp$8.parseWithStatement = function(node) {
    if (this.strict) { this.raise(this.start, "'with' in strict mode"); }
    this.next();
    node.object = this.parseParenExpression();
    node.body = this.parseStatement("with");
    return this.finishNode(node, "WithStatement")
  };

  pp$8.parseEmptyStatement = function(node) {
    this.next();
    return this.finishNode(node, "EmptyStatement")
  };

  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {
    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)
      {
      var label = list[i$1];

      if (label.name === maybeName)
        { this.raise(expr.start, "Label '" + maybeName + "' is already declared");
    } }
    var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;
    for (var i = this.labels.length - 1; i >= 0; i--) {
      var label$1 = this.labels[i];
      if (label$1.statementStart === node.start) {
        // Update information about previous labels on this node
        label$1.statementStart = this.start;
        label$1.kind = kind;
      } else { break }
    }
    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});
    node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
    this.labels.pop();
    node.label = expr;
    return this.finishNode(node, "LabeledStatement")
  };

  pp$8.parseExpressionStatement = function(node, expr) {
    node.expression = expr;
    this.semicolon();
    return this.finishNode(node, "ExpressionStatement")
  };

  // Parse a semicolon-enclosed block of statements, handling `"use
  // strict"` declarations when `allowStrict` is true (used for
  // function bodies).

  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {
    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;
    if ( node === void 0 ) node = this.startNode();

    node.body = [];
    this.expect(types$1.braceL);
    if (createNewLexicalScope) { this.enterScope(0); }
    while (this.type !== types$1.braceR) {
      var stmt = this.parseStatement(null);
      node.body.push(stmt);
    }
    if (exitStrict) { this.strict = false; }
    this.next();
    if (createNewLexicalScope) { this.exitScope(); }
    return this.finishNode(node, "BlockStatement")
  };

  // Parse a regular `for` loop. The disambiguation code in
  // `parseStatement` will already have parsed the init statement or
  // expression.

  pp$8.parseFor = function(node, init) {
    node.init = init;
    this.expect(types$1.semi);
    node.test = this.type === types$1.semi ? null : this.parseExpression();
    this.expect(types$1.semi);
    node.update = this.type === types$1.parenR ? null : this.parseExpression();
    this.expect(types$1.parenR);
    node.body = this.parseStatement("for");
    this.exitScope();
    this.labels.pop();
    return this.finishNode(node, "ForStatement")
  };

  // Parse a `for`/`in` and `for`/`of` loop, which are almost
  // same from parser's perspective.

  pp$8.parseForIn = function(node, init) {
    var isForIn = this.type === types$1._in;
    this.next();

    if (
      init.type === "VariableDeclaration" &&
      init.declarations[0].init != null &&
      (
        !isForIn ||
        this.options.ecmaVersion < 8 ||
        this.strict ||
        init.kind !== "var" ||
        init.declarations[0].id.type !== "Identifier"
      )
    ) {
      this.raise(
        init.start,
        ((isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer")
      );
    }
    node.left = init;
    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
    this.expect(types$1.parenR);
    node.body = this.parseStatement("for");
    this.exitScope();
    this.labels.pop();
    return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement")
  };

  // Parse a list of variable declarations.

  pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {
    node.declarations = [];
    node.kind = kind;
    for (;;) {
      var decl = this.startNode();
      this.parseVarId(decl, kind);
      if (this.eat(types$1.eq)) {
        decl.init = this.parseMaybeAssign(isFor);
      } else if (!allowMissingInitializer && kind === "const" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of")))) {
        this.unexpected();
      } else if (!allowMissingInitializer && decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {
        this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
      } else {
        decl.init = null;
      }
      node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
      if (!this.eat(types$1.comma)) { break }
    }
    return node
  };

  pp$8.parseVarId = function(decl, kind) {
    decl.id = this.parseBindingAtom();
    this.checkLValPattern(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
  };

  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;

  // Parse a function declaration or literal (depending on the
  // `statement & FUNC_STATEMENT`).

  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false
  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {
    this.initFunction(node);
    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))
        { this.unexpected(); }
      node.generator = this.eat(types$1.star);
    }
    if (this.options.ecmaVersion >= 8)
      { node.async = !!isAsync; }

    if (statement & FUNC_STATEMENT) {
      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();
      if (node.id && !(statement & FUNC_HANGING_STATEMENT))
        // If it is a regular function declaration in sloppy mode, then it is
        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding
        // mode depends on properties of the current scope (see
        // treatFunctionsAsVar).
        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }
    }

    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
    this.yieldPos = 0;
    this.awaitPos = 0;
    this.awaitIdentPos = 0;
    this.enterScope(functionFlags(node.async, node.generator));

    if (!(statement & FUNC_STATEMENT))
      { node.id = this.type === types$1.name ? this.parseIdent() : null; }

    this.parseFunctionParams(node);
    this.parseFunctionBody(node, allowExpressionBody, false, forInit);

    this.yieldPos = oldYieldPos;
    this.awaitPos = oldAwaitPos;
    this.awaitIdentPos = oldAwaitIdentPos;
    return this.finishNode(node, (statement & FUNC_STATEMENT) ? "FunctionDeclaration" : "FunctionExpression")
  };

  pp$8.parseFunctionParams = function(node) {
    this.expect(types$1.parenL);
    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
    this.checkYieldAwaitInDefaultParams();
  };

  // Parse a class declaration or literal (depending on the
  // `isStatement` parameter).

  pp$8.parseClass = function(node, isStatement) {
    this.next();

    // ecma-262 14.6 Class Definitions
    // A class definition is always strict mode code.
    var oldStrict = this.strict;
    this.strict = true;

    this.parseClassId(node, isStatement);
    this.parseClassSuper(node);
    var privateNameMap = this.enterClassBody();
    var classBody = this.startNode();
    var hadConstructor = false;
    classBody.body = [];
    this.expect(types$1.braceL);
    while (this.type !== types$1.braceR) {
      var element = this.parseClassElement(node.superClass !== null);
      if (element) {
        classBody.body.push(element);
        if (element.type === "MethodDefinition" && element.kind === "constructor") {
          if (hadConstructor) { this.raiseRecoverable(element.start, "Duplicate constructor in the same class"); }
          hadConstructor = true;
        } else if (element.key && element.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap, element)) {
          this.raiseRecoverable(element.key.start, ("Identifier '#" + (element.key.name) + "' has already been declared"));
        }
      }
    }
    this.strict = oldStrict;
    this.next();
    node.body = this.finishNode(classBody, "ClassBody");
    this.exitClassBody();
    return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression")
  };

  pp$8.parseClassElement = function(constructorAllowsSuper) {
    if (this.eat(types$1.semi)) { return null }

    var ecmaVersion = this.options.ecmaVersion;
    var node = this.startNode();
    var keyName = "";
    var isGenerator = false;
    var isAsync = false;
    var kind = "method";
    var isStatic = false;

    if (this.eatContextual("static")) {
      // Parse static init block
      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {
        this.parseClassStaticBlock(node);
        return node
      }
      if (this.isClassElementNameStart() || this.type === types$1.star) {
        isStatic = true;
      } else {
        keyName = "static";
      }
    }
    node.static = isStatic;
    if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {
      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {
        isAsync = true;
      } else {
        keyName = "async";
      }
    }
    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {
      isGenerator = true;
    }
    if (!keyName && !isAsync && !isGenerator) {
      var lastValue = this.value;
      if (this.eatContextual("get") || this.eatContextual("set")) {
        if (this.isClassElementNameStart()) {
          kind = lastValue;
        } else {
          keyName = lastValue;
        }
      }
    }

    // Parse element name
    if (keyName) {
      // 'async', 'get', 'set', or 'static' were not a keyword contextually.
      // The last token is any of those. Make it the element name.
      node.computed = false;
      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);
      node.key.name = keyName;
      this.finishNode(node.key, "Identifier");
    } else {
      this.parseClassElementName(node);
    }

    // Parse element value
    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {
      var isConstructor = !node.static && checkKeyName(node, "constructor");
      var allowsDirectSuper = isConstructor && constructorAllowsSuper;
      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.
      if (isConstructor && kind !== "method") { this.raise(node.key.start, "Constructor can't have get/set modifier"); }
      node.kind = isConstructor ? "constructor" : kind;
      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);
    } else {
      this.parseClassField(node);
    }

    return node
  };

  pp$8.isClassElementNameStart = function() {
    return (
      this.type === types$1.name ||
      this.type === types$1.privateId ||
      this.type === types$1.num ||
      this.type === types$1.string ||
      this.type === types$1.bracketL ||
      this.type.keyword
    )
  };

  pp$8.parseClassElementName = function(element) {
    if (this.type === types$1.privateId) {
      if (this.value === "constructor") {
        this.raise(this.start, "Classes can't have an element named '#constructor'");
      }
      element.computed = false;
      element.key = this.parsePrivateIdent();
    } else {
      this.parsePropertyName(element);
    }
  };

  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
    // Check key and flags
    var key = method.key;
    if (method.kind === "constructor") {
      if (isGenerator) { this.raise(key.start, "Constructor can't be a generator"); }
      if (isAsync) { this.raise(key.start, "Constructor can't be an async method"); }
    } else if (method.static && checkKeyName(method, "prototype")) {
      this.raise(key.start, "Classes may not have a static property named prototype");
    }

    // Parse value
    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);

    // Check value
    if (method.kind === "get" && value.params.length !== 0)
      { this.raiseRecoverable(value.start, "getter should have no params"); }
    if (method.kind === "set" && value.params.length !== 1)
      { this.raiseRecoverable(value.start, "setter should have exactly one param"); }
    if (method.kind === "set" && value.params[0].type === "RestElement")
      { this.raiseRecoverable(value.params[0].start, "Setter cannot use rest params"); }

    return this.finishNode(method, "MethodDefinition")
  };

  pp$8.parseClassField = function(field) {
    if (checkKeyName(field, "constructor")) {
      this.raise(field.key.start, "Classes can't have a field named 'constructor'");
    } else if (field.static && checkKeyName(field, "prototype")) {
      this.raise(field.key.start, "Classes can't have a static field named 'prototype'");
    }

    if (this.eat(types$1.eq)) {
      // To raise SyntaxError if 'arguments' exists in the initializer.
      var scope = this.currentThisScope();
      var inClassFieldInit = scope.inClassFieldInit;
      scope.inClassFieldInit = true;
      field.value = this.parseMaybeAssign();
      scope.inClassFieldInit = inClassFieldInit;
    } else {
      field.value = null;
    }
    this.semicolon();

    return this.finishNode(field, "PropertyDefinition")
  };

  pp$8.parseClassStaticBlock = function(node) {
    node.body = [];

    var oldLabels = this.labels;
    this.labels = [];
    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);
    while (this.type !== types$1.braceR) {
      var stmt = this.parseStatement(null);
      node.body.push(stmt);
    }
    this.next();
    this.exitScope();
    this.labels = oldLabels;

    return this.finishNode(node, "StaticBlock")
  };

  pp$8.parseClassId = function(node, isStatement) {
    if (this.type === types$1.name) {
      node.id = this.parseIdent();
      if (isStatement)
        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }
    } else {
      if (isStatement === true)
        { this.unexpected(); }
      node.id = null;
    }
  };

  pp$8.parseClassSuper = function(node) {
    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;
  };

  pp$8.enterClassBody = function() {
    var element = {declared: Object.create(null), used: []};
    this.privateNameStack.push(element);
    return element.declared
  };

  pp$8.exitClassBody = function() {
    var ref = this.privateNameStack.pop();
    var declared = ref.declared;
    var used = ref.used;
    if (!this.options.checkPrivateFields) { return }
    var len = this.privateNameStack.length;
    var parent = len === 0 ? null : this.privateNameStack[len - 1];
    for (var i = 0; i < used.length; ++i) {
      var id = used[i];
      if (!hasOwn(declared, id.name)) {
        if (parent) {
          parent.used.push(id);
        } else {
          this.raiseRecoverable(id.start, ("Private field '#" + (id.name) + "' must be declared in an enclosing class"));
        }
      }
    }
  };

  function isPrivateNameConflicted(privateNameMap, element) {
    var name = element.key.name;
    var curr = privateNameMap[name];

    var next = "true";
    if (element.type === "MethodDefinition" && (element.kind === "get" || element.kind === "set")) {
      next = (element.static ? "s" : "i") + element.kind;
    }

    // `class { get #a(){}; static set #a(_){} }` is also conflict.
    if (
      curr === "iget" && next === "iset" ||
      curr === "iset" && next === "iget" ||
      curr === "sget" && next === "sset" ||
      curr === "sset" && next === "sget"
    ) {
      privateNameMap[name] = "true";
      return false
    } else if (!curr) {
      privateNameMap[name] = next;
      return false
    } else {
      return true
    }
  }

  function checkKeyName(node, name) {
    var computed = node.computed;
    var key = node.key;
    return !computed && (
      key.type === "Identifier" && key.name === name ||
      key.type === "Literal" && key.value === name
    )
  }

  // Parses module export declaration.

  pp$8.parseExportAllDeclaration = function(node, exports) {
    if (this.options.ecmaVersion >= 11) {
      if (this.eatContextual("as")) {
        node.exported = this.parseModuleExportName();
        this.checkExport(exports, node.exported, this.lastTokStart);
      } else {
        node.exported = null;
      }
    }
    this.expectContextual("from");
    if (this.type !== types$1.string) { this.unexpected(); }
    node.source = this.parseExprAtom();
    this.semicolon();
    return this.finishNode(node, "ExportAllDeclaration")
  };

  pp$8.parseExport = function(node, exports) {
    this.next();
    // export * from '...'
    if (this.eat(types$1.star)) {
      return this.parseExportAllDeclaration(node, exports)
    }
    if (this.eat(types$1._default)) { // export default ...
      this.checkExport(exports, "default", this.lastTokStart);
      node.declaration = this.parseExportDefaultDeclaration();
      return this.finishNode(node, "ExportDefaultDeclaration")
    }
    // export var|const|let|function|class ...
    if (this.shouldParseExportStatement()) {
      node.declaration = this.parseExportDeclaration(node);
      if (node.declaration.type === "VariableDeclaration")
        { this.checkVariableExport(exports, node.declaration.declarations); }
      else
        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }
      node.specifiers = [];
      node.source = null;
    } else { // export { x, y as z } [from '...']
      node.declaration = null;
      node.specifiers = this.parseExportSpecifiers(exports);
      if (this.eatContextual("from")) {
        if (this.type !== types$1.string) { this.unexpected(); }
        node.source = this.parseExprAtom();
      } else {
        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {
          // check for keywords used as local names
          var spec = list[i];

          this.checkUnreserved(spec.local);
          // check if export is defined
          this.checkLocalExport(spec.local);

          if (spec.local.type === "Literal") {
            this.raise(spec.local.start, "A string literal cannot be used as an exported binding without `from`.");
          }
        }

        node.source = null;
      }
      this.semicolon();
    }
    return this.finishNode(node, "ExportNamedDeclaration")
  };

  pp$8.parseExportDeclaration = function(node) {
    return this.parseStatement(null)
  };

  pp$8.parseExportDefaultDeclaration = function() {
    var isAsync;
    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {
      var fNode = this.startNode();
      this.next();
      if (isAsync) { this.next(); }
      return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)
    } else if (this.type === types$1._class) {
      var cNode = this.startNode();
      return this.parseClass(cNode, "nullableID")
    } else {
      var declaration = this.parseMaybeAssign();
      this.semicolon();
      return declaration
    }
  };

  pp$8.checkExport = function(exports, name, pos) {
    if (!exports) { return }
    if (typeof name !== "string")
      { name = name.type === "Identifier" ? name.name : name.value; }
    if (hasOwn(exports, name))
      { this.raiseRecoverable(pos, "Duplicate export '" + name + "'"); }
    exports[name] = true;
  };

  pp$8.checkPatternExport = function(exports, pat) {
    var type = pat.type;
    if (type === "Identifier")
      { this.checkExport(exports, pat, pat.start); }
    else if (type === "ObjectPattern")
      { for (var i = 0, list = pat.properties; i < list.length; i += 1)
        {
          var prop = list[i];

          this.checkPatternExport(exports, prop);
        } }
    else if (type === "ArrayPattern")
      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
        var elt = list$1[i$1];

          if (elt) { this.checkPatternExport(exports, elt); }
      } }
    else if (type === "Property")
      { this.checkPatternExport(exports, pat.value); }
    else if (type === "AssignmentPattern")
      { this.checkPatternExport(exports, pat.left); }
    else if (type === "RestElement")
      { this.checkPatternExport(exports, pat.argument); }
    else if (type === "ParenthesizedExpression")
      { this.checkPatternExport(exports, pat.expression); }
  };

  pp$8.checkVariableExport = function(exports, decls) {
    if (!exports) { return }
    for (var i = 0, list = decls; i < list.length; i += 1)
      {
      var decl = list[i];

      this.checkPatternExport(exports, decl.id);
    }
  };

  pp$8.shouldParseExportStatement = function() {
    return this.type.keyword === "var" ||
      this.type.keyword === "const" ||
      this.type.keyword === "class" ||
      this.type.keyword === "function" ||
      this.isLet() ||
      this.isAsyncFunction()
  };

  // Parses a comma-separated list of module exports.

  pp$8.parseExportSpecifier = function(exports) {
    var node = this.startNode();
    node.local = this.parseModuleExportName();

    node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;
    this.checkExport(
      exports,
      node.exported,
      node.exported.start
    );

    return this.finishNode(node, "ExportSpecifier")
  };

  pp$8.parseExportSpecifiers = function(exports) {
    var nodes = [], first = true;
    // export { x, y as z } [from '...']
    this.expect(types$1.braceL);
    while (!this.eat(types$1.braceR)) {
      if (!first) {
        this.expect(types$1.comma);
        if (this.afterTrailingComma(types$1.braceR)) { break }
      } else { first = false; }

      nodes.push(this.parseExportSpecifier(exports));
    }
    return nodes
  };

  // Parses import declaration.

  pp$8.parseImport = function(node) {
    this.next();

    // import '...'
    if (this.type === types$1.string) {
      node.specifiers = empty$1;
      node.source = this.parseExprAtom();
    } else {
      node.specifiers = this.parseImportSpecifiers();
      this.expectContextual("from");
      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();
    }
    this.semicolon();
    return this.finishNode(node, "ImportDeclaration")
  };

  // Parses a comma-separated list of module imports.

  pp$8.parseImportSpecifier = function() {
    var node = this.startNode();
    node.imported = this.parseModuleExportName();

    if (this.eatContextual("as")) {
      node.local = this.parseIdent();
    } else {
      this.checkUnreserved(node.imported);
      node.local = node.imported;
    }
    this.checkLValSimple(node.local, BIND_LEXICAL);

    return this.finishNode(node, "ImportSpecifier")
  };

  pp$8.parseImportDefaultSpecifier = function() {
    // import defaultObj, { x, y as z } from '...'
    var node = this.startNode();
    node.local = this.parseIdent();
    this.checkLValSimple(node.local, BIND_LEXICAL);
    return this.finishNode(node, "ImportDefaultSpecifier")
  };

  pp$8.parseImportNamespaceSpecifier = function() {
    var node = this.startNode();
    this.next();
    this.expectContextual("as");
    node.local = this.parseIdent();
    this.checkLValSimple(node.local, BIND_LEXICAL);
    return this.finishNode(node, "ImportNamespaceSpecifier")
  };

  pp$8.parseImportSpecifiers = function() {
    var nodes = [], first = true;
    if (this.type === types$1.name) {
      nodes.push(this.parseImportDefaultSpecifier());
      if (!this.eat(types$1.comma)) { return nodes }
    }
    if (this.type === types$1.star) {
      nodes.push(this.parseImportNamespaceSpecifier());
      return nodes
    }
    this.expect(types$1.braceL);
    while (!this.eat(types$1.braceR)) {
      if (!first) {
        this.expect(types$1.comma);
        if (this.afterTrailingComma(types$1.braceR)) { break }
      } else { first = false; }

      nodes.push(this.parseImportSpecifier());
    }
    return nodes
  };

  pp$8.parseModuleExportName = function() {
    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {
      var stringLiteral = this.parseLiteral(this.value);
      if (loneSurrogate.test(stringLiteral.value)) {
        this.raise(stringLiteral.start, "An export name cannot include a lone surrogate.");
      }
      return stringLiteral
    }
    return this.parseIdent(true)
  };

  // Set `ExpressionStatement#directive` property for directive prologues.
  pp$8.adaptDirectivePrologue = function(statements) {
    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {
      statements[i].directive = statements[i].expression.raw.slice(1, -1);
    }
  };
  pp$8.isDirectiveCandidate = function(statement) {
    return (
      this.options.ecmaVersion >= 5 &&
      statement.type === "ExpressionStatement" &&
      statement.expression.type === "Literal" &&
      typeof statement.expression.value === "string" &&
      // Reject parenthesized strings.
      (this.input[statement.start] === "\"" || this.input[statement.start] === "'")
    )
  };

  var pp$7 = Parser.prototype;

  // Convert existing expression atom to assignable pattern
  // if possible.

  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {
    if (this.options.ecmaVersion >= 6 && node) {
      switch (node.type) {
      case "Identifier":
        if (this.inAsync && node.name === "await")
          { this.raise(node.start, "Cannot use 'await' as identifier inside an async function"); }
        break

      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
      case "RestElement":
        break

      case "ObjectExpression":
        node.type = "ObjectPattern";
        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
        for (var i = 0, list = node.properties; i < list.length; i += 1) {
          var prop = list[i];

        this.toAssignable(prop, isBinding);
          // Early error:
          //   AssignmentRestProperty[Yield, Await] :
          //     `...` DestructuringAssignmentTarget[Yield, Await]
          //
          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.
          if (
            prop.type === "RestElement" &&
            (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")
          ) {
            this.raise(prop.argument.start, "Unexpected token");
          }
        }
        break

      case "Property":
        // AssignmentProperty has type === "Property"
        if (node.kind !== "init") { this.raise(node.key.start, "Object pattern can't contain getter or setter"); }
        this.toAssignable(node.value, isBinding);
        break

      case "ArrayExpression":
        node.type = "ArrayPattern";
        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
        this.toAssignableList(node.elements, isBinding);
        break

      case "SpreadElement":
        node.type = "RestElement";
        this.toAssignable(node.argument, isBinding);
        if (node.argument.type === "AssignmentPattern")
          { this.raise(node.argument.start, "Rest elements cannot have a default value"); }
        break

      case "AssignmentExpression":
        if (node.operator !== "=") { this.raise(node.left.end, "Only '=' operator can be used for specifying default value."); }
        node.type = "AssignmentPattern";
        delete node.operator;
        this.toAssignable(node.left, isBinding);
        break

      case "ParenthesizedExpression":
        this.toAssignable(node.expression, isBinding, refDestructuringErrors);
        break

      case "ChainExpression":
        this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
        break

      case "MemberExpression":
        if (!isBinding) { break }

      default:
        this.raise(node.start, "Assigning to rvalue");
      }
    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
    return node
  };

  // Convert list of expression atoms to binding list.

  pp$7.toAssignableList = function(exprList, isBinding) {
    var end = exprList.length;
    for (var i = 0; i < end; i++) {
      var elt = exprList[i];
      if (elt) { this.toAssignable(elt, isBinding); }
    }
    if (end) {
      var last = exprList[end - 1];
      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")
        { this.unexpected(last.argument.start); }
    }
    return exprList
  };

  // Parses spread element.

  pp$7.parseSpread = function(refDestructuringErrors) {
    var node = this.startNode();
    this.next();
    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
    return this.finishNode(node, "SpreadElement")
  };

  pp$7.parseRestBinding = function() {
    var node = this.startNode();
    this.next();

    // RestElement inside of a function parameter must be an identifier
    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)
      { this.unexpected(); }

    node.argument = this.parseBindingAtom();

    return this.finishNode(node, "RestElement")
  };

  // Parses lvalue (assignable) atom.

  pp$7.parseBindingAtom = function() {
    if (this.options.ecmaVersion >= 6) {
      switch (this.type) {
      case types$1.bracketL:
        var node = this.startNode();
        this.next();
        node.elements = this.parseBindingList(types$1.bracketR, true, true);
        return this.finishNode(node, "ArrayPattern")

      case types$1.braceL:
        return this.parseObj(true)
      }
    }
    return this.parseIdent()
  };

  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {
    var elts = [], first = true;
    while (!this.eat(close)) {
      if (first) { first = false; }
      else { this.expect(types$1.comma); }
      if (allowEmpty && this.type === types$1.comma) {
        elts.push(null);
      } else if (allowTrailingComma && this.afterTrailingComma(close)) {
        break
      } else if (this.type === types$1.ellipsis) {
        var rest = this.parseRestBinding();
        this.parseBindingListItem(rest);
        elts.push(rest);
        if (this.type === types$1.comma) { this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"); }
        this.expect(close);
        break
      } else {
        elts.push(this.parseAssignableListItem(allowModifiers));
      }
    }
    return elts
  };

  pp$7.parseAssignableListItem = function(allowModifiers) {
    var elem = this.parseMaybeDefault(this.start, this.startLoc);
    this.parseBindingListItem(elem);
    return elem
  };

  pp$7.parseBindingListItem = function(param) {
    return param
  };

  // Parses assignment pattern around given atom if possible.

  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {
    left = left || this.parseBindingAtom();
    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }
    var node = this.startNodeAt(startPos, startLoc);
    node.left = left;
    node.right = this.parseMaybeAssign();
    return this.finishNode(node, "AssignmentPattern")
  };

  // The following three functions all verify that a node is an lvalue —
  // something that can be bound, or assigned to. In order to do so, they perform
  // a variety of checks:
  //
  // - Check that none of the bound/assigned-to identifiers are reserved words.
  // - Record name declarations for bindings in the appropriate scope.
  // - Check duplicate argument names, if checkClashes is set.
  //
  // If a complex binding pattern is encountered (e.g., object and array
  // destructuring), the entire pattern is recursively checked.
  //
  // There are three versions of checkLVal*() appropriate for different
  // circumstances:
  //
  // - checkLValSimple() shall be used if the syntactic construct supports
  //   nothing other than identifiers and member expressions. Parenthesized
  //   expressions are also correctly handled. This is generally appropriate for
  //   constructs for which the spec says
  //
  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not
  //   > simple.
  //
  //   It is also appropriate for checking if an identifier is valid and not
  //   defined elsewhere, like import declarations or function/class identifiers.
  //
  //   Examples where this is used include:
  //     a += …;
  //     import a from '…';
  //   where a is the node to be checked.
  //
  // - checkLValPattern() shall be used if the syntactic construct supports
  //   anything checkLValSimple() supports, as well as object and array
  //   destructuring patterns. This is generally appropriate for constructs for
  //   which the spec says
  //
  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor
  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not
  //   > simple.
  //
  //   Examples where this is used include:
  //     (a = …);
  //     const a = …;
  //     try { … } catch (a) { … }
  //   where a is the node to be checked.
  //
  // - checkLValInnerPattern() shall be used if the syntactic construct supports
  //   anything checkLValPattern() supports, as well as default assignment
  //   patterns, rest elements, and other constructs that may appear within an
  //   object or array destructuring pattern.
  //
  //   As a special case, function parameters also use checkLValInnerPattern(),
  //   as they also support defaults and rest constructs.
  //
  // These functions deliberately support both assignment and binding constructs,
  // as the logic for both is exceedingly similar. If the node is the target of
  // an assignment, then bindingType should be set to BIND_NONE. Otherwise, it
  // should be set to the appropriate BIND_* constant, like BIND_VAR or
  // BIND_LEXICAL.
  //
  // If the function is called with a non-BIND_NONE bindingType, then
  // additionally a checkClashes object may be specified to allow checking for
  // duplicate argument names. checkClashes is ignored if the provided construct
  // is an assignment (i.e., bindingType is BIND_NONE).

  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {
    if ( bindingType === void 0 ) bindingType = BIND_NONE;

    var isBind = bindingType !== BIND_NONE;

    switch (expr.type) {
    case "Identifier":
      if (this.strict && this.reservedWordsStrictBind.test(expr.name))
        { this.raiseRecoverable(expr.start, (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode"); }
      if (isBind) {
        if (bindingType === BIND_LEXICAL && expr.name === "let")
          { this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name"); }
        if (checkClashes) {
          if (hasOwn(checkClashes, expr.name))
            { this.raiseRecoverable(expr.start, "Argument name clash"); }
          checkClashes[expr.name] = true;
        }
        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }
      }
      break

    case "ChainExpression":
      this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
      break

    case "MemberExpression":
      if (isBind) { this.raiseRecoverable(expr.start, "Binding member expression"); }
      break

    case "ParenthesizedExpression":
      if (isBind) { this.raiseRecoverable(expr.start, "Binding parenthesized expression"); }
      return this.checkLValSimple(expr.expression, bindingType, checkClashes)

    default:
      this.raise(expr.start, (isBind ? "Binding" : "Assigning to") + " rvalue");
    }
  };

  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {
    if ( bindingType === void 0 ) bindingType = BIND_NONE;

    switch (expr.type) {
    case "ObjectPattern":
      for (var i = 0, list = expr.properties; i < list.length; i += 1) {
        var prop = list[i];

      this.checkLValInnerPattern(prop, bindingType, checkClashes);
      }
      break

    case "ArrayPattern":
      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
        var elem = list$1[i$1];

      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }
      }
      break

    default:
      this.checkLValSimple(expr, bindingType, checkClashes);
    }
  };

  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {
    if ( bindingType === void 0 ) bindingType = BIND_NONE;

    switch (expr.type) {
    case "Property":
      // AssignmentProperty has type === "Property"
      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);
      break

    case "AssignmentPattern":
      this.checkLValPattern(expr.left, bindingType, checkClashes);
      break

    case "RestElement":
      this.checkLValPattern(expr.argument, bindingType, checkClashes);
      break

    default:
      this.checkLValPattern(expr, bindingType, checkClashes);
    }
  };

  // The algorithm used to determine whether a regexp can appear at a
  // given point in the program is loosely based on sweet.js' approach.
  // See https://github.com/mozilla/sweet.js/wiki/design


  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {
    this.token = token;
    this.isExpr = !!isExpr;
    this.preserveSpace = !!preserveSpace;
    this.override = override;
    this.generator = !!generator;
  };

  var types = {
    b_stat: new TokContext("{", false),
    b_expr: new TokContext("{", true),
    b_tmpl: new TokContext("${", false),
    p_stat: new TokContext("(", false),
    p_expr: new TokContext("(", true),
    q_tmpl: new TokContext("`", true, true, function (p) { return p.tryReadTemplateToken(); }),
    f_stat: new TokContext("function", false),
    f_expr: new TokContext("function", true),
    f_expr_gen: new TokContext("function", true, false, null, true),
    f_gen: new TokContext("function", false, false, null, true)
  };

  var pp$6 = Parser.prototype;

  pp$6.initialContext = function() {
    return [types.b_stat]
  };

  pp$6.curContext = function() {
    return this.context[this.context.length - 1]
  };

  pp$6.braceIsBlock = function(prevType) {
    var parent = this.curContext();
    if (parent === types.f_expr || parent === types.f_stat)
      { return true }
    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))
      { return !parent.isExpr }

    // The check for `tt.name && exprAllowed` detects whether we are
    // after a `yield` or `of` construct. See the `updateContext` for
    // `tt.name`.
    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)
      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }
    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)
      { return true }
    if (prevType === types$1.braceL)
      { return parent === types.b_stat }
    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)
      { return false }
    return !this.exprAllowed
  };

  pp$6.inGeneratorContext = function() {
    for (var i = this.context.length - 1; i >= 1; i--) {
      var context = this.context[i];
      if (context.token === "function")
        { return context.generator }
    }
    return false
  };

  pp$6.updateContext = function(prevType) {
    var update, type = this.type;
    if (type.keyword && prevType === types$1.dot)
      { this.exprAllowed = false; }
    else if (update = type.updateContext)
      { update.call(this, prevType); }
    else
      { this.exprAllowed = type.beforeExpr; }
  };

  // Used to handle egde cases when token context could not be inferred correctly during tokenization phase

  pp$6.overrideContext = function(tokenCtx) {
    if (this.curContext() !== tokenCtx) {
      this.context[this.context.length - 1] = tokenCtx;
    }
  };

  // Token-specific context update code

  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {
    if (this.context.length === 1) {
      this.exprAllowed = true;
      return
    }
    var out = this.context.pop();
    if (out === types.b_stat && this.curContext().token === "function") {
      out = this.context.pop();
    }
    this.exprAllowed = !out.isExpr;
  };

  types$1.braceL.updateContext = function(prevType) {
    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);
    this.exprAllowed = true;
  };

  types$1.dollarBraceL.updateContext = function() {
    this.context.push(types.b_tmpl);
    this.exprAllowed = true;
  };

  types$1.parenL.updateContext = function(prevType) {
    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;
    this.context.push(statementParens ? types.p_stat : types.p_expr);
    this.exprAllowed = true;
  };

  types$1.incDec.updateContext = function() {
    // tokExprAllowed stays unchanged
  };

  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {
    if (prevType.beforeExpr && prevType !== types$1._else &&
        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&
        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&
        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))
      { this.context.push(types.f_expr); }
    else
      { this.context.push(types.f_stat); }
    this.exprAllowed = false;
  };

  types$1.backQuote.updateContext = function() {
    if (this.curContext() === types.q_tmpl)
      { this.context.pop(); }
    else
      { this.context.push(types.q_tmpl); }
    this.exprAllowed = false;
  };

  types$1.star.updateContext = function(prevType) {
    if (prevType === types$1._function) {
      var index = this.context.length - 1;
      if (this.context[index] === types.f_expr)
        { this.context[index] = types.f_expr_gen; }
      else
        { this.context[index] = types.f_gen; }
    }
    this.exprAllowed = true;
  };

  types$1.name.updateContext = function(prevType) {
    var allowed = false;
    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {
      if (this.value === "of" && !this.exprAllowed ||
          this.value === "yield" && this.inGeneratorContext())
        { allowed = true; }
    }
    this.exprAllowed = allowed;
  };

  // A recursive descent parser operates by defining functions for all
  // syntactic elements, and recursively calling those, each function
  // advancing the input stream and returning an AST node. Precedence
  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`
  // instead of `(!x)[1]` is handled by the fact that the parser
  // function that parses unary prefix operators is called first, and
  // in turn calls the function that parses `[]` subscripts — that
  // way, it'll receive the node for `x[1]` already parsed, and wraps
  // *that* in the unary operator node.
  //
  // Acorn uses an [operator precedence parser][opp] to handle binary
  // operator precedence, because it is much more compact than using
  // the technique outlined above, which uses different, nesting
  // functions to specify precedence, for all of the ten binary
  // precedence levels that JavaScript defines.
  //
  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser


  var pp$5 = Parser.prototype;

  // Check if property name clashes with already added.
  // Object/class getters and setters are not allowed to clash —
  // either with each other or with an init property — and in
  // strict mode, init properties are also not allowed to be repeated.

  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {
    if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement")
      { return }
    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))
      { return }
    var key = prop.key;
    var name;
    switch (key.type) {
    case "Identifier": name = key.name; break
    case "Literal": name = String(key.value); break
    default: return
    }
    var kind = prop.kind;
    if (this.options.ecmaVersion >= 6) {
      if (name === "__proto__" && kind === "init") {
        if (propHash.proto) {
          if (refDestructuringErrors) {
            if (refDestructuringErrors.doubleProto < 0) {
              refDestructuringErrors.doubleProto = key.start;
            }
          } else {
            this.raiseRecoverable(key.start, "Redefinition of __proto__ property");
          }
        }
        propHash.proto = true;
      }
      return
    }
    name = "$" + name;
    var other = propHash[name];
    if (other) {
      var redefinition;
      if (kind === "init") {
        redefinition = this.strict && other.init || other.get || other.set;
      } else {
        redefinition = other.init || other[kind];
      }
      if (redefinition)
        { this.raiseRecoverable(key.start, "Redefinition of property"); }
    } else {
      other = propHash[name] = {
        init: false,
        get: false,
        set: false
      };
    }
    other[kind] = true;
  };

  // ### Expression parsing

  // These nest, from the most general expression type at the top to
  // 'atomic', nondivisible expression types at the bottom. Most of
  // the functions will simply let the function(s) below them parse,
  // and, *if* the syntactic construct they handle is present, wrap
  // the AST node that the inner parser gave them in another node.

  // Parse a full expression. The optional arguments are used to
  // forbid the `in` operator (in for loops initalization expressions)
  // and provide reference for storing '=' operator inside shorthand
  // property assignment in contexts where both object expression
  // and object pattern might appear (so it's possible to raise
  // delayed syntax error at correct position).

  pp$5.parseExpression = function(forInit, refDestructuringErrors) {
    var startPos = this.start, startLoc = this.startLoc;
    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);
    if (this.type === types$1.comma) {
      var node = this.startNodeAt(startPos, startLoc);
      node.expressions = [expr];
      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }
      return this.finishNode(node, "SequenceExpression")
    }
    return expr
  };

  // Parse an assignment expression. This includes applications of
  // operators like `+=`.

  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {
    if (this.isContextual("yield")) {
      if (this.inGenerator) { return this.parseYield(forInit) }
      // The tokenizer will assume an expression is allowed after
      // `yield`, but this isn't that kind of yield
      else { this.exprAllowed = false; }
    }

    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;
    if (refDestructuringErrors) {
      oldParenAssign = refDestructuringErrors.parenthesizedAssign;
      oldTrailingComma = refDestructuringErrors.trailingComma;
      oldDoubleProto = refDestructuringErrors.doubleProto;
      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
    } else {
      refDestructuringErrors = new DestructuringErrors;
      ownDestructuringErrors = true;
    }

    var startPos = this.start, startLoc = this.startLoc;
    if (this.type === types$1.parenL || this.type === types$1.name) {
      this.potentialArrowAt = this.start;
      this.potentialArrowInForAwait = forInit === "await";
    }
    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);
    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }
    if (this.type.isAssign) {
      var node = this.startNodeAt(startPos, startLoc);
      node.operator = this.value;
      if (this.type === types$1.eq)
        { left = this.toAssignable(left, false, refDestructuringErrors); }
      if (!ownDestructuringErrors) {
        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
      }
      if (refDestructuringErrors.shorthandAssign >= left.start)
        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly
      if (this.type === types$1.eq)
        { this.checkLValPattern(left); }
      else
        { this.checkLValSimple(left); }
      node.left = left;
      this.next();
      node.right = this.parseMaybeAssign(forInit);
      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }
      return this.finishNode(node, "AssignmentExpression")
    } else {
      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }
    }
    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }
    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }
    return left
  };

  // Parse a ternary conditional (`?:`) operator.

  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {
    var startPos = this.start, startLoc = this.startLoc;
    var expr = this.parseExprOps(forInit, refDestructuringErrors);
    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
    if (this.eat(types$1.question)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.test = expr;
      node.consequent = this.parseMaybeAssign();
      this.expect(types$1.colon);
      node.alternate = this.parseMaybeAssign(forInit);
      return this.finishNode(node, "ConditionalExpression")
    }
    return expr
  };

  // Start the precedence parser.

  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {
    var startPos = this.start, startLoc = this.startLoc;
    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);
    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
    return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)
  };

  // Parse binary operators with the operator precedence parsing
  // algorithm. `left` is the left-hand side of the operator.
  // `minPrec` provides context that allows the function to stop and
  // defer further parser to one of its callers when it encounters an
  // operator that has a lower precedence than the set it is parsing.

  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {
    var prec = this.type.binop;
    if (prec != null && (!forInit || this.type !== types$1._in)) {
      if (prec > minPrec) {
        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;
        var coalesce = this.type === types$1.coalesce;
        if (coalesce) {
          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.
          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.
          prec = types$1.logicalAND.binop;
        }
        var op = this.value;
        this.next();
        var startPos = this.start, startLoc = this.startLoc;
        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);
        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {
          this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
        }
        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)
      }
    }
    return left
  };

  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {
    if (right.type === "PrivateIdentifier") { this.raise(right.start, "Private identifier can only be left side of binary expression"); }
    var node = this.startNodeAt(startPos, startLoc);
    node.left = left;
    node.operator = op;
    node.right = right;
    return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression")
  };

  // Parse unary operators, both prefix and postfix.

  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {
    var startPos = this.start, startLoc = this.startLoc, expr;
    if (this.isContextual("await") && this.canAwait) {
      expr = this.parseAwait(forInit);
      sawUnary = true;
    } else if (this.type.prefix) {
      var node = this.startNode(), update = this.type === types$1.incDec;
      node.operator = this.value;
      node.prefix = true;
      this.next();
      node.argument = this.parseMaybeUnary(null, true, update, forInit);
      this.checkExpressionErrors(refDestructuringErrors, true);
      if (update) { this.checkLValSimple(node.argument); }
      else if (this.strict && node.operator === "delete" &&
               node.argument.type === "Identifier")
        { this.raiseRecoverable(node.start, "Deleting local variable in strict mode"); }
      else if (node.operator === "delete" && isPrivateFieldAccess(node.argument))
        { this.raiseRecoverable(node.start, "Private fields can not be deleted"); }
      else { sawUnary = true; }
      expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
    } else if (!sawUnary && this.type === types$1.privateId) {
      if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }
      expr = this.parsePrivateIdent();
      // only could be private fields in 'in', such as #x in obj
      if (this.type !== types$1._in) { this.unexpected(); }
    } else {
      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);
      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
      while (this.type.postfix && !this.canInsertSemicolon()) {
        var node$1 = this.startNodeAt(startPos, startLoc);
        node$1.operator = this.value;
        node$1.prefix = false;
        node$1.argument = expr;
        this.checkLValSimple(expr);
        this.next();
        expr = this.finishNode(node$1, "UpdateExpression");
      }
    }

    if (!incDec && this.eat(types$1.starstar)) {
      if (sawUnary)
        { this.unexpected(this.lastTokStart); }
      else
        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), "**", false) }
    } else {
      return expr
    }
  };

  function isPrivateFieldAccess(node) {
    return (
      node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" ||
      node.type === "ChainExpression" && isPrivateFieldAccess(node.expression)
    )
  }

  // Parse call, dot, and `[]`-subscript expressions.

  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {
    var startPos = this.start, startLoc = this.startLoc;
    var expr = this.parseExprAtom(refDestructuringErrors, forInit);
    if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")
      { return expr }
    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);
    if (refDestructuringErrors && result.type === "MemberExpression") {
      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }
      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }
      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }
    }
    return result
  };

  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {
    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" &&
        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&
        this.potentialArrowAt === base.start;
    var optionalChained = false;

    while (true) {
      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);

      if (element.optional) { optionalChained = true; }
      if (element === base || element.type === "ArrowFunctionExpression") {
        if (optionalChained) {
          var chainNode = this.startNodeAt(startPos, startLoc);
          chainNode.expression = element;
          element = this.finishNode(chainNode, "ChainExpression");
        }
        return element
      }

      base = element;
    }
  };

  pp$5.shouldParseAsyncArrow = function() {
    return !this.canInsertSemicolon() && this.eat(types$1.arrow)
  };

  pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {
    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)
  };

  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {
    var optionalSupported = this.options.ecmaVersion >= 11;
    var optional = optionalSupported && this.eat(types$1.questionDot);
    if (noCalls && optional) { this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions"); }

    var computed = this.eat(types$1.bracketL);
    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.object = base;
      if (computed) {
        node.property = this.parseExpression();
        this.expect(types$1.bracketR);
      } else if (this.type === types$1.privateId && base.type !== "Super") {
        node.property = this.parsePrivateIdent();
      } else {
        node.property = this.parseIdent(this.options.allowReserved !== "never");
      }
      node.computed = !!computed;
      if (optionalSupported) {
        node.optional = optional;
      }
      base = this.finishNode(node, "MemberExpression");
    } else if (!noCalls && this.eat(types$1.parenL)) {
      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
      this.yieldPos = 0;
      this.awaitPos = 0;
      this.awaitIdentPos = 0;
      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
      if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {
        this.checkPatternErrors(refDestructuringErrors, false);
        this.checkYieldAwaitInDefaultParams();
        if (this.awaitIdentPos > 0)
          { this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"); }
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        this.awaitIdentPos = oldAwaitIdentPos;
        return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)
      }
      this.checkExpressionErrors(refDestructuringErrors, true);
      this.yieldPos = oldYieldPos || this.yieldPos;
      this.awaitPos = oldAwaitPos || this.awaitPos;
      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
      var node$1 = this.startNodeAt(startPos, startLoc);
      node$1.callee = base;
      node$1.arguments = exprList;
      if (optionalSupported) {
        node$1.optional = optional;
      }
      base = this.finishNode(node$1, "CallExpression");
    } else if (this.type === types$1.backQuote) {
      if (optional || optionalChained) {
        this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
      }
      var node$2 = this.startNodeAt(startPos, startLoc);
      node$2.tag = base;
      node$2.quasi = this.parseTemplate({isTagged: true});
      base = this.finishNode(node$2, "TaggedTemplateExpression");
    }
    return base
  };

  // Parse an atomic expression — either a single token that is an
  // expression, an expression started by a keyword like `function` or
  // `new`, or an expression wrapped in punctuation like `()`, `[]`,
  // or `{}`.

  pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {
    // If a division operator appears in an expression position, the
    // tokenizer got confused, and we force it to read a regexp instead.
    if (this.type === types$1.slash) { this.readRegexp(); }

    var node, canBeArrow = this.potentialArrowAt === this.start;
    switch (this.type) {
    case types$1._super:
      if (!this.allowSuper)
        { this.raise(this.start, "'super' keyword outside a method"); }
      node = this.startNode();
      this.next();
      if (this.type === types$1.parenL && !this.allowDirectSuper)
        { this.raise(node.start, "super() call outside constructor of a subclass"); }
      // The `super` keyword can appear at below:
      // SuperProperty:
      //     super [ Expression ]
      //     super . IdentifierName
      // SuperCall:
      //     super ( Arguments )
      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)
        { this.unexpected(); }
      return this.finishNode(node, "Super")

    case types$1._this:
      node = this.startNode();
      this.next();
      return this.finishNode(node, "ThisExpression")

    case types$1.name:
      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
      var id = this.parseIdent(false);
      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {
        this.overrideContext(types.f_expr);
        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)
      }
      if (canBeArrow && !this.canInsertSemicolon()) {
        if (this.eat(types$1.arrow))
          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }
        if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types$1.name && !containsEsc &&
            (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {
          id = this.parseIdent(false);
          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))
            { this.unexpected(); }
          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)
        }
      }
      return id

    case types$1.regexp:
      var value = this.value;
      node = this.parseLiteral(value.value);
      node.regex = {pattern: value.pattern, flags: value.flags};
      return node

    case types$1.num: case types$1.string:
      return this.parseLiteral(this.value)

    case types$1._null: case types$1._true: case types$1._false:
      node = this.startNode();
      node.value = this.type === types$1._null ? null : this.type === types$1._true;
      node.raw = this.type.keyword;
      this.next();
      return this.finishNode(node, "Literal")

    case types$1.parenL:
      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);
      if (refDestructuringErrors) {
        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))
          { refDestructuringErrors.parenthesizedAssign = start; }
        if (refDestructuringErrors.parenthesizedBind < 0)
          { refDestructuringErrors.parenthesizedBind = start; }
      }
      return expr

    case types$1.bracketL:
      node = this.startNode();
      this.next();
      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);
      return this.finishNode(node, "ArrayExpression")

    case types$1.braceL:
      this.overrideContext(types.b_expr);
      return this.parseObj(false, refDestructuringErrors)

    case types$1._function:
      node = this.startNode();
      this.next();
      return this.parseFunction(node, 0)

    case types$1._class:
      return this.parseClass(this.startNode(), false)

    case types$1._new:
      return this.parseNew()

    case types$1.backQuote:
      return this.parseTemplate()

    case types$1._import:
      if (this.options.ecmaVersion >= 11) {
        return this.parseExprImport(forNew)
      } else {
        return this.unexpected()
      }

    default:
      return this.parseExprAtomDefault()
    }
  };

  pp$5.parseExprAtomDefault = function() {
    this.unexpected();
  };

  pp$5.parseExprImport = function(forNew) {
    var node = this.startNode();

    // Consume `import` as an identifier for `import.meta`.
    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.
    if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword import"); }
    var meta = this.parseIdent(true);

    if (this.type === types$1.parenL && !forNew) {
      return this.parseDynamicImport(node)
    } else if (this.type === types$1.dot) {
      node.meta = meta;
      return this.parseImportMeta(node)
    } else {
      this.unexpected();
    }
  };

  pp$5.parseDynamicImport = function(node) {
    this.next(); // skip `(`

    // Parse node.source.
    node.source = this.parseMaybeAssign();

    // Verify ending.
    if (!this.eat(types$1.parenR)) {
      var errorPos = this.start;
      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {
        this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
      } else {
        this.unexpected(errorPos);
      }
    }

    return this.finishNode(node, "ImportExpression")
  };

  pp$5.parseImportMeta = function(node) {
    this.next(); // skip `.`

    var containsEsc = this.containsEsc;
    node.property = this.parseIdent(true);

    if (node.property.name !== "meta")
      { this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'"); }
    if (containsEsc)
      { this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters"); }
    if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere)
      { this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module"); }

    return this.finishNode(node, "MetaProperty")
  };

  pp$5.parseLiteral = function(value) {
    var node = this.startNode();
    node.value = value;
    node.raw = this.input.slice(this.start, this.end);
    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, ""); }
    this.next();
    return this.finishNode(node, "Literal")
  };

  pp$5.parseParenExpression = function() {
    this.expect(types$1.parenL);
    var val = this.parseExpression();
    this.expect(types$1.parenR);
    return val
  };

  pp$5.shouldParseArrow = function(exprList) {
    return !this.canInsertSemicolon()
  };

  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {
    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
    if (this.options.ecmaVersion >= 6) {
      this.next();

      var innerStartPos = this.start, innerStartLoc = this.startLoc;
      var exprList = [], first = true, lastIsComma = false;
      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
      this.yieldPos = 0;
      this.awaitPos = 0;
      // Do not save awaitIdentPos to allow checking awaits nested in parameters
      while (this.type !== types$1.parenR) {
        first ? first = false : this.expect(types$1.comma);
        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {
          lastIsComma = true;
          break
        } else if (this.type === types$1.ellipsis) {
          spreadStart = this.start;
          exprList.push(this.parseParenItem(this.parseRestBinding()));
          if (this.type === types$1.comma) {
            this.raiseRecoverable(
              this.start,
              "Comma is not permitted after the rest element"
            );
          }
          break
        } else {
          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
        }
      }
      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;
      this.expect(types$1.parenR);

      if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {
        this.checkPatternErrors(refDestructuringErrors, false);
        this.checkYieldAwaitInDefaultParams();
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)
      }

      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }
      if (spreadStart) { this.unexpected(spreadStart); }
      this.checkExpressionErrors(refDestructuringErrors, true);
      this.yieldPos = oldYieldPos || this.yieldPos;
      this.awaitPos = oldAwaitPos || this.awaitPos;

      if (exprList.length > 1) {
        val = this.startNodeAt(innerStartPos, innerStartLoc);
        val.expressions = exprList;
        this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
      } else {
        val = exprList[0];
      }
    } else {
      val = this.parseParenExpression();
    }

    if (this.options.preserveParens) {
      var par = this.startNodeAt(startPos, startLoc);
      par.expression = val;
      return this.finishNode(par, "ParenthesizedExpression")
    } else {
      return val
    }
  };

  pp$5.parseParenItem = function(item) {
    return item
  };

  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {
    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)
  };

  // New's precedence is slightly tricky. It must allow its argument to
  // be a `[]` or dot subscript expression, but not a call — at least,
  // not without wrapping it in parentheses. Thus, it uses the noCalls
  // argument to parseSubscripts to prevent it from consuming the
  // argument list.

  var empty = [];

  pp$5.parseNew = function() {
    if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword new"); }
    var node = this.startNode();
    var meta = this.parseIdent(true);
    if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {
      node.meta = meta;
      var containsEsc = this.containsEsc;
      node.property = this.parseIdent(true);
      if (node.property.name !== "target")
        { this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'"); }
      if (containsEsc)
        { this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters"); }
      if (!this.allowNewDotTarget)
        { this.raiseRecoverable(node.start, "'new.target' can only be used in functions and class static block"); }
      return this.finishNode(node, "MetaProperty")
    }
    var startPos = this.start, startLoc = this.startLoc;
    node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);
    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }
    else { node.arguments = empty; }
    return this.finishNode(node, "NewExpression")
  };

  // Parse template expression.

  pp$5.parseTemplateElement = function(ref) {
    var isTagged = ref.isTagged;

    var elem = this.startNode();
    if (this.type === types$1.invalidTemplate) {
      if (!isTagged) {
        this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
      }
      elem.value = {
        raw: this.value,
        cooked: null
      };
    } else {
      elem.value = {
        raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
        cooked: this.value
      };
    }
    this.next();
    elem.tail = this.type === types$1.backQuote;
    return this.finishNode(elem, "TemplateElement")
  };

  pp$5.parseTemplate = function(ref) {
    if ( ref === void 0 ) ref = {};
    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;

    var node = this.startNode();
    this.next();
    node.expressions = [];
    var curElt = this.parseTemplateElement({isTagged: isTagged});
    node.quasis = [curElt];
    while (!curElt.tail) {
      if (this.type === types$1.eof) { this.raise(this.pos, "Unterminated template literal"); }
      this.expect(types$1.dollarBraceL);
      node.expressions.push(this.parseExpression());
      this.expect(types$1.braceR);
      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));
    }
    this.next();
    return this.finishNode(node, "TemplateLiteral")
  };

  pp$5.isAsyncProp = function(prop) {
    return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" &&
      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&
      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
  };

  // Parse an object literal or binding pattern.

  pp$5.parseObj = function(isPattern, refDestructuringErrors) {
    var node = this.startNode(), first = true, propHash = {};
    node.properties = [];
    this.next();
    while (!this.eat(types$1.braceR)) {
      if (!first) {
        this.expect(types$1.comma);
        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }
      } else { first = false; }

      var prop = this.parseProperty(isPattern, refDestructuringErrors);
      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }
      node.properties.push(prop);
    }
    return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression")
  };

  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {
    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {
      if (isPattern) {
        prop.argument = this.parseIdent(false);
        if (this.type === types$1.comma) {
          this.raiseRecoverable(this.start, "Comma is not permitted after the rest element");
        }
        return this.finishNode(prop, "RestElement")
      }
      // Parse argument.
      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
      // To disallow trailing comma via `this.toAssignable()`.
      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
        refDestructuringErrors.trailingComma = this.start;
      }
      // Finish
      return this.finishNode(prop, "SpreadElement")
    }
    if (this.options.ecmaVersion >= 6) {
      prop.method = false;
      prop.shorthand = false;
      if (isPattern || refDestructuringErrors) {
        startPos = this.start;
        startLoc = this.startLoc;
      }
      if (!isPattern)
        { isGenerator = this.eat(types$1.star); }
    }
    var containsEsc = this.containsEsc;
    this.parsePropertyName(prop);
    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
      isAsync = true;
      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);
      this.parsePropertyName(prop);
    } else {
      isAsync = false;
    }
    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
    return this.finishNode(prop, "Property")
  };

  pp$5.parseGetterSetter = function(prop) {
    prop.kind = prop.key.name;
    this.parsePropertyName(prop);
    prop.value = this.parseMethod(false);
    var paramCount = prop.kind === "get" ? 0 : 1;
    if (prop.value.params.length !== paramCount) {
      var start = prop.value.start;
      if (prop.kind === "get")
        { this.raiseRecoverable(start, "getter should have no params"); }
      else
        { this.raiseRecoverable(start, "setter should have exactly one param"); }
    } else {
      if (prop.kind === "set" && prop.value.params[0].type === "RestElement")
        { this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params"); }
    }
  };

  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
    if ((isGenerator || isAsync) && this.type === types$1.colon)
      { this.unexpected(); }

    if (this.eat(types$1.colon)) {
      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
      prop.kind = "init";
    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {
      if (isPattern) { this.unexpected(); }
      prop.kind = "init";
      prop.method = true;
      prop.value = this.parseMethod(isGenerator, isAsync);
    } else if (!isPattern && !containsEsc &&
               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&
               (prop.key.name === "get" || prop.key.name === "set") &&
               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {
      if (isGenerator || isAsync) { this.unexpected(); }
      this.parseGetterSetter(prop);
    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
      if (isGenerator || isAsync) { this.unexpected(); }
      this.checkUnreserved(prop.key);
      if (prop.key.name === "await" && !this.awaitIdentPos)
        { this.awaitIdentPos = startPos; }
      prop.kind = "init";
      if (isPattern) {
        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
      } else if (this.type === types$1.eq && refDestructuringErrors) {
        if (refDestructuringErrors.shorthandAssign < 0)
          { refDestructuringErrors.shorthandAssign = this.start; }
        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
      } else {
        prop.value = this.copyNode(prop.key);
      }
      prop.shorthand = true;
    } else { this.unexpected(); }
  };

  pp$5.parsePropertyName = function(prop) {
    if (this.options.ecmaVersion >= 6) {
      if (this.eat(types$1.bracketL)) {
        prop.computed = true;
        prop.key = this.parseMaybeAssign();
        this.expect(types$1.bracketR);
        return prop.key
      } else {
        prop.computed = false;
      }
    }
    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never")
  };

  // Initialize empty function node.

  pp$5.initFunction = function(node) {
    node.id = null;
    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }
    if (this.options.ecmaVersion >= 8) { node.async = false; }
  };

  // Parse object or class method.

  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;

    this.initFunction(node);
    if (this.options.ecmaVersion >= 6)
      { node.generator = isGenerator; }
    if (this.options.ecmaVersion >= 8)
      { node.async = !!isAsync; }

    this.yieldPos = 0;
    this.awaitPos = 0;
    this.awaitIdentPos = 0;
    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));

    this.expect(types$1.parenL);
    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
    this.checkYieldAwaitInDefaultParams();
    this.parseFunctionBody(node, false, true, false);

    this.yieldPos = oldYieldPos;
    this.awaitPos = oldAwaitPos;
    this.awaitIdentPos = oldAwaitIdentPos;
    return this.finishNode(node, "FunctionExpression")
  };

  // Parse arrow function expression with given parameters.

  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {
    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;

    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
    this.initFunction(node);
    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }

    this.yieldPos = 0;
    this.awaitPos = 0;
    this.awaitIdentPos = 0;

    node.params = this.toAssignableList(params, true);
    this.parseFunctionBody(node, true, false, forInit);

    this.yieldPos = oldYieldPos;
    this.awaitPos = oldAwaitPos;
    this.awaitIdentPos = oldAwaitIdentPos;
    return this.finishNode(node, "ArrowFunctionExpression")
  };

  // Parse function body and check parameters.

  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {
    var isExpression = isArrowFunction && this.type !== types$1.braceL;
    var oldStrict = this.strict, useStrict = false;

    if (isExpression) {
      node.body = this.parseMaybeAssign(forInit);
      node.expression = true;
      this.checkParams(node, false);
    } else {
      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
      if (!oldStrict || nonSimple) {
        useStrict = this.strictDirective(this.end);
        // If this is a strict mode function, verify that argument names
        // are not repeated, and it does not try to bind the words `eval`
        // or `arguments`.
        if (useStrict && nonSimple)
          { this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list"); }
      }
      // Start a new scope with regard to labels and the `inFunction`
      // flag (restore them to their old value afterwards).
      var oldLabels = this.labels;
      this.labels = [];
      if (useStrict) { this.strict = true; }

      // Add the params to varDeclaredNames to ensure that an error is thrown
      // if a let/const declaration in the function clashes with one of the params.
      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'
      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }
      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);
      node.expression = false;
      this.adaptDirectivePrologue(node.body.body);
      this.labels = oldLabels;
    }
    this.exitScope();
  };

  pp$5.isSimpleParamList = function(params) {
    for (var i = 0, list = params; i < list.length; i += 1)
      {
      var param = list[i];

      if (param.type !== "Identifier") { return false
    } }
    return true
  };

  // Checks function params for various disallowed patterns such as using "eval"
  // or "arguments" and duplicate parameters.

  pp$5.checkParams = function(node, allowDuplicates) {
    var nameHash = Object.create(null);
    for (var i = 0, list = node.params; i < list.length; i += 1)
      {
      var param = list[i];

      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);
    }
  };

  // Parses a comma-separated list of expressions, and returns them as
  // an array. `close` is the token type that ends the list, and
  // `allowEmpty` can be turned on to allow subsequent commas with
  // nothing in between them to be parsed as `null` (which is needed
  // for array literals).

  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
    var elts = [], first = true;
    while (!this.eat(close)) {
      if (!first) {
        this.expect(types$1.comma);
        if (allowTrailingComma && this.afterTrailingComma(close)) { break }
      } else { first = false; }

      var elt = (void 0);
      if (allowEmpty && this.type === types$1.comma)
        { elt = null; }
      else if (this.type === types$1.ellipsis) {
        elt = this.parseSpread(refDestructuringErrors);
        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)
          { refDestructuringErrors.trailingComma = this.start; }
      } else {
        elt = this.parseMaybeAssign(false, refDestructuringErrors);
      }
      elts.push(elt);
    }
    return elts
  };

  pp$5.checkUnreserved = function(ref) {
    var start = ref.start;
    var end = ref.end;
    var name = ref.name;

    if (this.inGenerator && name === "yield")
      { this.raiseRecoverable(start, "Cannot use 'yield' as identifier inside a generator"); }
    if (this.inAsync && name === "await")
      { this.raiseRecoverable(start, "Cannot use 'await' as identifier inside an async function"); }
    if (this.currentThisScope().inClassFieldInit && name === "arguments")
      { this.raiseRecoverable(start, "Cannot use 'arguments' in class field initializer"); }
    if (this.inClassStaticBlock && (name === "arguments" || name === "await"))
      { this.raise(start, ("Cannot use " + name + " in class static initialization block")); }
    if (this.keywords.test(name))
      { this.raise(start, ("Unexpected keyword '" + name + "'")); }
    if (this.options.ecmaVersion < 6 &&
      this.input.slice(start, end).indexOf("\\") !== -1) { return }
    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
    if (re.test(name)) {
      if (!this.inAsync && name === "await")
        { this.raiseRecoverable(start, "Cannot use keyword 'await' outside an async function"); }
      this.raiseRecoverable(start, ("The keyword '" + name + "' is reserved"));
    }
  };

  // Parse the next token as an identifier. If `liberal` is true (used
  // when parsing properties), it will also convert keywords into
  // identifiers.

  pp$5.parseIdent = function(liberal) {
    var node = this.parseIdentNode();
    this.next(!!liberal);
    this.finishNode(node, "Identifier");
    if (!liberal) {
      this.checkUnreserved(node);
      if (node.name === "await" && !this.awaitIdentPos)
        { this.awaitIdentPos = node.start; }
    }
    return node
  };

  pp$5.parseIdentNode = function() {
    var node = this.startNode();
    if (this.type === types$1.name) {
      node.name = this.value;
    } else if (this.type.keyword) {
      node.name = this.type.keyword;

      // To fix https://github.com/acornjs/acorn/issues/575
      // `class` and `function` keywords push new context into this.context.
      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.
      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword
      if ((node.name === "class" || node.name === "function") &&
        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
        this.context.pop();
      }
    } else {
      this.unexpected();
    }
    return node
  };

  pp$5.parsePrivateIdent = function() {
    var node = this.startNode();
    if (this.type === types$1.privateId) {
      node.name = this.value;
    } else {
      this.unexpected();
    }
    this.next();
    this.finishNode(node, "PrivateIdentifier");

    // For validating existence
    if (this.options.checkPrivateFields) {
      if (this.privateNameStack.length === 0) {
        this.raise(node.start, ("Private field '#" + (node.name) + "' must be declared in an enclosing class"));
      } else {
        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);
      }
    }

    return node
  };

  // Parses yield expression inside generator.

  pp$5.parseYield = function(forInit) {
    if (!this.yieldPos) { this.yieldPos = this.start; }

    var node = this.startNode();
    this.next();
    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {
      node.delegate = false;
      node.argument = null;
    } else {
      node.delegate = this.eat(types$1.star);
      node.argument = this.parseMaybeAssign(forInit);
    }
    return this.finishNode(node, "YieldExpression")
  };

  pp$5.parseAwait = function(forInit) {
    if (!this.awaitPos) { this.awaitPos = this.start; }

    var node = this.startNode();
    this.next();
    node.argument = this.parseMaybeUnary(null, true, false, forInit);
    return this.finishNode(node, "AwaitExpression")
  };

  var pp$4 = Parser.prototype;

  // This function is used to raise exceptions on parse errors. It
  // takes an offset integer (into the current `input`) to indicate
  // the location of the error, attaches the position to the end
  // of the error message, and then raises a `SyntaxError` with that
  // message.

  pp$4.raise = function(pos, message) {
    var loc = getLineInfo(this.input, pos);
    message += " (" + loc.line + ":" + loc.column + ")";
    var err = new SyntaxError(message);
    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;
    throw err
  };

  pp$4.raiseRecoverable = pp$4.raise;

  pp$4.curPosition = function() {
    if (this.options.locations) {
      return new Position(this.curLine, this.pos - this.lineStart)
    }
  };

  var pp$3 = Parser.prototype;

  var Scope = function Scope(flags) {
    this.flags = flags;
    // A list of var-declared names in the current lexical scope
    this.var = [];
    // A list of lexically-declared names in the current lexical scope
    this.lexical = [];
    // A list of lexically-declared FunctionDeclaration names in the current lexical scope
    this.functions = [];
    // A switch to disallow the identifier reference 'arguments'
    this.inClassFieldInit = false;
  };

  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.

  pp$3.enterScope = function(flags) {
    this.scopeStack.push(new Scope(flags));
  };

  pp$3.exitScope = function() {
    this.scopeStack.pop();
  };

  // The spec says:
  // > At the top level of a function, or script, function declarations are
  // > treated like var declarations rather than like lexical declarations.
  pp$3.treatFunctionsAsVarInScope = function(scope) {
    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)
  };

  pp$3.declareName = function(name, bindingType, pos) {
    var redeclared = false;
    if (bindingType === BIND_LEXICAL) {
      var scope = this.currentScope();
      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
      scope.lexical.push(name);
      if (this.inModule && (scope.flags & SCOPE_TOP))
        { delete this.undefinedExports[name]; }
    } else if (bindingType === BIND_SIMPLE_CATCH) {
      var scope$1 = this.currentScope();
      scope$1.lexical.push(name);
    } else if (bindingType === BIND_FUNCTION) {
      var scope$2 = this.currentScope();
      if (this.treatFunctionsAsVar)
        { redeclared = scope$2.lexical.indexOf(name) > -1; }
      else
        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }
      scope$2.functions.push(name);
    } else {
      for (var i = this.scopeStack.length - 1; i >= 0; --i) {
        var scope$3 = this.scopeStack[i];
        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||
            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
          redeclared = true;
          break
        }
        scope$3.var.push(name);
        if (this.inModule && (scope$3.flags & SCOPE_TOP))
          { delete this.undefinedExports[name]; }
        if (scope$3.flags & SCOPE_VAR) { break }
      }
    }
    if (redeclared) { this.raiseRecoverable(pos, ("Identifier '" + name + "' has already been declared")); }
  };

  pp$3.checkLocalExport = function(id) {
    // scope.functions must be empty as Module code is always strict.
    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&
        this.scopeStack[0].var.indexOf(id.name) === -1) {
      this.undefinedExports[id.name] = id;
    }
  };

  pp$3.currentScope = function() {
    return this.scopeStack[this.scopeStack.length - 1]
  };

  pp$3.currentVarScope = function() {
    for (var i = this.scopeStack.length - 1;; i--) {
      var scope = this.scopeStack[i];
      if (scope.flags & SCOPE_VAR) { return scope }
    }
  };

  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.
  pp$3.currentThisScope = function() {
    for (var i = this.scopeStack.length - 1;; i--) {
      var scope = this.scopeStack[i];
      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }
    }
  };

  var Node = function Node(parser, pos, loc) {
    this.type = "";
    this.start = pos;
    this.end = 0;
    if (parser.options.locations)
      { this.loc = new SourceLocation(parser, loc); }
    if (parser.options.directSourceFile)
      { this.sourceFile = parser.options.directSourceFile; }
    if (parser.options.ranges)
      { this.range = [pos, 0]; }
  };

  // Start an AST node, attaching a start offset.

  var pp$2 = Parser.prototype;

  pp$2.startNode = function() {
    return new Node(this, this.start, this.startLoc)
  };

  pp$2.startNodeAt = function(pos, loc) {
    return new Node(this, pos, loc)
  };

  // Finish an AST node, adding `type` and `end` properties.

  function finishNodeAt(node, type, pos, loc) {
    node.type = type;
    node.end = pos;
    if (this.options.locations)
      { node.loc.end = loc; }
    if (this.options.ranges)
      { node.range[1] = pos; }
    return node
  }

  pp$2.finishNode = function(node, type) {
    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)
  };

  // Finish node at given position

  pp$2.finishNodeAt = function(node, type, pos, loc) {
    return finishNodeAt.call(this, node, type, pos, loc)
  };

  pp$2.copyNode = function(node) {
    var newNode = new Node(this, node.start, this.startLoc);
    for (var prop in node) { newNode[prop] = node[prop]; }
    return newNode
  };

  // This file contains Unicode properties extracted from the ECMAScript specification.
  // The lists are extracted like so:
  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)

  // #table-binary-unicode-properties
  var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
  var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
  var ecma11BinaryProperties = ecma10BinaryProperties;
  var ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";
  var ecma13BinaryProperties = ecma12BinaryProperties;
  var ecma14BinaryProperties = ecma13BinaryProperties;

  var unicodeBinaryProperties = {
    9: ecma9BinaryProperties,
    10: ecma10BinaryProperties,
    11: ecma11BinaryProperties,
    12: ecma12BinaryProperties,
    13: ecma13BinaryProperties,
    14: ecma14BinaryProperties
  };

  // #table-binary-unicode-properties-of-strings
  var ecma14BinaryPropertiesOfStrings = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji";

  var unicodeBinaryPropertiesOfStrings = {
    9: "",
    10: "",
    11: "",
    12: "",
    13: "",
    14: ecma14BinaryPropertiesOfStrings
  };

  // #table-unicode-general-category-values
  var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";

  // #table-unicode-script-values
  var ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
  var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
  var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
  var ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";
  var ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";
  var ecma14ScriptValues = ecma13ScriptValues + " Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz";

  var unicodeScriptValues = {
    9: ecma9ScriptValues,
    10: ecma10ScriptValues,
    11: ecma11ScriptValues,
    12: ecma12ScriptValues,
    13: ecma13ScriptValues,
    14: ecma14ScriptValues
  };

  var data = {};
  function buildUnicodeData(ecmaVersion) {
    var d = data[ecmaVersion] = {
      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
      binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),
      nonBinary: {
        General_Category: wordsRegexp(unicodeGeneralCategoryValues),
        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
      }
    };
    d.nonBinary.Script_Extensions = d.nonBinary.Script;

    d.nonBinary.gc = d.nonBinary.General_Category;
    d.nonBinary.sc = d.nonBinary.Script;
    d.nonBinary.scx = d.nonBinary.Script_Extensions;
  }

  for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {
    var ecmaVersion = list[i];

    buildUnicodeData(ecmaVersion);
  }

  var pp$1 = Parser.prototype;

  var RegExpValidationState = function RegExpValidationState(parser) {
    this.parser = parser;
    this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "") + (parser.options.ecmaVersion >= 15 ? "v" : "");
    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];
    this.source = "";
    this.flags = "";
    this.start = 0;
    this.switchU = false;
    this.switchV = false;
    this.switchN = false;
    this.pos = 0;
    this.lastIntValue = 0;
    this.lastStringValue = "";
    this.lastAssertionIsQuantifiable = false;
    this.numCapturingParens = 0;
    this.maxBackReference = 0;
    this.groupNames = [];
    this.backReferenceNames = [];
  };

  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {
    var unicodeSets = flags.indexOf("v") !== -1;
    var unicode = flags.indexOf("u") !== -1;
    this.start = start | 0;
    this.source = pattern + "";
    this.flags = flags;
    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {
      this.switchU = true;
      this.switchV = true;
      this.switchN = true;
    } else {
      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
      this.switchV = false;
      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
    }
  };

  RegExpValidationState.prototype.raise = function raise (message) {
    this.parser.raiseRecoverable(this.start, ("Invalid regular expression: /" + (this.source) + "/: " + message));
  };

  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).
  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).
  RegExpValidationState.prototype.at = function at (i, forceU) {
      if ( forceU === void 0 ) forceU = false;

    var s = this.source;
    var l = s.length;
    if (i >= l) {
      return -1
    }
    var c = s.charCodeAt(i);
    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
      return c
    }
    var next = s.charCodeAt(i + 1);
    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c
  };

  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {
      if ( forceU === void 0 ) forceU = false;

    var s = this.source;
    var l = s.length;
    if (i >= l) {
      return l
    }
    var c = s.charCodeAt(i), next;
    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||
        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {
      return i + 1
    }
    return i + 2
  };

  RegExpValidationState.prototype.current = function current (forceU) {
      if ( forceU === void 0 ) forceU = false;

    return this.at(this.pos, forceU)
  };

  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {
      if ( forceU === void 0 ) forceU = false;

    return this.at(this.nextIndex(this.pos, forceU), forceU)
  };

  RegExpValidationState.prototype.advance = function advance (forceU) {
      if ( forceU === void 0 ) forceU = false;

    this.pos = this.nextIndex(this.pos, forceU);
  };

  RegExpValidationState.prototype.eat = function eat (ch, forceU) {
      if ( forceU === void 0 ) forceU = false;

    if (this.current(forceU) === ch) {
      this.advance(forceU);
      return true
    }
    return false
  };

  RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {
      if ( forceU === void 0 ) forceU = false;

    var pos = this.pos;
    for (var i = 0, list = chs; i < list.length; i += 1) {
      var ch = list[i];

        var current = this.at(pos, forceU);
      if (current === -1 || current !== ch) {
        return false
      }
      pos = this.nextIndex(pos, forceU);
    }
    this.pos = pos;
    return true
  };

  /**
   * Validate the flags part of a given RegExpLiteral.
   *
   * @param {RegExpValidationState} state The state to validate RegExp.
   * @returns {void}
   */
  pp$1.validateRegExpFlags = function(state) {
    var validFlags = state.validFlags;
    var flags = state.flags;

    var u = false;
    var v = false;

    for (var i = 0; i < flags.length; i++) {
      var flag = flags.charAt(i);
      if (validFlags.indexOf(flag) === -1) {
        this.raise(state.start, "Invalid regular expression flag");
      }
      if (flags.indexOf(flag, i + 1) > -1) {
        this.raise(state.start, "Duplicate regular expression flag");
      }
      if (flag === "u") { u = true; }
      if (flag === "v") { v = true; }
    }
    if (this.options.ecmaVersion >= 15 && u && v) {
      this.raise(state.start, "Invalid regular expression flag");
    }
  };

  /**
   * Validate the pattern part of a given RegExpLiteral.
   *
   * @param {RegExpValidationState} state The state to validate RegExp.
   * @returns {void}
   */
  pp$1.validateRegExpPattern = function(state) {
    this.regexp_pattern(state);

    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of
    // parsing contains a |GroupName|, reparse with the goal symbol
    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*
    // exception if _P_ did not conform to the grammar, if any elements of _P_
    // were not matched by the parse, or if any Early Error conditions exist.
    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
      state.switchN = true;
      this.regexp_pattern(state);
    }
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern
  pp$1.regexp_pattern = function(state) {
    state.pos = 0;
    state.lastIntValue = 0;
    state.lastStringValue = "";
    state.lastAssertionIsQuantifiable = false;
    state.numCapturingParens = 0;
    state.maxBackReference = 0;
    state.groupNames.length = 0;
    state.backReferenceNames.length = 0;

    this.regexp_disjunction(state);

    if (state.pos !== state.source.length) {
      // Make the same messages as V8.
      if (state.eat(0x29 /* ) */)) {
        state.raise("Unmatched ')'");
      }
      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {
        state.raise("Lone quantifier brackets");
      }
    }
    if (state.maxBackReference > state.numCapturingParens) {
      state.raise("Invalid escape");
    }
    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {
      var name = list[i];

      if (state.groupNames.indexOf(name) === -1) {
        state.raise("Invalid named capture referenced");
      }
    }
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction
  pp$1.regexp_disjunction = function(state) {
    this.regexp_alternative(state);
    while (state.eat(0x7C /* | */)) {
      this.regexp_alternative(state);
    }

    // Make the same message as V8.
    if (this.regexp_eatQuantifier(state, true)) {
      state.raise("Nothing to repeat");
    }
    if (state.eat(0x7B /* { */)) {
      state.raise("Lone quantifier brackets");
    }
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative
  pp$1.regexp_alternative = function(state) {
    while (state.pos < state.source.length && this.regexp_eatTerm(state))
      { }
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term
  pp$1.regexp_eatTerm = function(state) {
    if (this.regexp_eatAssertion(state)) {
      // Handle `QuantifiableAssertion Quantifier` alternative.
      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion
      // is a QuantifiableAssertion.
      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
        // Make the same message as V8.
        if (state.switchU) {
          state.raise("Invalid quantifier");
        }
      }
      return true
    }

    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
      this.regexp_eatQuantifier(state);
      return true
    }

    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion
  pp$1.regexp_eatAssertion = function(state) {
    var start = state.pos;
    state.lastAssertionIsQuantifiable = false;

    // ^, $
    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {
      return true
    }

    // \b \B
    if (state.eat(0x5C /* \ */)) {
      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {
        return true
      }
      state.pos = start;
    }

    // Lookahead / Lookbehind
    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {
      var lookbehind = false;
      if (this.options.ecmaVersion >= 9) {
        lookbehind = state.eat(0x3C /* < */);
      }
      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {
        this.regexp_disjunction(state);
        if (!state.eat(0x29 /* ) */)) {
          state.raise("Unterminated group");
        }
        state.lastAssertionIsQuantifiable = !lookbehind;
        return true
      }
    }

    state.pos = start;
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier
  pp$1.regexp_eatQuantifier = function(state, noError) {
    if ( noError === void 0 ) noError = false;

    if (this.regexp_eatQuantifierPrefix(state, noError)) {
      state.eat(0x3F /* ? */);
      return true
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix
  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {
    return (
      state.eat(0x2A /* * */) ||
      state.eat(0x2B /* + */) ||
      state.eat(0x3F /* ? */) ||
      this.regexp_eatBracedQuantifier(state, noError)
    )
  };
  pp$1.regexp_eatBracedQuantifier = function(state, noError) {
    var start = state.pos;
    if (state.eat(0x7B /* { */)) {
      var min = 0, max = -1;
      if (this.regexp_eatDecimalDigits(state)) {
        min = state.lastIntValue;
        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {
          max = state.lastIntValue;
        }
        if (state.eat(0x7D /* } */)) {
          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term
          if (max !== -1 && max < min && !noError) {
            state.raise("numbers out of order in {} quantifier");
          }
          return true
        }
      }
      if (state.switchU && !noError) {
        state.raise("Incomplete quantifier");
      }
      state.pos = start;
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom
  pp$1.regexp_eatAtom = function(state) {
    return (
      this.regexp_eatPatternCharacters(state) ||
      state.eat(0x2E /* . */) ||
      this.regexp_eatReverseSolidusAtomEscape(state) ||
      this.regexp_eatCharacterClass(state) ||
      this.regexp_eatUncapturingGroup(state) ||
      this.regexp_eatCapturingGroup(state)
    )
  };
  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {
    var start = state.pos;
    if (state.eat(0x5C /* \ */)) {
      if (this.regexp_eatAtomEscape(state)) {
        return true
      }
      state.pos = start;
    }
    return false
  };
  pp$1.regexp_eatUncapturingGroup = function(state) {
    var start = state.pos;
    if (state.eat(0x28 /* ( */)) {
      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {
        this.regexp_disjunction(state);
        if (state.eat(0x29 /* ) */)) {
          return true
        }
        state.raise("Unterminated group");
      }
      state.pos = start;
    }
    return false
  };
  pp$1.regexp_eatCapturingGroup = function(state) {
    if (state.eat(0x28 /* ( */)) {
      if (this.options.ecmaVersion >= 9) {
        this.regexp_groupSpecifier(state);
      } else if (state.current() === 0x3F /* ? */) {
        state.raise("Invalid group");
      }
      this.regexp_disjunction(state);
      if (state.eat(0x29 /* ) */)) {
        state.numCapturingParens += 1;
        return true
      }
      state.raise("Unterminated group");
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom
  pp$1.regexp_eatExtendedAtom = function(state) {
    return (
      state.eat(0x2E /* . */) ||
      this.regexp_eatReverseSolidusAtomEscape(state) ||
      this.regexp_eatCharacterClass(state) ||
      this.regexp_eatUncapturingGroup(state) ||
      this.regexp_eatCapturingGroup(state) ||
      this.regexp_eatInvalidBracedQuantifier(state) ||
      this.regexp_eatExtendedPatternCharacter(state)
    )
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier
  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {
    if (this.regexp_eatBracedQuantifier(state, true)) {
      state.raise("Nothing to repeat");
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter
  pp$1.regexp_eatSyntaxCharacter = function(state) {
    var ch = state.current();
    if (isSyntaxCharacter(ch)) {
      state.lastIntValue = ch;
      state.advance();
      return true
    }
    return false
  };
  function isSyntaxCharacter(ch) {
    return (
      ch === 0x24 /* $ */ ||
      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||
      ch === 0x2E /* . */ ||
      ch === 0x3F /* ? */ ||
      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||
      ch >= 0x7B /* { */ && ch <= 0x7D /* } */
    )
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter
  // But eat eager.
  pp$1.regexp_eatPatternCharacters = function(state) {
    var start = state.pos;
    var ch = 0;
    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
      state.advance();
    }
    return state.pos !== start
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter
  pp$1.regexp_eatExtendedPatternCharacter = function(state) {
    var ch = state.current();
    if (
      ch !== -1 &&
      ch !== 0x24 /* $ */ &&
      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&
      ch !== 0x2E /* . */ &&
      ch !== 0x3F /* ? */ &&
      ch !== 0x5B /* [ */ &&
      ch !== 0x5E /* ^ */ &&
      ch !== 0x7C /* | */
    ) {
      state.advance();
      return true
    }
    return false
  };

  // GroupSpecifier ::
  //   [empty]
  //   `?` GroupName
  pp$1.regexp_groupSpecifier = function(state) {
    if (state.eat(0x3F /* ? */)) {
      if (this.regexp_eatGroupName(state)) {
        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
          state.raise("Duplicate capture group name");
        }
        state.groupNames.push(state.lastStringValue);
        return
      }
      state.raise("Invalid group");
    }
  };

  // GroupName ::
  //   `<` RegExpIdentifierName `>`
  // Note: this updates `state.lastStringValue` property with the eaten name.
  pp$1.regexp_eatGroupName = function(state) {
    state.lastStringValue = "";
    if (state.eat(0x3C /* < */)) {
      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {
        return true
      }
      state.raise("Invalid capture group name");
    }
    return false
  };

  // RegExpIdentifierName ::
  //   RegExpIdentifierStart
  //   RegExpIdentifierName RegExpIdentifierPart
  // Note: this updates `state.lastStringValue` property with the eaten name.
  pp$1.regexp_eatRegExpIdentifierName = function(state) {
    state.lastStringValue = "";
    if (this.regexp_eatRegExpIdentifierStart(state)) {
      state.lastStringValue += codePointToString(state.lastIntValue);
      while (this.regexp_eatRegExpIdentifierPart(state)) {
        state.lastStringValue += codePointToString(state.lastIntValue);
      }
      return true
    }
    return false
  };

  // RegExpIdentifierStart ::
  //   UnicodeIDStart
  //   `$`
  //   `_`
  //   `\` RegExpUnicodeEscapeSequence[+U]
  pp$1.regexp_eatRegExpIdentifierStart = function(state) {
    var start = state.pos;
    var forceU = this.options.ecmaVersion >= 11;
    var ch = state.current(forceU);
    state.advance(forceU);

    if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
      ch = state.lastIntValue;
    }
    if (isRegExpIdentifierStart(ch)) {
      state.lastIntValue = ch;
      return true
    }

    state.pos = start;
    return false
  };
  function isRegExpIdentifierStart(ch) {
    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */
  }

  // RegExpIdentifierPart ::
  //   UnicodeIDContinue
  //   `$`
  //   `_`
  //   `\` RegExpUnicodeEscapeSequence[+U]
  //   <ZWNJ>
  //   <ZWJ>
  pp$1.regexp_eatRegExpIdentifierPart = function(state) {
    var start = state.pos;
    var forceU = this.options.ecmaVersion >= 11;
    var ch = state.current(forceU);
    state.advance(forceU);

    if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
      ch = state.lastIntValue;
    }
    if (isRegExpIdentifierPart(ch)) {
      state.lastIntValue = ch;
      return true
    }

    state.pos = start;
    return false
  };
  function isRegExpIdentifierPart(ch) {
    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape
  pp$1.regexp_eatAtomEscape = function(state) {
    if (
      this.regexp_eatBackReference(state) ||
      this.regexp_eatCharacterClassEscape(state) ||
      this.regexp_eatCharacterEscape(state) ||
      (state.switchN && this.regexp_eatKGroupName(state))
    ) {
      return true
    }
    if (state.switchU) {
      // Make the same message as V8.
      if (state.current() === 0x63 /* c */) {
        state.raise("Invalid unicode escape");
      }
      state.raise("Invalid escape");
    }
    return false
  };
  pp$1.regexp_eatBackReference = function(state) {
    var start = state.pos;
    if (this.regexp_eatDecimalEscape(state)) {
      var n = state.lastIntValue;
      if (state.switchU) {
        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape
        if (n > state.maxBackReference) {
          state.maxBackReference = n;
        }
        return true
      }
      if (n <= state.numCapturingParens) {
        return true
      }
      state.pos = start;
    }
    return false
  };
  pp$1.regexp_eatKGroupName = function(state) {
    if (state.eat(0x6B /* k */)) {
      if (this.regexp_eatGroupName(state)) {
        state.backReferenceNames.push(state.lastStringValue);
        return true
      }
      state.raise("Invalid named reference");
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape
  pp$1.regexp_eatCharacterEscape = function(state) {
    return (
      this.regexp_eatControlEscape(state) ||
      this.regexp_eatCControlLetter(state) ||
      this.regexp_eatZero(state) ||
      this.regexp_eatHexEscapeSequence(state) ||
      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||
      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||
      this.regexp_eatIdentityEscape(state)
    )
  };
  pp$1.regexp_eatCControlLetter = function(state) {
    var start = state.pos;
    if (state.eat(0x63 /* c */)) {
      if (this.regexp_eatControlLetter(state)) {
        return true
      }
      state.pos = start;
    }
    return false
  };
  pp$1.regexp_eatZero = function(state) {
    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {
      state.lastIntValue = 0;
      state.advance();
      return true
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape
  pp$1.regexp_eatControlEscape = function(state) {
    var ch = state.current();
    if (ch === 0x74 /* t */) {
      state.lastIntValue = 0x09; /* \t */
      state.advance();
      return true
    }
    if (ch === 0x6E /* n */) {
      state.lastIntValue = 0x0A; /* \n */
      state.advance();
      return true
    }
    if (ch === 0x76 /* v */) {
      state.lastIntValue = 0x0B; /* \v */
      state.advance();
      return true
    }
    if (ch === 0x66 /* f */) {
      state.lastIntValue = 0x0C; /* \f */
      state.advance();
      return true
    }
    if (ch === 0x72 /* r */) {
      state.lastIntValue = 0x0D; /* \r */
      state.advance();
      return true
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter
  pp$1.regexp_eatControlLetter = function(state) {
    var ch = state.current();
    if (isControlLetter(ch)) {
      state.lastIntValue = ch % 0x20;
      state.advance();
      return true
    }
    return false
  };
  function isControlLetter(ch) {
    return (
      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||
      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)
    )
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence
  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
    if ( forceU === void 0 ) forceU = false;

    var start = state.pos;
    var switchU = forceU || state.switchU;

    if (state.eat(0x75 /* u */)) {
      if (this.regexp_eatFixedHexDigits(state, 4)) {
        var lead = state.lastIntValue;
        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {
          var leadSurrogateEnd = state.pos;
          if (state.eat(0x5C /* \ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {
            var trail = state.lastIntValue;
            if (trail >= 0xDC00 && trail <= 0xDFFF) {
              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
              return true
            }
          }
          state.pos = leadSurrogateEnd;
          state.lastIntValue = lead;
        }
        return true
      }
      if (
        switchU &&
        state.eat(0x7B /* { */) &&
        this.regexp_eatHexDigits(state) &&
        state.eat(0x7D /* } */) &&
        isValidUnicode(state.lastIntValue)
      ) {
        return true
      }
      if (switchU) {
        state.raise("Invalid unicode escape");
      }
      state.pos = start;
    }

    return false
  };
  function isValidUnicode(ch) {
    return ch >= 0 && ch <= 0x10FFFF
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape
  pp$1.regexp_eatIdentityEscape = function(state) {
    if (state.switchU) {
      if (this.regexp_eatSyntaxCharacter(state)) {
        return true
      }
      if (state.eat(0x2F /* / */)) {
        state.lastIntValue = 0x2F; /* / */
        return true
      }
      return false
    }

    var ch = state.current();
    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {
      state.lastIntValue = ch;
      state.advance();
      return true
    }

    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape
  pp$1.regexp_eatDecimalEscape = function(state) {
    state.lastIntValue = 0;
    var ch = state.current();
    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {
      do {
        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
        state.advance();
      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)
      return true
    }
    return false
  };

  // Return values used by character set parsing methods, needed to
  // forbid negation of sets that can match strings.
  var CharSetNone = 0; // Nothing parsed
  var CharSetOk = 1; // Construct parsed, cannot contain strings
  var CharSetString = 2; // Construct parsed, can contain strings

  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape
  pp$1.regexp_eatCharacterClassEscape = function(state) {
    var ch = state.current();

    if (isCharacterClassEscape(ch)) {
      state.lastIntValue = -1;
      state.advance();
      return CharSetOk
    }

    var negate = false;
    if (
      state.switchU &&
      this.options.ecmaVersion >= 9 &&
      ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)
    ) {
      state.lastIntValue = -1;
      state.advance();
      var result;
      if (
        state.eat(0x7B /* { */) &&
        (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&
        state.eat(0x7D /* } */)
      ) {
        if (negate && result === CharSetString) { state.raise("Invalid property name"); }
        return result
      }
      state.raise("Invalid property name");
    }

    return CharSetNone
  };

  function isCharacterClassEscape(ch) {
    return (
      ch === 0x64 /* d */ ||
      ch === 0x44 /* D */ ||
      ch === 0x73 /* s */ ||
      ch === 0x53 /* S */ ||
      ch === 0x77 /* w */ ||
      ch === 0x57 /* W */
    )
  }

  // UnicodePropertyValueExpression ::
  //   UnicodePropertyName `=` UnicodePropertyValue
  //   LoneUnicodePropertyNameOrValue
  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {
    var start = state.pos;

    // UnicodePropertyName `=` UnicodePropertyValue
    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {
      var name = state.lastStringValue;
      if (this.regexp_eatUnicodePropertyValue(state)) {
        var value = state.lastStringValue;
        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
        return CharSetOk
      }
    }
    state.pos = start;

    // LoneUnicodePropertyNameOrValue
    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
      var nameOrValue = state.lastStringValue;
      return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)
    }
    return CharSetNone
  };

  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
    if (!hasOwn(state.unicodeProperties.nonBinary, name))
      { state.raise("Invalid property name"); }
    if (!state.unicodeProperties.nonBinary[name].test(value))
      { state.raise("Invalid property value"); }
  };

  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
    if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }
    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }
    state.raise("Invalid property name");
  };

  // UnicodePropertyName ::
  //   UnicodePropertyNameCharacters
  pp$1.regexp_eatUnicodePropertyName = function(state) {
    var ch = 0;
    state.lastStringValue = "";
    while (isUnicodePropertyNameCharacter(ch = state.current())) {
      state.lastStringValue += codePointToString(ch);
      state.advance();
    }
    return state.lastStringValue !== ""
  };

  function isUnicodePropertyNameCharacter(ch) {
    return isControlLetter(ch) || ch === 0x5F /* _ */
  }

  // UnicodePropertyValue ::
  //   UnicodePropertyValueCharacters
  pp$1.regexp_eatUnicodePropertyValue = function(state) {
    var ch = 0;
    state.lastStringValue = "";
    while (isUnicodePropertyValueCharacter(ch = state.current())) {
      state.lastStringValue += codePointToString(ch);
      state.advance();
    }
    return state.lastStringValue !== ""
  };
  function isUnicodePropertyValueCharacter(ch) {
    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)
  }

  // LoneUnicodePropertyNameOrValue ::
  //   UnicodePropertyValueCharacters
  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
    return this.regexp_eatUnicodePropertyValue(state)
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass
  pp$1.regexp_eatCharacterClass = function(state) {
    if (state.eat(0x5B /* [ */)) {
      var negate = state.eat(0x5E /* ^ */);
      var result = this.regexp_classContents(state);
      if (!state.eat(0x5D /* ] */))
        { state.raise("Unterminated character class"); }
      if (negate && result === CharSetString)
        { state.raise("Negated character class may contain strings"); }
      return true
    }
    return false
  };

  // https://tc39.es/ecma262/#prod-ClassContents
  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges
  pp$1.regexp_classContents = function(state) {
    if (state.current() === 0x5D /* ] */) { return CharSetOk }
    if (state.switchV) { return this.regexp_classSetExpression(state) }
    this.regexp_nonEmptyClassRanges(state);
    return CharSetOk
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges
  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash
  pp$1.regexp_nonEmptyClassRanges = function(state) {
    while (this.regexp_eatClassAtom(state)) {
      var left = state.lastIntValue;
      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {
        var right = state.lastIntValue;
        if (state.switchU && (left === -1 || right === -1)) {
          state.raise("Invalid character class");
        }
        if (left !== -1 && right !== -1 && left > right) {
          state.raise("Range out of order in character class");
        }
      }
    }
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom
  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash
  pp$1.regexp_eatClassAtom = function(state) {
    var start = state.pos;

    if (state.eat(0x5C /* \ */)) {
      if (this.regexp_eatClassEscape(state)) {
        return true
      }
      if (state.switchU) {
        // Make the same message as V8.
        var ch$1 = state.current();
        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {
          state.raise("Invalid class escape");
        }
        state.raise("Invalid escape");
      }
      state.pos = start;
    }

    var ch = state.current();
    if (ch !== 0x5D /* ] */) {
      state.lastIntValue = ch;
      state.advance();
      return true
    }

    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape
  pp$1.regexp_eatClassEscape = function(state) {
    var start = state.pos;

    if (state.eat(0x62 /* b */)) {
      state.lastIntValue = 0x08; /* <BS> */
      return true
    }

    if (state.switchU && state.eat(0x2D /* - */)) {
      state.lastIntValue = 0x2D; /* - */
      return true
    }

    if (!state.switchU && state.eat(0x63 /* c */)) {
      if (this.regexp_eatClassControlLetter(state)) {
        return true
      }
      state.pos = start;
    }

    return (
      this.regexp_eatCharacterClassEscape(state) ||
      this.regexp_eatCharacterEscape(state)
    )
  };

  // https://tc39.es/ecma262/#prod-ClassSetExpression
  // https://tc39.es/ecma262/#prod-ClassUnion
  // https://tc39.es/ecma262/#prod-ClassIntersection
  // https://tc39.es/ecma262/#prod-ClassSubtraction
  pp$1.regexp_classSetExpression = function(state) {
    var result = CharSetOk, subResult;
    if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {
      if (subResult === CharSetString) { result = CharSetString; }
      // https://tc39.es/ecma262/#prod-ClassIntersection
      var start = state.pos;
      while (state.eatChars([0x26, 0x26] /* && */)) {
        if (
          state.current() !== 0x26 /* & */ &&
          (subResult = this.regexp_eatClassSetOperand(state))
        ) {
          if (subResult !== CharSetString) { result = CharSetOk; }
          continue
        }
        state.raise("Invalid character in character class");
      }
      if (start !== state.pos) { return result }
      // https://tc39.es/ecma262/#prod-ClassSubtraction
      while (state.eatChars([0x2D, 0x2D] /* -- */)) {
        if (this.regexp_eatClassSetOperand(state)) { continue }
        state.raise("Invalid character in character class");
      }
      if (start !== state.pos) { return result }
    } else {
      state.raise("Invalid character in character class");
    }
    // https://tc39.es/ecma262/#prod-ClassUnion
    for (;;) {
      if (this.regexp_eatClassSetRange(state)) { continue }
      subResult = this.regexp_eatClassSetOperand(state);
      if (!subResult) { return result }
      if (subResult === CharSetString) { result = CharSetString; }
    }
  };

  // https://tc39.es/ecma262/#prod-ClassSetRange
  pp$1.regexp_eatClassSetRange = function(state) {
    var start = state.pos;
    if (this.regexp_eatClassSetCharacter(state)) {
      var left = state.lastIntValue;
      if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {
        var right = state.lastIntValue;
        if (left !== -1 && right !== -1 && left > right) {
          state.raise("Range out of order in character class");
        }
        return true
      }
      state.pos = start;
    }
    return false
  };

  // https://tc39.es/ecma262/#prod-ClassSetOperand
  pp$1.regexp_eatClassSetOperand = function(state) {
    if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }
    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)
  };

  // https://tc39.es/ecma262/#prod-NestedClass
  pp$1.regexp_eatNestedClass = function(state) {
    var start = state.pos;
    if (state.eat(0x5B /* [ */)) {
      var negate = state.eat(0x5E /* ^ */);
      var result = this.regexp_classContents(state);
      if (state.eat(0x5D /* ] */)) {
        if (negate && result === CharSetString) {
          state.raise("Negated character class may contain strings");
        }
        return result
      }
      state.pos = start;
    }
    if (state.eat(0x5C /* \ */)) {
      var result$1 = this.regexp_eatCharacterClassEscape(state);
      if (result$1) {
        return result$1
      }
      state.pos = start;
    }
    return null
  };

  // https://tc39.es/ecma262/#prod-ClassStringDisjunction
  pp$1.regexp_eatClassStringDisjunction = function(state) {
    var start = state.pos;
    if (state.eatChars([0x5C, 0x71] /* \q */)) {
      if (state.eat(0x7B /* { */)) {
        var result = this.regexp_classStringDisjunctionContents(state);
        if (state.eat(0x7D /* } */)) {
          return result
        }
      } else {
        // Make the same message as V8.
        state.raise("Invalid escape");
      }
      state.pos = start;
    }
    return null
  };

  // https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents
  pp$1.regexp_classStringDisjunctionContents = function(state) {
    var result = this.regexp_classString(state);
    while (state.eat(0x7C /* | */)) {
      if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }
    }
    return result
  };

  // https://tc39.es/ecma262/#prod-ClassString
  // https://tc39.es/ecma262/#prod-NonEmptyClassString
  pp$1.regexp_classString = function(state) {
    var count = 0;
    while (this.regexp_eatClassSetCharacter(state)) { count++; }
    return count === 1 ? CharSetOk : CharSetString
  };

  // https://tc39.es/ecma262/#prod-ClassSetCharacter
  pp$1.regexp_eatClassSetCharacter = function(state) {
    var start = state.pos;
    if (state.eat(0x5C /* \ */)) {
      if (
        this.regexp_eatCharacterEscape(state) ||
        this.regexp_eatClassSetReservedPunctuator(state)
      ) {
        return true
      }
      if (state.eat(0x62 /* b */)) {
        state.lastIntValue = 0x08; /* <BS> */
        return true
      }
      state.pos = start;
      return false
    }
    var ch = state.current();
    if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }
    if (isClassSetSyntaxCharacter(ch)) { return false }
    state.advance();
    state.lastIntValue = ch;
    return true
  };

  // https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator
  function isClassSetReservedDoublePunctuatorCharacter(ch) {
    return (
      ch === 0x21 /* ! */ ||
      ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||
      ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||
      ch === 0x2E /* . */ ||
      ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||
      ch === 0x5E /* ^ */ ||
      ch === 0x60 /* ` */ ||
      ch === 0x7E /* ~ */
    )
  }

  // https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter
  function isClassSetSyntaxCharacter(ch) {
    return (
      ch === 0x28 /* ( */ ||
      ch === 0x29 /* ) */ ||
      ch === 0x2D /* - */ ||
      ch === 0x2F /* / */ ||
      ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||
      ch >= 0x7B /* { */ && ch <= 0x7D /* } */
    )
  }

  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
  pp$1.regexp_eatClassSetReservedPunctuator = function(state) {
    var ch = state.current();
    if (isClassSetReservedPunctuator(ch)) {
      state.lastIntValue = ch;
      state.advance();
      return true
    }
    return false
  };

  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
  function isClassSetReservedPunctuator(ch) {
    return (
      ch === 0x21 /* ! */ ||
      ch === 0x23 /* # */ ||
      ch === 0x25 /* % */ ||
      ch === 0x26 /* & */ ||
      ch === 0x2C /* , */ ||
      ch === 0x2D /* - */ ||
      ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||
      ch === 0x40 /* @ */ ||
      ch === 0x60 /* ` */ ||
      ch === 0x7E /* ~ */
    )
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter
  pp$1.regexp_eatClassControlLetter = function(state) {
    var ch = state.current();
    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {
      state.lastIntValue = ch % 0x20;
      state.advance();
      return true
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
  pp$1.regexp_eatHexEscapeSequence = function(state) {
    var start = state.pos;
    if (state.eat(0x78 /* x */)) {
      if (this.regexp_eatFixedHexDigits(state, 2)) {
        return true
      }
      if (state.switchU) {
        state.raise("Invalid escape");
      }
      state.pos = start;
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits
  pp$1.regexp_eatDecimalDigits = function(state) {
    var start = state.pos;
    var ch = 0;
    state.lastIntValue = 0;
    while (isDecimalDigit(ch = state.current())) {
      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
      state.advance();
    }
    return state.pos !== start
  };
  function isDecimalDigit(ch) {
    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits
  pp$1.regexp_eatHexDigits = function(state) {
    var start = state.pos;
    var ch = 0;
    state.lastIntValue = 0;
    while (isHexDigit(ch = state.current())) {
      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
      state.advance();
    }
    return state.pos !== start
  };
  function isHexDigit(ch) {
    return (
      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||
      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||
      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)
    )
  }
  function hexToInt(ch) {
    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {
      return 10 + (ch - 0x41 /* A */)
    }
    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {
      return 10 + (ch - 0x61 /* a */)
    }
    return ch - 0x30 /* 0 */
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence
  // Allows only 0-377(octal) i.e. 0-255(decimal).
  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {
    if (this.regexp_eatOctalDigit(state)) {
      var n1 = state.lastIntValue;
      if (this.regexp_eatOctalDigit(state)) {
        var n2 = state.lastIntValue;
        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
        } else {
          state.lastIntValue = n1 * 8 + n2;
        }
      } else {
        state.lastIntValue = n1;
      }
      return true
    }
    return false
  };

  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit
  pp$1.regexp_eatOctalDigit = function(state) {
    var ch = state.current();
    if (isOctalDigit(ch)) {
      state.lastIntValue = ch - 0x30; /* 0 */
      state.advance();
      return true
    }
    state.lastIntValue = 0;
    return false
  };
  function isOctalDigit(ch) {
    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */
  }

  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits
  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit
  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
  pp$1.regexp_eatFixedHexDigits = function(state, length) {
    var start = state.pos;
    state.lastIntValue = 0;
    for (var i = 0; i < length; ++i) {
      var ch = state.current();
      if (!isHexDigit(ch)) {
        state.pos = start;
        return false
      }
      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
      state.advance();
    }
    return true
  };

  // Object type used to represent tokens. Note that normally, tokens
  // simply exist as properties on the parser object. This is only
  // used for the onToken callback and the external tokenizer.

  var Token = function Token(p) {
    this.type = p.type;
    this.value = p.value;
    this.start = p.start;
    this.end = p.end;
    if (p.options.locations)
      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }
    if (p.options.ranges)
      { this.range = [p.start, p.end]; }
  };

  // ## Tokenizer

  var pp = Parser.prototype;

  // Move to the next token

  pp.next = function(ignoreEscapeSequenceInKeyword) {
    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)
      { this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword); }
    if (this.options.onToken)
      { this.options.onToken(new Token(this)); }

    this.lastTokEnd = this.end;
    this.lastTokStart = this.start;
    this.lastTokEndLoc = this.endLoc;
    this.lastTokStartLoc = this.startLoc;
    this.nextToken();
  };

  pp.getToken = function() {
    this.next();
    return new Token(this)
  };

  // If we're in an ES6 environment, make parsers iterable
  if (typeof Symbol !== "undefined")
    { pp[Symbol.iterator] = function() {
      var this$1$1 = this;

      return {
        next: function () {
          var token = this$1$1.getToken();
          return {
            done: token.type === types$1.eof,
            value: token
          }
        }
      }
    }; }

  // Toggle strict mode. Re-reads the next number or string to please
  // pedantic tests (`"use strict"; 010;` should fail).

  // Read a single token, updating the parser object's token-related
  // properties.

  pp.nextToken = function() {
    var curContext = this.curContext();
    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }

    this.start = this.pos;
    if (this.options.locations) { this.startLoc = this.curPosition(); }
    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }

    if (curContext.override) { return curContext.override(this) }
    else { this.readToken(this.fullCharCodeAtPos()); }
  };

  pp.readToken = function(code) {
    // Identifier or keyword. '\uXXXX' sequences are allowed in
    // identifiers, so '\' also dispatches to that.
    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\' */)
      { return this.readWord() }

    return this.getTokenFromCode(code)
  };

  pp.fullCharCodeAtPos = function() {
    var code = this.input.charCodeAt(this.pos);
    if (code <= 0xd7ff || code >= 0xdc00) { return code }
    var next = this.input.charCodeAt(this.pos + 1);
    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00
  };

  pp.skipBlockComment = function() {
    var startLoc = this.options.onComment && this.curPosition();
    var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
    if (end === -1) { this.raise(this.pos - 2, "Unterminated comment"); }
    this.pos = end + 2;
    if (this.options.locations) {
      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {
        ++this.curLine;
        pos = this.lineStart = nextBreak;
      }
    }
    if (this.options.onComment)
      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,
                             startLoc, this.curPosition()); }
  };

  pp.skipLineComment = function(startSkip) {
    var start = this.pos;
    var startLoc = this.options.onComment && this.curPosition();
    var ch = this.input.charCodeAt(this.pos += startSkip);
    while (this.pos < this.input.length && !isNewLine(ch)) {
      ch = this.input.charCodeAt(++this.pos);
    }
    if (this.options.onComment)
      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,
                             startLoc, this.curPosition()); }
  };

  // Called at the start of the parse and after every token. Skips
  // whitespace and comments, and.

  pp.skipSpace = function() {
    loop: while (this.pos < this.input.length) {
      var ch = this.input.charCodeAt(this.pos);
      switch (ch) {
      case 32: case 160: // ' '
        ++this.pos;
        break
      case 13:
        if (this.input.charCodeAt(this.pos + 1) === 10) {
          ++this.pos;
        }
      case 10: case 8232: case 8233:
        ++this.pos;
        if (this.options.locations) {
          ++this.curLine;
          this.lineStart = this.pos;
        }
        break
      case 47: // '/'
        switch (this.input.charCodeAt(this.pos + 1)) {
        case 42: // '*'
          this.skipBlockComment();
          break
        case 47:
          this.skipLineComment(2);
          break
        default:
          break loop
        }
        break
      default:
        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
          ++this.pos;
        } else {
          break loop
        }
      }
    }
  };

  // Called at the end of every token. Sets `end`, `val`, and
  // maintains `context` and `exprAllowed`, and skips the space after
  // the token, so that the next one's `start` will point at the
  // right position.

  pp.finishToken = function(type, val) {
    this.end = this.pos;
    if (this.options.locations) { this.endLoc = this.curPosition(); }
    var prevType = this.type;
    this.type = type;
    this.value = val;

    this.updateContext(prevType);
  };

  // ### Token reading

  // This is the function that is called to fetch the next token. It
  // is somewhat obscure, because it works in character codes rather
  // than characters, and because operator parsing has been inlined
  // into it.
  //
  // All in the name of speed.
  //
  pp.readToken_dot = function() {
    var next = this.input.charCodeAt(this.pos + 1);
    if (next >= 48 && next <= 57) { return this.readNumber(true) }
    var next2 = this.input.charCodeAt(this.pos + 2);
    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'
      this.pos += 3;
      return this.finishToken(types$1.ellipsis)
    } else {
      ++this.pos;
      return this.finishToken(types$1.dot)
    }
  };

  pp.readToken_slash = function() { // '/'
    var next = this.input.charCodeAt(this.pos + 1);
    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }
    if (next === 61) { return this.finishOp(types$1.assign, 2) }
    return this.finishOp(types$1.slash, 1)
  };

  pp.readToken_mult_modulo_exp = function(code) { // '%*'
    var next = this.input.charCodeAt(this.pos + 1);
    var size = 1;
    var tokentype = code === 42 ? types$1.star : types$1.modulo;

    // exponentiation operator ** and **=
    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
      ++size;
      tokentype = types$1.starstar;
      next = this.input.charCodeAt(this.pos + 2);
    }

    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }
    return this.finishOp(tokentype, size)
  };

  pp.readToken_pipe_amp = function(code) { // '|&'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === code) {
      if (this.options.ecmaVersion >= 12) {
        var next2 = this.input.charCodeAt(this.pos + 2);
        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }
      }
      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)
    }
    if (next === 61) { return this.finishOp(types$1.assign, 2) }
    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)
  };

  pp.readToken_caret = function() { // '^'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 61) { return this.finishOp(types$1.assign, 2) }
    return this.finishOp(types$1.bitwiseXOR, 1)
  };

  pp.readToken_plus_min = function(code) { // '+-'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === code) {
      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&
          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
        // A `-->` line comment
        this.skipLineComment(3);
        this.skipSpace();
        return this.nextToken()
      }
      return this.finishOp(types$1.incDec, 2)
    }
    if (next === 61) { return this.finishOp(types$1.assign, 2) }
    return this.finishOp(types$1.plusMin, 1)
  };

  pp.readToken_lt_gt = function(code) { // '<>'
    var next = this.input.charCodeAt(this.pos + 1);
    var size = 1;
    if (next === code) {
      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }
      return this.finishOp(types$1.bitShift, size)
    }
    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&
        this.input.charCodeAt(this.pos + 3) === 45) {
      // `<!--`, an XML-style comment that should be interpreted as a line comment
      this.skipLineComment(4);
      this.skipSpace();
      return this.nextToken()
    }
    if (next === 61) { size = 2; }
    return this.finishOp(types$1.relational, size)
  };

  pp.readToken_eq_excl = function(code) { // '=!'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }
    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'
      this.pos += 2;
      return this.finishToken(types$1.arrow)
    }
    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)
  };

  pp.readToken_question = function() { // '?'
    var ecmaVersion = this.options.ecmaVersion;
    if (ecmaVersion >= 11) {
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === 46) {
        var next2 = this.input.charCodeAt(this.pos + 2);
        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }
      }
      if (next === 63) {
        if (ecmaVersion >= 12) {
          var next2$1 = this.input.charCodeAt(this.pos + 2);
          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }
        }
        return this.finishOp(types$1.coalesce, 2)
      }
    }
    return this.finishOp(types$1.question, 1)
  };

  pp.readToken_numberSign = function() { // '#'
    var ecmaVersion = this.options.ecmaVersion;
    var code = 35; // '#'
    if (ecmaVersion >= 13) {
      ++this.pos;
      code = this.fullCharCodeAtPos();
      if (isIdentifierStart(code, true) || code === 92 /* '\' */) {
        return this.finishToken(types$1.privateId, this.readWord1())
      }
    }

    this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
  };

  pp.getTokenFromCode = function(code) {
    switch (code) {
    // The interpretation of a dot depends on whether it is followed
    // by a digit or another two dots.
    case 46: // '.'
      return this.readToken_dot()

    // Punctuation tokens.
    case 40: ++this.pos; return this.finishToken(types$1.parenL)
    case 41: ++this.pos; return this.finishToken(types$1.parenR)
    case 59: ++this.pos; return this.finishToken(types$1.semi)
    case 44: ++this.pos; return this.finishToken(types$1.comma)
    case 91: ++this.pos; return this.finishToken(types$1.bracketL)
    case 93: ++this.pos; return this.finishToken(types$1.bracketR)
    case 123: ++this.pos; return this.finishToken(types$1.braceL)
    case 125: ++this.pos; return this.finishToken(types$1.braceR)
    case 58: ++this.pos; return this.finishToken(types$1.colon)

    case 96: // '`'
      if (this.options.ecmaVersion < 6) { break }
      ++this.pos;
      return this.finishToken(types$1.backQuote)

    case 48: // '0'
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number
      if (this.options.ecmaVersion >= 6) {
        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number
        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number
      }

    // Anything else beginning with a digit is an integer, octal
    // number, or float.
    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9
      return this.readNumber(false)

    // Quotes produce strings.
    case 34: case 39: // '"', "'"
      return this.readString(code)

    // Operators are parsed inline in tiny state machines. '=' (61) is
    // often referred to. `finishOp` simply skips the amount of
    // characters it is given as second argument, and returns a token
    // of the type given by its first argument.
    case 47: // '/'
      return this.readToken_slash()

    case 37: case 42: // '%*'
      return this.readToken_mult_modulo_exp(code)

    case 124: case 38: // '|&'
      return this.readToken_pipe_amp(code)

    case 94: // '^'
      return this.readToken_caret()

    case 43: case 45: // '+-'
      return this.readToken_plus_min(code)

    case 60: case 62: // '<>'
      return this.readToken_lt_gt(code)

    case 61: case 33: // '=!'
      return this.readToken_eq_excl(code)

    case 63: // '?'
      return this.readToken_question()

    case 126: // '~'
      return this.finishOp(types$1.prefix, 1)

    case 35: // '#'
      return this.readToken_numberSign()
    }

    this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
  };

  pp.finishOp = function(type, size) {
    var str = this.input.slice(this.pos, this.pos + size);
    this.pos += size;
    return this.finishToken(type, str)
  };

  pp.readRegexp = function() {
    var escaped, inClass, start = this.pos;
    for (;;) {
      if (this.pos >= this.input.length) { this.raise(start, "Unterminated regular expression"); }
      var ch = this.input.charAt(this.pos);
      if (lineBreak.test(ch)) { this.raise(start, "Unterminated regular expression"); }
      if (!escaped) {
        if (ch === "[") { inClass = true; }
        else if (ch === "]" && inClass) { inClass = false; }
        else if (ch === "/" && !inClass) { break }
        escaped = ch === "\\";
      } else { escaped = false; }
      ++this.pos;
    }
    var pattern = this.input.slice(start, this.pos);
    ++this.pos;
    var flagsStart = this.pos;
    var flags = this.readWord1();
    if (this.containsEsc) { this.unexpected(flagsStart); }

    // Validate pattern
    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
    state.reset(start, pattern, flags);
    this.validateRegExpFlags(state);
    this.validateRegExpPattern(state);

    // Create Literal#value property value.
    var value = null;
    try {
      value = new RegExp(pattern, flags);
    } catch (e) {
      // ESTree requires null if it failed to instantiate RegExp object.
      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral
    }

    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})
  };

  // Read an integer in the given radix. Return null if zero digits
  // were read, the integer value otherwise. When `len` is given, this
  // will return `null` unless the integer has exactly `len` digits.

  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
    // `len` is used for character escape sequences. In that case, disallow separators.
    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;

    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)
    // and isn't fraction part nor exponent part. In that case, if the first digit
    // is zero then disallow separators.
    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;

    var start = this.pos, total = 0, lastCode = 0;
    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {
      var code = this.input.charCodeAt(this.pos), val = (void 0);

      if (allowSeparators && code === 95) {
        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"); }
        if (lastCode === 95) { this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"); }
        if (i === 0) { this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"); }
        lastCode = code;
        continue
      }

      if (code >= 97) { val = code - 97 + 10; } // a
      else if (code >= 65) { val = code - 65 + 10; } // A
      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9
      else { val = Infinity; }
      if (val >= radix) { break }
      lastCode = code;
      total = total * radix + val;
    }

    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"); }
    if (this.pos === start || len != null && this.pos - start !== len) { return null }

    return total
  };

  function stringToNumber(str, isLegacyOctalNumericLiteral) {
    if (isLegacyOctalNumericLiteral) {
      return parseInt(str, 8)
    }

    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.
    return parseFloat(str.replace(/_/g, ""))
  }

  function stringToBigInt(str) {
    if (typeof BigInt !== "function") {
      return null
    }

    // `BigInt(value)` throws syntax error if the string contains numeric separators.
    return BigInt(str.replace(/_/g, ""))
  }

  pp.readRadixNumber = function(radix) {
    var start = this.pos;
    this.pos += 2; // 0x
    var val = this.readInt(radix);
    if (val == null) { this.raise(this.start + 2, "Expected number in radix " + radix); }
    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
      val = stringToBigInt(this.input.slice(start, this.pos));
      ++this.pos;
    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
    return this.finishToken(types$1.num, val)
  };

  // Read an integer, octal integer, or floating-point number.

  pp.readNumber = function(startsWithDot) {
    var start = this.pos;
    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, "Invalid number"); }
    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
    if (octal && this.strict) { this.raise(start, "Invalid number"); }
    var next = this.input.charCodeAt(this.pos);
    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
      var val$1 = stringToBigInt(this.input.slice(start, this.pos));
      ++this.pos;
      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
      return this.finishToken(types$1.num, val$1)
    }
    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }
    if (next === 46 && !octal) { // '.'
      ++this.pos;
      this.readInt(10);
      next = this.input.charCodeAt(this.pos);
    }
    if ((next === 69 || next === 101) && !octal) { // 'eE'
      next = this.input.charCodeAt(++this.pos);
      if (next === 43 || next === 45) { ++this.pos; } // '+-'
      if (this.readInt(10) === null) { this.raise(start, "Invalid number"); }
    }
    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }

    var val = stringToNumber(this.input.slice(start, this.pos), octal);
    return this.finishToken(types$1.num, val)
  };

  // Read a string value, interpreting backslash-escapes.

  pp.readCodePoint = function() {
    var ch = this.input.charCodeAt(this.pos), code;

    if (ch === 123) { // '{'
      if (this.options.ecmaVersion < 6) { this.unexpected(); }
      var codePos = ++this.pos;
      code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
      ++this.pos;
      if (code > 0x10FFFF) { this.invalidStringToken(codePos, "Code point out of bounds"); }
    } else {
      code = this.readHexChar(4);
    }
    return code
  };

  pp.readString = function(quote) {
    var out = "", chunkStart = ++this.pos;
    for (;;) {
      if (this.pos >= this.input.length) { this.raise(this.start, "Unterminated string constant"); }
      var ch = this.input.charCodeAt(this.pos);
      if (ch === quote) { break }
      if (ch === 92) { // '\'
        out += this.input.slice(chunkStart, this.pos);
        out += this.readEscapedChar(false);
        chunkStart = this.pos;
      } else if (ch === 0x2028 || ch === 0x2029) {
        if (this.options.ecmaVersion < 10) { this.raise(this.start, "Unterminated string constant"); }
        ++this.pos;
        if (this.options.locations) {
          this.curLine++;
          this.lineStart = this.pos;
        }
      } else {
        if (isNewLine(ch)) { this.raise(this.start, "Unterminated string constant"); }
        ++this.pos;
      }
    }
    out += this.input.slice(chunkStart, this.pos++);
    return this.finishToken(types$1.string, out)
  };

  // Reads template string tokens.

  var INVALID_TEMPLATE_ESCAPE_ERROR = {};

  pp.tryReadTemplateToken = function() {
    this.inTemplateElement = true;
    try {
      this.readTmplToken();
    } catch (err) {
      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
        this.readInvalidTemplateToken();
      } else {
        throw err
      }
    }

    this.inTemplateElement = false;
  };

  pp.invalidStringToken = function(position, message) {
    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
      throw INVALID_TEMPLATE_ESCAPE_ERROR
    } else {
      this.raise(position, message);
    }
  };

  pp.readTmplToken = function() {
    var out = "", chunkStart = this.pos;
    for (;;) {
      if (this.pos >= this.input.length) { this.raise(this.start, "Unterminated template"); }
      var ch = this.input.charCodeAt(this.pos);
      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'
        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {
          if (ch === 36) {
            this.pos += 2;
            return this.finishToken(types$1.dollarBraceL)
          } else {
            ++this.pos;
            return this.finishToken(types$1.backQuote)
          }
        }
        out += this.input.slice(chunkStart, this.pos);
        return this.finishToken(types$1.template, out)
      }
      if (ch === 92) { // '\'
        out += this.input.slice(chunkStart, this.pos);
        out += this.readEscapedChar(true);
        chunkStart = this.pos;
      } else if (isNewLine(ch)) {
        out += this.input.slice(chunkStart, this.pos);
        ++this.pos;
        switch (ch) {
        case 13:
          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }
        case 10:
          out += "\n";
          break
        default:
          out += String.fromCharCode(ch);
          break
        }
        if (this.options.locations) {
          ++this.curLine;
          this.lineStart = this.pos;
        }
        chunkStart = this.pos;
      } else {
        ++this.pos;
      }
    }
  };

  // Reads a template token to search for the end, without validating any escape sequences
  pp.readInvalidTemplateToken = function() {
    for (; this.pos < this.input.length; this.pos++) {
      switch (this.input[this.pos]) {
      case "\\":
        ++this.pos;
        break

      case "$":
        if (this.input[this.pos + 1] !== "{") {
          break
        }

      // falls through
      case "`":
        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))

      // no default
      }
    }
    this.raise(this.start, "Unterminated template");
  };

  // Used to read escaped characters

  pp.readEscapedChar = function(inTemplate) {
    var ch = this.input.charCodeAt(++this.pos);
    ++this.pos;
    switch (ch) {
    case 110: return "\n" // 'n' -> '\n'
    case 114: return "\r" // 'r' -> '\r'
    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'
    case 117: return codePointToString(this.readCodePoint()) // 'u'
    case 116: return "\t" // 't' -> '\t'
    case 98: return "\b" // 'b' -> '\b'
    case 118: return "\u000b" // 'v' -> '\u000b'
    case 102: return "\f" // 'f' -> '\f'
    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\r\n'
    case 10: // ' \n'
      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }
      return ""
    case 56:
    case 57:
      if (this.strict) {
        this.invalidStringToken(
          this.pos - 1,
          "Invalid escape sequence"
        );
      }
      if (inTemplate) {
        var codePos = this.pos - 1;

        this.invalidStringToken(
          codePos,
          "Invalid escape sequence in template string"
        );
      }
    default:
      if (ch >= 48 && ch <= 55) {
        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
        var octal = parseInt(octalStr, 8);
        if (octal > 255) {
          octalStr = octalStr.slice(0, -1);
          octal = parseInt(octalStr, 8);
        }
        this.pos += octalStr.length - 1;
        ch = this.input.charCodeAt(this.pos);
        if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
          this.invalidStringToken(
            this.pos - 1 - octalStr.length,
            inTemplate
              ? "Octal literal in template string"
              : "Octal literal in strict mode"
          );
        }
        return String.fromCharCode(octal)
      }
      if (isNewLine(ch)) {
        // Unicode new line characters after \ get removed from output in both
        // template literals and strings
        return ""
      }
      return String.fromCharCode(ch)
    }
  };

  // Used to read character escape sequences ('\x', '\u', '\U').

  pp.readHexChar = function(len) {
    var codePos = this.pos;
    var n = this.readInt(16, len);
    if (n === null) { this.invalidStringToken(codePos, "Bad character escape sequence"); }
    return n
  };

  // Read an identifier, and return it as a string. Sets `this.containsEsc`
  // to whether the word contained a '\u' escape.
  //
  // Incrementally adds only escaped chars, adding other chunks as-is
  // as a micro-optimization.

  pp.readWord1 = function() {
    this.containsEsc = false;
    var word = "", first = true, chunkStart = this.pos;
    var astral = this.options.ecmaVersion >= 6;
    while (this.pos < this.input.length) {
      var ch = this.fullCharCodeAtPos();
      if (isIdentifierChar(ch, astral)) {
        this.pos += ch <= 0xffff ? 1 : 2;
      } else if (ch === 92) { // "\"
        this.containsEsc = true;
        word += this.input.slice(chunkStart, this.pos);
        var escStart = this.pos;
        if (this.input.charCodeAt(++this.pos) !== 117) // "u"
          { this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"); }
        ++this.pos;
        var esc = this.readCodePoint();
        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))
          { this.invalidStringToken(escStart, "Invalid Unicode escape"); }
        word += codePointToString(esc);
        chunkStart = this.pos;
      } else {
        break
      }
      first = false;
    }
    return word + this.input.slice(chunkStart, this.pos)
  };

  // Read an identifier or keyword token. Will check for reserved
  // words when necessary.

  pp.readWord = function() {
    var word = this.readWord1();
    var type = types$1.name;
    if (this.keywords.test(word)) {
      type = keywords[word];
    }
    return this.finishToken(type, word)
  };

  // Acorn is a tiny, fast JavaScript parser written in JavaScript.
  //
  // Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and
  // various contributors and released under an MIT license.
  //
  // Git repositories for Acorn are available at
  //
  //     http://marijnhaverbeke.nl/git/acorn
  //     https://github.com/acornjs/acorn.git
  //
  // Please use the [github bug tracker][ghbt] to report issues.
  //
  // [ghbt]: https://github.com/acornjs/acorn/issues
  //
  // [walk]: util/walk.js


  var version = "8.10.0";

  Parser.acorn = {
    Parser: Parser,
    version: version,
    defaultOptions: defaultOptions,
    Position: Position,
    SourceLocation: SourceLocation,
    getLineInfo: getLineInfo,
    Node: Node,
    TokenType: TokenType,
    tokTypes: types$1,
    keywordTypes: keywords,
    TokContext: TokContext,
    tokContexts: types,
    isIdentifierChar: isIdentifierChar,
    isIdentifierStart: isIdentifierStart,
    Token: Token,
    isNewLine: isNewLine,
    lineBreak: lineBreak,
    lineBreakG: lineBreakG,
    nonASCIIwhitespace: nonASCIIwhitespace
  };

  // The main exported interface (under `self.acorn` when in the
  // browser) is a `parse` function that takes a code string and
  // returns an abstract syntax tree as specified by [Mozilla parser
  // API][api].
  //
  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API

  function parse(input, options) {
    return Parser.parse(input, options)
  }

  // This function tries to parse a single expression at a given
  // offset in a string. Useful for parsing mixed-language formats
  // that embed JavaScript expressions.

  function parseExpressionAt(input, pos, options) {
    return Parser.parseExpressionAt(input, pos, options)
  }

  // Acorn is organized as a tokenizer and a recursive-descent parser.
  // The `tokenizer` export provides an interface to the tokenizer.

  function tokenizer(input, options) {
    return Parser.tokenizer(input, options)
  }

  exports.Node = Node;
  exports.Parser = Parser;
  exports.Position = Position;
  exports.SourceLocation = SourceLocation;
  exports.TokContext = TokContext;
  exports.Token = Token;
  exports.TokenType = TokenType;
  exports.defaultOptions = defaultOptions;
  exports.getLineInfo = getLineInfo;
  exports.isIdentifierChar = isIdentifierChar;
  exports.isIdentifierStart = isIdentifierStart;
  exports.isNewLine = isNewLine;
  exports.keywordTypes = keywords;
  exports.lineBreak = lineBreak;
  exports.lineBreakG = lineBreakG;
  exports.nonASCIIwhitespace = nonASCIIwhitespace;
  exports.parse = parse;
  exports.parseExpressionAt = parseExpressionAt;
  exports.tokContexts = types;
  exports.tokTypes = types$1;
  exports.tokenizer = tokenizer;
  exports.version = version;

}));


/***/ }),

/***/ 6785:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const ANY = Symbol('SemVer ANY')
// hoisted class for cyclic dependency
class Comparator {
  static get ANY () {
    return ANY
  }

  constructor (comp, options) {
    options = parseOptions(options)

    if (comp instanceof Comparator) {
      if (comp.loose === !!options.loose) {
        return comp
      } else {
        comp = comp.value
      }
    }

    comp = comp.trim().split(/\s+/).join(' ')
    debug('comparator', comp, options)
    this.options = options
    this.loose = !!options.loose
    this.parse(comp)

    if (this.semver === ANY) {
      this.value = ''
    } else {
      this.value = this.operator + this.semver.version
    }

    debug('comp', this)
  }

  parse (comp) {
    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
    const m = comp.match(r)

    if (!m) {
      throw new TypeError(`Invalid comparator: ${comp}`)
    }

    this.operator = m[1] !== undefined ? m[1] : ''
    if (this.operator === '=') {
      this.operator = ''
    }

    // if it literally is just '>' or '' then allow anything.
    if (!m[2]) {
      this.semver = ANY
    } else {
      this.semver = new SemVer(m[2], this.options.loose)
    }
  }

  toString () {
    return this.value
  }

  test (version) {
    debug('Comparator.test', version, this.options.loose)

    if (this.semver === ANY || version === ANY) {
      return true
    }

    if (typeof version === 'string') {
      try {
        version = new SemVer(version, this.options)
      } catch (er) {
        return false
      }
    }

    return cmp(version, this.operator, this.semver, this.options)
  }

  intersects (comp, options) {
    if (!(comp instanceof Comparator)) {
      throw new TypeError('a Comparator is required')
    }

    if (this.operator === '') {
      if (this.value === '') {
        return true
      }
      return new Range(comp.value, options).test(this.value)
    } else if (comp.operator === '') {
      if (comp.value === '') {
        return true
      }
      return new Range(this.value, options).test(comp.semver)
    }

    options = parseOptions(options)

    // Special cases where nothing can possibly be lower
    if (options.includePrerelease &&
      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {
      return false
    }
    if (!options.includePrerelease &&
      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {
      return false
    }

    // Same direction increasing (> or >=)
    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {
      return true
    }
    // Same direction decreasing (< or <=)
    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {
      return true
    }
    // same SemVer and both sides are inclusive (<= or >=)
    if (
      (this.semver.version === comp.semver.version) &&
      this.operator.includes('=') && comp.operator.includes('=')) {
      return true
    }
    // opposite directions less than
    if (cmp(this.semver, '<', comp.semver, options) &&
      this.operator.startsWith('>') && comp.operator.startsWith('<')) {
      return true
    }
    // opposite directions greater than
    if (cmp(this.semver, '>', comp.semver, options) &&
      this.operator.startsWith('<') && comp.operator.startsWith('>')) {
      return true
    }
    return false
  }
}

module.exports = Comparator

const parseOptions = __nccwpck_require__(7774)
const { safeRe: re, t } = __nccwpck_require__(9935)
const cmp = __nccwpck_require__(2371)
const debug = __nccwpck_require__(4903)
const SemVer = __nccwpck_require__(7822)
const Range = __nccwpck_require__(9269)


/***/ }),

/***/ 9269:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// hoisted class for cyclic dependency
class Range {
  constructor (range, options) {
    options = parseOptions(options)

    if (range instanceof Range) {
      if (
        range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease
      ) {
        return range
      } else {
        return new Range(range.raw, options)
      }
    }

    if (range instanceof Comparator) {
      // just put it in the set and return
      this.raw = range.value
      this.set = [[range]]
      this.format()
      return this
    }

    this.options = options
    this.loose = !!options.loose
    this.includePrerelease = !!options.includePrerelease

    // First reduce all whitespace as much as possible so we do not have to rely
    // on potentially slow regexes like \s*. This is then stored and used for
    // future error messages as well.
    this.raw = range
      .trim()
      .split(/\s+/)
      .join(' ')

    // First, split on ||
    this.set = this.raw
      .split('||')
      // map the range to a 2d array of comparators
      .map(r => this.parseRange(r))
      // throw out any comparator lists that are empty
      // this generally means that it was not a valid range, which is allowed
      // in loose mode, but will still throw if the WHOLE range is invalid.
      .filter(c => c.length)

    if (!this.set.length) {
      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)
    }

    // if we have any that are not the null set, throw out null sets.
    if (this.set.length > 1) {
      // keep the first one, in case they're all null sets
      const first = this.set[0]
      this.set = this.set.filter(c => !isNullSet(c[0]))
      if (this.set.length === 0) {
        this.set = [first]
      } else if (this.set.length > 1) {
        // if we have any that are *, then the range is just *
        for (const c of this.set) {
          if (c.length === 1 && isAny(c[0])) {
            this.set = [c]
            break
          }
        }
      }
    }

    this.format()
  }

  format () {
    this.range = this.set
      .map((comps) => comps.join(' ').trim())
      .join('||')
      .trim()
    return this.range
  }

  toString () {
    return this.range
  }

  parseRange (range) {
    // memoize range parsing for performance.
    // this is a very hot path, and fully deterministic.
    const memoOpts =
      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |
      (this.options.loose && FLAG_LOOSE)
    const memoKey = memoOpts + ':' + range
    const cached = cache.get(memoKey)
    if (cached) {
      return cached
    }

    const loose = this.options.loose
    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]
    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))
    debug('hyphen replace', range)

    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)
    debug('comparator trim', range)

    // `~ 1.2.3` => `~1.2.3`
    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)
    debug('tilde trim', range)

    // `^ 1.2.3` => `^1.2.3`
    range = range.replace(re[t.CARETTRIM], caretTrimReplace)
    debug('caret trim', range)

    // At this point, the range is completely trimmed and
    // ready to be split into comparators.

    let rangeList = range
      .split(' ')
      .map(comp => parseComparator(comp, this.options))
      .join(' ')
      .split(/\s+/)
      // >=0.0.0 is equivalent to *
      .map(comp => replaceGTE0(comp, this.options))

    if (loose) {
      // in loose mode, throw out any that are not valid comparators
      rangeList = rangeList.filter(comp => {
        debug('loose invalid filter', comp, this.options)
        return !!comp.match(re[t.COMPARATORLOOSE])
      })
    }
    debug('range list', rangeList)

    // if any comparators are the null set, then replace with JUST null set
    // if more than one comparator, remove any * comparators
    // also, don't include the same comparator more than once
    const rangeMap = new Map()
    const comparators = rangeList.map(comp => new Comparator(comp, this.options))
    for (const comp of comparators) {
      if (isNullSet(comp)) {
        return [comp]
      }
      rangeMap.set(comp.value, comp)
    }
    if (rangeMap.size > 1 && rangeMap.has('')) {
      rangeMap.delete('')
    }

    const result = [...rangeMap.values()]
    cache.set(memoKey, result)
    return result
  }

  intersects (range, options) {
    if (!(range instanceof Range)) {
      throw new TypeError('a Range is required')
    }

    return this.set.some((thisComparators) => {
      return (
        isSatisfiable(thisComparators, options) &&
        range.set.some((rangeComparators) => {
          return (
            isSatisfiable(rangeComparators, options) &&
            thisComparators.every((thisComparator) => {
              return rangeComparators.every((rangeComparator) => {
                return thisComparator.intersects(rangeComparator, options)
              })
            })
          )
        })
      )
    })
  }

  // if ANY of the sets match ALL of its comparators, then pass
  test (version) {
    if (!version) {
      return false
    }

    if (typeof version === 'string') {
      try {
        version = new SemVer(version, this.options)
      } catch (er) {
        return false
      }
    }

    for (let i = 0; i < this.set.length; i++) {
      if (testSet(this.set[i], version, this.options)) {
        return true
      }
    }
    return false
  }
}

module.exports = Range

const LRU = __nccwpck_require__(7129)
const cache = new LRU({ max: 1000 })

const parseOptions = __nccwpck_require__(7774)
const Comparator = __nccwpck_require__(6785)
const debug = __nccwpck_require__(4903)
const SemVer = __nccwpck_require__(7822)
const {
  safeRe: re,
  t,
  comparatorTrimReplace,
  tildeTrimReplace,
  caretTrimReplace,
} = __nccwpck_require__(9935)
const { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = __nccwpck_require__(1846)

const isNullSet = c => c.value === '<0.0.0-0'
const isAny = c => c.value === ''

// take a set of comparators and determine whether there
// exists a version which can satisfy it
const isSatisfiable = (comparators, options) => {
  let result = true
  const remainingComparators = comparators.slice()
  let testComparator = remainingComparators.pop()

  while (result && remainingComparators.length) {
    result = remainingComparators.every((otherComparator) => {
      return testComparator.intersects(otherComparator, options)
    })

    testComparator = remainingComparators.pop()
  }

  return result
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
const parseComparator = (comp, options) => {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

const isX = id => !id || id.toLowerCase() === 'x' || id === '*'

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0
// ~0.0.1 --> >=0.0.1 <0.1.0-0
const replaceTildes = (comp, options) => {
  return comp
    .trim()
    .split(/\s+/)
    .map((c) => replaceTilde(c, options))
    .join(' ')
}

const replaceTilde = (comp, options) => {
  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]
  return comp.replace(r, (_, M, m, p, pr) => {
    debug('tilde', comp, _, M, m, p, pr)
    let ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0-0
      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = `>=${M}.${m}.${p}-${pr
      } <${M}.${+m + 1}.0-0`
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0-0
      ret = `>=${M}.${m}.${p
      } <${M}.${+m + 1}.0-0`
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0
// ^1.2.3 --> >=1.2.3 <2.0.0-0
// ^1.2.0 --> >=1.2.0 <2.0.0-0
// ^0.0.1 --> >=0.0.1 <0.0.2-0
// ^0.1.0 --> >=0.1.0 <0.2.0-0
const replaceCarets = (comp, options) => {
  return comp
    .trim()
    .split(/\s+/)
    .map((c) => replaceCaret(c, options))
    .join(' ')
}

const replaceCaret = (comp, options) => {
  debug('caret', comp, options)
  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]
  const z = options.includePrerelease ? '-0' : ''
  return comp.replace(r, (_, M, m, p, pr) => {
    debug('caret', comp, _, M, m, p, pr)
    let ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`
    } else if (isX(p)) {
      if (M === '0') {
        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`
      } else {
        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = `>=${M}.${m}.${p}-${pr
          } <${M}.${m}.${+p + 1}-0`
        } else {
          ret = `>=${M}.${m}.${p}-${pr
          } <${M}.${+m + 1}.0-0`
        }
      } else {
        ret = `>=${M}.${m}.${p}-${pr
        } <${+M + 1}.0.0-0`
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = `>=${M}.${m}.${p
          }${z} <${M}.${m}.${+p + 1}-0`
        } else {
          ret = `>=${M}.${m}.${p
          }${z} <${M}.${+m + 1}.0-0`
        }
      } else {
        ret = `>=${M}.${m}.${p
        } <${+M + 1}.0.0-0`
      }
    }

    debug('caret return', ret)
    return ret
  })
}

const replaceXRanges = (comp, options) => {
  debug('replaceXRanges', comp, options)
  return comp
    .split(/\s+/)
    .map((c) => replaceXRange(c, options))
    .join(' ')
}

const replaceXRange = (comp, options) => {
  comp = comp.trim()
  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]
  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    const xM = isX(M)
    const xm = xM || isX(m)
    const xp = xm || isX(p)
    const anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    // if we're including prereleases in the match, then we need
    // to fix this to -0, the lowest possible prerelease value
    pr = options.includePrerelease ? '-0' : ''

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0-0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      if (gtlt === '<') {
        pr = '-0'
      }

      ret = `${gtlt + M}.${m}.${p}${pr}`
    } else if (xm) {
      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`
    } else if (xp) {
      ret = `>=${M}.${m}.0${pr
      } <${M}.${+m + 1}.0-0`
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
const replaceStars = (comp, options) => {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp
    .trim()
    .replace(re[t.STAR], '')
}

const replaceGTE0 = (comp, options) => {
  debug('replaceGTE0', comp, options)
  return comp
    .trim()
    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')
}

// This function is passed to string.replace(re[t.HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0-0
const hyphenReplace = incPr => ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) => {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = `>=${fM}.0.0${incPr ? '-0' : ''}`
  } else if (isX(fp)) {
    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`
  } else if (fpr) {
    from = `>=${from}`
  } else {
    from = `>=${from}${incPr ? '-0' : ''}`
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = `<${+tM + 1}.0.0-0`
  } else if (isX(tp)) {
    to = `<${tM}.${+tm + 1}.0-0`
  } else if (tpr) {
    to = `<=${tM}.${tm}.${tp}-${tpr}`
  } else if (incPr) {
    to = `<${tM}.${tm}.${+tp + 1}-0`
  } else {
    to = `<=${to}`
  }

  return `${from} ${to}`.trim()
}

const testSet = (set, version, options) => {
  for (let i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (let i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === Comparator.ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        const allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}


/***/ }),

/***/ 7822:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(4903)
const { MAX_LENGTH, MAX_SAFE_INTEGER } = __nccwpck_require__(1846)
const { safeRe: re, t } = __nccwpck_require__(9935)

const parseOptions = __nccwpck_require__(7774)
const { compareIdentifiers } = __nccwpck_require__(5444)
class SemVer {
  constructor (version, options) {
    options = parseOptions(options)

    if (version instanceof SemVer) {
      if (version.loose === !!options.loose &&
          version.includePrerelease === !!options.includePrerelease) {
        return version
      } else {
        version = version.version
      }
    } else if (typeof version !== 'string') {
      throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version}".`)
    }

    if (version.length > MAX_LENGTH) {
      throw new TypeError(
        `version is longer than ${MAX_LENGTH} characters`
      )
    }

    debug('SemVer', version, options)
    this.options = options
    this.loose = !!options.loose
    // this isn't actually relevant for versions, but keep it so that we
    // don't run into trouble passing this.options around.
    this.includePrerelease = !!options.includePrerelease

    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])

    if (!m) {
      throw new TypeError(`Invalid Version: ${version}`)
    }

    this.raw = version

    // these are actually numbers
    this.major = +m[1]
    this.minor = +m[2]
    this.patch = +m[3]

    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
      throw new TypeError('Invalid major version')
    }

    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
      throw new TypeError('Invalid minor version')
    }

    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
      throw new TypeError('Invalid patch version')
    }

    // numberify any prerelease numeric ids
    if (!m[4]) {
      this.prerelease = []
    } else {
      this.prerelease = m[4].split('.').map((id) => {
        if (/^[0-9]+$/.test(id)) {
          const num = +id
          if (num >= 0 && num < MAX_SAFE_INTEGER) {
            return num
          }
        }
        return id
      })
    }

    this.build = m[5] ? m[5].split('.') : []
    this.format()
  }

  format () {
    this.version = `${this.major}.${this.minor}.${this.patch}`
    if (this.prerelease.length) {
      this.version += `-${this.prerelease.join('.')}`
    }
    return this.version
  }

  toString () {
    return this.version
  }

  compare (other) {
    debug('SemVer.compare', this.version, this.options, other)
    if (!(other instanceof SemVer)) {
      if (typeof other === 'string' && other === this.version) {
        return 0
      }
      other = new SemVer(other, this.options)
    }

    if (other.version === this.version) {
      return 0
    }

    return this.compareMain(other) || this.comparePre(other)
  }

  compareMain (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    return (
      compareIdentifiers(this.major, other.major) ||
      compareIdentifiers(this.minor, other.minor) ||
      compareIdentifiers(this.patch, other.patch)
    )
  }

  comparePre (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    // NOT having a prerelease is > having one
    if (this.prerelease.length && !other.prerelease.length) {
      return -1
    } else if (!this.prerelease.length && other.prerelease.length) {
      return 1
    } else if (!this.prerelease.length && !other.prerelease.length) {
      return 0
    }

    let i = 0
    do {
      const a = this.prerelease[i]
      const b = other.prerelease[i]
      debug('prerelease compare', i, a, b)
      if (a === undefined && b === undefined) {
        return 0
      } else if (b === undefined) {
        return 1
      } else if (a === undefined) {
        return -1
      } else if (a === b) {
        continue
      } else {
        return compareIdentifiers(a, b)
      }
    } while (++i)
  }

  compareBuild (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    let i = 0
    do {
      const a = this.build[i]
      const b = other.build[i]
      debug('prerelease compare', i, a, b)
      if (a === undefined && b === undefined) {
        return 0
      } else if (b === undefined) {
        return 1
      } else if (a === undefined) {
        return -1
      } else if (a === b) {
        continue
      } else {
        return compareIdentifiers(a, b)
      }
    } while (++i)
  }

  // preminor will bump the version up to the next minor release, and immediately
  // down to pre-release. premajor and prepatch work the same way.
  inc (release, identifier, identifierBase) {
    switch (release) {
      case 'premajor':
        this.prerelease.length = 0
        this.patch = 0
        this.minor = 0
        this.major++
        this.inc('pre', identifier, identifierBase)
        break
      case 'preminor':
        this.prerelease.length = 0
        this.patch = 0
        this.minor++
        this.inc('pre', identifier, identifierBase)
        break
      case 'prepatch':
        // If this is already a prerelease, it will bump to the next version
        // drop any prereleases that might already exist, since they are not
        // relevant at this point.
        this.prerelease.length = 0
        this.inc('patch', identifier, identifierBase)
        this.inc('pre', identifier, identifierBase)
        break
      // If the input is a non-prerelease version, this acts the same as
      // prepatch.
      case 'prerelease':
        if (this.prerelease.length === 0) {
          this.inc('patch', identifier, identifierBase)
        }
        this.inc('pre', identifier, identifierBase)
        break

      case 'major':
        // If this is a pre-major version, bump up to the same major version.
        // Otherwise increment major.
        // 1.0.0-5 bumps to 1.0.0
        // 1.1.0 bumps to 2.0.0
        if (
          this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0
        ) {
          this.major++
        }
        this.minor = 0
        this.patch = 0
        this.prerelease = []
        break
      case 'minor':
        // If this is a pre-minor version, bump up to the same minor version.
        // Otherwise increment minor.
        // 1.2.0-5 bumps to 1.2.0
        // 1.2.1 bumps to 1.3.0
        if (this.patch !== 0 || this.prerelease.length === 0) {
          this.minor++
        }
        this.patch = 0
        this.prerelease = []
        break
      case 'patch':
        // If this is not a pre-release version, it will increment the patch.
        // If it is a pre-release it will bump up to the same patch version.
        // 1.2.0-5 patches to 1.2.0
        // 1.2.0 patches to 1.2.1
        if (this.prerelease.length === 0) {
          this.patch++
        }
        this.prerelease = []
        break
      // This probably shouldn't be used publicly.
      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
      case 'pre': {
        const base = Number(identifierBase) ? 1 : 0

        if (!identifier && identifierBase === false) {
          throw new Error('invalid increment argument: identifier is empty')
        }

        if (this.prerelease.length === 0) {
          this.prerelease = [base]
        } else {
          let i = this.prerelease.length
          while (--i >= 0) {
            if (typeof this.prerelease[i] === 'number') {
              this.prerelease[i]++
              i = -2
            }
          }
          if (i === -1) {
            // didn't increment anything
            if (identifier === this.prerelease.join('.') && identifierBase === false) {
              throw new Error('invalid increment argument: identifier already exists')
            }
            this.prerelease.push(base)
          }
        }
        if (identifier) {
          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
          let prerelease = [identifier, base]
          if (identifierBase === false) {
            prerelease = [identifier]
          }
          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
            if (isNaN(this.prerelease[1])) {
              this.prerelease = prerelease
            }
          } else {
            this.prerelease = prerelease
          }
        }
        break
      }
      default:
        throw new Error(`invalid increment argument: ${release}`)
    }
    this.raw = this.format()
    if (this.build.length) {
      this.raw += `+${this.build.join('.')}`
    }
    return this
  }
}

module.exports = SemVer


/***/ }),

/***/ 7493:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(5860)
const clean = (version, options) => {
  const s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}
module.exports = clean


/***/ }),

/***/ 2371:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const eq = __nccwpck_require__(7478)
const neq = __nccwpck_require__(5056)
const gt = __nccwpck_require__(4277)
const gte = __nccwpck_require__(4115)
const lt = __nccwpck_require__(5657)
const lte = __nccwpck_require__(5694)

const cmp = (a, op, b, loose) => {
  switch (op) {
    case '===':
      if (typeof a === 'object') {
        a = a.version
      }
      if (typeof b === 'object') {
        b = b.version
      }
      return a === b

    case '!==':
      if (typeof a === 'object') {
        a = a.version
      }
      if (typeof b === 'object') {
        b = b.version
      }
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError(`Invalid operator: ${op}`)
  }
}
module.exports = cmp


/***/ }),

/***/ 4353:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const parse = __nccwpck_require__(5860)
const { safeRe: re, t } = __nccwpck_require__(9935)

const coerce = (version, options) => {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version === 'number') {
    version = String(version)
  }

  if (typeof version !== 'string') {
    return null
  }

  options = options || {}

  let match = null
  if (!options.rtl) {
    match = version.match(re[t.COERCE])
  } else {
    // Find the right-most coercible string that does not share
    // a terminus with a more left-ward coercible string.
    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'
    //
    // Walk through the string checking with a /g regexp
    // Manually set the index so as to pick up overlapping matches.
    // Stop when we get a match that ends at the string end, since no
    // coercible string can be more right-ward without the same terminus.
    let next
    while ((next = re[t.COERCERTL].exec(version)) &&
        (!match || match.index + match[0].length !== version.length)
    ) {
      if (!match ||
            next.index + next[0].length !== match.index + match[0].length) {
        match = next
      }
      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length
    }
    // leave it in a clean state
    re[t.COERCERTL].lastIndex = -1
  }

  if (match === null) {
    return null
  }

  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)
}
module.exports = coerce


/***/ }),

/***/ 5699:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const compareBuild = (a, b, loose) => {
  const versionA = new SemVer(a, loose)
  const versionB = new SemVer(b, loose)
  return versionA.compare(versionB) || versionA.compareBuild(versionB)
}
module.exports = compareBuild


/***/ }),

/***/ 2056:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const compareLoose = (a, b) => compare(a, b, true)
module.exports = compareLoose


/***/ }),

/***/ 5632:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const compare = (a, b, loose) =>
  new SemVer(a, loose).compare(new SemVer(b, loose))

module.exports = compare


/***/ }),

/***/ 4658:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(5860)

const diff = (version1, version2) => {
  const v1 = parse(version1, null, true)
  const v2 = parse(version2, null, true)
  const comparison = v1.compare(v2)

  if (comparison === 0) {
    return null
  }

  const v1Higher = comparison > 0
  const highVersion = v1Higher ? v1 : v2
  const lowVersion = v1Higher ? v2 : v1
  const highHasPre = !!highVersion.prerelease.length
  const lowHasPre = !!lowVersion.prerelease.length

  if (lowHasPre && !highHasPre) {
    // Going from prerelease -> no prerelease requires some special casing

    // If the low version has only a major, then it will always be a major
    // Some examples:
    // 1.0.0-1 -> 1.0.0
    // 1.0.0-1 -> 1.1.1
    // 1.0.0-1 -> 2.0.0
    if (!lowVersion.patch && !lowVersion.minor) {
      return 'major'
    }

    // Otherwise it can be determined by checking the high version

    if (highVersion.patch) {
      // anything higher than a patch bump would result in the wrong version
      return 'patch'
    }

    if (highVersion.minor) {
      // anything higher than a minor bump would result in the wrong version
      return 'minor'
    }

    // bumping major/minor/patch all have same result
    return 'major'
  }

  // add the `pre` prefix if we are going to a prerelease version
  const prefix = highHasPre ? 'pre' : ''

  if (v1.major !== v2.major) {
    return prefix + 'major'
  }

  if (v1.minor !== v2.minor) {
    return prefix + 'minor'
  }

  if (v1.patch !== v2.patch) {
    return prefix + 'patch'
  }

  // high and low are preleases
  return 'prerelease'
}

module.exports = diff


/***/ }),

/***/ 7478:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const eq = (a, b, loose) => compare(a, b, loose) === 0
module.exports = eq


/***/ }),

/***/ 4277:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const gt = (a, b, loose) => compare(a, b, loose) > 0
module.exports = gt


/***/ }),

/***/ 4115:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const gte = (a, b, loose) => compare(a, b, loose) >= 0
module.exports = gte


/***/ }),

/***/ 3349:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)

const inc = (version, release, options, identifier, identifierBase) => {
  if (typeof (options) === 'string') {
    identifierBase = identifier
    identifier = options
    options = undefined
  }

  try {
    return new SemVer(
      version instanceof SemVer ? version.version : version,
      options
    ).inc(release, identifier, identifierBase).version
  } catch (er) {
    return null
  }
}
module.exports = inc


/***/ }),

/***/ 5657:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const lt = (a, b, loose) => compare(a, b, loose) < 0
module.exports = lt


/***/ }),

/***/ 5694:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const lte = (a, b, loose) => compare(a, b, loose) <= 0
module.exports = lte


/***/ }),

/***/ 3335:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const major = (a, loose) => new SemVer(a, loose).major
module.exports = major


/***/ }),

/***/ 7534:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const minor = (a, loose) => new SemVer(a, loose).minor
module.exports = minor


/***/ }),

/***/ 5056:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const neq = (a, b, loose) => compare(a, b, loose) !== 0
module.exports = neq


/***/ }),

/***/ 5860:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const parse = (version, options, throwErrors = false) => {
  if (version instanceof SemVer) {
    return version
  }
  try {
    return new SemVer(version, options)
  } catch (er) {
    if (!throwErrors) {
      return null
    }
    throw er
  }
}

module.exports = parse


/***/ }),

/***/ 6873:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const patch = (a, loose) => new SemVer(a, loose).patch
module.exports = patch


/***/ }),

/***/ 8174:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(5860)
const prerelease = (version, options) => {
  const parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}
module.exports = prerelease


/***/ }),

/***/ 4033:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(5632)
const rcompare = (a, b, loose) => compare(b, a, loose)
module.exports = rcompare


/***/ }),

/***/ 7142:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compareBuild = __nccwpck_require__(5699)
const rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))
module.exports = rsort


/***/ }),

/***/ 5012:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9269)
const satisfies = (version, range, options) => {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}
module.exports = satisfies


/***/ }),

/***/ 9326:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compareBuild = __nccwpck_require__(5699)
const sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))
module.exports = sort


/***/ }),

/***/ 7047:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(5860)
const valid = (version, options) => {
  const v = parse(version, options)
  return v ? v.version : null
}
module.exports = valid


/***/ }),

/***/ 1682:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// just pre-load all the stuff that index.js lazily exports
const internalRe = __nccwpck_require__(9935)
const constants = __nccwpck_require__(1846)
const SemVer = __nccwpck_require__(7822)
const identifiers = __nccwpck_require__(5444)
const parse = __nccwpck_require__(5860)
const valid = __nccwpck_require__(7047)
const clean = __nccwpck_require__(7493)
const inc = __nccwpck_require__(3349)
const diff = __nccwpck_require__(4658)
const major = __nccwpck_require__(3335)
const minor = __nccwpck_require__(7534)
const patch = __nccwpck_require__(6873)
const prerelease = __nccwpck_require__(8174)
const compare = __nccwpck_require__(5632)
const rcompare = __nccwpck_require__(4033)
const compareLoose = __nccwpck_require__(2056)
const compareBuild = __nccwpck_require__(5699)
const sort = __nccwpck_require__(9326)
const rsort = __nccwpck_require__(7142)
const gt = __nccwpck_require__(4277)
const lt = __nccwpck_require__(5657)
const eq = __nccwpck_require__(7478)
const neq = __nccwpck_require__(5056)
const gte = __nccwpck_require__(4115)
const lte = __nccwpck_require__(5694)
const cmp = __nccwpck_require__(2371)
const coerce = __nccwpck_require__(4353)
const Comparator = __nccwpck_require__(6785)
const Range = __nccwpck_require__(9269)
const satisfies = __nccwpck_require__(5012)
const toComparators = __nccwpck_require__(5208)
const maxSatisfying = __nccwpck_require__(1848)
const minSatisfying = __nccwpck_require__(4802)
const minVersion = __nccwpck_require__(7164)
const validRange = __nccwpck_require__(9812)
const outside = __nccwpck_require__(6162)
const gtr = __nccwpck_require__(1204)
const ltr = __nccwpck_require__(4637)
const intersects = __nccwpck_require__(2935)
const simplifyRange = __nccwpck_require__(9049)
const subset = __nccwpck_require__(8527)
module.exports = {
  parse,
  valid,
  clean,
  inc,
  diff,
  major,
  minor,
  patch,
  prerelease,
  compare,
  rcompare,
  compareLoose,
  compareBuild,
  sort,
  rsort,
  gt,
  lt,
  eq,
  neq,
  gte,
  lte,
  cmp,
  coerce,
  Comparator,
  Range,
  satisfies,
  toComparators,
  maxSatisfying,
  minSatisfying,
  minVersion,
  validRange,
  outside,
  gtr,
  ltr,
  intersects,
  simplifyRange,
  subset,
  SemVer,
  re: internalRe.re,
  src: internalRe.src,
  tokens: internalRe.t,
  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
  RELEASE_TYPES: constants.RELEASE_TYPES,
  compareIdentifiers: identifiers.compareIdentifiers,
  rcompareIdentifiers: identifiers.rcompareIdentifiers,
}


/***/ }),

/***/ 1846:
/***/ ((module) => {

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
const SEMVER_SPEC_VERSION = '2.0.0'

const MAX_LENGTH = 256
const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
/* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
const MAX_SAFE_COMPONENT_LENGTH = 16

// Max safe length for a build identifier. The max length minus 6 characters for
// the shortest version with a build 0.0.0+BUILD.
const MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6

const RELEASE_TYPES = [
  'major',
  'premajor',
  'minor',
  'preminor',
  'patch',
  'prepatch',
  'prerelease',
]

module.exports = {
  MAX_LENGTH,
  MAX_SAFE_COMPONENT_LENGTH,
  MAX_SAFE_BUILD_LENGTH,
  MAX_SAFE_INTEGER,
  RELEASE_TYPES,
  SEMVER_SPEC_VERSION,
  FLAG_INCLUDE_PRERELEASE: 0b001,
  FLAG_LOOSE: 0b010,
}


/***/ }),

/***/ 4903:
/***/ ((module) => {

const debug = (
  typeof process === 'object' &&
  process.env &&
  process.env.NODE_DEBUG &&
  /\bsemver\b/i.test(process.env.NODE_DEBUG)
) ? (...args) => console.error('SEMVER', ...args)
  : () => {}

module.exports = debug


/***/ }),

/***/ 5444:
/***/ ((module) => {

const numeric = /^[0-9]+$/
const compareIdentifiers = (a, b) => {
  const anum = numeric.test(a)
  const bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

const rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)

module.exports = {
  compareIdentifiers,
  rcompareIdentifiers,
}


/***/ }),

/***/ 7774:
/***/ ((module) => {

// parse out just the options we care about
const looseOption = Object.freeze({ loose: true })
const emptyOpts = Object.freeze({ })
const parseOptions = options => {
  if (!options) {
    return emptyOpts
  }

  if (typeof options !== 'object') {
    return looseOption
  }

  return options
}
module.exports = parseOptions


/***/ }),

/***/ 9935:
/***/ ((module, exports, __nccwpck_require__) => {

const { MAX_SAFE_COMPONENT_LENGTH, MAX_SAFE_BUILD_LENGTH } = __nccwpck_require__(1846)
const debug = __nccwpck_require__(4903)
exports = module.exports = {}

// The actual regexps go on exports.re
const re = exports.re = []
const safeRe = exports.safeRe = []
const src = exports.src = []
const t = exports.t = {}
let R = 0

const LETTERDASHNUMBER = '[a-zA-Z0-9-]'

// Replace some greedy regex tokens to prevent regex dos issues. These regex are
// used internally via the safeRe object since all inputs in this library get
// normalized first to trim and collapse all extra whitespace. The original
// regexes are exported for userland consumption and lower level usage. A
// future breaking change could export the safer regex only with a note that
// all input should have extra whitespace removed.
const safeRegexReplacements = [
  ['\\s', 1],
  ['\\d', MAX_SAFE_COMPONENT_LENGTH],
  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],
]

const makeSafeRegex = (value) => {
  for (const [token, max] of safeRegexReplacements) {
    value = value
      .split(`${token}*`).join(`${token}{0,${max}}`)
      .split(`${token}+`).join(`${token}{1,${max}}`)
  }
  return value
}

const createToken = (name, value, isGlobal) => {
  const safe = makeSafeRegex(value)
  const index = R++
  debug(name, index, value)
  t[name] = index
  src[index] = value
  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)
  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)
}

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

createToken('NUMERICIDENTIFIER', '0|[1-9]\\d*')
createToken('NUMERICIDENTIFIERLOOSE', '\\d+')

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

createToken('NONNUMERICIDENTIFIER', `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)

// ## Main Version
// Three dot-separated numeric identifiers.

createToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\.` +
                   `(${src[t.NUMERICIDENTIFIER]})\\.` +
                   `(${src[t.NUMERICIDENTIFIER]})`)

createToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` +
                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` +
                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]
}|${src[t.NONNUMERICIDENTIFIER]})`)

createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]
}|${src[t.NONNUMERICIDENTIFIER]})`)

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

createToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]
}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`)

createToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]
}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

createToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

createToken('BUILD', `(?:\\+(${src[t.BUILDIDENTIFIER]
}(?:\\.${src[t.BUILDIDENTIFIER]})*))`)

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

createToken('FULLPLAIN', `v?${src[t.MAINVERSION]
}${src[t.PRERELEASE]}?${
  src[t.BUILD]}?`)

createToken('FULL', `^${src[t.FULLPLAIN]}$`)

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
createToken('LOOSEPLAIN', `[v=\\s]*${src[t.MAINVERSIONLOOSE]
}${src[t.PRERELEASELOOSE]}?${
  src[t.BUILD]}?`)

createToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)

createToken('GTLT', '((?:<|>)?=?)')

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
createToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`)
createToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`)

createToken('XRANGEPLAIN', `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:\\.(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:\\.(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:${src[t.PRERELEASE]})?${
                     src[t.BUILD]}?` +
                   `)?)?`)

createToken('XRANGEPLAINLOOSE', `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:${src[t.PRERELEASELOOSE]})?${
                          src[t.BUILD]}?` +
                        `)?)?`)

createToken('XRANGE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`)
createToken('XRANGELOOSE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`)

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
createToken('COERCE', `${'(^|[^\\d])' +
              '(\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +
              `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +
              `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +
              `(?:$|[^\\d])`)
createToken('COERCERTL', src[t.COERCE], true)

// Tilde ranges.
// Meaning is "reasonably at or greater than"
createToken('LONETILDE', '(?:~>?)')

createToken('TILDETRIM', `(\\s*)${src[t.LONETILDE]}\\s+`, true)
exports.tildeTrimReplace = '$1~'

createToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)
createToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)

// Caret ranges.
// Meaning is "at least and backwards compatible with"
createToken('LONECARET', '(?:\\^)')

createToken('CARETTRIM', `(\\s*)${src[t.LONECARET]}\\s+`, true)
exports.caretTrimReplace = '$1^'

createToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)
createToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)

// A simple gt/lt/eq thing, or just "" to indicate "any version"
createToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`)
createToken('COMPARATOR', `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`)

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
createToken('COMPARATORTRIM', `(\\s*)${src[t.GTLT]
}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)
exports.comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
createToken('HYPHENRANGE', `^\\s*(${src[t.XRANGEPLAIN]})` +
                   `\\s+-\\s+` +
                   `(${src[t.XRANGEPLAIN]})` +
                   `\\s*$`)

createToken('HYPHENRANGELOOSE', `^\\s*(${src[t.XRANGEPLAINLOOSE]})` +
                        `\\s+-\\s+` +
                        `(${src[t.XRANGEPLAINLOOSE]})` +
                        `\\s*$`)

// Star ranges basically just allow anything at all.
createToken('STAR', '(<|>)?=?\\s*\\*')
// >=0.0.0 is like a star
createToken('GTE0', '^\\s*>=\\s*0\\.0\\.0\\s*$')
createToken('GTE0PRE', '^\\s*>=\\s*0\\.0\\.0-0\\s*$')


/***/ }),

/***/ 1204:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Determine if version is greater than all the versions possible in the range.
const outside = __nccwpck_require__(6162)
const gtr = (version, range, options) => outside(version, range, '>', options)
module.exports = gtr


/***/ }),

/***/ 2935:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9269)
const intersects = (r1, r2, options) => {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2, options)
}
module.exports = intersects


/***/ }),

/***/ 4637:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const outside = __nccwpck_require__(6162)
// Determine if version is less than all the versions possible in the range
const ltr = (version, range, options) => outside(version, range, '<', options)
module.exports = ltr


/***/ }),

/***/ 1848:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const Range = __nccwpck_require__(9269)

const maxSatisfying = (versions, range, options) => {
  let max = null
  let maxSV = null
  let rangeObj = null
  try {
    rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach((v) => {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}
module.exports = maxSatisfying


/***/ }),

/***/ 4802:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const Range = __nccwpck_require__(9269)
const minSatisfying = (versions, range, options) => {
  let min = null
  let minSV = null
  let rangeObj = null
  try {
    rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach((v) => {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}
module.exports = minSatisfying


/***/ }),

/***/ 7164:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const Range = __nccwpck_require__(9269)
const gt = __nccwpck_require__(4277)

const minVersion = (range, loose) => {
  range = new Range(range, loose)

  let minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (let i = 0; i < range.set.length; ++i) {
    const comparators = range.set[i]

    let setMin = null
    comparators.forEach((comparator) => {
      // Clone to avoid manipulating the comparator's semver object.
      const compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!setMin || gt(compver, setMin)) {
            setMin = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error(`Unexpected operation: ${comparator.operator}`)
      }
    })
    if (setMin && (!minver || gt(minver, setMin))) {
      minver = setMin
    }
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}
module.exports = minVersion


/***/ }),

/***/ 6162:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(7822)
const Comparator = __nccwpck_require__(6785)
const { ANY } = Comparator
const Range = __nccwpck_require__(9269)
const satisfies = __nccwpck_require__(5012)
const gt = __nccwpck_require__(4277)
const lt = __nccwpck_require__(5657)
const lte = __nccwpck_require__(5694)
const gte = __nccwpck_require__(4115)

const outside = (version, range, hilo, options) => {
  version = new SemVer(version, options)
  range = new Range(range, options)

  let gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisfies the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (let i = 0; i < range.set.length; ++i) {
    const comparators = range.set[i]

    let high = null
    let low = null

    comparators.forEach((comparator) => {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

module.exports = outside


/***/ }),

/***/ 9049:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// given a set of versions and a range, create a "simplified" range
// that includes the same versions that the original range does
// If the original range is shorter than the simplified one, return that.
const satisfies = __nccwpck_require__(5012)
const compare = __nccwpck_require__(5632)
module.exports = (versions, range, options) => {
  const set = []
  let first = null
  let prev = null
  const v = versions.sort((a, b) => compare(a, b, options))
  for (const version of v) {
    const included = satisfies(version, range, options)
    if (included) {
      prev = version
      if (!first) {
        first = version
      }
    } else {
      if (prev) {
        set.push([first, prev])
      }
      prev = null
      first = null
    }
  }
  if (first) {
    set.push([first, null])
  }

  const ranges = []
  for (const [min, max] of set) {
    if (min === max) {
      ranges.push(min)
    } else if (!max && min === v[0]) {
      ranges.push('*')
    } else if (!max) {
      ranges.push(`>=${min}`)
    } else if (min === v[0]) {
      ranges.push(`<=${max}`)
    } else {
      ranges.push(`${min} - ${max}`)
    }
  }
  const simplified = ranges.join(' || ')
  const original = typeof range.raw === 'string' ? range.raw : String(range)
  return simplified.length < original.length ? simplified : range
}


/***/ }),

/***/ 8527:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9269)
const Comparator = __nccwpck_require__(6785)
const { ANY } = Comparator
const satisfies = __nccwpck_require__(5012)
const compare = __nccwpck_require__(5632)

// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:
// - Every simple range `r1, r2, ...` is a null set, OR
// - Every simple range `r1, r2, ...` which is not a null set is a subset of
//   some `R1, R2, ...`
//
// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:
// - If c is only the ANY comparator
//   - If C is only the ANY comparator, return true
//   - Else if in prerelease mode, return false
//   - else replace c with `[>=0.0.0]`
// - If C is only the ANY comparator
//   - if in prerelease mode, return true
//   - else replace C with `[>=0.0.0]`
// - Let EQ be the set of = comparators in c
// - If EQ is more than one, return true (null set)
// - Let GT be the highest > or >= comparator in c
// - Let LT be the lowest < or <= comparator in c
// - If GT and LT, and GT.semver > LT.semver, return true (null set)
// - If any C is a = range, and GT or LT are set, return false
// - If EQ
//   - If GT, and EQ does not satisfy GT, return true (null set)
//   - If LT, and EQ does not satisfy LT, return true (null set)
//   - If EQ satisfies every C, return true
//   - Else return false
// - If GT
//   - If GT.semver is lower than any > or >= comp in C, return false
//   - If GT is >=, and GT.semver does not satisfy every C, return false
//   - If GT.semver has a prerelease, and not in prerelease mode
//     - If no C has a prerelease and the GT.semver tuple, return false
// - If LT
//   - If LT.semver is greater than any < or <= comp in C, return false
//   - If LT is <=, and LT.semver does not satisfy every C, return false
//   - If GT.semver has a prerelease, and not in prerelease mode
//     - If no C has a prerelease and the LT.semver tuple, return false
// - Else return true

const subset = (sub, dom, options = {}) => {
  if (sub === dom) {
    return true
  }

  sub = new Range(sub, options)
  dom = new Range(dom, options)
  let sawNonNull = false

  OUTER: for (const simpleSub of sub.set) {
    for (const simpleDom of dom.set) {
      const isSub = simpleSubset(simpleSub, simpleDom, options)
      sawNonNull = sawNonNull || isSub !== null
      if (isSub) {
        continue OUTER
      }
    }
    // the null set is a subset of everything, but null simple ranges in
    // a complex range should be ignored.  so if we saw a non-null range,
    // then we know this isn't a subset, but if EVERY simple range was null,
    // then it is a subset.
    if (sawNonNull) {
      return false
    }
  }
  return true
}

const minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]
const minimumVersion = [new Comparator('>=0.0.0')]

const simpleSubset = (sub, dom, options) => {
  if (sub === dom) {
    return true
  }

  if (sub.length === 1 && sub[0].semver === ANY) {
    if (dom.length === 1 && dom[0].semver === ANY) {
      return true
    } else if (options.includePrerelease) {
      sub = minimumVersionWithPreRelease
    } else {
      sub = minimumVersion
    }
  }

  if (dom.length === 1 && dom[0].semver === ANY) {
    if (options.includePrerelease) {
      return true
    } else {
      dom = minimumVersion
    }
  }

  const eqSet = new Set()
  let gt, lt
  for (const c of sub) {
    if (c.operator === '>' || c.operator === '>=') {
      gt = higherGT(gt, c, options)
    } else if (c.operator === '<' || c.operator === '<=') {
      lt = lowerLT(lt, c, options)
    } else {
      eqSet.add(c.semver)
    }
  }

  if (eqSet.size > 1) {
    return null
  }

  let gtltComp
  if (gt && lt) {
    gtltComp = compare(gt.semver, lt.semver, options)
    if (gtltComp > 0) {
      return null
    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {
      return null
    }
  }

  // will iterate one or zero times
  for (const eq of eqSet) {
    if (gt && !satisfies(eq, String(gt), options)) {
      return null
    }

    if (lt && !satisfies(eq, String(lt), options)) {
      return null
    }

    for (const c of dom) {
      if (!satisfies(eq, String(c), options)) {
        return false
      }
    }

    return true
  }

  let higher, lower
  let hasDomLT, hasDomGT
  // if the subset has a prerelease, we need a comparator in the superset
  // with the same tuple and a prerelease, or it's not a subset
  let needDomLTPre = lt &&
    !options.includePrerelease &&
    lt.semver.prerelease.length ? lt.semver : false
  let needDomGTPre = gt &&
    !options.includePrerelease &&
    gt.semver.prerelease.length ? gt.semver : false
  // exception: <1.2.3-0 is the same as <1.2.3
  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&
      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {
    needDomLTPre = false
  }

  for (const c of dom) {
    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='
    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='
    if (gt) {
      if (needDomGTPre) {
        if (c.semver.prerelease && c.semver.prerelease.length &&
            c.semver.major === needDomGTPre.major &&
            c.semver.minor === needDomGTPre.minor &&
            c.semver.patch === needDomGTPre.patch) {
          needDomGTPre = false
        }
      }
      if (c.operator === '>' || c.operator === '>=') {
        higher = higherGT(gt, c, options)
        if (higher === c && higher !== gt) {
          return false
        }
      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {
        return false
      }
    }
    if (lt) {
      if (needDomLTPre) {
        if (c.semver.prerelease && c.semver.prerelease.length &&
            c.semver.major === needDomLTPre.major &&
            c.semver.minor === needDomLTPre.minor &&
            c.semver.patch === needDomLTPre.patch) {
          needDomLTPre = false
        }
      }
      if (c.operator === '<' || c.operator === '<=') {
        lower = lowerLT(lt, c, options)
        if (lower === c && lower !== lt) {
          return false
        }
      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {
        return false
      }
    }
    if (!c.operator && (lt || gt) && gtltComp !== 0) {
      return false
    }
  }

  // if there was a < or >, and nothing in the dom, then must be false
  // UNLESS it was limited by another range in the other direction.
  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0
  if (gt && hasDomLT && !lt && gtltComp !== 0) {
    return false
  }

  if (lt && hasDomGT && !gt && gtltComp !== 0) {
    return false
  }

  // we needed a prerelease range in a specific tuple, but didn't get one
  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,
  // because it includes prereleases in the 1.2.3 tuple
  if (needDomGTPre || needDomLTPre) {
    return false
  }

  return true
}

// >=1.2.3 is lower than >1.2.3
const higherGT = (a, b, options) => {
  if (!a) {
    return b
  }
  const comp = compare(a.semver, b.semver, options)
  return comp > 0 ? a
    : comp < 0 ? b
    : b.operator === '>' && a.operator === '>=' ? b
    : a
}

// <=1.2.3 is higher than <1.2.3
const lowerLT = (a, b, options) => {
  if (!a) {
    return b
  }
  const comp = compare(a.semver, b.semver, options)
  return comp < 0 ? a
    : comp > 0 ? b
    : b.operator === '<' && a.operator === '<=' ? b
    : a
}

module.exports = subset


/***/ }),

/***/ 5208:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9269)

// Mostly just for testing and legacy API reasons
const toComparators = (range, options) =>
  new Range(range, options).set
    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))

module.exports = toComparators


/***/ }),

/***/ 9812:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9269)
const validRange = (range, options) => {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}
module.exports = validRange


/***/ }),

/***/ 2173:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
function u(u){return u&&"object"==typeof u&&"default"in u?u.default:u}var D=u(__nccwpck_require__(3837)),e=__nccwpck_require__(1017),t=__nccwpck_require__(7147),r=u(__nccwpck_require__(2037)),n=u(__nccwpck_require__(6224));"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function s(u,D){return u(D={exports:{}},D.exports),D.exports}var o,i=(o=Object.freeze({__proto__:null,default:[{name:"AppVeyor",constant:"APPVEYOR",env:"APPVEYOR",pr:"APPVEYOR_PULL_REQUEST_NUMBER"},{name:"Bamboo",constant:"BAMBOO",env:"bamboo_planKey"},{name:"Bitbucket Pipelines",constant:"BITBUCKET",env:"BITBUCKET_COMMIT"},{name:"Bitrise",constant:"BITRISE",env:"BITRISE_IO",pr:"BITRISE_PULL_REQUEST"},{name:"Buddy",constant:"BUDDY",env:"BUDDY_WORKSPACE_ID",pr:"BUDDY_EXECUTION_PULL_REQUEST_ID"},{name:"Buildkite",constant:"BUILDKITE",env:"BUILDKITE",pr:{env:"BUILDKITE_PULL_REQUEST",ne:"false"}},{name:"CircleCI",constant:"CIRCLE",env:"CIRCLECI",pr:"CIRCLE_PULL_REQUEST"},{name:"Cirrus CI",constant:"CIRRUS",env:"CIRRUS_CI",pr:"CIRRUS_PR"},{name:"AWS CodeBuild",constant:"CODEBUILD",env:"CODEBUILD_BUILD_ARN"},{name:"Codeship",constant:"CODESHIP",env:{CI_NAME:"codeship"}},{name:"Drone",constant:"DRONE",env:"DRONE",pr:{DRONE_BUILD_EVENT:"pull_request"}},{name:"dsari",constant:"DSARI",env:"DSARI"},{name:"GitLab CI",constant:"GITLAB",env:"GITLAB_CI"},{name:"GoCD",constant:"GOCD",env:"GO_PIPELINE_LABEL"},{name:"Hudson",constant:"HUDSON",env:"HUDSON_URL"},{name:"Jenkins",constant:"JENKINS",env:["JENKINS_URL","BUILD_ID"],pr:{any:["ghprbPullId","CHANGE_ID"]}},{name:"Magnum CI",constant:"MAGNUM",env:"MAGNUM"},{name:"Sail CI",constant:"SAIL",env:"SAILCI",pr:"SAIL_PULL_REQUEST_NUMBER"},{name:"Semaphore",constant:"SEMAPHORE",env:"SEMAPHORE",pr:"PULL_REQUEST_NUMBER"},{name:"Shippable",constant:"SHIPPABLE",env:"SHIPPABLE",pr:{IS_PULL_REQUEST:"true"}},{name:"Solano CI",constant:"SOLANO",env:"TDDIUM",pr:"TDDIUM_PR_ID"},{name:"Strider CD",constant:"STRIDER",env:"STRIDER"},{name:"TaskCluster",constant:"TASKCLUSTER",env:["TASK_ID","RUN_ID"]},{name:"Solano CI",constant:"TDDIUM",env:"TDDIUM",pr:"TDDIUM_PR_ID",deprecated:!0},{name:"TeamCity",constant:"TEAMCITY",env:"TEAMCITY_VERSION"},{name:"Team Foundation Server",constant:"TFS",env:"TF_BUILD"},{name:"Travis CI",constant:"TRAVIS",env:"TRAVIS",pr:{env:"TRAVIS_PULL_REQUEST",ne:"false"}}]}))&&o.default||o,a=s((function(u,D){var e=process.env;function t(u){return"string"==typeof u?!!e[u]:Object.keys(u).every((function(D){return e[D]===u[D]}))}Object.defineProperty(D,"_vendors",{value:i.map((function(u){return u.constant}))}),D.name=null,D.isPR=null,i.forEach((function(u){var r=(Array.isArray(u.env)?u.env:[u.env]).every((function(u){return t(u)}));if(D[u.constant]=r,r)switch(D.name=u.name,typeof u.pr){case"string":D.isPR=!!e[u.pr];break;case"object":"env"in u.pr?D.isPR=u.pr.env in e&&e[u.pr.env]!==u.pr.ne:"any"in u.pr?D.isPR=u.pr.any.some((function(u){return!!e[u]})):D.isPR=t(u.pr);break;default:D.isPR=null}})),D.isCI=!!(e.CI||e.CONTINUOUS_INTEGRATION||e.BUILD_NUMBER||e.RUN_ID||D.name)})),l=(a.name,a.isPR,a.isCI,!1),c=!1,h=!1,F="development",C="undefined"!=typeof window,f="",E=!1;function g(u){return!(!u||"false"===u)}"undefined"!=typeof process&&(process.platform&&(f=String(process.platform)),process.stdout&&(h=g(process.stdout.isTTY)),l=Boolean(a.isCI),process.env&&(process.env.NODE_ENV&&(F=process.env.NODE_ENV),c=g(process.env.DEBUG),E=g(process.env.MINIMAL)));var d={browser:C,test:"test"===F,dev:"development"===F||"dev"===F,production:"production"===F,debug:c,ci:l,tty:h,minimal:void 0,minimalCLI:void 0,windows:/^win/i.test(f),darwin:/^darwin/i.test(f),linux:/^linux/i.test(f)};d.minimal=E||d.ci||d.test||!d.tty,d.minimalCLI=d.minimal;var p=Object.freeze(d);const m={};m[m.Fatal=0]="Fatal",m[m.Error=0]="Error",m[m.Warn=1]="Warn",m[m.Log=2]="Log",m[m.Info=3]="Info",m[m.Success=3]="Success",m[m.Debug=4]="Debug",m[m.Trace=5]="Trace",m[m.Silent=-1/0]="Silent",m[m.Verbose=1/0]="Verbose";var b={silent:{level:-1},fatal:{level:m.Fatal},error:{level:m.Error},warn:{level:m.Warn},log:{level:m.Log},info:{level:m.Info},success:{level:m.Success},debug:{level:m.Debug},trace:{level:m.Trace},verbose:{level:m.Trace},ready:{level:m.Info},start:{level:m.Info}};function y(u){return D=u,"[object Object]"===Object.prototype.toString.call(D)&&(!(!u.message&&!u.args)&&!u.stack);var D}let B=!1;const v=[];class _{constructor(u={}){this._reporters=u.reporters||[],this._types=u.types||b,this.level=void 0!==u.level?u.level:3,this._defaults=u.defaults||{},this._async=void 0!==u.async?u.async:void 0,this._stdout=u.stdout,this._stderr=u.stderr,this._mockFn=u.mockFn,this._throttle=u.throttle||1e3,this._throttleMin=u.throttleMin||5;for(const u in this._types){const D={type:u,...this._types[u],...this._defaults};this[u]=this._wrapLogFn(D),this[u].raw=this._wrapLogFn(D,!0)}this._mockFn&&this.mockTypes(),this._lastLogSerialized=void 0,this._lastLog=void 0,this._lastLogTime=void 0,this._lastLogCount=0,this._throttleTimeout=void 0}get stdout(){return this._stdout||console._stdout}get stderr(){return this._stderr||console._stderr}create(u){return new _(Object.assign({reporters:this._reporters,level:this.level,types:this._types,defaults:this._defaults,stdout:this._stdout,stderr:this._stderr,mockFn:this._mockFn},u))}withDefaults(u){return this.create({defaults:Object.assign({},this._defaults,u)})}withTag(u){return this.withDefaults({tag:this._defaults.tag?this._defaults.tag+":"+u:u})}addReporter(u){return this._reporters.push(u),this}removeReporter(u){if(u){const D=this._reporters.indexOf(u);if(D>=0)return this._reporters.splice(D,1)}else this._reporters.splice(0);return this}setReporters(u){return this._reporters=Array.isArray(u)?u:[u],this}wrapAll(){this.wrapConsole(),this.wrapStd()}restoreAll(){this.restoreConsole(),this.restoreStd()}wrapConsole(){for(const u in this._types)console["__"+u]||(console["__"+u]=console[u]),console[u]=this[u].raw}restoreConsole(){for(const u in this._types)console["__"+u]&&(console[u]=console["__"+u],delete console["__"+u])}wrapStd(){this._wrapStream(this.stdout,"log"),this._wrapStream(this.stderr,"log")}_wrapStream(u,D){u&&(u.__write||(u.__write=u.write),u.write=u=>{this[D].raw(String(u).trim())})}restoreStd(){this._restoreStream(this.stdout),this._restoreStream(this.stderr)}_restoreStream(u){u&&u.__write&&(u.write=u.__write,delete u.__write)}pauseLogs(){B=!0}resumeLogs(){B=!1;const u=v.splice(0);for(const D of u)D[0]._logFn(D[1],D[2])}mockTypes(u){if(this._mockFn=u||this._mockFn,"function"==typeof this._mockFn)for(const u in this._types)this[u]=this._mockFn(u,this._types[u])||this[u],this[u].raw=this[u]}_wrapLogFn(u,D){return(...e)=>{if(!B)return this._logFn(u,e,D);v.push([this,u,e,D])}}_logFn(u,D,e){if(u.level>this.level)return!!this._async&&Promise.resolve(!1);const t=Object.assign({date:new Date,args:[]},u);!e&&1===D.length&&y(D[0])?Object.assign(t,D[0]):t.args=Array.from(D),t.message&&(t.args.unshift(t.message),delete t.message),t.additional&&(Array.isArray(t.additional)||(t.additional=t.additional.split("\n")),t.args.push("\n"+t.additional.join("\n")),delete t.additional),t.type="string"==typeof t.type?t.type.toLowerCase():"",t.tag="string"==typeof t.tag?t.tag.toLowerCase():"";const r=(u=!1)=>{const D=this._lastLogCount-this._throttleMin;if(this._lastLog&&D>0){const u=[...this._lastLog.args];D>1&&u.push(`(repeated ${D} times)`),this._log({...this._lastLog,args:u}),this._lastLogCount=1}if(u){if(this._lastLog=t,this._async)return this._logAsync(t);this._log(t)}};clearTimeout(this._throttleTimeout);const n=this._lastLogTime?t.date-this._lastLogTime:0;if(this._lastLogTime=t.date,n<this._throttle)try{const u=JSON.stringify([t.type,t.tag,t.args]),D=this._lastLogSerialized===u;if(this._lastLogSerialized=u,D&&(this._lastLogCount++,this._lastLogCount>this._throttleMin))return void(this._throttleTimeout=setTimeout(r,this._throttle))}catch(u){}r(!0)}_log(u){for(const D of this._reporters)D.log(u,{async:!1,stdout:this.stdout,stderr:this.stderr})}_logAsync(u){return Promise.all(this._reporters.map(D=>D.log(u,{async:!0,stdout:this.stdout,stderr:this.stderr})))}}function A(u){const D=process.cwd()+e.sep;return u.split("\n").splice(1).map(u=>u.trim().replace("file://","").replace(D,""))}_.prototype.add=_.prototype.addReporter,_.prototype.remove=_.prototype.removeReporter,_.prototype.clear=_.prototype.removeReporter,_.prototype.withScope=_.prototype.withTag,_.prototype.mock=_.prototype.mockTypes,_.prototype.pause=_.prototype.pauseLogs,_.prototype.resume=_.prototype.resumeLogs;var w=s((function(u,D){u.exports=function(){var u="millisecond",D="second",e="minute",t="hour",r="day",n="week",s="month",o="quarter",i="year",a=/^(\d{4})-?(\d{1,2})-?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d{1,3})?$/,l=/\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(u,D,e){var t=String(u);return!t||t.length>=D?u:""+Array(D+1-t.length).join(e)+u},h={s:c,z:function(u){var D=-u.utcOffset(),e=Math.abs(D),t=Math.floor(e/60),r=e%60;return(D<=0?"+":"-")+c(t,2,"0")+":"+c(r,2,"0")},m:function(u,D){var e=12*(D.year()-u.year())+(D.month()-u.month()),t=u.clone().add(e,s),r=D-t<0,n=u.clone().add(e+(r?-1:1),s);return Number(-(e+(D-t)/(r?t-n:n-t))||0)},a:function(u){return u<0?Math.ceil(u)||0:Math.floor(u)},p:function(a){return{M:s,y:i,w:n,d:r,D:"date",h:t,m:e,s:D,ms:u,Q:o}[a]||String(a||"").toLowerCase().replace(/s$/,"")},u:function(u){return void 0===u}},F={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},C="en",f={};f[C]=F;var E=function(u){return u instanceof m},g=function(u,D,e){var t;if(!u)return C;if("string"==typeof u)f[u]&&(t=u),D&&(f[u]=D,t=u);else{var r=u.name;f[r]=u,t=r}return!e&&t&&(C=t),t||!e&&C},d=function(u,D){if(E(u))return u.clone();var e="object"==typeof D?D:{};return e.date=u,e.args=arguments,new m(e)},p=h;p.l=g,p.i=E,p.w=function(u,D){return d(u,{locale:D.$L,utc:D.$u,$offset:D.$offset})};var m=function(){function c(u){this.$L=this.$L||g(u.locale,null,!0),this.parse(u)}var h=c.prototype;return h.parse=function(u){this.$d=function(u){var D=u.date,e=u.utc;if(null===D)return new Date(NaN);if(p.u(D))return new Date;if(D instanceof Date)return new Date(D);if("string"==typeof D&&!/Z$/i.test(D)){var t=D.match(a);if(t)return e?new Date(Date.UTC(t[1],t[2]-1,t[3]||1,t[4]||0,t[5]||0,t[6]||0,t[7]||0)):new Date(t[1],t[2]-1,t[3]||1,t[4]||0,t[5]||0,t[6]||0,t[7]||0)}return new Date(D)}(u),this.init()},h.init=function(){var u=this.$d;this.$y=u.getFullYear(),this.$M=u.getMonth(),this.$D=u.getDate(),this.$W=u.getDay(),this.$H=u.getHours(),this.$m=u.getMinutes(),this.$s=u.getSeconds(),this.$ms=u.getMilliseconds()},h.$utils=function(){return p},h.isValid=function(){return!("Invalid Date"===this.$d.toString())},h.isSame=function(u,D){var e=d(u);return this.startOf(D)<=e&&e<=this.endOf(D)},h.isAfter=function(u,D){return d(u)<this.startOf(D)},h.isBefore=function(u,D){return this.endOf(D)<d(u)},h.$g=function(u,D,e){return p.u(u)?this[D]:this.set(e,u)},h.year=function(u){return this.$g(u,"$y",i)},h.month=function(u){return this.$g(u,"$M",s)},h.day=function(u){return this.$g(u,"$W",r)},h.date=function(u){return this.$g(u,"$D","date")},h.hour=function(u){return this.$g(u,"$H",t)},h.minute=function(u){return this.$g(u,"$m",e)},h.second=function(u){return this.$g(u,"$s",D)},h.millisecond=function(D){return this.$g(D,"$ms",u)},h.unix=function(){return Math.floor(this.valueOf()/1e3)},h.valueOf=function(){return this.$d.getTime()},h.startOf=function(u,o){var a=this,l=!!p.u(o)||o,c=p.p(u),h=function(u,D){var e=p.w(a.$u?Date.UTC(a.$y,D,u):new Date(a.$y,D,u),a);return l?e:e.endOf(r)},F=function(u,D){return p.w(a.toDate()[u].apply(a.toDate("s"),(l?[0,0,0,0]:[23,59,59,999]).slice(D)),a)},C=this.$W,f=this.$M,E=this.$D,g="set"+(this.$u?"UTC":"");switch(c){case i:return l?h(1,0):h(31,11);case s:return l?h(1,f):h(0,f+1);case n:var d=this.$locale().weekStart||0,m=(C<d?C+7:C)-d;return h(l?E-m:E+(6-m),f);case r:case"date":return F(g+"Hours",0);case t:return F(g+"Minutes",1);case e:return F(g+"Seconds",2);case D:return F(g+"Milliseconds",3);default:return this.clone()}},h.endOf=function(u){return this.startOf(u,!1)},h.$set=function(n,o){var a,l=p.p(n),c="set"+(this.$u?"UTC":""),h=(a={},a.day=c+"Date",a.date=c+"Date",a[s]=c+"Month",a[i]=c+"FullYear",a[t]=c+"Hours",a[e]=c+"Minutes",a[D]=c+"Seconds",a[u]=c+"Milliseconds",a)[l],F=l===r?this.$D+(o-this.$W):o;if(l===s||l===i){var C=this.clone().set("date",1);C.$d[h](F),C.init(),this.$d=C.set("date",Math.min(this.$D,C.daysInMonth())).toDate()}else h&&this.$d[h](F);return this.init(),this},h.set=function(u,D){return this.clone().$set(u,D)},h.get=function(u){return this[p.p(u)]()},h.add=function(u,o){var a,l=this;u=Number(u);var c=p.p(o),h=function(D){var e=d(l);return p.w(e.date(e.date()+Math.round(D*u)),l)};if(c===s)return this.set(s,this.$M+u);if(c===i)return this.set(i,this.$y+u);if(c===r)return h(1);if(c===n)return h(7);var F=(a={},a[e]=6e4,a[t]=36e5,a[D]=1e3,a)[c]||1,C=this.$d.getTime()+u*F;return p.w(C,this)},h.subtract=function(u,D){return this.add(-1*u,D)},h.format=function(u){var D=this;if(!this.isValid())return"Invalid Date";var e=u||"YYYY-MM-DDTHH:mm:ssZ",t=p.z(this),r=this.$locale(),n=this.$H,s=this.$m,o=this.$M,i=r.weekdays,a=r.months,c=function(u,t,r,n){return u&&(u[t]||u(D,e))||r[t].substr(0,n)},h=function(u){return p.s(n%12||12,u,"0")},F=r.meridiem||function(u,D,e){var t=u<12?"AM":"PM";return e?t.toLowerCase():t},C={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:p.s(o+1,2,"0"),MMM:c(r.monthsShort,o,a,3),MMMM:c(a,o),D:this.$D,DD:p.s(this.$D,2,"0"),d:String(this.$W),dd:c(r.weekdaysMin,this.$W,i,2),ddd:c(r.weekdaysShort,this.$W,i,3),dddd:i[this.$W],H:String(n),HH:p.s(n,2,"0"),h:h(1),hh:h(2),a:F(n,s,!0),A:F(n,s,!1),m:String(s),mm:p.s(s,2,"0"),s:String(this.$s),ss:p.s(this.$s,2,"0"),SSS:p.s(this.$ms,3,"0"),Z:t};return e.replace(l,(function(u,D){return D||C[u]||t.replace(":","")}))},h.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},h.diff=function(u,r,a){var l,c=p.p(r),h=d(u),F=6e4*(h.utcOffset()-this.utcOffset()),C=this-h,f=p.m(this,h);return f=(l={},l[i]=f/12,l[s]=f,l[o]=f/3,l[n]=(C-F)/6048e5,l.day=(C-F)/864e5,l[t]=C/36e5,l[e]=C/6e4,l[D]=C/1e3,l)[c]||C,a?f:p.a(f)},h.daysInMonth=function(){return this.endOf(s).$D},h.$locale=function(){return f[this.$L]},h.locale=function(u,D){if(!u)return this.$L;var e=this.clone(),t=g(u,D,!0);return t&&(e.$L=t),e},h.clone=function(){return p.w(this.$d,this)},h.toDate=function(){return new Date(this.valueOf())},h.toJSON=function(){return this.isValid()?this.toISOString():null},h.toISOString=function(){return this.$d.toISOString()},h.toString=function(){return this.$d.toUTCString()},c}();return d.prototype=m.prototype,d.extend=function(u,D){return u(D,m,d),d},d.locale=g,d.isDayjs=E,d.unix=function(u){return d(1e3*u)},d.en=f[C],d.Ls=f,d}()}));const O={dateFormat:"HH:mm:ss",formatOptions:{date:!0,colors:!1,compact:!0}},M=u=>u?`[${u}]`:"";class S{constructor(u){this.options=Object.assign({},O,u)}formatStack(u){return"  "+A(u).join("\n  ")}formatArgs(u){const e=u.map(u=>u&&"string"==typeof u.stack?u.message+"\n"+this.formatStack(u.stack):u);return"function"==typeof D.formatWithOptions?D.formatWithOptions(this.options.formatOptions,...e):D.format(...e)}formatDate(u){return this.options.formatOptions.date?function(u,D){return w(D).format(u)}(this.options.dateFormat,u):""}filterAndJoin(u){return u.filter(u=>u).join(" ")}formatLogObj(u){const D=this.formatArgs(u.args);return this.filterAndJoin([M(u.type),M(u.tag),D])}log(u,{async:D,stdout:e,stderr:r}={}){return function(u,D,e="default"){const r=D.__write||D.write;switch(e){case"async":return new Promise(e=>{!0===r.call(D,u)?e():D.once("drain",()=>{e()})});case"sync":return t.writeSync(D.fd,u);default:return r.call(D,u)}}(this.formatLogObj(u,{width:e.columns||0})+"\n",u.level<2?r:e,D?"async":"default")}}var I=u=>"string"==typeof u?u.replace((({onlyFirst:u=!1}={})=>{const D=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(D,u?void 0:"g")})(),""):u;const k=u=>!Number.isNaN(u)&&(u>=4352&&(u<=4447||9001===u||9002===u||11904<=u&&u<=12871&&12351!==u||12880<=u&&u<=19903||19968<=u&&u<=42182||43360<=u&&u<=43388||44032<=u&&u<=55203||63744<=u&&u<=64255||65040<=u&&u<=65049||65072<=u&&u<=65131||65281<=u&&u<=65376||65504<=u&&u<=65510||110592<=u&&u<=110593||127488<=u&&u<=127569||131072<=u&&u<=262141));var R=k,T=k;R.default=T;const L=u=>{if("string"!=typeof(u=u.replace(/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g,"  "))||0===u.length)return 0;u=I(u);let D=0;for(let e=0;e<u.length;e++){const t=u.codePointAt(e);t<=31||t>=127&&t<=159||(t>=768&&t<=879||(t>65535&&e++,D+=R(t)?2:1))}return D};var $=L,x=L;$.default=x;var U=/[|\\{}()[\]^$+*?.]/g,j=function(u){if("string"!=typeof u)throw new TypeError("Expected a string");return u.replace(U,"\\$&")};const{platform:P}=process,N={tick:"✔",cross:"✖",star:"★",square:"▇",squareSmall:"◻",squareSmallFilled:"◼",play:"▶",circle:"◯",circleFilled:"◉",circleDotted:"◌",circleDouble:"◎",circleCircle:"ⓞ",circleCross:"ⓧ",circlePipe:"Ⓘ",circleQuestionMark:"?⃝",bullet:"●",dot:"․",line:"─",ellipsis:"…",pointer:"❯",pointerSmall:"›",info:"ℹ",warning:"⚠",hamburger:"☰",smiley:"㋡",mustache:"෴",heart:"♥",nodejs:"⬢",arrowUp:"↑",arrowDown:"↓",arrowLeft:"←",arrowRight:"→",radioOn:"◉",radioOff:"◯",checkboxOn:"☒",checkboxOff:"☐",checkboxCircleOn:"ⓧ",checkboxCircleOff:"Ⓘ",questionMarkPrefix:"?⃝",oneHalf:"½",oneThird:"⅓",oneQuarter:"¼",oneFifth:"⅕",oneSixth:"⅙",oneSeventh:"⅐",oneEighth:"⅛",oneNinth:"⅑",oneTenth:"⅒",twoThirds:"⅔",twoFifths:"⅖",threeQuarters:"¾",threeFifths:"⅗",threeEighths:"⅜",fourFifths:"⅘",fiveSixths:"⅚",fiveEighths:"⅝",sevenEighths:"⅞"},q={tick:"√",cross:"×",star:"*",square:"█",squareSmall:"[ ]",squareSmallFilled:"[█]",play:"►",circle:"( )",circleFilled:"(*)",circleDotted:"( )",circleDouble:"( )",circleCircle:"(○)",circleCross:"(×)",circlePipe:"(│)",circleQuestionMark:"(?)",bullet:"*",dot:".",line:"─",ellipsis:"...",pointer:">",pointerSmall:"»",info:"i",warning:"‼",hamburger:"≡",smiley:"☺",mustache:"┌─┐",heart:N.heart,nodejs:"♦",arrowUp:N.arrowUp,arrowDown:N.arrowDown,arrowLeft:N.arrowLeft,arrowRight:N.arrowRight,radioOn:"(*)",radioOff:"( )",checkboxOn:"[×]",checkboxOff:"[ ]",checkboxCircleOn:"(×)",checkboxCircleOff:"( )",questionMarkPrefix:"？",oneHalf:"1/2",oneThird:"1/3",oneQuarter:"1/4",oneFifth:"1/5",oneSixth:"1/6",oneSeventh:"1/7",oneEighth:"1/8",oneNinth:"1/9",oneTenth:"1/10",twoThirds:"2/3",twoFifths:"2/5",threeQuarters:"3/4",threeFifths:"3/5",threeEighths:"3/8",fourFifths:"4/5",fiveSixths:"5/6",fiveEighths:"5/8",sevenEighths:"7/8"};"linux"===P&&(N.questionMarkPrefix="?");const Y="win32"===P?q:N;var H=Object.assign(u=>{if(Y===N)return u;for(const[D,e]of Object.entries(N))e!==Y[D]&&(u=u.replace(new RegExp(j(e),"g"),Y[D]));return u},Y),V=N,W=q;H.main=V,H.windows=W;var G={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};const z={};for(const u of Object.keys(G))z[G[u]]=u;const Q={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};var J=Q;for(const u of Object.keys(Q)){if(!("channels"in Q[u]))throw new Error("missing channels property: "+u);if(!("labels"in Q[u]))throw new Error("missing channel labels property: "+u);if(Q[u].labels.length!==Q[u].channels)throw new Error("channel and label counts mismatch: "+u);const{channels:D,labels:e}=Q[u];delete Q[u].channels,delete Q[u].labels,Object.defineProperty(Q[u],"channels",{value:D}),Object.defineProperty(Q[u],"labels",{value:e})}function K(u){const D=function(){const u={},D=Object.keys(J);for(let e=D.length,t=0;t<e;t++)u[D[t]]={distance:-1,parent:null};return u}(),e=[u];for(D[u].distance=0;e.length;){const u=e.pop(),t=Object.keys(J[u]);for(let r=t.length,n=0;n<r;n++){const r=t[n],s=D[r];-1===s.distance&&(s.distance=D[u].distance+1,s.parent=u,e.unshift(r))}}return D}function Z(u,D){return function(e){return D(u(e))}}function X(u,D){const e=[D[u].parent,u];let t=J[D[u].parent][u],r=D[u].parent;for(;D[r].parent;)e.unshift(D[r].parent),t=Z(J[D[r].parent][r],t),r=D[r].parent;return t.conversion=e,t}Q.rgb.hsl=function(u){const D=u[0]/255,e=u[1]/255,t=u[2]/255,r=Math.min(D,e,t),n=Math.max(D,e,t),s=n-r;let o,i;n===r?o=0:D===n?o=(e-t)/s:e===n?o=2+(t-D)/s:t===n&&(o=4+(D-e)/s),o=Math.min(60*o,360),o<0&&(o+=360);const a=(r+n)/2;return i=n===r?0:a<=.5?s/(n+r):s/(2-n-r),[o,100*i,100*a]},Q.rgb.hsv=function(u){let D,e,t,r,n;const s=u[0]/255,o=u[1]/255,i=u[2]/255,a=Math.max(s,o,i),l=a-Math.min(s,o,i),c=function(u){return(a-u)/6/l+.5};return 0===l?(r=0,n=0):(n=l/a,D=c(s),e=c(o),t=c(i),s===a?r=t-e:o===a?r=1/3+D-t:i===a&&(r=2/3+e-D),r<0?r+=1:r>1&&(r-=1)),[360*r,100*n,100*a]},Q.rgb.hwb=function(u){const D=u[0],e=u[1];let t=u[2];const r=Q.rgb.hsl(u)[0],n=1/255*Math.min(D,Math.min(e,t));return t=1-1/255*Math.max(D,Math.max(e,t)),[r,100*n,100*t]},Q.rgb.cmyk=function(u){const D=u[0]/255,e=u[1]/255,t=u[2]/255,r=Math.min(1-D,1-e,1-t);return[100*((1-D-r)/(1-r)||0),100*((1-e-r)/(1-r)||0),100*((1-t-r)/(1-r)||0),100*r]},Q.rgb.keyword=function(u){const D=z[u];if(D)return D;let e,t=1/0;for(const D of Object.keys(G)){const s=(n=G[D],((r=u)[0]-n[0])**2+(r[1]-n[1])**2+(r[2]-n[2])**2);s<t&&(t=s,e=D)}var r,n;return e},Q.keyword.rgb=function(u){return G[u]},Q.rgb.xyz=function(u){let D=u[0]/255,e=u[1]/255,t=u[2]/255;D=D>.04045?((D+.055)/1.055)**2.4:D/12.92,e=e>.04045?((e+.055)/1.055)**2.4:e/12.92,t=t>.04045?((t+.055)/1.055)**2.4:t/12.92;return[100*(.4124*D+.3576*e+.1805*t),100*(.2126*D+.7152*e+.0722*t),100*(.0193*D+.1192*e+.9505*t)]},Q.rgb.lab=function(u){const D=Q.rgb.xyz(u);let e=D[0],t=D[1],r=D[2];e/=95.047,t/=100,r/=108.883,e=e>.008856?e**(1/3):7.787*e+16/116,t=t>.008856?t**(1/3):7.787*t+16/116,r=r>.008856?r**(1/3):7.787*r+16/116;return[116*t-16,500*(e-t),200*(t-r)]},Q.hsl.rgb=function(u){const D=u[0]/360,e=u[1]/100,t=u[2]/100;let r,n,s;if(0===e)return s=255*t,[s,s,s];r=t<.5?t*(1+e):t+e-t*e;const o=2*t-r,i=[0,0,0];for(let u=0;u<3;u++)n=D+1/3*-(u-1),n<0&&n++,n>1&&n--,s=6*n<1?o+6*(r-o)*n:2*n<1?r:3*n<2?o+(r-o)*(2/3-n)*6:o,i[u]=255*s;return i},Q.hsl.hsv=function(u){const D=u[0];let e=u[1]/100,t=u[2]/100,r=e;const n=Math.max(t,.01);t*=2,e*=t<=1?t:2-t,r*=n<=1?n:2-n;return[D,100*(0===t?2*r/(n+r):2*e/(t+e)),100*((t+e)/2)]},Q.hsv.rgb=function(u){const D=u[0]/60,e=u[1]/100;let t=u[2]/100;const r=Math.floor(D)%6,n=D-Math.floor(D),s=255*t*(1-e),o=255*t*(1-e*n),i=255*t*(1-e*(1-n));switch(t*=255,r){case 0:return[t,i,s];case 1:return[o,t,s];case 2:return[s,t,i];case 3:return[s,o,t];case 4:return[i,s,t];case 5:return[t,s,o]}},Q.hsv.hsl=function(u){const D=u[0],e=u[1]/100,t=u[2]/100,r=Math.max(t,.01);let n,s;s=(2-e)*t;const o=(2-e)*r;return n=e*r,n/=o<=1?o:2-o,n=n||0,s/=2,[D,100*n,100*s]},Q.hwb.rgb=function(u){const D=u[0]/360;let e=u[1]/100,t=u[2]/100;const r=e+t;let n;r>1&&(e/=r,t/=r);const s=Math.floor(6*D),o=1-t;n=6*D-s,0!=(1&s)&&(n=1-n);const i=e+n*(o-e);let a,l,c;switch(s){default:case 6:case 0:a=o,l=i,c=e;break;case 1:a=i,l=o,c=e;break;case 2:a=e,l=o,c=i;break;case 3:a=e,l=i,c=o;break;case 4:a=i,l=e,c=o;break;case 5:a=o,l=e,c=i}return[255*a,255*l,255*c]},Q.cmyk.rgb=function(u){const D=u[0]/100,e=u[1]/100,t=u[2]/100,r=u[3]/100;return[255*(1-Math.min(1,D*(1-r)+r)),255*(1-Math.min(1,e*(1-r)+r)),255*(1-Math.min(1,t*(1-r)+r))]},Q.xyz.rgb=function(u){const D=u[0]/100,e=u[1]/100,t=u[2]/100;let r,n,s;return r=3.2406*D+-1.5372*e+-.4986*t,n=-.9689*D+1.8758*e+.0415*t,s=.0557*D+-.204*e+1.057*t,r=r>.0031308?1.055*r**(1/2.4)-.055:12.92*r,n=n>.0031308?1.055*n**(1/2.4)-.055:12.92*n,s=s>.0031308?1.055*s**(1/2.4)-.055:12.92*s,r=Math.min(Math.max(0,r),1),n=Math.min(Math.max(0,n),1),s=Math.min(Math.max(0,s),1),[255*r,255*n,255*s]},Q.xyz.lab=function(u){let D=u[0],e=u[1],t=u[2];D/=95.047,e/=100,t/=108.883,D=D>.008856?D**(1/3):7.787*D+16/116,e=e>.008856?e**(1/3):7.787*e+16/116,t=t>.008856?t**(1/3):7.787*t+16/116;return[116*e-16,500*(D-e),200*(e-t)]},Q.lab.xyz=function(u){let D,e,t;e=(u[0]+16)/116,D=u[1]/500+e,t=e-u[2]/200;const r=e**3,n=D**3,s=t**3;return e=r>.008856?r:(e-16/116)/7.787,D=n>.008856?n:(D-16/116)/7.787,t=s>.008856?s:(t-16/116)/7.787,D*=95.047,e*=100,t*=108.883,[D,e,t]},Q.lab.lch=function(u){const D=u[0],e=u[1],t=u[2];let r;r=360*Math.atan2(t,e)/2/Math.PI,r<0&&(r+=360);return[D,Math.sqrt(e*e+t*t),r]},Q.lch.lab=function(u){const D=u[0],e=u[1],t=u[2]/360*2*Math.PI;return[D,e*Math.cos(t),e*Math.sin(t)]},Q.rgb.ansi16=function(u,D=null){const[e,t,r]=u;let n=null===D?Q.rgb.hsv(u)[2]:D;if(n=Math.round(n/50),0===n)return 30;let s=30+(Math.round(r/255)<<2|Math.round(t/255)<<1|Math.round(e/255));return 2===n&&(s+=60),s},Q.hsv.ansi16=function(u){return Q.rgb.ansi16(Q.hsv.rgb(u),u[2])},Q.rgb.ansi256=function(u){const D=u[0],e=u[1],t=u[2];if(D===e&&e===t)return D<8?16:D>248?231:Math.round((D-8)/247*24)+232;return 16+36*Math.round(D/255*5)+6*Math.round(e/255*5)+Math.round(t/255*5)},Q.ansi16.rgb=function(u){let D=u%10;if(0===D||7===D)return u>50&&(D+=3.5),D=D/10.5*255,[D,D,D];const e=.5*(1+~~(u>50));return[(1&D)*e*255,(D>>1&1)*e*255,(D>>2&1)*e*255]},Q.ansi256.rgb=function(u){if(u>=232){const D=10*(u-232)+8;return[D,D,D]}let D;u-=16;return[Math.floor(u/36)/5*255,Math.floor((D=u%36)/6)/5*255,D%6/5*255]},Q.rgb.hex=function(u){const D=(((255&Math.round(u[0]))<<16)+((255&Math.round(u[1]))<<8)+(255&Math.round(u[2]))).toString(16).toUpperCase();return"000000".substring(D.length)+D},Q.hex.rgb=function(u){const D=u.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!D)return[0,0,0];let e=D[0];3===D[0].length&&(e=e.split("").map(u=>u+u).join(""));const t=parseInt(e,16);return[t>>16&255,t>>8&255,255&t]},Q.rgb.hcg=function(u){const D=u[0]/255,e=u[1]/255,t=u[2]/255,r=Math.max(Math.max(D,e),t),n=Math.min(Math.min(D,e),t),s=r-n;let o,i;return o=s<1?n/(1-s):0,i=s<=0?0:r===D?(e-t)/s%6:r===e?2+(t-D)/s:4+(D-e)/s,i/=6,i%=1,[360*i,100*s,100*o]},Q.hsl.hcg=function(u){const D=u[1]/100,e=u[2]/100,t=e<.5?2*D*e:2*D*(1-e);let r=0;return t<1&&(r=(e-.5*t)/(1-t)),[u[0],100*t,100*r]},Q.hsv.hcg=function(u){const D=u[1]/100,e=u[2]/100,t=D*e;let r=0;return t<1&&(r=(e-t)/(1-t)),[u[0],100*t,100*r]},Q.hcg.rgb=function(u){const D=u[0]/360,e=u[1]/100,t=u[2]/100;if(0===e)return[255*t,255*t,255*t];const r=[0,0,0],n=D%1*6,s=n%1,o=1-s;let i=0;switch(Math.floor(n)){case 0:r[0]=1,r[1]=s,r[2]=0;break;case 1:r[0]=o,r[1]=1,r[2]=0;break;case 2:r[0]=0,r[1]=1,r[2]=s;break;case 3:r[0]=0,r[1]=o,r[2]=1;break;case 4:r[0]=s,r[1]=0,r[2]=1;break;default:r[0]=1,r[1]=0,r[2]=o}return i=(1-e)*t,[255*(e*r[0]+i),255*(e*r[1]+i),255*(e*r[2]+i)]},Q.hcg.hsv=function(u){const D=u[1]/100,e=D+u[2]/100*(1-D);let t=0;return e>0&&(t=D/e),[u[0],100*t,100*e]},Q.hcg.hsl=function(u){const D=u[1]/100,e=u[2]/100*(1-D)+.5*D;let t=0;return e>0&&e<.5?t=D/(2*e):e>=.5&&e<1&&(t=D/(2*(1-e))),[u[0],100*t,100*e]},Q.hcg.hwb=function(u){const D=u[1]/100,e=D+u[2]/100*(1-D);return[u[0],100*(e-D),100*(1-e)]},Q.hwb.hcg=function(u){const D=u[1]/100,e=1-u[2]/100,t=e-D;let r=0;return t<1&&(r=(e-t)/(1-t)),[u[0],100*t,100*r]},Q.apple.rgb=function(u){return[u[0]/65535*255,u[1]/65535*255,u[2]/65535*255]},Q.rgb.apple=function(u){return[u[0]/255*65535,u[1]/255*65535,u[2]/255*65535]},Q.gray.rgb=function(u){return[u[0]/100*255,u[0]/100*255,u[0]/100*255]},Q.gray.hsl=function(u){return[0,0,u[0]]},Q.gray.hsv=Q.gray.hsl,Q.gray.hwb=function(u){return[0,100,u[0]]},Q.gray.cmyk=function(u){return[0,0,0,u[0]]},Q.gray.lab=function(u){return[u[0],0,0]},Q.gray.hex=function(u){const D=255&Math.round(u[0]/100*255),e=((D<<16)+(D<<8)+D).toString(16).toUpperCase();return"000000".substring(e.length)+e},Q.rgb.gray=function(u){return[(u[0]+u[1]+u[2])/3/255*100]};const uu={};Object.keys(J).forEach(u=>{uu[u]={},Object.defineProperty(uu[u],"channels",{value:J[u].channels}),Object.defineProperty(uu[u],"labels",{value:J[u].labels});const D=function(u){const D=K(u),e={},t=Object.keys(D);for(let u=t.length,r=0;r<u;r++){const u=t[r];null!==D[u].parent&&(e[u]=X(u,D))}return e}(u);Object.keys(D).forEach(e=>{const t=D[e];uu[u][e]=function(u){const D=function(...D){const e=D[0];if(null==e)return e;e.length>1&&(D=e);const t=u(D);if("object"==typeof t)for(let u=t.length,D=0;D<u;D++)t[D]=Math.round(t[D]);return t};return"conversion"in u&&(D.conversion=u.conversion),D}(t),uu[u][e].raw=function(u){const D=function(...D){const e=D[0];return null==e?e:(e.length>1&&(D=e),u(D))};return"conversion"in u&&(D.conversion=u.conversion),D}(t)})});var Du=uu,eu=s((function(u){const D=(u,D)=>(...e)=>`[${u(...e)+D}m`,e=(u,D)=>(...e)=>{const t=u(...e);return`[${38+D};5;${t}m`},t=(u,D)=>(...e)=>{const t=u(...e);return`[${38+D};2;${t[0]};${t[1]};${t[2]}m`},r=u=>u,n=(u,D,e)=>[u,D,e],s=(u,D,e)=>{Object.defineProperty(u,D,{get:()=>{const t=e();return Object.defineProperty(u,D,{value:t,enumerable:!0,configurable:!0}),t},enumerable:!0,configurable:!0})};let o;const i=(u,D,e,t)=>{void 0===o&&(o=Du);const r=t?10:0,n={};for(const[t,s]of Object.entries(o)){const o="ansi16"===t?"ansi":t;t===D?n[o]=u(e,r):"object"==typeof s&&(n[o]=u(s[D],r))}return n};Object.defineProperty(u,"exports",{enumerable:!0,get:function(){const u=new Map,o={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};o.color.gray=o.color.blackBright,o.bgColor.bgGray=o.bgColor.bgBlackBright,o.color.grey=o.color.blackBright,o.bgColor.bgGrey=o.bgColor.bgBlackBright;for(const[D,e]of Object.entries(o)){for(const[D,t]of Object.entries(e))o[D]={open:`[${t[0]}m`,close:`[${t[1]}m`},e[D]=o[D],u.set(t[0],t[1]);Object.defineProperty(o,D,{value:e,enumerable:!1})}return Object.defineProperty(o,"codes",{value:u,enumerable:!1}),o.color.close="[39m",o.bgColor.close="[49m",s(o.color,"ansi",()=>i(D,"ansi16",r,!1)),s(o.color,"ansi256",()=>i(e,"ansi256",r,!1)),s(o.color,"ansi16m",()=>i(t,"rgb",n,!1)),s(o.bgColor,"ansi",()=>i(D,"ansi16",r,!0)),s(o.bgColor,"ansi256",()=>i(e,"ansi256",r,!0)),s(o.bgColor,"ansi16m",()=>i(t,"rgb",n,!0)),o}})})),tu=(u,D=process.argv)=>{const e=u.startsWith("-")?"":1===u.length?"-":"--",t=D.indexOf(e+u),r=D.indexOf("--");return-1!==t&&(-1===r||t<r)};const{env:ru}=process;let nu;function su(u){return 0!==u&&{level:u,hasBasic:!0,has256:u>=2,has16m:u>=3}}function ou(u,D){if(0===nu)return 0;if(tu("color=16m")||tu("color=full")||tu("color=truecolor"))return 3;if(tu("color=256"))return 2;if(u&&!D&&void 0===nu)return 0;const e=nu||0;if("dumb"===ru.TERM)return e;if("win32"===process.platform){const u=r.release().split(".");return Number(u[0])>=10&&Number(u[2])>=10586?Number(u[2])>=14931?3:2:1}if("CI"in ru)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(u=>u in ru)||"codeship"===ru.CI_NAME?1:e;if("TEAMCITY_VERSION"in ru)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(ru.TEAMCITY_VERSION)?1:0;if("GITHUB_ACTIONS"in ru)return 1;if("truecolor"===ru.COLORTERM)return 3;if("TERM_PROGRAM"in ru){const u=parseInt((ru.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(ru.TERM_PROGRAM){case"iTerm.app":return u>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(ru.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(ru.TERM)||"COLORTERM"in ru?1:e}tu("no-color")||tu("no-colors")||tu("color=false")||tu("color=never")?nu=0:(tu("color")||tu("colors")||tu("color=true")||tu("color=always"))&&(nu=1),"FORCE_COLOR"in ru&&(nu="true"===ru.FORCE_COLOR?1:"false"===ru.FORCE_COLOR?0:0===ru.FORCE_COLOR.length?1:Math.min(parseInt(ru.FORCE_COLOR,10),3));var iu={supportsColor:function(u){return su(ou(u,u&&u.isTTY))},stdout:su(ou(!0,n.isatty(1))),stderr:su(ou(!0,n.isatty(2)))};var au={stringReplaceAll:(u,D,e)=>{let t=u.indexOf(D);if(-1===t)return u;const r=D.length;let n=0,s="";do{s+=u.substr(n,t-n)+D+e,n=t+r,t=u.indexOf(D,n)}while(-1!==t);return s+=u.substr(n),s},stringEncaseCRLFWithFirstIndex:(u,D,e,t)=>{let r=0,n="";do{const s="\r"===u[t-1];n+=u.substr(r,(s?t-1:t)-r)+D+(s?"\r\n":"\n")+e,r=t+1,t=u.indexOf("\n",r)}while(-1!==t);return n+=u.substr(r),n}};const lu=/(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,cu=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,hu=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,Fu=/\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi,Cu=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function fu(u){const D="u"===u[0],e="{"===u[1];return D&&!e&&5===u.length||"x"===u[0]&&3===u.length?String.fromCharCode(parseInt(u.slice(1),16)):D&&e?String.fromCodePoint(parseInt(u.slice(2,-1),16)):Cu.get(u)||u}function Eu(u,D){const e=[],t=D.trim().split(/\s*,\s*/g);let r;for(const D of t){const t=Number(D);if(Number.isNaN(t)){if(!(r=D.match(hu)))throw new Error(`Invalid Chalk template style argument: ${D} (in style '${u}')`);e.push(r[2].replace(Fu,(u,D,e)=>D?fu(D):e))}else e.push(t)}return e}function gu(u){cu.lastIndex=0;const D=[];let e;for(;null!==(e=cu.exec(u));){const u=e[1];if(e[2]){const t=Eu(u,e[2]);D.push([u].concat(t))}else D.push([u])}return D}function du(u,D){const e={};for(const u of D)for(const D of u.styles)e[D[0]]=u.inverse?null:D.slice(1);let t=u;for(const[u,D]of Object.entries(e))if(Array.isArray(D)){if(!(u in t))throw new Error("Unknown Chalk style: "+u);t=D.length>0?t[u](...D):t[u]}return t}var pu=(u,D)=>{const e=[],t=[];let r=[];if(D.replace(lu,(D,n,s,o,i,a)=>{if(n)r.push(fu(n));else if(o){const D=r.join("");r=[],t.push(0===e.length?D:du(u,e)(D)),e.push({inverse:s,styles:gu(o)})}else if(i){if(0===e.length)throw new Error("Found extraneous } in Chalk template literal");t.push(du(u,e)(r.join(""))),r=[],e.pop()}else r.push(a)}),t.push(r.join("")),e.length>0){const u=`Chalk template literal is missing ${e.length} closing bracket${1===e.length?"":"s"} (\`}\`)`;throw new Error(u)}return t.join("")};const{stdout:mu,stderr:bu}=iu,{stringReplaceAll:yu,stringEncaseCRLFWithFirstIndex:Bu}=au,vu=["ansi","ansi","ansi256","ansi16m"],_u=Object.create(null);class Au{constructor(u){return wu(u)}}const wu=u=>{const D={};return((u,D={})=>{if(D.level&&!(Number.isInteger(D.level)&&D.level>=0&&D.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const e=mu?mu.level:0;u.level=void 0===D.level?e:D.level})(D,u),D.template=(...u)=>Lu(D.template,...u),Object.setPrototypeOf(D,Ou.prototype),Object.setPrototypeOf(D.template,D),D.template.constructor=()=>{throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.")},D.template.Instance=Au,D.template};function Ou(u){return wu(u)}for(const[u,D]of Object.entries(eu))_u[u]={get(){const e=ku(this,Iu(D.open,D.close,this._styler),this._isEmpty);return Object.defineProperty(this,u,{value:e}),e}};_u.visible={get(){const u=ku(this,this._styler,!0);return Object.defineProperty(this,"visible",{value:u}),u}};const Mu=["rgb","hex","keyword","hsl","hsv","hwb","ansi","ansi256"];for(const u of Mu)_u[u]={get(){const{level:D}=this;return function(...e){const t=Iu(eu.color[vu[D]][u](...e),eu.color.close,this._styler);return ku(this,t,this._isEmpty)}}};for(const u of Mu){_u["bg"+u[0].toUpperCase()+u.slice(1)]={get(){const{level:D}=this;return function(...e){const t=Iu(eu.bgColor[vu[D]][u](...e),eu.bgColor.close,this._styler);return ku(this,t,this._isEmpty)}}}}const Su=Object.defineProperties(()=>{},{..._u,level:{enumerable:!0,get(){return this._generator.level},set(u){this._generator.level=u}}}),Iu=(u,D,e)=>{let t,r;return void 0===e?(t=u,r=D):(t=e.openAll+u,r=D+e.closeAll),{open:u,close:D,openAll:t,closeAll:r,parent:e}},ku=(u,D,e)=>{const t=(...u)=>Ru(t,1===u.length?""+u[0]:u.join(" "));return Object.setPrototypeOf(t,Su),t._generator=u,t._styler=D,t._isEmpty=e,t},Ru=(u,D)=>{if(u.level<=0||!D)return u._isEmpty?"":D;let e=u._styler;if(void 0===e)return D;const{openAll:t,closeAll:r}=e;if(-1!==D.indexOf(""))for(;void 0!==e;)D=yu(D,e.close,e.open),e=e.parent;const n=D.indexOf("\n");return-1!==n&&(D=Bu(D,r,t,n)),t+D+r};let Tu;const Lu=(u,...D)=>{const[e]=D;if(!Array.isArray(e))return D.join(" ");const t=D.slice(1),r=[e.raw[0]];for(let u=1;u<e.length;u++)r.push(String(t[u-1]).replace(/[{}\\]/g,"\\$&"),String(e.raw[u]));return void 0===Tu&&(Tu=pu),Tu(u,r.join(""))};Object.defineProperties(Ou.prototype,_u);const $u=Ou();$u.supportsColor=mu,$u.stderr=Ou({level:bu?bu.level:0}),$u.stderr.supportsColor=bu;var xu=$u;const Uu={};function ju(u){let D=Uu[u];return D||(D="#"===u[0]?xu.hex(u):xu[u]||xu.keyword(u),Uu[u]=D,D)}const Pu={};const Nu={info:"cyan"},qu={0:"red",1:"yellow",2:"white",3:"green"},Yu={secondaryColor:"grey",formatOptions:{date:!0,colors:!0,compact:!1}},Hu={info:H("ℹ"),success:H("✔"),debug:H("›"),trace:H("›"),log:""};class Vu extends S{constructor(u){super(Object.assign({},Yu,u))}formatStack(u){const D=ju("grey"),e=ju("cyan");return"\n"+A(u).map(u=>"  "+u.replace(/^at +/,u=>D(u)).replace(/\((.+)\)/,(u,D)=>`(${e(D)})`)).join("\n")}formatType(u,D){const e=Nu[u.type]||qu[u.level]||this.options.secondaryColor;if(D)return function(u){let D=Pu[u];return D||(D="#"===u[0]?xu.bgHex(u):xu["bg"+u[0].toUpperCase()+u.slice(1)]||xu.bgKeyword(u),Pu[u]=D,D)}(e).black(` ${u.type.toUpperCase()} `);const t="string"==typeof Hu[u.type]?Hu[u.type]:u.icon||u.type;return t?ju(e)(t):""}formatLogObj(u,{width:D}){const[e,...t]=this.formatArgs(u.args).split("\n"),r=void 0!==u.badge?Boolean(u.badge):u.level<2,n=ju(this.options.secondaryColor),s=this.formatDate(u.date),o=s&&n(s),i=this.formatType(u,r),a=u.tag?n(u.tag):"",l=e.replace(/`([^`]+)`/g,(u,D)=>xu.cyan(D));let c;const h=this.filterAndJoin([i,l]),F=this.filterAndJoin([a,o]),C=D-$(h)-$(F)-2;return c=C>0&&D>=80?h+" ".repeat(C)+F:h,c+=t.length?"\n"+t.join("\n"):"",r?"\n"+c+"\n":c}}class Wu{constructor({stream:u}={}){this.stream=u||process.stdout}log(u){this.stream.write(JSON.stringify(u)+"\n")}}const Gu="undefined"!=typeof require?eval("require"):require;class zu{constructor(u){if(u&&u.log)this.logger=u;else{const D=Gu("winston");this.logger=D.createLogger(Object.assign({level:"info",format:D.format.simple(),transports:[new D.transports.Console]},u))}}log(u){const D=[].concat(u.args),e=D.shift();this.logger.log({level:Qu[u.level]||"info",label:u.tag,message:e,args:D,timestamp:u.date.getTime()/1e3})}}const Qu={0:"error",1:"warn",2:"info",3:"verbose",4:"debug",5:"silly"};global.consola||(global.consola=function(){let u=p.debug?4:3;process.env.CONSOLA_LEVEL&&(u=parseInt(process.env.CONSOLA_LEVEL)||u);const D=new _({level:u,reporters:[p.ci||p.test?new S:new Vu]});return D.Consola=_,D.BasicReporter=S,D.FancyReporter=Vu,D.JSONReporter=Wu,D.WinstonReporter=zu,D.LogLevel=m,D}());var Ju=global.consola;module.exports=Ju;


/***/ }),

/***/ 2437:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const fs = __nccwpck_require__(7147)
const path = __nccwpck_require__(1017)
const os = __nccwpck_require__(2037)
const crypto = __nccwpck_require__(6113)
const packageJson = __nccwpck_require__(9968)

const version = packageJson.version

const LINE = /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg

// Parse src into an Object
function parse (src) {
  const obj = {}

  // Convert buffer to string
  let lines = src.toString()

  // Convert line breaks to same format
  lines = lines.replace(/\r\n?/mg, '\n')

  let match
  while ((match = LINE.exec(lines)) != null) {
    const key = match[1]

    // Default undefined or null to empty string
    let value = (match[2] || '')

    // Remove whitespace
    value = value.trim()

    // Check if double quoted
    const maybeQuote = value[0]

    // Remove surrounding quotes
    value = value.replace(/^(['"`])([\s\S]*)\1$/mg, '$2')

    // Expand newlines if double quoted
    if (maybeQuote === '"') {
      value = value.replace(/\\n/g, '\n')
      value = value.replace(/\\r/g, '\r')
    }

    // Add to object
    obj[key] = value
  }

  return obj
}

function _parseVault (options) {
  const vaultPath = _vaultPath(options)

  // Parse .env.vault
  const result = DotenvModule.configDotenv({ path: vaultPath })
  if (!result.parsed) {
    throw new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)
  }

  // handle scenario for comma separated keys - for use with key rotation
  // example: DOTENV_KEY="dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenv.org/vault/.env.vault?environment=prod"
  const keys = _dotenvKey(options).split(',')
  const length = keys.length

  let decrypted
  for (let i = 0; i < length; i++) {
    try {
      // Get full key
      const key = keys[i].trim()

      // Get instructions for decrypt
      const attrs = _instructions(result, key)

      // Decrypt
      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)

      break
    } catch (error) {
      // last key
      if (i + 1 >= length) {
        throw error
      }
      // try next key
    }
  }

  // Parse decrypted .env string
  return DotenvModule.parse(decrypted)
}

function _log (message) {
  console.log(`[dotenv@${version}][INFO] ${message}`)
}

function _warn (message) {
  console.log(`[dotenv@${version}][WARN] ${message}`)
}

function _debug (message) {
  console.log(`[dotenv@${version}][DEBUG] ${message}`)
}

function _dotenvKey (options) {
  // prioritize developer directly setting options.DOTENV_KEY
  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {
    return options.DOTENV_KEY
  }

  // secondary infra already contains a DOTENV_KEY environment variable
  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {
    return process.env.DOTENV_KEY
  }

  // fallback to empty string
  return ''
}

function _instructions (result, dotenvKey) {
  // Parse DOTENV_KEY. Format is a URI
  let uri
  try {
    uri = new URL(dotenvKey)
  } catch (error) {
    if (error.code === 'ERR_INVALID_URL') {
      throw new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development')
    }

    throw error
  }

  // Get decrypt key
  const key = uri.password
  if (!key) {
    throw new Error('INVALID_DOTENV_KEY: Missing key part')
  }

  // Get environment
  const environment = uri.searchParams.get('environment')
  if (!environment) {
    throw new Error('INVALID_DOTENV_KEY: Missing environment part')
  }

  // Get ciphertext payload
  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`
  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION
  if (!ciphertext) {
    throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)
  }

  return { ciphertext, key }
}

function _vaultPath (options) {
  let dotenvPath = path.resolve(process.cwd(), '.env')

  if (options && options.path && options.path.length > 0) {
    dotenvPath = options.path
  }

  // Locate .env.vault
  return dotenvPath.endsWith('.vault') ? dotenvPath : `${dotenvPath}.vault`
}

function _resolveHome (envPath) {
  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath
}

function _configVault (options) {
  _log('Loading env from encrypted .env.vault')

  const parsed = DotenvModule._parseVault(options)

  let processEnv = process.env
  if (options && options.processEnv != null) {
    processEnv = options.processEnv
  }

  DotenvModule.populate(processEnv, parsed, options)

  return { parsed }
}

function configDotenv (options) {
  let dotenvPath = path.resolve(process.cwd(), '.env')
  let encoding = 'utf8'
  const debug = Boolean(options && options.debug)

  if (options) {
    if (options.path != null) {
      dotenvPath = _resolveHome(options.path)
    }
    if (options.encoding != null) {
      encoding = options.encoding
    }
  }

  try {
    // Specifying an encoding returns a string instead of a buffer
    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))

    let processEnv = process.env
    if (options && options.processEnv != null) {
      processEnv = options.processEnv
    }

    DotenvModule.populate(processEnv, parsed, options)

    return { parsed }
  } catch (e) {
    if (debug) {
      _debug(`Failed to load ${dotenvPath} ${e.message}`)
    }

    return { error: e }
  }
}

// Populates process.env from .env file
function config (options) {
  const vaultPath = _vaultPath(options)

  // fallback to original dotenv if DOTENV_KEY is not set
  if (_dotenvKey(options).length === 0) {
    return DotenvModule.configDotenv(options)
  }

  // dotenvKey exists but .env.vault file does not exist
  if (!fs.existsSync(vaultPath)) {
    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)

    return DotenvModule.configDotenv(options)
  }

  return DotenvModule._configVault(options)
}

function decrypt (encrypted, keyStr) {
  const key = Buffer.from(keyStr.slice(-64), 'hex')
  let ciphertext = Buffer.from(encrypted, 'base64')

  const nonce = ciphertext.slice(0, 12)
  const authTag = ciphertext.slice(-16)
  ciphertext = ciphertext.slice(12, -16)

  try {
    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)
    aesgcm.setAuthTag(authTag)
    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`
  } catch (error) {
    const isRange = error instanceof RangeError
    const invalidKeyLength = error.message === 'Invalid key length'
    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'

    if (isRange || invalidKeyLength) {
      const msg = 'INVALID_DOTENV_KEY: It must be 64 characters long (or more)'
      throw new Error(msg)
    } else if (decryptionFailed) {
      const msg = 'DECRYPTION_FAILED: Please check your DOTENV_KEY'
      throw new Error(msg)
    } else {
      console.error('Error: ', error.code)
      console.error('Error: ', error.message)
      throw error
    }
  }
}

// Populate process.env with parsed values
function populate (processEnv, parsed, options = {}) {
  const debug = Boolean(options && options.debug)
  const override = Boolean(options && options.override)

  if (typeof parsed !== 'object') {
    throw new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')
  }

  // Set process.env
  for (const key of Object.keys(parsed)) {
    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {
      if (override === true) {
        processEnv[key] = parsed[key]
      }

      if (debug) {
        if (override === true) {
          _debug(`"${key}" is already defined and WAS overwritten`)
        } else {
          _debug(`"${key}" is already defined and was NOT overwritten`)
        }
      }
    } else {
      processEnv[key] = parsed[key]
    }
  }
}

const DotenvModule = {
  configDotenv,
  _configVault,
  _parseVault,
  config,
  decrypt,
  parse,
  populate
}

module.exports.configDotenv = DotenvModule.configDotenv
module.exports._configVault = DotenvModule._configVault
module.exports._parseVault = DotenvModule._parseVault
module.exports.config = DotenvModule.config
module.exports.decrypt = DotenvModule.decrypt
module.exports.parse = DotenvModule.parse
module.exports.populate = DotenvModule.populate

module.exports = DotenvModule


/***/ }),

/***/ 9681:
/***/ ((module) => {

module.exports = flatten
flatten.flatten = flatten
flatten.unflatten = unflatten

function isBuffer (obj) {
  return obj &&
    obj.constructor &&
    (typeof obj.constructor.isBuffer === 'function') &&
    obj.constructor.isBuffer(obj)
}

function keyIdentity (key) {
  return key
}

function flatten (target, opts) {
  opts = opts || {}

  const delimiter = opts.delimiter || '.'
  const maxDepth = opts.maxDepth
  const transformKey = opts.transformKey || keyIdentity
  const output = {}

  function step (object, prev, currentDepth) {
    currentDepth = currentDepth || 1
    Object.keys(object).forEach(function (key) {
      const value = object[key]
      const isarray = opts.safe && Array.isArray(value)
      const type = Object.prototype.toString.call(value)
      const isbuffer = isBuffer(value)
      const isobject = (
        type === '[object Object]' ||
        type === '[object Array]'
      )

      const newKey = prev
        ? prev + delimiter + transformKey(key)
        : transformKey(key)

      if (!isarray && !isbuffer && isobject && Object.keys(value).length &&
        (!opts.maxDepth || currentDepth < maxDepth)) {
        return step(value, newKey, currentDepth + 1)
      }

      output[newKey] = value
    })
  }

  step(target)

  return output
}

function unflatten (target, opts) {
  opts = opts || {}

  const delimiter = opts.delimiter || '.'
  const overwrite = opts.overwrite || false
  const transformKey = opts.transformKey || keyIdentity
  const result = {}

  const isbuffer = isBuffer(target)
  if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {
    return target
  }

  // safely ensure that the key is
  // an integer.
  function getkey (key) {
    const parsedKey = Number(key)

    return (
      isNaN(parsedKey) ||
      key.indexOf('.') !== -1 ||
      opts.object
    ) ? key
      : parsedKey
  }

  function addKeys (keyPrefix, recipient, target) {
    return Object.keys(target).reduce(function (result, key) {
      result[keyPrefix + delimiter + key] = target[key]

      return result
    }, recipient)
  }

  function isEmpty (val) {
    const type = Object.prototype.toString.call(val)
    const isArray = type === '[object Array]'
    const isObject = type === '[object Object]'

    if (!val) {
      return true
    } else if (isArray) {
      return !val.length
    } else if (isObject) {
      return !Object.keys(val).length
    }
  }

  target = Object.keys(target).reduce(function (result, key) {
    const type = Object.prototype.toString.call(target[key])
    const isObject = (type === '[object Object]' || type === '[object Array]')
    if (!isObject || isEmpty(target[key])) {
      result[key] = target[key]
      return result
    } else {
      return addKeys(
        key,
        result,
        flatten(target[key], opts)
      )
    }
  }, {})

  Object.keys(target).forEach(function (key) {
    const split = key.split(delimiter).map(transformKey)
    let key1 = getkey(split.shift())
    let key2 = getkey(split[0])
    let recipient = result

    while (key2 !== undefined) {
      if (key1 === '__proto__') {
        return
      }

      const type = Object.prototype.toString.call(recipient[key1])
      const isobject = (
        type === '[object Object]' ||
        type === '[object Array]'
      )

      // do not write over falsey, non-undefined values if overwrite is false
      if (!overwrite && !isobject && typeof recipient[key1] !== 'undefined') {
        return
      }

      if ((overwrite && !isobject) || (!overwrite && recipient[key1] == null)) {
        recipient[key1] = (
          typeof key2 === 'number' &&
          !opts.object ? [] : {}
        )
      }

      recipient = recipient[key1]
      if (split.length > 0) {
        key1 = getkey(split.shift())
        key2 = getkey(split[0])
      }
    }

    // unflatten again for 'messy objects'
    recipient[key1] = unflatten(target[key], opts)
  })

  return result
}


/***/ }),

/***/ 7462:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(()=>{var __webpack_modules__={"./node_modules/.pnpm/@ampproject+remapping@2.2.1/node_modules/@ampproject/remapping/dist/remapping.umd.js":function(module,__unused_webpack_exports,__nested_webpack_require_180__){module.exports=function(traceMapping,genMapping){"use strict";const SOURCELESS_MAPPING=SegmentObject("",-1,-1,"",null),EMPTY_SOURCES=[];function SegmentObject(source,line,column,name,content){return{source,line,column,name,content}}function Source(map,sources,source,content){return{map,sources,source,content}}function MapSource(map,sources){return Source(map,sources,"",null)}function OriginalSource(source,content){return Source(null,EMPTY_SOURCES,source,content)}function traceMappings(tree){const gen=new genMapping.GenMapping({file:tree.map.file}),{sources:rootSources,map}=tree,rootNames=map.names,rootMappings=traceMapping.decodedMappings(map);for(let i=0;i<rootMappings.length;i++){const segments=rootMappings[i];for(let j=0;j<segments.length;j++){const segment=segments[j],genCol=segment[0];let traced=SOURCELESS_MAPPING;if(1!==segment.length&&(traced=originalPositionFor(rootSources[segment[1]],segment[2],segment[3],5===segment.length?rootNames[segment[4]]:""),null==traced))continue;const{column,line,name,content,source}=traced;genMapping.maybeAddSegment(gen,i,genCol,source,line,column,name),source&&null!=content&&genMapping.setSourceContent(gen,source,content)}}return gen}function originalPositionFor(source,line,column,name){if(!source.map)return SegmentObject(source.source,line,column,name,source.content);const segment=traceMapping.traceSegment(source.map,line,column);return null==segment?null:1===segment.length?SOURCELESS_MAPPING:originalPositionFor(source.sources[segment[1]],segment[2],segment[3],5===segment.length?source.map.names[segment[4]]:name)}function asArray(value){return Array.isArray(value)?value:[value]}function buildSourceMapTree(input,loader){const maps=asArray(input).map((m=>new traceMapping.TraceMap(m,""))),map=maps.pop();for(let i=0;i<maps.length;i++)if(maps[i].sources.length>1)throw new Error(`Transformation map ${i} must have exactly one source file.\nDid you specify these with the most recent transformation maps first?`);let tree=build(map,loader,"",0);for(let i=maps.length-1;i>=0;i--)tree=MapSource(maps[i],[tree]);return tree}function build(map,loader,importer,importerDepth){const{resolvedSources,sourcesContent}=map,depth=importerDepth+1;return MapSource(map,resolvedSources.map(((sourceFile,i)=>{const ctx={importer,depth,source:sourceFile||"",content:void 0},sourceMap=loader(ctx.source,ctx),{source,content}=ctx;return sourceMap?build(new traceMapping.TraceMap(sourceMap,source),loader,source,depth):OriginalSource(source,void 0!==content?content:sourcesContent?sourcesContent[i]:null)})))}class SourceMap{constructor(map,options){const out=options.decodedMappings?genMapping.toDecodedMap(map):genMapping.toEncodedMap(map);this.version=out.version,this.file=out.file,this.mappings=out.mappings,this.names=out.names,this.sourceRoot=out.sourceRoot,this.sources=out.sources,options.excludeContent||(this.sourcesContent=out.sourcesContent)}toString(){return JSON.stringify(this)}}function remapping(input,loader,options){const opts="object"==typeof options?options:{excludeContent:!!options,decodedMappings:!1},tree=buildSourceMapTree(input,loader);return new SourceMap(traceMappings(tree),opts)}return remapping}(__nested_webpack_require_180__("./node_modules/.pnpm/@jridgewell+trace-mapping@0.3.18/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js"),__nested_webpack_require_180__("./node_modules/.pnpm/@jridgewell+gen-mapping@0.3.3/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.umd.js"))},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files lazy recursive":module=>{function webpackEmptyAsyncContext(req){return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=()=>[],webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files lazy recursive",module.exports=webpackEmptyAsyncContext},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive",module.exports=webpackEmptyContext},"./node_modules/.pnpm/@babel+plugin-syntax-class-properties@7.12.13_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-class-properties/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_4831__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_4831__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js").declare)((api=>(api.assertVersion(7),{name:"syntax-class-properties",manipulateOptions(opts,parserOpts){parserOpts.plugins.push("classProperties","classPrivateProperties","classPrivateMethods")}})));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-syntax-export-namespace-from@7.8.3_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-export-namespace-from/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_5510__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_5510__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js").declare)((api=>(api.assertVersion(7),{name:"syntax-export-namespace-from",manipulateOptions(opts,parserOpts){parserOpts.plugins.push("exportNamespaceFrom")}})));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-syntax-nullish-coalescing-operator@7.8.3_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-nullish-coalescing-operator/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_6163__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_6163__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js").declare)((api=>(api.assertVersion(7),{name:"syntax-nullish-coalescing-operator",manipulateOptions(opts,parserOpts){parserOpts.plugins.push("nullishCoalescingOperator")}})));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-syntax-optional-chaining@7.8.3_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-optional-chaining/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_6808__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_6808__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js").declare)((api=>(api.assertVersion(7),{name:"syntax-optional-chaining",manipulateOptions(opts,parserOpts){parserOpts.plugins.push("optionalChaining")}})));exports.default=_default},"./node_modules/.pnpm/@jridgewell+gen-mapping@0.3.3/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.umd.js":function(__unused_webpack_module,exports,__nested_webpack_require_7404__){!function(exports,setArray,sourcemapCodec,traceMapping){"use strict";const COLUMN=0,SOURCES_INDEX=1,SOURCE_LINE=2,SOURCE_COLUMN=3,NAMES_INDEX=4,NO_NAME=-1;let addSegmentInternal;exports.addSegment=void 0,exports.addMapping=void 0,exports.maybeAddSegment=void 0,exports.maybeAddMapping=void 0,exports.setSourceContent=void 0,exports.toDecodedMap=void 0,exports.toEncodedMap=void 0,exports.fromMap=void 0,exports.allMappings=void 0;class GenMapping{constructor({file,sourceRoot}={}){this._names=new setArray.SetArray,this._sources=new setArray.SetArray,this._sourcesContent=[],this._mappings=[],this.file=file,this.sourceRoot=sourceRoot}}function getLine(mappings,index){for(let i=mappings.length;i<=index;i++)mappings[i]=[];return mappings[index]}function getColumnIndex(line,genColumn){let index=line.length;for(let i=index-1;i>=0&&!(genColumn>=line[i][COLUMN]);index=i--);return index}function insert(array,index,value){for(let i=array.length;i>index;i--)array[i]=array[i-1];array[index]=value}function removeEmptyFinalLines(mappings){const{length}=mappings;let len=length;for(let i=len-1;i>=0&&!(mappings[i].length>0);len=i,i--);len<length&&(mappings.length=len)}function putAll(strarr,array){for(let i=0;i<array.length;i++)setArray.put(strarr,array[i])}function skipSourceless(line,index){return 0===index||1===line[index-1].length}function skipSource(line,index,sourcesIndex,sourceLine,sourceColumn,namesIndex){if(0===index)return!1;const prev=line[index-1];return 1!==prev.length&&sourcesIndex===prev[SOURCES_INDEX]&&sourceLine===prev[SOURCE_LINE]&&sourceColumn===prev[SOURCE_COLUMN]&&namesIndex===(5===prev.length?prev[NAMES_INDEX]:NO_NAME)}function addMappingInternal(skipable,map,mapping){const{generated,source,original,name,content}=mapping;if(!source)return addSegmentInternal(skipable,map,generated.line-1,generated.column,null,null,null,null,null);const s=source;return addSegmentInternal(skipable,map,generated.line-1,generated.column,s,original.line-1,original.column,name,content)}exports.addSegment=(map,genLine,genColumn,source,sourceLine,sourceColumn,name,content)=>addSegmentInternal(!1,map,genLine,genColumn,source,sourceLine,sourceColumn,name,content),exports.maybeAddSegment=(map,genLine,genColumn,source,sourceLine,sourceColumn,name,content)=>addSegmentInternal(!0,map,genLine,genColumn,source,sourceLine,sourceColumn,name,content),exports.addMapping=(map,mapping)=>addMappingInternal(!1,map,mapping),exports.maybeAddMapping=(map,mapping)=>addMappingInternal(!0,map,mapping),exports.setSourceContent=(map,source,content)=>{const{_sources:sources,_sourcesContent:sourcesContent}=map;sourcesContent[setArray.put(sources,source)]=content},exports.toDecodedMap=map=>{const{file,sourceRoot,_mappings:mappings,_sources:sources,_sourcesContent:sourcesContent,_names:names}=map;return removeEmptyFinalLines(mappings),{version:3,file:file||void 0,names:names.array,sourceRoot:sourceRoot||void 0,sources:sources.array,sourcesContent,mappings}},exports.toEncodedMap=map=>{const decoded=exports.toDecodedMap(map);return Object.assign(Object.assign({},decoded),{mappings:sourcemapCodec.encode(decoded.mappings)})},exports.allMappings=map=>{const out=[],{_mappings:mappings,_sources:sources,_names:names}=map;for(let i=0;i<mappings.length;i++){const line=mappings[i];for(let j=0;j<line.length;j++){const seg=line[j],generated={line:i+1,column:seg[COLUMN]};let source,original,name;1!==seg.length&&(source=sources.array[seg[SOURCES_INDEX]],original={line:seg[SOURCE_LINE]+1,column:seg[SOURCE_COLUMN]},5===seg.length&&(name=names.array[seg[NAMES_INDEX]])),out.push({generated,source,original,name})}}return out},exports.fromMap=input=>{const map=new traceMapping.TraceMap(input),gen=new GenMapping({file:map.file,sourceRoot:map.sourceRoot});return putAll(gen._names,map.names),putAll(gen._sources,map.sources),gen._sourcesContent=map.sourcesContent||map.sources.map((()=>null)),gen._mappings=traceMapping.decodedMappings(map),gen},addSegmentInternal=(skipable,map,genLine,genColumn,source,sourceLine,sourceColumn,name,content)=>{const{_mappings:mappings,_sources:sources,_sourcesContent:sourcesContent,_names:names}=map,line=getLine(mappings,genLine),index=getColumnIndex(line,genColumn);if(!source){if(skipable&&skipSourceless(line,index))return;return insert(line,index,[genColumn])}const sourcesIndex=setArray.put(sources,source),namesIndex=name?setArray.put(names,name):NO_NAME;if(sourcesIndex===sourcesContent.length&&(sourcesContent[sourcesIndex]=null!=content?content:null),!skipable||!skipSource(line,index,sourcesIndex,sourceLine,sourceColumn,namesIndex))return insert(line,index,name?[genColumn,sourcesIndex,sourceLine,sourceColumn,namesIndex]:[genColumn,sourcesIndex,sourceLine,sourceColumn])},exports.GenMapping=GenMapping,Object.defineProperty(exports,"__esModule",{value:!0})}(exports,__nested_webpack_require_7404__("./node_modules/.pnpm/@jridgewell+set-array@1.1.2/node_modules/@jridgewell/set-array/dist/set-array.umd.js"),__nested_webpack_require_7404__("./node_modules/.pnpm/@jridgewell+sourcemap-codec@1.4.15/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js"),__nested_webpack_require_7404__("./node_modules/.pnpm/@jridgewell+trace-mapping@0.3.18/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js"))},"./node_modules/.pnpm/@jridgewell+resolve-uri@3.1.0/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":function(module){module.exports=function(){"use strict";const schemeRegex=/^[\w+.-]+:\/\//,urlRegex=/^([\w+.-]+:)\/\/([^@/#?]*@)?([^:/#?]*)(:\d+)?(\/[^#?]*)?(\?[^#]*)?(#.*)?/,fileRegex=/^file:(?:\/\/((?![a-z]:)[^/#?]*)?)?(\/?[^#?]*)(\?[^#]*)?(#.*)?/i;var UrlType;function isAbsoluteUrl(input){return schemeRegex.test(input)}function isSchemeRelativeUrl(input){return input.startsWith("//")}function isAbsolutePath(input){return input.startsWith("/")}function isFileUrl(input){return input.startsWith("file:")}function isRelative(input){return/^[.?#]/.test(input)}function parseAbsoluteUrl(input){const match=urlRegex.exec(input);return makeUrl(match[1],match[2]||"",match[3],match[4]||"",match[5]||"/",match[6]||"",match[7]||"")}function parseFileUrl(input){const match=fileRegex.exec(input),path=match[2];return makeUrl("file:","",match[1]||"","",isAbsolutePath(path)?path:"/"+path,match[3]||"",match[4]||"")}function makeUrl(scheme,user,host,port,path,query,hash){return{scheme,user,host,port,path,query,hash,type:UrlType.Absolute}}function parseUrl(input){if(isSchemeRelativeUrl(input)){const url=parseAbsoluteUrl("http:"+input);return url.scheme="",url.type=UrlType.SchemeRelative,url}if(isAbsolutePath(input)){const url=parseAbsoluteUrl("http://foo.com"+input);return url.scheme="",url.host="",url.type=UrlType.AbsolutePath,url}if(isFileUrl(input))return parseFileUrl(input);if(isAbsoluteUrl(input))return parseAbsoluteUrl(input);const url=parseAbsoluteUrl("http://foo.com/"+input);return url.scheme="",url.host="",url.type=input?input.startsWith("?")?UrlType.Query:input.startsWith("#")?UrlType.Hash:UrlType.RelativePath:UrlType.Empty,url}function stripPathFilename(path){if(path.endsWith("/.."))return path;const index=path.lastIndexOf("/");return path.slice(0,index+1)}function mergePaths(url,base){normalizePath(base,base.type),"/"===url.path?url.path=base.path:url.path=stripPathFilename(base.path)+url.path}function normalizePath(url,type){const rel=type<=UrlType.RelativePath,pieces=url.path.split("/");let pointer=1,positive=0,addTrailingSlash=!1;for(let i=1;i<pieces.length;i++){const piece=pieces[i];piece?(addTrailingSlash=!1,"."!==piece&&(".."!==piece?(pieces[pointer++]=piece,positive++):positive?(addTrailingSlash=!0,positive--,pointer--):rel&&(pieces[pointer++]=piece))):addTrailingSlash=!0}let path="";for(let i=1;i<pointer;i++)path+="/"+pieces[i];(!path||addTrailingSlash&&!path.endsWith("/.."))&&(path+="/"),url.path=path}function resolve(input,base){if(!input&&!base)return"";const url=parseUrl(input);let inputType=url.type;if(base&&inputType!==UrlType.Absolute){const baseUrl=parseUrl(base),baseType=baseUrl.type;switch(inputType){case UrlType.Empty:url.hash=baseUrl.hash;case UrlType.Hash:url.query=baseUrl.query;case UrlType.Query:case UrlType.RelativePath:mergePaths(url,baseUrl);case UrlType.AbsolutePath:url.user=baseUrl.user,url.host=baseUrl.host,url.port=baseUrl.port;case UrlType.SchemeRelative:url.scheme=baseUrl.scheme}baseType>inputType&&(inputType=baseType)}normalizePath(url,inputType);const queryHash=url.query+url.hash;switch(inputType){case UrlType.Hash:case UrlType.Query:return queryHash;case UrlType.RelativePath:{const path=url.path.slice(1);return path?isRelative(base||input)&&!isRelative(path)?"./"+path+queryHash:path+queryHash:queryHash||"."}case UrlType.AbsolutePath:return url.path+queryHash;default:return url.scheme+"//"+url.user+url.host+url.port+url.path+queryHash}}return function(UrlType){UrlType[UrlType.Empty=1]="Empty",UrlType[UrlType.Hash=2]="Hash",UrlType[UrlType.Query=3]="Query",UrlType[UrlType.RelativePath=4]="RelativePath",UrlType[UrlType.AbsolutePath=5]="AbsolutePath",UrlType[UrlType.SchemeRelative=6]="SchemeRelative",UrlType[UrlType.Absolute=7]="Absolute"}(UrlType||(UrlType={})),resolve}()},"./node_modules/.pnpm/@jridgewell+set-array@1.1.2/node_modules/@jridgewell/set-array/dist/set-array.umd.js":function(__unused_webpack_module,exports){!function(exports){"use strict";exports.get=void 0,exports.put=void 0,exports.pop=void 0;class SetArray{constructor(){this._indexes={__proto__:null},this.array=[]}}exports.get=(strarr,key)=>strarr._indexes[key],exports.put=(strarr,key)=>{const index=exports.get(strarr,key);if(void 0!==index)return index;const{array,_indexes:indexes}=strarr;return indexes[key]=array.push(key)-1},exports.pop=strarr=>{const{array,_indexes:indexes}=strarr;0!==array.length&&(indexes[array.pop()]=void 0)},exports.SetArray=SetArray,Object.defineProperty(exports,"__esModule",{value:!0})}(exports)},"./node_modules/.pnpm/@jridgewell+sourcemap-codec@1.4.14/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":function(__unused_webpack_module,exports){!function(exports){"use strict";const comma=",".charCodeAt(0),semicolon=";".charCodeAt(0),chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",intToChar=new Uint8Array(64),charToInt=new Uint8Array(128);for(let i=0;i<chars.length;i++){const c=chars.charCodeAt(i);intToChar[i]=c,charToInt[c]=i}const td="undefined"!=typeof TextDecoder?new TextDecoder:"undefined"!=typeof Buffer?{decode:buf=>Buffer.from(buf.buffer,buf.byteOffset,buf.byteLength).toString()}:{decode(buf){let out="";for(let i=0;i<buf.length;i++)out+=String.fromCharCode(buf[i]);return out}};function decode(mappings){const state=new Int32Array(5),decoded=[];let index=0;do{const semi=indexOf(mappings,index),line=[];let sorted=!0,lastCol=0;state[0]=0;for(let i=index;i<semi;i++){let seg;i=decodeInteger(mappings,i,state,0);const col=state[0];col<lastCol&&(sorted=!1),lastCol=col,hasMoreVlq(mappings,i,semi)?(i=decodeInteger(mappings,i,state,1),i=decodeInteger(mappings,i,state,2),i=decodeInteger(mappings,i,state,3),hasMoreVlq(mappings,i,semi)?(i=decodeInteger(mappings,i,state,4),seg=[col,state[1],state[2],state[3],state[4]]):seg=[col,state[1],state[2],state[3]]):seg=[col],line.push(seg)}sorted||sort(line),decoded.push(line),index=semi+1}while(index<=mappings.length);return decoded}function indexOf(mappings,index){const idx=mappings.indexOf(";",index);return-1===idx?mappings.length:idx}function decodeInteger(mappings,pos,state,j){let value=0,shift=0,integer=0;do{const c=mappings.charCodeAt(pos++);integer=charToInt[c],value|=(31&integer)<<shift,shift+=5}while(32&integer);const shouldNegate=1&value;return value>>>=1,shouldNegate&&(value=-2147483648|-value),state[j]+=value,pos}function hasMoreVlq(mappings,i,length){return!(i>=length)&&mappings.charCodeAt(i)!==comma}function sort(line){line.sort(sortComparator)}function sortComparator(a,b){return a[0]-b[0]}function encode(decoded){const state=new Int32Array(5),bufLength=16384,subLength=bufLength-36,buf=new Uint8Array(bufLength),sub=buf.subarray(0,subLength);let pos=0,out="";for(let i=0;i<decoded.length;i++){const line=decoded[i];if(i>0&&(pos===bufLength&&(out+=td.decode(buf),pos=0),buf[pos++]=semicolon),0!==line.length){state[0]=0;for(let j=0;j<line.length;j++){const segment=line[j];pos>subLength&&(out+=td.decode(sub),buf.copyWithin(0,subLength,pos),pos-=subLength),j>0&&(buf[pos++]=comma),pos=encodeInteger(buf,pos,state,segment,0),1!==segment.length&&(pos=encodeInteger(buf,pos,state,segment,1),pos=encodeInteger(buf,pos,state,segment,2),pos=encodeInteger(buf,pos,state,segment,3),4!==segment.length&&(pos=encodeInteger(buf,pos,state,segment,4)))}}}return out+td.decode(buf.subarray(0,pos))}function encodeInteger(buf,pos,state,segment,j){const next=segment[j];let num=next-state[j];state[j]=next,num=num<0?-num<<1|1:num<<1;do{let clamped=31&num;num>>>=5,num>0&&(clamped|=32),buf[pos++]=intToChar[clamped]}while(num>0);return pos}exports.decode=decode,exports.encode=encode,Object.defineProperty(exports,"__esModule",{value:!0})}(exports)},"./node_modules/.pnpm/@jridgewell+sourcemap-codec@1.4.15/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":function(__unused_webpack_module,exports){!function(exports){"use strict";const comma=",".charCodeAt(0),semicolon=";".charCodeAt(0),chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",intToChar=new Uint8Array(64),charToInt=new Uint8Array(128);for(let i=0;i<chars.length;i++){const c=chars.charCodeAt(i);intToChar[i]=c,charToInt[c]=i}const td="undefined"!=typeof TextDecoder?new TextDecoder:"undefined"!=typeof Buffer?{decode:buf=>Buffer.from(buf.buffer,buf.byteOffset,buf.byteLength).toString()}:{decode(buf){let out="";for(let i=0;i<buf.length;i++)out+=String.fromCharCode(buf[i]);return out}};function decode(mappings){const state=new Int32Array(5),decoded=[];let index=0;do{const semi=indexOf(mappings,index),line=[];let sorted=!0,lastCol=0;state[0]=0;for(let i=index;i<semi;i++){let seg;i=decodeInteger(mappings,i,state,0);const col=state[0];col<lastCol&&(sorted=!1),lastCol=col,hasMoreVlq(mappings,i,semi)?(i=decodeInteger(mappings,i,state,1),i=decodeInteger(mappings,i,state,2),i=decodeInteger(mappings,i,state,3),hasMoreVlq(mappings,i,semi)?(i=decodeInteger(mappings,i,state,4),seg=[col,state[1],state[2],state[3],state[4]]):seg=[col,state[1],state[2],state[3]]):seg=[col],line.push(seg)}sorted||sort(line),decoded.push(line),index=semi+1}while(index<=mappings.length);return decoded}function indexOf(mappings,index){const idx=mappings.indexOf(";",index);return-1===idx?mappings.length:idx}function decodeInteger(mappings,pos,state,j){let value=0,shift=0,integer=0;do{const c=mappings.charCodeAt(pos++);integer=charToInt[c],value|=(31&integer)<<shift,shift+=5}while(32&integer);const shouldNegate=1&value;return value>>>=1,shouldNegate&&(value=-2147483648|-value),state[j]+=value,pos}function hasMoreVlq(mappings,i,length){return!(i>=length)&&mappings.charCodeAt(i)!==comma}function sort(line){line.sort(sortComparator)}function sortComparator(a,b){return a[0]-b[0]}function encode(decoded){const state=new Int32Array(5),bufLength=16384,subLength=bufLength-36,buf=new Uint8Array(bufLength),sub=buf.subarray(0,subLength);let pos=0,out="";for(let i=0;i<decoded.length;i++){const line=decoded[i];if(i>0&&(pos===bufLength&&(out+=td.decode(buf),pos=0),buf[pos++]=semicolon),0!==line.length){state[0]=0;for(let j=0;j<line.length;j++){const segment=line[j];pos>subLength&&(out+=td.decode(sub),buf.copyWithin(0,subLength,pos),pos-=subLength),j>0&&(buf[pos++]=comma),pos=encodeInteger(buf,pos,state,segment,0),1!==segment.length&&(pos=encodeInteger(buf,pos,state,segment,1),pos=encodeInteger(buf,pos,state,segment,2),pos=encodeInteger(buf,pos,state,segment,3),4!==segment.length&&(pos=encodeInteger(buf,pos,state,segment,4)))}}}return out+td.decode(buf.subarray(0,pos))}function encodeInteger(buf,pos,state,segment,j){const next=segment[j];let num=next-state[j];state[j]=next,num=num<0?-num<<1|1:num<<1;do{let clamped=31&num;num>>>=5,num>0&&(clamped|=32),buf[pos++]=intToChar[clamped]}while(num>0);return pos}exports.decode=decode,exports.encode=encode,Object.defineProperty(exports,"__esModule",{value:!0})}(exports)},"./node_modules/.pnpm/@jridgewell+trace-mapping@0.3.18/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js":function(__unused_webpack_module,exports,__nested_webpack_require_23754__){!function(exports,sourcemapCodec,resolveUri){"use strict";function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var resolveUri__default=_interopDefaultLegacy(resolveUri);function resolve(input,base){return base&&!base.endsWith("/")&&(base+="/"),resolveUri__default.default(input,base)}function stripFilename(path){if(!path)return"";const index=path.lastIndexOf("/");return path.slice(0,index+1)}const COLUMN=0,SOURCES_INDEX=1,SOURCE_LINE=2,SOURCE_COLUMN=3,NAMES_INDEX=4,REV_GENERATED_LINE=1,REV_GENERATED_COLUMN=2;function maybeSort(mappings,owned){const unsortedIndex=nextUnsortedSegmentLine(mappings,0);if(unsortedIndex===mappings.length)return mappings;owned||(mappings=mappings.slice());for(let i=unsortedIndex;i<mappings.length;i=nextUnsortedSegmentLine(mappings,i+1))mappings[i]=sortSegments(mappings[i],owned);return mappings}function nextUnsortedSegmentLine(mappings,start){for(let i=start;i<mappings.length;i++)if(!isSorted(mappings[i]))return i;return mappings.length}function isSorted(line){for(let j=1;j<line.length;j++)if(line[j][COLUMN]<line[j-1][COLUMN])return!1;return!0}function sortSegments(line,owned){return owned||(line=line.slice()),line.sort(sortComparator)}function sortComparator(a,b){return a[COLUMN]-b[COLUMN]}let found=!1;function binarySearch(haystack,needle,low,high){for(;low<=high;){const mid=low+(high-low>>1),cmp=haystack[mid][COLUMN]-needle;if(0===cmp)return found=!0,mid;cmp<0?low=mid+1:high=mid-1}return found=!1,low-1}function upperBound(haystack,needle,index){for(let i=index+1;i<haystack.length&&haystack[i][COLUMN]===needle;index=i++);return index}function lowerBound(haystack,needle,index){for(let i=index-1;i>=0&&haystack[i][COLUMN]===needle;index=i--);return index}function memoizedState(){return{lastKey:-1,lastNeedle:-1,lastIndex:-1}}function memoizedBinarySearch(haystack,needle,state,key){const{lastKey,lastNeedle,lastIndex}=state;let low=0,high=haystack.length-1;if(key===lastKey){if(needle===lastNeedle)return found=-1!==lastIndex&&haystack[lastIndex][COLUMN]===needle,lastIndex;needle>=lastNeedle?low=-1===lastIndex?0:lastIndex:high=lastIndex}return state.lastKey=key,state.lastNeedle=needle,state.lastIndex=binarySearch(haystack,needle,low,high)}function buildBySources(decoded,memos){const sources=memos.map(buildNullArray);for(let i=0;i<decoded.length;i++){const line=decoded[i];for(let j=0;j<line.length;j++){const seg=line[j];if(1===seg.length)continue;const sourceIndex=seg[SOURCES_INDEX],sourceLine=seg[SOURCE_LINE],sourceColumn=seg[SOURCE_COLUMN],originalSource=sources[sourceIndex],originalLine=originalSource[sourceLine]||(originalSource[sourceLine]=[]),memo=memos[sourceIndex],index=upperBound(originalLine,sourceColumn,memoizedBinarySearch(originalLine,sourceColumn,memo,sourceLine));insert(originalLine,memo.lastIndex=index+1,[sourceColumn,i,seg[COLUMN]])}}return sources}function insert(array,index,value){for(let i=array.length;i>index;i--)array[i]=array[i-1];array[index]=value}function buildNullArray(){return{__proto__:null}}const AnyMap=function(map,mapUrl){const parsed="string"==typeof map?JSON.parse(map):map;if(!("sections"in parsed))return new TraceMap(parsed,mapUrl);const mappings=[],sources=[],sourcesContent=[],names=[];recurse(parsed,mapUrl,mappings,sources,sourcesContent,names,0,0,1/0,1/0);const joined={version:3,file:parsed.file,names,sources,sourcesContent,mappings};return exports.presortedDecodedMap(joined)};function recurse(input,mapUrl,mappings,sources,sourcesContent,names,lineOffset,columnOffset,stopLine,stopColumn){const{sections}=input;for(let i=0;i<sections.length;i++){const{map,offset}=sections[i];let sl=stopLine,sc=stopColumn;if(i+1<sections.length){const nextOffset=sections[i+1].offset;sl=Math.min(stopLine,lineOffset+nextOffset.line),sl===stopLine?sc=Math.min(stopColumn,columnOffset+nextOffset.column):sl<stopLine&&(sc=columnOffset+nextOffset.column)}addSection(map,mapUrl,mappings,sources,sourcesContent,names,lineOffset+offset.line,columnOffset+offset.column,sl,sc)}}function addSection(input,mapUrl,mappings,sources,sourcesContent,names,lineOffset,columnOffset,stopLine,stopColumn){if("sections"in input)return recurse(...arguments);const map=new TraceMap(input,mapUrl),sourcesOffset=sources.length,namesOffset=names.length,decoded=exports.decodedMappings(map),{resolvedSources,sourcesContent:contents}=map;if(append(sources,resolvedSources),append(names,map.names),contents)append(sourcesContent,contents);else for(let i=0;i<resolvedSources.length;i++)sourcesContent.push(null);for(let i=0;i<decoded.length;i++){const lineI=lineOffset+i;if(lineI>stopLine)return;const out=getLine(mappings,lineI),cOffset=0===i?columnOffset:0,line=decoded[i];for(let j=0;j<line.length;j++){const seg=line[j],column=cOffset+seg[COLUMN];if(lineI===stopLine&&column>=stopColumn)return;if(1===seg.length){out.push([column]);continue}const sourcesIndex=sourcesOffset+seg[SOURCES_INDEX],sourceLine=seg[SOURCE_LINE],sourceColumn=seg[SOURCE_COLUMN];out.push(4===seg.length?[column,sourcesIndex,sourceLine,sourceColumn]:[column,sourcesIndex,sourceLine,sourceColumn,namesOffset+seg[NAMES_INDEX]])}}}function append(arr,other){for(let i=0;i<other.length;i++)arr.push(other[i])}function getLine(arr,index){for(let i=arr.length;i<=index;i++)arr[i]=[];return arr[index]}const LINE_GTR_ZERO="`line` must be greater than 0 (lines start at line 1)",COL_GTR_EQ_ZERO="`column` must be greater than or equal to 0 (columns start at column 0)",LEAST_UPPER_BOUND=-1,GREATEST_LOWER_BOUND=1;exports.encodedMappings=void 0,exports.decodedMappings=void 0,exports.traceSegment=void 0,exports.originalPositionFor=void 0,exports.generatedPositionFor=void 0,exports.allGeneratedPositionsFor=void 0,exports.eachMapping=void 0,exports.sourceContentFor=void 0,exports.presortedDecodedMap=void 0,exports.decodedMap=void 0,exports.encodedMap=void 0;class TraceMap{constructor(map,mapUrl){const isString="string"==typeof map;if(!isString&&map._decodedMemo)return map;const parsed=isString?JSON.parse(map):map,{version,file,names,sourceRoot,sources,sourcesContent}=parsed;this.version=version,this.file=file,this.names=names,this.sourceRoot=sourceRoot,this.sources=sources,this.sourcesContent=sourcesContent;const from=resolve(sourceRoot||"",stripFilename(mapUrl));this.resolvedSources=sources.map((s=>resolve(s||"",from)));const{mappings}=parsed;"string"==typeof mappings?(this._encoded=mappings,this._decoded=void 0):(this._encoded=void 0,this._decoded=maybeSort(mappings,isString)),this._decodedMemo=memoizedState(),this._bySources=void 0,this._bySourceMemos=void 0}}function clone(map,mappings){return{version:map.version,file:map.file,names:map.names,sourceRoot:map.sourceRoot,sources:map.sources,sourcesContent:map.sourcesContent,mappings}}function OMapping(source,line,column,name){return{source,line,column,name}}function GMapping(line,column){return{line,column}}function traceSegmentInternal(segments,memo,line,column,bias){let index=memoizedBinarySearch(segments,column,memo,line);return found?index=(bias===LEAST_UPPER_BOUND?upperBound:lowerBound)(segments,column,index):bias===LEAST_UPPER_BOUND&&index++,-1===index||index===segments.length?-1:index}function sliceGeneratedPositions(segments,memo,line,column,bias){let min=traceSegmentInternal(segments,memo,line,column,GREATEST_LOWER_BOUND);if(found||bias!==LEAST_UPPER_BOUND||min++,-1===min||min===segments.length)return[];const matchedColumn=found?column:segments[min][COLUMN];found||(min=lowerBound(segments,matchedColumn,min));const max=upperBound(segments,matchedColumn,min),result=[];for(;min<=max;min++){const segment=segments[min];result.push(GMapping(segment[REV_GENERATED_LINE]+1,segment[REV_GENERATED_COLUMN]))}return result}(()=>{function generatedPosition(map,source,line,column,bias,all){if(--line<0)throw new Error(LINE_GTR_ZERO);if(column<0)throw new Error(COL_GTR_EQ_ZERO);const{sources,resolvedSources}=map;let sourceIndex=sources.indexOf(source);if(-1===sourceIndex&&(sourceIndex=resolvedSources.indexOf(source)),-1===sourceIndex)return all?[]:GMapping(null,null);const segments=(map._bySources||(map._bySources=buildBySources(exports.decodedMappings(map),map._bySourceMemos=sources.map(memoizedState))))[sourceIndex][line];if(null==segments)return all?[]:GMapping(null,null);const memo=map._bySourceMemos[sourceIndex];if(all)return sliceGeneratedPositions(segments,memo,line,column,bias);const index=traceSegmentInternal(segments,memo,line,column,bias);if(-1===index)return GMapping(null,null);const segment=segments[index];return GMapping(segment[REV_GENERATED_LINE]+1,segment[REV_GENERATED_COLUMN])}exports.encodedMappings=map=>{var _a;return null!==(_a=map._encoded)&&void 0!==_a?_a:map._encoded=sourcemapCodec.encode(map._decoded)},exports.decodedMappings=map=>map._decoded||(map._decoded=sourcemapCodec.decode(map._encoded)),exports.traceSegment=(map,line,column)=>{const decoded=exports.decodedMappings(map);if(line>=decoded.length)return null;const segments=decoded[line],index=traceSegmentInternal(segments,map._decodedMemo,line,column,GREATEST_LOWER_BOUND);return-1===index?null:segments[index]},exports.originalPositionFor=(map,{line,column,bias})=>{if(--line<0)throw new Error(LINE_GTR_ZERO);if(column<0)throw new Error(COL_GTR_EQ_ZERO);const decoded=exports.decodedMappings(map);if(line>=decoded.length)return OMapping(null,null,null,null);const segments=decoded[line],index=traceSegmentInternal(segments,map._decodedMemo,line,column,bias||GREATEST_LOWER_BOUND);if(-1===index)return OMapping(null,null,null,null);const segment=segments[index];if(1===segment.length)return OMapping(null,null,null,null);const{names,resolvedSources}=map;return OMapping(resolvedSources[segment[SOURCES_INDEX]],segment[SOURCE_LINE]+1,segment[SOURCE_COLUMN],5===segment.length?names[segment[NAMES_INDEX]]:null)},exports.allGeneratedPositionsFor=(map,{source,line,column,bias})=>generatedPosition(map,source,line,column,bias||LEAST_UPPER_BOUND,!0),exports.generatedPositionFor=(map,{source,line,column,bias})=>generatedPosition(map,source,line,column,bias||GREATEST_LOWER_BOUND,!1),exports.eachMapping=(map,cb)=>{const decoded=exports.decodedMappings(map),{names,resolvedSources}=map;for(let i=0;i<decoded.length;i++){const line=decoded[i];for(let j=0;j<line.length;j++){const seg=line[j],generatedLine=i+1,generatedColumn=seg[0];let source=null,originalLine=null,originalColumn=null,name=null;1!==seg.length&&(source=resolvedSources[seg[1]],originalLine=seg[2]+1,originalColumn=seg[3]),5===seg.length&&(name=names[seg[4]]),cb({generatedLine,generatedColumn,source,originalLine,originalColumn,name})}}},exports.sourceContentFor=(map,source)=>{const{sources,resolvedSources,sourcesContent}=map;if(null==sourcesContent)return null;let index=sources.indexOf(source);return-1===index&&(index=resolvedSources.indexOf(source)),-1===index?null:sourcesContent[index]},exports.presortedDecodedMap=(map,mapUrl)=>{const tracer=new TraceMap(clone(map,[]),mapUrl);return tracer._decoded=map.mappings,tracer},exports.decodedMap=map=>clone(map,exports.decodedMappings(map)),exports.encodedMap=map=>clone(map,exports.encodedMappings(map))})(),exports.AnyMap=AnyMap,exports.GREATEST_LOWER_BOUND=GREATEST_LOWER_BOUND,exports.LEAST_UPPER_BOUND=LEAST_UPPER_BOUND,exports.TraceMap=TraceMap,Object.defineProperty(exports,"__esModule",{value:!0})}(exports,__nested_webpack_require_23754__("./node_modules/.pnpm/@jridgewell+sourcemap-codec@1.4.14/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js"),__nested_webpack_require_23754__("./node_modules/.pnpm/@jridgewell+resolve-uri@3.1.0/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js"))},"./node_modules/.pnpm/@nicolo-ribaudo+semver-v6@6.3.3/node_modules/@nicolo-ribaudo/semver-v6/semver.js":(module,exports)=>{var debug;exports=module.exports=SemVer,debug="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?function(){var args=Array.prototype.slice.call(arguments,0);args.unshift("SEMVER"),console.log.apply(console,args)}:function(){},exports.SEMVER_SPEC_VERSION="2.0.0";var MAX_LENGTH=256,MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991,re=exports.re=[],safeRe=exports.safeRe=[],src=exports.src=[],t=exports.tokens={},R=0;function tok(n){t[n]=R++}tok("NUMERICIDENTIFIER"),src[t.NUMERICIDENTIFIER]="0|[1-9]\\d*",tok("NUMERICIDENTIFIERLOOSE"),src[t.NUMERICIDENTIFIERLOOSE]="[0-9]+",tok("NONNUMERICIDENTIFIER"),src[t.NONNUMERICIDENTIFIER]="\\d*[a-zA-Z-][a-zA-Z0-9-]*",tok("MAINVERSION"),src[t.MAINVERSION]="("+src[t.NUMERICIDENTIFIER]+")\\.("+src[t.NUMERICIDENTIFIER]+")\\.("+src[t.NUMERICIDENTIFIER]+")",tok("MAINVERSIONLOOSE"),src[t.MAINVERSIONLOOSE]="("+src[t.NUMERICIDENTIFIERLOOSE]+")\\.("+src[t.NUMERICIDENTIFIERLOOSE]+")\\.("+src[t.NUMERICIDENTIFIERLOOSE]+")",tok("PRERELEASEIDENTIFIER"),src[t.PRERELEASEIDENTIFIER]="(?:"+src[t.NUMERICIDENTIFIER]+"|"+src[t.NONNUMERICIDENTIFIER]+")",tok("PRERELEASEIDENTIFIERLOOSE"),src[t.PRERELEASEIDENTIFIERLOOSE]="(?:"+src[t.NUMERICIDENTIFIERLOOSE]+"|"+src[t.NONNUMERICIDENTIFIER]+")",tok("PRERELEASE"),src[t.PRERELEASE]="(?:-("+src[t.PRERELEASEIDENTIFIER]+"(?:\\."+src[t.PRERELEASEIDENTIFIER]+")*))",tok("PRERELEASELOOSE"),src[t.PRERELEASELOOSE]="(?:-?("+src[t.PRERELEASEIDENTIFIERLOOSE]+"(?:\\."+src[t.PRERELEASEIDENTIFIERLOOSE]+")*))",tok("BUILDIDENTIFIER"),src[t.BUILDIDENTIFIER]="[0-9A-Za-z-]+",tok("BUILD"),src[t.BUILD]="(?:\\+("+src[t.BUILDIDENTIFIER]+"(?:\\."+src[t.BUILDIDENTIFIER]+")*))",tok("FULL"),tok("FULLPLAIN"),src[t.FULLPLAIN]="v?"+src[t.MAINVERSION]+src[t.PRERELEASE]+"?"+src[t.BUILD]+"?",src[t.FULL]="^"+src[t.FULLPLAIN]+"$",tok("LOOSEPLAIN"),src[t.LOOSEPLAIN]="[v=\\s]*"+src[t.MAINVERSIONLOOSE]+src[t.PRERELEASELOOSE]+"?"+src[t.BUILD]+"?",tok("LOOSE"),src[t.LOOSE]="^"+src[t.LOOSEPLAIN]+"$",tok("GTLT"),src[t.GTLT]="((?:<|>)?=?)",tok("XRANGEIDENTIFIERLOOSE"),src[t.XRANGEIDENTIFIERLOOSE]=src[t.NUMERICIDENTIFIERLOOSE]+"|x|X|\\*",tok("XRANGEIDENTIFIER"),src[t.XRANGEIDENTIFIER]=src[t.NUMERICIDENTIFIER]+"|x|X|\\*",tok("XRANGEPLAIN"),src[t.XRANGEPLAIN]="[v=\\s]*("+src[t.XRANGEIDENTIFIER]+")(?:\\.("+src[t.XRANGEIDENTIFIER]+")(?:\\.("+src[t.XRANGEIDENTIFIER]+")(?:"+src[t.PRERELEASE]+")?"+src[t.BUILD]+"?)?)?",tok("XRANGEPLAINLOOSE"),src[t.XRANGEPLAINLOOSE]="[v=\\s]*("+src[t.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+src[t.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+src[t.XRANGEIDENTIFIERLOOSE]+")(?:"+src[t.PRERELEASELOOSE]+")?"+src[t.BUILD]+"?)?)?",tok("XRANGE"),src[t.XRANGE]="^"+src[t.GTLT]+"\\s*"+src[t.XRANGEPLAIN]+"$",tok("XRANGELOOSE"),src[t.XRANGELOOSE]="^"+src[t.GTLT]+"\\s*"+src[t.XRANGEPLAINLOOSE]+"$",tok("COERCE"),src[t.COERCE]="(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])",tok("COERCERTL"),re[t.COERCERTL]=new RegExp(src[t.COERCE],"g"),tok("LONETILDE"),src[t.LONETILDE]="(?:~>?)",tok("TILDETRIM"),src[t.TILDETRIM]="(\\s*)"+src[t.LONETILDE]+"\\s+",re[t.TILDETRIM]=new RegExp(src[t.TILDETRIM],"g");tok("TILDE"),src[t.TILDE]="^"+src[t.LONETILDE]+src[t.XRANGEPLAIN]+"$",tok("TILDELOOSE"),src[t.TILDELOOSE]="^"+src[t.LONETILDE]+src[t.XRANGEPLAINLOOSE]+"$",tok("LONECARET"),src[t.LONECARET]="(?:\\^)",tok("CARETTRIM"),src[t.CARETTRIM]="(\\s*)"+src[t.LONECARET]+"\\s+",re[t.CARETTRIM]=new RegExp(src[t.CARETTRIM],"g");tok("CARET"),src[t.CARET]="^"+src[t.LONECARET]+src[t.XRANGEPLAIN]+"$",tok("CARETLOOSE"),src[t.CARETLOOSE]="^"+src[t.LONECARET]+src[t.XRANGEPLAINLOOSE]+"$",tok("COMPARATORLOOSE"),src[t.COMPARATORLOOSE]="^"+src[t.GTLT]+"\\s*("+src[t.LOOSEPLAIN]+")$|^$",tok("COMPARATOR"),src[t.COMPARATOR]="^"+src[t.GTLT]+"\\s*("+src[t.FULLPLAIN]+")$|^$",tok("COMPARATORTRIM"),src[t.COMPARATORTRIM]="(\\s*)"+src[t.GTLT]+"\\s*("+src[t.LOOSEPLAIN]+"|"+src[t.XRANGEPLAIN]+")",re[t.COMPARATORTRIM]=new RegExp(src[t.COMPARATORTRIM],"g");tok("HYPHENRANGE"),src[t.HYPHENRANGE]="^\\s*("+src[t.XRANGEPLAIN]+")\\s+-\\s+("+src[t.XRANGEPLAIN]+")\\s*$",tok("HYPHENRANGELOOSE"),src[t.HYPHENRANGELOOSE]="^\\s*("+src[t.XRANGEPLAINLOOSE]+")\\s+-\\s+("+src[t.XRANGEPLAINLOOSE]+")\\s*$",tok("STAR"),src[t.STAR]="(<|>)?=?\\s*\\*";for(var i=0;i<R;i++)debug(i,src[i]),re[i]||(re[i]=new RegExp(src[i]));for(var index=0;index<re.length;index++){var safe=re[index].source.split("\\s*").join("\\s{0,1}").split("\\s+").join("\\s");safeRe[index]=new RegExp(safe,re[index].flags)}function parse(version,options){if(options&&"object"==typeof options||(options={loose:!!options,includePrerelease:!1}),version instanceof SemVer)return version;if("string"!=typeof version)return null;if(version.length>MAX_LENGTH)return null;if(!(options.loose?safeRe[t.LOOSE]:safeRe[t.FULL]).test(version))return null;try{return new SemVer(version,options)}catch(er){return null}}function SemVer(version,options){if(options&&"object"==typeof options||(options={loose:!!options,includePrerelease:!1}),version instanceof SemVer){if(version.loose===options.loose)return version;version=version.version}else if("string"!=typeof version)throw new TypeError("Invalid Version: "+version);if(version.length>MAX_LENGTH)throw new TypeError("version is longer than "+MAX_LENGTH+" characters");if(!(this instanceof SemVer))return new SemVer(version,options);debug("SemVer",version,options),this.options=options,this.loose=!!options.loose;var m=version.trim().match(options.loose?safeRe[t.LOOSE]:safeRe[t.FULL]);if(!m)throw new TypeError("Invalid Version: "+version);if(this.raw=version,this.major=+m[1],this.minor=+m[2],this.patch=+m[3],this.major>MAX_SAFE_INTEGER||this.major<0)throw new TypeError("Invalid major version");if(this.minor>MAX_SAFE_INTEGER||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>MAX_SAFE_INTEGER||this.patch<0)throw new TypeError("Invalid patch version");m[4]?this.prerelease=m[4].split(".").map((function(id){if(/^[0-9]+$/.test(id)){var num=+id;if(num>=0&&num<MAX_SAFE_INTEGER)return num}return id})):this.prerelease=[],this.build=m[5]?m[5].split("."):[],this.format()}exports.parse=parse,exports.valid=function(version,options){var v=parse(version,options);return v?v.version:null},exports.clean=function(version,options){var s=parse(version.trim().replace(/^[=v]+/,""),options);return s?s.version:null},exports.SemVer=SemVer,SemVer.prototype.format=function(){return this.version=this.major+"."+this.minor+"."+this.patch,this.prerelease.length&&(this.version+="-"+this.prerelease.join(".")),this.version},SemVer.prototype.toString=function(){return this.version},SemVer.prototype.compare=function(other){return debug("SemVer.compare",this.version,this.options,other),other instanceof SemVer||(other=new SemVer(other,this.options)),this.compareMain(other)||this.comparePre(other)},SemVer.prototype.compareMain=function(other){return other instanceof SemVer||(other=new SemVer(other,this.options)),compareIdentifiers(this.major,other.major)||compareIdentifiers(this.minor,other.minor)||compareIdentifiers(this.patch,other.patch)},SemVer.prototype.comparePre=function(other){if(other instanceof SemVer||(other=new SemVer(other,this.options)),this.prerelease.length&&!other.prerelease.length)return-1;if(!this.prerelease.length&&other.prerelease.length)return 1;if(!this.prerelease.length&&!other.prerelease.length)return 0;var i=0;do{var a=this.prerelease[i],b=other.prerelease[i];if(debug("prerelease compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)},SemVer.prototype.compareBuild=function(other){other instanceof SemVer||(other=new SemVer(other,this.options));var i=0;do{var a=this.build[i],b=other.build[i];if(debug("prerelease compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)},SemVer.prototype.inc=function(release,identifier){switch(release){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",identifier);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",identifier);break;case"prepatch":this.prerelease.length=0,this.inc("patch",identifier),this.inc("pre",identifier);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",identifier),this.inc("pre",identifier);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{for(var i=this.prerelease.length;--i>=0;)"number"==typeof this.prerelease[i]&&(this.prerelease[i]++,i=-2);-1===i&&this.prerelease.push(0)}identifier&&(this.prerelease[0]===identifier?isNaN(this.prerelease[1])&&(this.prerelease=[identifier,0]):this.prerelease=[identifier,0]);break;default:throw new Error("invalid increment argument: "+release)}return this.format(),this.raw=this.version,this},exports.inc=function(version,release,loose,identifier){"string"==typeof loose&&(identifier=loose,loose=void 0);try{return new SemVer(version,loose).inc(release,identifier).version}catch(er){return null}},exports.diff=function(version1,version2){if(eq(version1,version2))return null;var v1=parse(version1),v2=parse(version2),prefix="";if(v1.prerelease.length||v2.prerelease.length){prefix="pre";var defaultResult="prerelease"}for(var key in v1)if(("major"===key||"minor"===key||"patch"===key)&&v1[key]!==v2[key])return prefix+key;return defaultResult},exports.compareIdentifiers=compareIdentifiers;var numeric=/^[0-9]+$/;function compareIdentifiers(a,b){var anum=numeric.test(a),bnum=numeric.test(b);return anum&&bnum&&(a=+a,b=+b),a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1}function compare(a,b,loose){return new SemVer(a,loose).compare(new SemVer(b,loose))}function gt(a,b,loose){return compare(a,b,loose)>0}function lt(a,b,loose){return compare(a,b,loose)<0}function eq(a,b,loose){return 0===compare(a,b,loose)}function neq(a,b,loose){return 0!==compare(a,b,loose)}function gte(a,b,loose){return compare(a,b,loose)>=0}function lte(a,b,loose){return compare(a,b,loose)<=0}function cmp(a,op,b,loose){switch(op){case"===":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a===b;case"!==":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a!==b;case"":case"=":case"==":return eq(a,b,loose);case"!=":return neq(a,b,loose);case">":return gt(a,b,loose);case">=":return gte(a,b,loose);case"<":return lt(a,b,loose);case"<=":return lte(a,b,loose);default:throw new TypeError("Invalid operator: "+op)}}function Comparator(comp,options){if(options&&"object"==typeof options||(options={loose:!!options,includePrerelease:!1}),comp instanceof Comparator){if(comp.loose===!!options.loose)return comp;comp=comp.value}if(!(this instanceof Comparator))return new Comparator(comp,options);comp=comp.trim().split(/\s+/).join(" "),debug("comparator",comp,options),this.options=options,this.loose=!!options.loose,this.parse(comp),this.semver===ANY?this.value="":this.value=this.operator+this.semver.version,debug("comp",this)}exports.rcompareIdentifiers=function(a,b){return compareIdentifiers(b,a)},exports.major=function(a,loose){return new SemVer(a,loose).major},exports.minor=function(a,loose){return new SemVer(a,loose).minor},exports.patch=function(a,loose){return new SemVer(a,loose).patch},exports.compare=compare,exports.compareLoose=function(a,b){return compare(a,b,!0)},exports.compareBuild=function(a,b,loose){var versionA=new SemVer(a,loose),versionB=new SemVer(b,loose);return versionA.compare(versionB)||versionA.compareBuild(versionB)},exports.rcompare=function(a,b,loose){return compare(b,a,loose)},exports.sort=function(list,loose){return list.sort((function(a,b){return exports.compareBuild(a,b,loose)}))},exports.rsort=function(list,loose){return list.sort((function(a,b){return exports.compareBuild(b,a,loose)}))},exports.gt=gt,exports.lt=lt,exports.eq=eq,exports.neq=neq,exports.gte=gte,exports.lte=lte,exports.cmp=cmp,exports.Comparator=Comparator;var ANY={};function Range(range,options){if(options&&"object"==typeof options||(options={loose:!!options,includePrerelease:!1}),range instanceof Range)return range.loose===!!options.loose&&range.includePrerelease===!!options.includePrerelease?range:new Range(range.raw,options);if(range instanceof Comparator)return new Range(range.value,options);if(!(this instanceof Range))return new Range(range,options);if(this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease,this.raw=range.trim().split(/\s+/).join(" "),this.set=this.raw.split(/\s*\|\|\s*/).map((function(range){return this.parseRange(range)}),this).filter((function(c){return c.length})),!this.set.length)throw new TypeError("Invalid SemVer Range: "+this.raw);this.format()}function isSatisfiable(comparators,options){for(var result=!0,remainingComparators=comparators.slice(),testComparator=remainingComparators.pop();result&&remainingComparators.length;)result=remainingComparators.every((function(otherComparator){return testComparator.intersects(otherComparator,options)})),testComparator=remainingComparators.pop();return result}function isX(id){return!id||"x"===id.toLowerCase()||"*"===id}function hyphenReplace($0,from,fM,fm,fp,fpr,fb,to,tM,tm,tp,tpr,tb){return((from=isX(fM)?"":isX(fm)?">="+fM+".0.0":isX(fp)?">="+fM+"."+fm+".0":">="+from)+" "+(to=isX(tM)?"":isX(tm)?"<"+(+tM+1)+".0.0":isX(tp)?"<"+tM+"."+(+tm+1)+".0":tpr?"<="+tM+"."+tm+"."+tp+"-"+tpr:"<="+to)).trim()}function testSet(set,version,options){for(var i=0;i<set.length;i++)if(!set[i].test(version))return!1;if(version.prerelease.length&&!options.includePrerelease){for(i=0;i<set.length;i++)if(debug(set[i].semver),set[i].semver!==ANY&&set[i].semver.prerelease.length>0){var allowed=set[i].semver;if(allowed.major===version.major&&allowed.minor===version.minor&&allowed.patch===version.patch)return!0}return!1}return!0}function satisfies(version,range,options){try{range=new Range(range,options)}catch(er){return!1}return range.test(version)}function outside(version,range,hilo,options){var gtfn,ltefn,ltfn,comp,ecomp;switch(version=new SemVer(version,options),range=new Range(range,options),hilo){case">":gtfn=gt,ltefn=lte,ltfn=lt,comp=">",ecomp=">=";break;case"<":gtfn=lt,ltefn=gte,ltfn=gt,comp="<",ecomp="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(satisfies(version,range,options))return!1;for(var i=0;i<range.set.length;++i){var comparators=range.set[i],high=null,low=null;if(comparators.forEach((function(comparator){comparator.semver===ANY&&(comparator=new Comparator(">=0.0.0")),high=high||comparator,low=low||comparator,gtfn(comparator.semver,high.semver,options)?high=comparator:ltfn(comparator.semver,low.semver,options)&&(low=comparator)})),high.operator===comp||high.operator===ecomp)return!1;if((!low.operator||low.operator===comp)&&ltefn(version,low.semver))return!1;if(low.operator===ecomp&&ltfn(version,low.semver))return!1}return!0}Comparator.prototype.parse=function(comp){var r=this.options.loose?safeRe[t.COMPARATORLOOSE]:safeRe[t.COMPARATOR],m=comp.match(r);if(!m)throw new TypeError("Invalid comparator: "+comp);this.operator=void 0!==m[1]?m[1]:"","="===this.operator&&(this.operator=""),m[2]?this.semver=new SemVer(m[2],this.options.loose):this.semver=ANY},Comparator.prototype.toString=function(){return this.value},Comparator.prototype.test=function(version){if(debug("Comparator.test",version,this.options.loose),this.semver===ANY||version===ANY)return!0;if("string"==typeof version)try{version=new SemVer(version,this.options)}catch(er){return!1}return cmp(version,this.operator,this.semver,this.options)},Comparator.prototype.intersects=function(comp,options){if(!(comp instanceof Comparator))throw new TypeError("a Comparator is required");var rangeTmp;if(options&&"object"==typeof options||(options={loose:!!options,includePrerelease:!1}),""===this.operator)return""===this.value||(rangeTmp=new Range(comp.value,options),satisfies(this.value,rangeTmp,options));if(""===comp.operator)return""===comp.value||(rangeTmp=new Range(this.value,options),satisfies(comp.semver,rangeTmp,options));var sameDirectionIncreasing=!(">="!==this.operator&&">"!==this.operator||">="!==comp.operator&&">"!==comp.operator),sameDirectionDecreasing=!("<="!==this.operator&&"<"!==this.operator||"<="!==comp.operator&&"<"!==comp.operator),sameSemVer=this.semver.version===comp.semver.version,differentDirectionsInclusive=!(">="!==this.operator&&"<="!==this.operator||">="!==comp.operator&&"<="!==comp.operator),oppositeDirectionsLessThan=cmp(this.semver,"<",comp.semver,options)&&(">="===this.operator||">"===this.operator)&&("<="===comp.operator||"<"===comp.operator),oppositeDirectionsGreaterThan=cmp(this.semver,">",comp.semver,options)&&("<="===this.operator||"<"===this.operator)&&(">="===comp.operator||">"===comp.operator);return sameDirectionIncreasing||sameDirectionDecreasing||sameSemVer&&differentDirectionsInclusive||oppositeDirectionsLessThan||oppositeDirectionsGreaterThan},exports.Range=Range,Range.prototype.format=function(){return this.range=this.set.map((function(comps){return comps.join(" ").trim()})).join("||").trim(),this.range},Range.prototype.toString=function(){return this.range},Range.prototype.parseRange=function(range){var loose=this.options.loose,hr=loose?safeRe[t.HYPHENRANGELOOSE]:safeRe[t.HYPHENRANGE];range=range.replace(hr,hyphenReplace),debug("hyphen replace",range),range=range.replace(safeRe[t.COMPARATORTRIM],"$1$2$3"),debug("comparator trim",range,safeRe[t.COMPARATORTRIM]),range=(range=range.replace(safeRe[t.TILDETRIM],"$1~")).replace(safeRe[t.CARETTRIM],"$1^");var compRe=loose?safeRe[t.COMPARATORLOOSE]:safeRe[t.COMPARATOR],set=range.split(" ").map((function(comp){return function(comp,options){return debug("comp",comp,options),comp=function(comp,options){return comp.trim().split(/\s+/).map((function(comp){return function(comp,options){debug("caret",comp,options);var r=options.loose?safeRe[t.CARETLOOSE]:safeRe[t.CARET];return comp.replace(r,(function(_,M,m,p,pr){var ret;return debug("caret",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=">="+M+".0.0 <"+(+M+1)+".0.0":isX(p)?ret="0"===M?">="+M+"."+m+".0 <"+M+"."+(+m+1)+".0":">="+M+"."+m+".0 <"+(+M+1)+".0.0":pr?(debug("replaceCaret pr",pr),ret="0"===M?"0"===m?">="+M+"."+m+"."+p+"-"+pr+" <"+M+"."+m+"."+(+p+1):">="+M+"."+m+"."+p+"-"+pr+" <"+M+"."+(+m+1)+".0":">="+M+"."+m+"."+p+"-"+pr+" <"+(+M+1)+".0.0"):(debug("no pr"),ret="0"===M?"0"===m?">="+M+"."+m+"."+p+" <"+M+"."+m+"."+(+p+1):">="+M+"."+m+"."+p+" <"+M+"."+(+m+1)+".0":">="+M+"."+m+"."+p+" <"+(+M+1)+".0.0"),debug("caret return",ret),ret}))}(comp,options)})).join(" ")}(comp,options),debug("caret",comp),comp=function(comp,options){return comp.trim().split(/\s+/).map((function(comp){return function(comp,options){var r=options.loose?safeRe[t.TILDELOOSE]:safeRe[t.TILDE];return comp.replace(r,(function(_,M,m,p,pr){var ret;return debug("tilde",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=">="+M+".0.0 <"+(+M+1)+".0.0":isX(p)?ret=">="+M+"."+m+".0 <"+M+"."+(+m+1)+".0":pr?(debug("replaceTilde pr",pr),ret=">="+M+"."+m+"."+p+"-"+pr+" <"+M+"."+(+m+1)+".0"):ret=">="+M+"."+m+"."+p+" <"+M+"."+(+m+1)+".0",debug("tilde return",ret),ret}))}(comp,options)})).join(" ")}(comp,options),debug("tildes",comp),comp=function(comp,options){return debug("replaceXRanges",comp,options),comp.split(/\s+/).map((function(comp){return function(comp,options){comp=comp.trim();var r=options.loose?safeRe[t.XRANGELOOSE]:safeRe[t.XRANGE];return comp.replace(r,(function(ret,gtlt,M,m,p,pr){debug("xRange",comp,ret,gtlt,M,m,p,pr);var xM=isX(M),xm=xM||isX(m),xp=xm||isX(p),anyX=xp;return"="===gtlt&&anyX&&(gtlt=""),pr=options.includePrerelease?"-0":"",xM?ret=">"===gtlt||"<"===gtlt?"<0.0.0-0":"*":gtlt&&anyX?(xm&&(m=0),p=0,">"===gtlt?(gtlt=">=",xm?(M=+M+1,m=0,p=0):(m=+m+1,p=0)):"<="===gtlt&&(gtlt="<",xm?M=+M+1:m=+m+1),ret=gtlt+M+"."+m+"."+p+pr):xm?ret=">="+M+".0.0"+pr+" <"+(+M+1)+".0.0"+pr:xp&&(ret=">="+M+"."+m+".0"+pr+" <"+M+"."+(+m+1)+".0"+pr),debug("xRange return",ret),ret}))}(comp,options)})).join(" ")}(comp,options),debug("xrange",comp),comp=function(comp,options){return debug("replaceStars",comp,options),comp.trim().replace(safeRe[t.STAR],"")}(comp,options),debug("stars",comp),comp}(comp,this.options)}),this).join(" ").split(/\s+/);return this.options.loose&&(set=set.filter((function(comp){return!!comp.match(compRe)}))),set=set.map((function(comp){return new Comparator(comp,this.options)}),this)},Range.prototype.intersects=function(range,options){if(!(range instanceof Range))throw new TypeError("a Range is required");return this.set.some((function(thisComparators){return isSatisfiable(thisComparators,options)&&range.set.some((function(rangeComparators){return isSatisfiable(rangeComparators,options)&&thisComparators.every((function(thisComparator){return rangeComparators.every((function(rangeComparator){return thisComparator.intersects(rangeComparator,options)}))}))}))}))},exports.toComparators=function(range,options){return new Range(range,options).set.map((function(comp){return comp.map((function(c){return c.value})).join(" ").trim().split(" ")}))},Range.prototype.test=function(version){if(!version)return!1;if("string"==typeof version)try{version=new SemVer(version,this.options)}catch(er){return!1}for(var i=0;i<this.set.length;i++)if(testSet(this.set[i],version,this.options))return!0;return!1},exports.satisfies=satisfies,exports.maxSatisfying=function(versions,range,options){var max=null,maxSV=null;try{var rangeObj=new Range(range,options)}catch(er){return null}return versions.forEach((function(v){rangeObj.test(v)&&(max&&-1!==maxSV.compare(v)||(maxSV=new SemVer(max=v,options)))})),max},exports.minSatisfying=function(versions,range,options){var min=null,minSV=null;try{var rangeObj=new Range(range,options)}catch(er){return null}return versions.forEach((function(v){rangeObj.test(v)&&(min&&1!==minSV.compare(v)||(minSV=new SemVer(min=v,options)))})),min},exports.minVersion=function(range,loose){range=new Range(range,loose);var minver=new SemVer("0.0.0");if(range.test(minver))return minver;if(minver=new SemVer("0.0.0-0"),range.test(minver))return minver;minver=null;for(var i=0;i<range.set.length;++i){range.set[i].forEach((function(comparator){var compver=new SemVer(comparator.semver.version);switch(comparator.operator){case">":0===compver.prerelease.length?compver.patch++:compver.prerelease.push(0),compver.raw=compver.format();case"":case">=":minver&&!gt(minver,compver)||(minver=compver);break;case"<":case"<=":break;default:throw new Error("Unexpected operation: "+comparator.operator)}}))}if(minver&&range.test(minver))return minver;return null},exports.validRange=function(range,options){try{return new Range(range,options).range||"*"}catch(er){return null}},exports.ltr=function(version,range,options){return outside(version,range,"<",options)},exports.gtr=function(version,range,options){return outside(version,range,">",options)},exports.outside=outside,exports.prerelease=function(version,options){var parsed=parse(version,options);return parsed&&parsed.prerelease.length?parsed.prerelease:null},exports.intersects=function(r1,r2,options){return r1=new Range(r1,options),r2=new Range(r2,options),r1.intersects(r2)},exports.coerce=function(version,options){if(version instanceof SemVer)return version;"number"==typeof version&&(version=String(version));if("string"!=typeof version)return null;var match=null;if((options=options||{}).rtl){for(var next;(next=safeRe[t.COERCERTL].exec(version))&&(!match||match.index+match[0].length!==version.length);)match&&next.index+next[0].length===match.index+match[0].length||(match=next),safeRe[t.COERCERTL].lastIndex=next.index+next[1].length+next[2].length;safeRe[t.COERCERTL].lastIndex=-1}else match=version.match(safeRe[t.COERCE]);if(null===match)return null;return parse(match[2]+"."+(match[3]||"0")+"."+(match[4]||"0"),options)}},"./node_modules/.pnpm/babel-plugin-dynamic-import-node@2.3.3/node_modules/babel-plugin-dynamic-import-node/lib/index.js":(module,exports,__nested_webpack_require_59754__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(api){var transformImport=(0,_utils.createDynamicImportTransform)(api);return{manipulateOptions:function(opts,parserOpts){parserOpts.plugins.push("dynamicImport")},visitor:{Import:function(path){transformImport(this,path)}}}};var _utils=__nested_webpack_require_59754__("./node_modules/.pnpm/babel-plugin-dynamic-import-node@2.3.3/node_modules/babel-plugin-dynamic-import-node/lib/utils.js");module.exports=exports.default},"./node_modules/.pnpm/babel-plugin-dynamic-import-node@2.3.3/node_modules/babel-plugin-dynamic-import-node/lib/utils.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _slicedToArray=function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return function(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function getImportSource(t,callNode){var importArguments=callNode.arguments,importPath=_slicedToArray(importArguments,1)[0];return t.isStringLiteral(importPath)||t.isTemplateLiteral(importPath)?(t.removeComments(importPath),importPath):t.templateLiteral([t.templateElement({raw:"",cooked:""}),t.templateElement({raw:"",cooked:""},!0)],importArguments)}exports.getImportSource=getImportSource,exports.createDynamicImportTransform=function(_ref){var template=_ref.template,t=_ref.types,builders={static:{interop:template("Promise.resolve().then(() => INTEROP(require(SOURCE)))"),noInterop:template("Promise.resolve().then(() => require(SOURCE))")},dynamic:{interop:template("Promise.resolve(SOURCE).then(s => INTEROP(require(s)))"),noInterop:template("Promise.resolve(SOURCE).then(s => require(s))")}},visited="function"==typeof WeakSet&&new WeakSet;return function(context,path){if(visited){if(visited.has(path))return;visited.add(path)}var node,SOURCE=getImportSource(t,path.parent),builder=(node=SOURCE,t.isStringLiteral(node)||t.isTemplateLiteral(node)&&0===node.expressions.length?builders.static:builders.dynamic),newImport=context.opts.noInterop?builder.noInterop({SOURCE}):builder.interop({SOURCE,INTEROP:context.addHelper("interopRequireWildcard")});path.parentPath.replaceWith(newImport)}}},"./node_modules/.pnpm/babel-plugin-parameter-decorator@1.0.16/node_modules/babel-plugin-parameter-decorator/lib/index.js":(module,__unused_webpack_exports,__nested_webpack_require_62421__)=>{"use strict";var _path=__nested_webpack_require_62421__("path");function isInType(path){switch(path.parent.type){case"TSTypeReference":case"TSQualifiedName":case"TSExpressionWithTypeArguments":case"TSTypeQuery":return!0;default:return!1}}module.exports=function(_ref){var types=_ref.types,decoratorExpressionForConstructor=function(decorator,param){return function(className){var resultantDecorator=types.callExpression(decorator.expression,[types.Identifier(className),types.Identifier("undefined"),types.NumericLiteral(param.key)]),resultantDecoratorWithFallback=types.logicalExpression("||",resultantDecorator,types.Identifier(className)),assignment=types.assignmentExpression("=",types.Identifier(className),resultantDecoratorWithFallback);return types.expressionStatement(assignment)}},decoratorExpressionForMethod=function(decorator,param){return function(className,functionName){var resultantDecorator=types.callExpression(decorator.expression,[types.Identifier("".concat(className,".prototype")),types.StringLiteral(functionName),types.NumericLiteral(param.key)]);return types.expressionStatement(resultantDecorator)}};return{visitor:{Program:function(path,state){var extension=(0,_path.extname)(state.file.opts.filename);".ts"!==extension&&".tsx"!==extension||function(){var decorators=Object.create(null);path.node.body.filter((function(it){var type=it.type,declaration=it.declaration;switch(type){case"ClassDeclaration":return!0;case"ExportNamedDeclaration":case"ExportDefaultDeclaration":return declaration&&"ClassDeclaration"===declaration.type;default:return!1}})).map((function(it){return"ClassDeclaration"===it.type?it:it.declaration})).forEach((function(clazz){clazz.body.body.forEach((function(body){(body.params||[]).forEach((function(param){(param.decorators||[]).forEach((function(decorator){decorator.expression.callee?decorators[decorator.expression.callee.name]=decorator:decorators[decorator.expression.name]=decorator}))}))}))}));var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=path.get("body")[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var stmt=_step.value;if("ImportDeclaration"===stmt.node.type){if(0===stmt.node.specifiers.length)continue;var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_loop=function(){var specifier=_step2.value,binding=stmt.scope.getBinding(specifier.local.name);binding.referencePaths.length?binding.referencePaths.reduce((function(prev,next){return prev||isInType(next)}),!1)&&Object.keys(decorators).forEach((function(k){var decorator=decorators[k];(decorator.expression.arguments||[]).forEach((function(arg){arg.name===specifier.local.name&&binding.referencePaths.push({parent:decorator.expression})}))})):decorators[specifier.local.name]&&binding.referencePaths.push({parent:decorators[specifier.local.name]})},_iterator2=stmt.node.specifiers[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0)_loop()}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{_iteratorNormalCompletion2||null==_iterator2.return||_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}}}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{_iteratorNormalCompletion||null==_iterator.return||_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}}()},Function:function(path){var functionName="";path.node.id?functionName=path.node.id.name:path.node.key&&(functionName=path.node.key.name),(path.get("params")||[]).slice().forEach((function(param){var decorators=param.node.decorators||[],transformable=decorators.length;if(decorators.slice().forEach((function(decorator){if("ClassMethod"===path.type){var classIdentifier,parentNode=path.parentPath.parentPath,classDeclaration=path.findParent((function(p){return"ClassDeclaration"===p.type}));if(classDeclaration?classIdentifier=classDeclaration.node.id.name:(parentNode.insertAfter(null),classIdentifier=function(path){var assignment=path.findParent((function(p){return"AssignmentExpression"===p.node.type}));return"SequenceExpression"===assignment.node.right.type?assignment.node.right.expressions[1].name:"ClassExpression"===assignment.node.right.type?assignment.node.left.name:null}(path)),"constructor"===functionName){var expression=decoratorExpressionForConstructor(decorator,param)(classIdentifier);parentNode.insertAfter(expression)}else{var _expression=decoratorExpressionForMethod(decorator,param)(classIdentifier,functionName);parentNode.insertAfter(_expression)}}else{var className=path.findParent((function(p){return"VariableDeclarator"===p.node.type})).node.id.name;if(functionName===className){var _expression2=decoratorExpressionForConstructor(decorator,param)(className);if("body"===path.parentKey)path.insertAfter(_expression2);else path.findParent((function(p){return"body"===p.parentKey})).insertAfter(_expression2)}else{var classParent=path.findParent((function(p){return"CallExpression"===p.node.type})),_expression3=decoratorExpressionForMethod(decorator,param)(className,functionName);classParent.insertAfter(_expression3)}}})),transformable){var replacement=function(path){switch(path.node.type){case"ObjectPattern":return types.ObjectPattern(path.node.properties);case"AssignmentPattern":return types.AssignmentPattern(path.node.left,path.node.right);case"TSParameterProperty":return types.Identifier(path.node.parameter.name);default:return types.Identifier(path.node.name)}}(param);param.replaceWith(replacement)}}))}}}}},"./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/metadata/metadataVisitor.js":(__unused_webpack_module,exports,__nested_webpack_require_68263__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.metadataVisitor=function(classPath,path){const field=path.node,classNode=classPath.node;switch(field.type){case"ClassMethod":const decorators="constructor"===field.kind?classNode.decorators:field.decorators;if(!decorators||0===decorators.length)return;decorators.push(createMetadataDesignDecorator("design:type",_core.types.identifier("Function"))),decorators.push(createMetadataDesignDecorator("design:paramtypes",_core.types.arrayExpression(field.params.map((param=>(0,_serializeType.serializeType)(classPath,param))))));break;case"ClassProperty":if(!field.decorators||0===field.decorators.length)return;if(!field.typeAnnotation||"TSTypeAnnotation"!==field.typeAnnotation.type)return;field.decorators.push(createMetadataDesignDecorator("design:type",(0,_serializeType.serializeType)(classPath,field)))}};var _core=__nested_webpack_require_68263__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_serializeType=__nested_webpack_require_68263__("./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/metadata/serializeType.js");function createMetadataDesignDecorator(design,typeArg){return _core.types.decorator(_core.types.callExpression(_core.types.memberExpression(_core.types.identifier("Reflect"),_core.types.identifier("metadata")),[_core.types.stringLiteral(design),typeArg]))}},"./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/metadata/serializeType.js":(__unused_webpack_module,exports,__nested_webpack_require_69960__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.serializeType=function(classPath,param){const node=getTypedNode(param);if(null==node)return createVoidZero();if(!node.typeAnnotation||"TSTypeAnnotation"!==node.typeAnnotation.type)return createVoidZero();const annotation=node.typeAnnotation.typeAnnotation;return serializeTypeNode(classPath.node.id?classPath.node.id.name:"",annotation)},exports.isClassType=isClassType;var _core=__nested_webpack_require_69960__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js");function createVoidZero(){return _core.types.unaryExpression("void",_core.types.numericLiteral(0))}function getTypedNode(param){return null==param?null:"ClassProperty"===param.type||"Identifier"===param.type||"ObjectPattern"===param.type?param:"AssignmentPattern"===param.type&&"Identifier"===param.left.type?param.left:"TSParameterProperty"===param.type?getTypedNode(param.parameter):null}function serializeTypeReferenceNode(className,node){const reference=serializeReference(node.typeName);return isClassType(className,reference)?_core.types.identifier("Object"):_core.types.conditionalExpression(_core.types.binaryExpression("===",_core.types.unaryExpression("typeof",reference),_core.types.stringLiteral("undefined")),_core.types.identifier("Object"),_core.types.cloneDeep(reference))}function isClassType(className,node){switch(node.type){case"Identifier":return node.name===className;case"MemberExpression":return isClassType(className,node.object);default:throw new Error(`The property expression at ${node.start} is not valid as a Type to be used in Reflect.metadata`)}}function serializeReference(typeName){return"Identifier"===typeName.type?_core.types.identifier(typeName.name):_core.types.memberExpression(serializeReference(typeName.left),typeName.right)}function serializeTypeNode(className,node){if(void 0===node)return _core.types.identifier("Object");switch(node.type){case"TSVoidKeyword":case"TSUndefinedKeyword":case"TSNullKeyword":case"TSNeverKeyword":return createVoidZero();case"TSParenthesizedType":return serializeTypeNode(className,node.typeAnnotation);case"TSFunctionType":case"TSConstructorType":return _core.types.identifier("Function");case"TSArrayType":case"TSTupleType":return _core.types.identifier("Array");case"TSTypePredicate":case"TSBooleanKeyword":return _core.types.identifier("Boolean");case"TSStringKeyword":return _core.types.identifier("String");case"TSObjectKeyword":return _core.types.identifier("Object");case"TSLiteralType":switch(node.literal.type){case"StringLiteral":return _core.types.identifier("String");case"NumericLiteral":return _core.types.identifier("Number");case"BooleanLiteral":return _core.types.identifier("Boolean");default:throw new Error("Bad type for decorator"+node.literal)}case"TSNumberKeyword":case"TSBigIntKeyword":return _core.types.identifier("Number");case"TSSymbolKeyword":return _core.types.identifier("Symbol");case"TSTypeReference":return serializeTypeReferenceNode(className,node);case"TSIntersectionType":case"TSUnionType":return serializeTypeList(className,node.types);case"TSConditionalType":return serializeTypeList(className,[node.trueType,node.falseType]);case"TSTypeQuery":case"TSTypeOperator":case"TSIndexedAccessType":case"TSMappedType":case"TSTypeLiteral":case"TSAnyKeyword":case"TSUnknownKeyword":case"TSThisType":break;default:throw new Error("Bad type for decorator")}return _core.types.identifier("Object")}function serializeTypeList(className,types){let serializedUnion;for(let typeNode of types){for(;"TSParenthesizedType"===typeNode.type;)typeNode=typeNode.typeAnnotation;if("TSNeverKeyword"===typeNode.type)continue;if("TSNullKeyword"===typeNode.type||"TSUndefinedKeyword"===typeNode.type)continue;const serializedIndividual=serializeTypeNode(className,typeNode);if(_core.types.isIdentifier(serializedIndividual)&&"Object"===serializedIndividual.name)return serializedIndividual;if(serializedUnion){if(!_core.types.isIdentifier(serializedUnion)||!_core.types.isIdentifier(serializedIndividual)||serializedUnion.name!==serializedIndividual.name)return _core.types.identifier("Object")}else serializedUnion=serializedIndividual}return serializedUnion||createVoidZero()}},"./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/parameter/parameterVisitor.js":(__unused_webpack_module,exports,__nested_webpack_require_74420__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.parameterVisitor=function(classPath,path){if("ClassMethod"!==path.type)return;if("ClassMethod"!==path.node.type)return;if("Identifier"!==path.node.key.type)return;const methodPath=path;(methodPath.get("params")||[]).slice().forEach((function(param){let resultantDecorator;null!=("Identifier"===param.node.type||"ObjectPattern"===param.node.type?param.node:"TSParameterProperty"===param.node.type&&"Identifier"===param.node.parameter.type?param.node.parameter:null)&&((param.node.decorators||[]).slice().forEach((function(decorator){"constructor"===methodPath.node.kind?(resultantDecorator=createParamDecorator(param.key,decorator.expression,!0),classPath.node.decorators||(classPath.node.decorators=[]),classPath.node.decorators.push(resultantDecorator)):(resultantDecorator=createParamDecorator(param.key,decorator.expression,!1),methodPath.node.decorators||(methodPath.node.decorators=[]),methodPath.node.decorators.push(resultantDecorator))})),resultantDecorator&&(param.node.decorators=null))}))};var _core=__nested_webpack_require_74420__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js");function createParamDecorator(paramIndex,decoratorExpression,isConstructor=!1){return _core.types.decorator(_core.types.functionExpression(null,[_core.types.identifier("target"),_core.types.identifier("key")],_core.types.blockStatement([_core.types.returnStatement(_core.types.callExpression(decoratorExpression,[_core.types.identifier("target"),_core.types.identifier(isConstructor?"undefined":"key"),_core.types.numericLiteral(paramIndex)]))])))}},"./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/plugin.js":(__unused_webpack_module,exports,__nested_webpack_require_76275__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperPluginUtils=__nested_webpack_require_76275__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),_parameterVisitor=__nested_webpack_require_76275__("./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/parameter/parameterVisitor.js"),_metadataVisitor=__nested_webpack_require_76275__("./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/metadata/metadataVisitor.js"),_default=(0,_helperPluginUtils.declare)((api=>(api.assertVersion(7),{visitor:{Program(programPath){programPath.traverse({ClassDeclaration(path){for(const field of path.get("body").get("body"))"ClassMethod"!==field.type&&"ClassProperty"!==field.type||((0,_parameterVisitor.parameterVisitor)(path,field),(0,_metadataVisitor.metadataVisitor)(path,field));path.parentPath.scope.crawl()}})}}})));exports.default=_default},"./node_modules/.pnpm/convert-source-map@1.9.0/node_modules/convert-source-map/index.js":(__unused_webpack_module,exports,__nested_webpack_require_77519__)=>{"use strict";var decodeBase64,fs=__nested_webpack_require_77519__("fs"),path=__nested_webpack_require_77519__("path");function Converter(sm,opts){(opts=opts||{}).isFileComment&&(sm=function(sm,dir){var r=exports.mapFileCommentRegex.exec(sm),filename=r[1]||r[2],filepath=path.resolve(dir,filename);try{return fs.readFileSync(filepath,"utf8")}catch(e){throw new Error("An error occurred while trying to read the map file at "+filepath+"\n"+e)}}(sm,opts.commentFileDir)),opts.hasComment&&(sm=function(sm){return sm.split(",").pop()}(sm)),opts.isEncoded&&(sm=decodeBase64(sm)),(opts.isJSON||opts.isEncoded)&&(sm=JSON.parse(sm)),this.sourcemap=sm}Object.defineProperty(exports,"commentRegex",{get:function(){return/^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/gm}}),Object.defineProperty(exports,"mapFileCommentRegex",{get:function(){return/(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"`]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm}}),decodeBase64="undefined"!=typeof Buffer?"function"==typeof Buffer.from?function(base64){return Buffer.from(base64,"base64").toString()}:function(base64){if("number"==typeof value)throw new TypeError("The value to decode must not be of type number.");return new Buffer(base64,"base64").toString()}:function(base64){return decodeURIComponent(escape(atob(base64)))},Converter.prototype.toJSON=function(space){return JSON.stringify(this.sourcemap,null,space)},"undefined"!=typeof Buffer?"function"==typeof Buffer.from?Converter.prototype.toBase64=function(){var json=this.toJSON();return Buffer.from(json,"utf8").toString("base64")}:Converter.prototype.toBase64=function(){var json=this.toJSON();if("number"==typeof json)throw new TypeError("The json to encode must not be of type number.");return new Buffer(json,"utf8").toString("base64")}:Converter.prototype.toBase64=function(){var json=this.toJSON();return btoa(unescape(encodeURIComponent(json)))},Converter.prototype.toComment=function(options){var data="sourceMappingURL=data:application/json;charset=utf-8;base64,"+this.toBase64();return options&&options.multiline?"/*# "+data+" */":"//# "+data},Converter.prototype.toObject=function(){return JSON.parse(this.toJSON())},Converter.prototype.addProperty=function(key,value){if(this.sourcemap.hasOwnProperty(key))throw new Error('property "'+key+'" already exists on the sourcemap, use set property instead');return this.setProperty(key,value)},Converter.prototype.setProperty=function(key,value){return this.sourcemap[key]=value,this},Converter.prototype.getProperty=function(key){return this.sourcemap[key]},exports.fromObject=function(obj){return new Converter(obj)},exports.fromJSON=function(json){return new Converter(json,{isJSON:!0})},exports.fromBase64=function(base64){return new Converter(base64,{isEncoded:!0})},exports.fromComment=function(comment){return new Converter(comment=comment.replace(/^\/\*/g,"//").replace(/\*\/$/g,""),{isEncoded:!0,hasComment:!0})},exports.fromMapFileComment=function(comment,dir){return new Converter(comment,{commentFileDir:dir,isFileComment:!0,isJSON:!0})},exports.fromSource=function(content){var m=content.match(exports.commentRegex);return m?exports.fromComment(m.pop()):null},exports.fromMapFileSource=function(content,dir){var m=content.match(exports.mapFileCommentRegex);return m?exports.fromMapFileComment(m.pop(),dir):null},exports.removeComments=function(src){return src.replace(exports.commentRegex,"")},exports.removeMapFileComments=function(src){return src.replace(exports.mapFileCommentRegex,"")},exports.generateMapFileComment=function(file,options){var data="sourceMappingURL="+file;return options&&options.multiline?"/*# "+data+" */":"//# "+data}},"./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js":(module,exports,__nested_webpack_require_81339__)=>{exports.formatArgs=function(args){if(args[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+args[0]+(this.useColors?"%c ":" ")+"+"+module.exports.humanize(this.diff),!this.useColors)return;const c="color: "+this.color;args.splice(1,0,c,"color: inherit");let index=0,lastC=0;args[0].replace(/%[a-zA-Z%]/g,(match=>{"%%"!==match&&(index++,"%c"===match&&(lastC=index))})),args.splice(lastC,0,c)},exports.save=function(namespaces){try{namespaces?exports.storage.setItem("debug",namespaces):exports.storage.removeItem("debug")}catch(error){}},exports.load=function(){let r;try{r=exports.storage.getItem("debug")}catch(error){}!r&&"undefined"!=typeof process&&"env"in process&&(r=process.env.DEBUG);return r},exports.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},exports.storage=function(){try{return localStorage}catch(error){}}(),exports.destroy=(()=>{let warned=!1;return()=>{warned||(warned=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),exports.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],exports.log=console.debug||console.log||(()=>{}),module.exports=__nested_webpack_require_81339__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js")(exports);const{formatters}=module.exports;formatters.j=function(v){try{return JSON.stringify(v)}catch(error){return"[UnexpectedJSONParseError]: "+error.message}}},"./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js":(module,__unused_webpack_exports,__nested_webpack_require_84356__)=>{module.exports=function(env){function createDebug(namespace){let prevTime,namespacesCache,enabledCache,enableOverride=null;function debug(...args){if(!debug.enabled)return;const self=debug,curr=Number(new Date),ms=curr-(prevTime||curr);self.diff=ms,self.prev=prevTime,self.curr=curr,prevTime=curr,args[0]=createDebug.coerce(args[0]),"string"!=typeof args[0]&&args.unshift("%O");let index=0;args[0]=args[0].replace(/%([a-zA-Z%])/g,((match,format)=>{if("%%"===match)return"%";index++;const formatter=createDebug.formatters[format];if("function"==typeof formatter){const val=args[index];match=formatter.call(self,val),args.splice(index,1),index--}return match})),createDebug.formatArgs.call(self,args);(self.log||createDebug.log).apply(self,args)}return debug.namespace=namespace,debug.useColors=createDebug.useColors(),debug.color=createDebug.selectColor(namespace),debug.extend=extend,debug.destroy=createDebug.destroy,Object.defineProperty(debug,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==enableOverride?enableOverride:(namespacesCache!==createDebug.namespaces&&(namespacesCache=createDebug.namespaces,enabledCache=createDebug.enabled(namespace)),enabledCache),set:v=>{enableOverride=v}}),"function"==typeof createDebug.init&&createDebug.init(debug),debug}function extend(namespace,delimiter){const newDebug=createDebug(this.namespace+(void 0===delimiter?":":delimiter)+namespace);return newDebug.log=this.log,newDebug}function toNamespace(regexp){return regexp.toString().substring(2,regexp.toString().length-2).replace(/\.\*\?$/,"*")}return createDebug.debug=createDebug,createDebug.default=createDebug,createDebug.coerce=function(val){if(val instanceof Error)return val.stack||val.message;return val},createDebug.disable=function(){const namespaces=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map((namespace=>"-"+namespace))].join(",");return createDebug.enable(""),namespaces},createDebug.enable=function(namespaces){let i;createDebug.save(namespaces),createDebug.namespaces=namespaces,createDebug.names=[],createDebug.skips=[];const split=("string"==typeof namespaces?namespaces:"").split(/[\s,]+/),len=split.length;for(i=0;i<len;i++)split[i]&&("-"===(namespaces=split[i].replace(/\*/g,".*?"))[0]?createDebug.skips.push(new RegExp("^"+namespaces.slice(1)+"$")):createDebug.names.push(new RegExp("^"+namespaces+"$")))},createDebug.enabled=function(name){if("*"===name[name.length-1])return!0;let i,len;for(i=0,len=createDebug.skips.length;i<len;i++)if(createDebug.skips[i].test(name))return!1;for(i=0,len=createDebug.names.length;i<len;i++)if(createDebug.names[i].test(name))return!0;return!1},createDebug.humanize=__nested_webpack_require_84356__("./node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js"),createDebug.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(env).forEach((key=>{createDebug[key]=env[key]})),createDebug.names=[],createDebug.skips=[],createDebug.formatters={},createDebug.selectColor=function(namespace){let hash=0;for(let i=0;i<namespace.length;i++)hash=(hash<<5)-hash+namespace.charCodeAt(i),hash|=0;return createDebug.colors[Math.abs(hash)%createDebug.colors.length]},createDebug.enable(createDebug.load()),createDebug}},"./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js":(module,__unused_webpack_exports,__nested_webpack_require_87797__)=>{"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?module.exports=__nested_webpack_require_87797__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js"):module.exports=__nested_webpack_require_87797__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/node.js")},"./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/node.js":(module,exports,__nested_webpack_require_88203__)=>{const tty=__nested_webpack_require_88203__("tty"),util=__nested_webpack_require_88203__("util");exports.init=function(debug){debug.inspectOpts={};const keys=Object.keys(exports.inspectOpts);for(let i=0;i<keys.length;i++)debug.inspectOpts[keys[i]]=exports.inspectOpts[keys[i]]},exports.log=function(...args){return process.stderr.write(util.format(...args)+"\n")},exports.formatArgs=function(args){const{namespace:name,useColors}=this;if(useColors){const c=this.color,colorCode="[3"+(c<8?c:"8;5;"+c),prefix=`  ${colorCode};1m${name} [0m`;args[0]=prefix+args[0].split("\n").join("\n"+prefix),args.push(colorCode+"m+"+module.exports.humanize(this.diff)+"[0m")}else args[0]=function(){if(exports.inspectOpts.hideDate)return"";return(new Date).toISOString()+" "}()+name+" "+args[0]},exports.save=function(namespaces){namespaces?process.env.DEBUG=namespaces:delete process.env.DEBUG},exports.load=function(){return process.env.DEBUG},exports.useColors=function(){return"colors"in exports.inspectOpts?Boolean(exports.inspectOpts.colors):tty.isatty(process.stderr.fd)},exports.destroy=util.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),exports.colors=[6,2,3,4,5,1];try{const supportsColor=__nested_webpack_require_88203__("./node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js");supportsColor&&(supportsColor.stderr||supportsColor).level>=2&&(exports.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(error){}exports.inspectOpts=Object.keys(process.env).filter((key=>/^debug_/i.test(key))).reduce(((obj,key)=>{const prop=key.substring(6).toLowerCase().replace(/_([a-z])/g,((_,k)=>k.toUpperCase()));let val=process.env[key];return val=!!/^(yes|on|true|enabled)$/i.test(val)||!/^(no|off|false|disabled)$/i.test(val)&&("null"===val?null:Number(val)),obj[prop]=val,obj}),{}),module.exports=__nested_webpack_require_88203__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js")(exports);const{formatters}=module.exports;formatters.o=function(v){return this.inspectOpts.colors=this.useColors,util.inspect(v,this.inspectOpts).split("\n").map((str=>str.trim())).join(" ")},formatters.O=function(v){return this.inspectOpts.colors=this.useColors,util.inspect(v,this.inspectOpts)}},"./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js":module=>{"use strict";const GENSYNC_START=Symbol.for("gensync:v1:start"),GENSYNC_SUSPEND=Symbol.for("gensync:v1:suspend"),GENSYNC_EXPECTED_START="GENSYNC_EXPECTED_START",GENSYNC_EXPECTED_SUSPEND="GENSYNC_EXPECTED_SUSPEND",GENSYNC_OPTIONS_ERROR="GENSYNC_OPTIONS_ERROR";function assertTypeof(type,name,value,allowUndefined){if(typeof value===type||allowUndefined&&void 0===value)return;let msg;throw msg=allowUndefined?`Expected opts.${name} to be either a ${type}, or undefined.`:`Expected opts.${name} to be a ${type}.`,makeError(msg,GENSYNC_OPTIONS_ERROR)}function makeError(msg,code){return Object.assign(new Error(msg),{code})}function buildOperation({name,arity,sync,async}){return setFunctionMetadata(name,arity,(function*(...args){const resume=yield GENSYNC_START;if(!resume){return sync.call(this,args)}let result;try{async.call(this,args,(value=>{result||(result={value},resume())}),(err=>{result||(result={err},resume())}))}catch(err){result={err},resume()}if(yield GENSYNC_SUSPEND,result.hasOwnProperty("err"))throw result.err;return result.value}))}function evaluateSync(gen){let value;for(;!({value}=gen.next()).done;)assertStart(value,gen);return value}function evaluateAsync(gen,resolve,reject){!function step(){try{let value;for(;!({value}=gen.next()).done;){assertStart(value,gen);let sync=!0,didSyncResume=!1;const out=gen.next((()=>{sync?didSyncResume=!0:step()}));if(sync=!1,assertSuspend(out,gen),!didSyncResume)return}return resolve(value)}catch(err){return reject(err)}}()}function assertStart(value,gen){value!==GENSYNC_START&&throwError(gen,makeError(`Got unexpected yielded value in gensync generator: ${JSON.stringify(value)}. Did you perhaps mean to use 'yield*' instead of 'yield'?`,GENSYNC_EXPECTED_START))}function assertSuspend({value,done},gen){(done||value!==GENSYNC_SUSPEND)&&throwError(gen,makeError(done?"Unexpected generator completion. If you get this, it is probably a gensync bug.":`Expected GENSYNC_SUSPEND, got ${JSON.stringify(value)}. If you get this, it is probably a gensync bug.`,GENSYNC_EXPECTED_SUSPEND))}function throwError(gen,err){throw gen.throw&&gen.throw(err),err}function setFunctionMetadata(name,arity,fn){if("string"==typeof name){const nameDesc=Object.getOwnPropertyDescriptor(fn,"name");nameDesc&&!nameDesc.configurable||Object.defineProperty(fn,"name",Object.assign(nameDesc||{},{configurable:!0,value:name}))}if("number"==typeof arity){const lengthDesc=Object.getOwnPropertyDescriptor(fn,"length");lengthDesc&&!lengthDesc.configurable||Object.defineProperty(fn,"length",Object.assign(lengthDesc||{},{configurable:!0,value:arity}))}return fn}module.exports=Object.assign((function(optsOrFn){let genFn=optsOrFn;return genFn="function"!=typeof optsOrFn?function({name,arity,sync,async,errback}){if(assertTypeof("string","name",name,!0),assertTypeof("number","arity",arity,!0),assertTypeof("function","sync",sync),assertTypeof("function","async",async,!0),assertTypeof("function","errback",errback,!0),async&&errback)throw makeError("Expected one of either opts.async or opts.errback, but got _both_.",GENSYNC_OPTIONS_ERROR);if("string"!=typeof name){let fnName;errback&&errback.name&&"errback"!==errback.name&&(fnName=errback.name),async&&async.name&&"async"!==async.name&&(fnName=async.name.replace(/Async$/,"")),sync&&sync.name&&"sync"!==sync.name&&(fnName=sync.name.replace(/Sync$/,"")),"string"==typeof fnName&&(name=fnName)}"number"!=typeof arity&&(arity=sync.length);return buildOperation({name,arity,sync:function(args){return sync.apply(this,args)},async:function(args,resolve,reject){async?async.apply(this,args).then(resolve,reject):errback?errback.call(this,...args,((err,value)=>{null==err?resolve(value):reject(err)})):resolve(sync.apply(this,args))}})}(optsOrFn):function(genFn){return setFunctionMetadata(genFn.name,genFn.length,(function(...args){return genFn.apply(this,args)}))}(optsOrFn),Object.assign(genFn,function(genFn){const fns={sync:function(...args){return evaluateSync(genFn.apply(this,args))},async:function(...args){return new Promise(((resolve,reject)=>{evaluateAsync(genFn.apply(this,args),resolve,reject)}))},errback:function(...args){const cb=args.pop();if("function"!=typeof cb)throw makeError("Asynchronous function called without callback","GENSYNC_ERRBACK_NO_CALLBACK");let gen;try{gen=genFn.apply(this,args)}catch(err){return void cb(err)}evaluateAsync(gen,(val=>cb(void 0,val)),(err=>cb(err)))}};return fns}(genFn))}),{all:buildOperation({name:"all",arity:1,sync:function(args){return Array.from(args[0]).map((item=>evaluateSync(item)))},async:function(args,resolve,reject){const items=Array.from(args[0]);if(0===items.length)return void Promise.resolve().then((()=>resolve([])));let count=0;const results=items.map((()=>{}));items.forEach(((item,i)=>{evaluateAsync(item,(val=>{results[i]=val,count+=1,count===results.length&&resolve(results)}),reject)}))}}),race:buildOperation({name:"race",arity:1,sync:function(args){const items=Array.from(args[0]);if(0===items.length)throw makeError("Must race at least 1 item","GENSYNC_RACE_NONEMPTY");return evaluateSync(items[0])},async:function(args,resolve,reject){const items=Array.from(args[0]);if(0===items.length)throw makeError("Must race at least 1 item","GENSYNC_RACE_NONEMPTY");for(const item of items)evaluateAsync(item,resolve,reject)}})})},"./node_modules/.pnpm/globals@11.12.0/node_modules/globals/index.js":(module,__unused_webpack_exports,__nested_webpack_require_96197__)=>{"use strict";module.exports=__nested_webpack_require_96197__("./node_modules/.pnpm/globals@11.12.0/node_modules/globals/globals.json")},"./node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js":module=>{"use strict";module.exports=(flag,argv=process.argv)=>{const prefix=flag.startsWith("-")?"":1===flag.length?"-":"--",position=argv.indexOf(prefix+flag),terminatorPosition=argv.indexOf("--");return-1!==position&&(-1===terminatorPosition||position<terminatorPosition)}},"./node_modules/.pnpm/jsesc@2.5.2/node_modules/jsesc/jsesc.js":module=>{"use strict";const object={},hasOwnProperty=object.hasOwnProperty,forOwn=(object,callback)=>{for(const key in object)hasOwnProperty.call(object,key)&&callback(key,object[key])},toString=object.toString,isArray=Array.isArray,isBuffer=Buffer.isBuffer,singleEscapes={'"':'\\"',"'":"\\'","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"},regexSingleEscape=/["'\\\b\f\n\r\t]/,regexDigit=/[0-9]/,regexWhitelist=/[ !#-&\(-\[\]-_a-~]/,jsesc=(argument,options)=>{const increaseIndentation=()=>{oldIndent=indent,++options.indentLevel,indent=options.indent.repeat(options.indentLevel)},defaults={escapeEverything:!1,minimal:!1,isScriptContext:!1,quotes:"single",wrap:!1,es6:!1,json:!1,compact:!0,lowercaseHex:!1,numbers:"decimal",indent:"\t",indentLevel:0,__inline1__:!1,__inline2__:!1},json=options&&options.json;var destination,source;json&&(defaults.quotes="double",defaults.wrap=!0),destination=defaults,"single"!=(options=(source=options)?(forOwn(source,((key,value)=>{destination[key]=value})),destination):destination).quotes&&"double"!=options.quotes&&"backtick"!=options.quotes&&(options.quotes="single");const quote="double"==options.quotes?'"':"backtick"==options.quotes?"`":"'",compact=options.compact,lowercaseHex=options.lowercaseHex;let indent=options.indent.repeat(options.indentLevel),oldIndent="";const inline1=options.__inline1__,inline2=options.__inline2__,newLine=compact?"":"\n";let result,isEmpty=!0;const useBinNumbers="binary"==options.numbers,useOctNumbers="octal"==options.numbers,useDecNumbers="decimal"==options.numbers,useHexNumbers="hexadecimal"==options.numbers;if(json&&argument&&(value=>"function"==typeof value)(argument.toJSON)&&(argument=argument.toJSON()),!(value=>"string"==typeof value||"[object String]"==toString.call(value))(argument)){if((value=>"[object Map]"==toString.call(value))(argument))return 0==argument.size?"new Map()":(compact||(options.__inline1__=!0,options.__inline2__=!1),"new Map("+jsesc(Array.from(argument),options)+")");if((value=>"[object Set]"==toString.call(value))(argument))return 0==argument.size?"new Set()":"new Set("+jsesc(Array.from(argument),options)+")";if(isBuffer(argument))return 0==argument.length?"Buffer.from([])":"Buffer.from("+jsesc(Array.from(argument),options)+")";if(isArray(argument))return result=[],options.wrap=!0,inline1&&(options.__inline1__=!1,options.__inline2__=!0),inline2||increaseIndentation(),((array,callback)=>{const length=array.length;let index=-1;for(;++index<length;)callback(array[index])})(argument,(value=>{isEmpty=!1,inline2&&(options.__inline2__=!1),result.push((compact||inline2?"":indent)+jsesc(value,options))})),isEmpty?"[]":inline2?"["+result.join(", ")+"]":"["+newLine+result.join(","+newLine)+newLine+(compact?"":oldIndent)+"]";if(!(value=>"number"==typeof value||"[object Number]"==toString.call(value))(argument))return(value=>"[object Object]"==toString.call(value))(argument)?(result=[],options.wrap=!0,increaseIndentation(),forOwn(argument,((key,value)=>{isEmpty=!1,result.push((compact?"":indent)+jsesc(key,options)+":"+(compact?"":" ")+jsesc(value,options))})),isEmpty?"{}":"{"+newLine+result.join(","+newLine)+newLine+(compact?"":oldIndent)+"}"):json?JSON.stringify(argument)||"null":String(argument);if(json)return JSON.stringify(argument);if(useDecNumbers)return String(argument);if(useHexNumbers){let hexadecimal=argument.toString(16);return lowercaseHex||(hexadecimal=hexadecimal.toUpperCase()),"0x"+hexadecimal}if(useBinNumbers)return"0b"+argument.toString(2);if(useOctNumbers)return"0o"+argument.toString(8)}const string=argument;let index=-1;const length=string.length;for(result="";++index<length;){const character=string.charAt(index);if(options.es6){const first=string.charCodeAt(index);if(first>=55296&&first<=56319&&length>index+1){const second=string.charCodeAt(index+1);if(second>=56320&&second<=57343){let hexadecimal=(1024*(first-55296)+second-56320+65536).toString(16);lowercaseHex||(hexadecimal=hexadecimal.toUpperCase()),result+="\\u{"+hexadecimal+"}",++index;continue}}}if(!options.escapeEverything){if(regexWhitelist.test(character)){result+=character;continue}if('"'==character){result+=quote==character?'\\"':character;continue}if("`"==character){result+=quote==character?"\\`":character;continue}if("'"==character){result+=quote==character?"\\'":character;continue}}if("\0"==character&&!json&&!regexDigit.test(string.charAt(index+1))){result+="\\0";continue}if(regexSingleEscape.test(character)){result+=singleEscapes[character];continue}const charCode=character.charCodeAt(0);if(options.minimal&&8232!=charCode&&8233!=charCode){result+=character;continue}let hexadecimal=charCode.toString(16);lowercaseHex||(hexadecimal=hexadecimal.toUpperCase());const longhand=hexadecimal.length>2||json,escaped="\\"+(longhand?"u":"x")+("0000"+hexadecimal).slice(longhand?-4:-2);result+=escaped}return options.wrap&&(result=quote+result+quote),"`"==quote&&(result=result.replace(/\$\{/g,"\\${")),options.isScriptContext?result.replace(/<\/(script|style)/gi,"<\\/$1").replace(/<!--/g,json?"\\u003C!--":"\\x3C!--"):result};jsesc.version="2.5.2",module.exports=jsesc},"./node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js":module=>{var s=1e3,m=60*s,h=60*m,d=24*h,w=7*d,y=365.25*d;function plural(ms,msAbs,n,name){var isPlural=msAbs>=1.5*n;return Math.round(ms/n)+" "+name+(isPlural?"s":"")}module.exports=function(val,options){options=options||{};var type=typeof val;if("string"===type&&val.length>0)return function(str){if((str=String(str)).length>100)return;var match=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);if(!match)return;var n=parseFloat(match[1]);switch((match[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return n*y;case"weeks":case"week":case"w":return n*w;case"days":case"day":case"d":return n*d;case"hours":case"hour":case"hrs":case"hr":case"h":return n*h;case"minutes":case"minute":case"mins":case"min":case"m":return n*m;case"seconds":case"second":case"secs":case"sec":case"s":return n*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}(val);if("number"===type&&isFinite(val))return options.long?function(ms){var msAbs=Math.abs(ms);if(msAbs>=d)return plural(ms,msAbs,d,"day");if(msAbs>=h)return plural(ms,msAbs,h,"hour");if(msAbs>=m)return plural(ms,msAbs,m,"minute");if(msAbs>=s)return plural(ms,msAbs,s,"second");return ms+" ms"}(val):function(ms){var msAbs=Math.abs(ms);if(msAbs>=d)return Math.round(ms/d)+"d";if(msAbs>=h)return Math.round(ms/h)+"h";if(msAbs>=m)return Math.round(ms/m)+"m";if(msAbs>=s)return Math.round(ms/s)+"s";return ms+"ms"}(val);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(val))}},"./node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js":(module,__unused_webpack_exports,__nested_webpack_require_103656__)=>{"use strict";const os=__nested_webpack_require_103656__("os"),tty=__nested_webpack_require_103656__("tty"),hasFlag=__nested_webpack_require_103656__("./node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js"),{env}=process;let forceColor;function translateLevel(level){return 0!==level&&{level,hasBasic:!0,has256:level>=2,has16m:level>=3}}function supportsColor(haveStream,streamIsTTY){if(0===forceColor)return 0;if(hasFlag("color=16m")||hasFlag("color=full")||hasFlag("color=truecolor"))return 3;if(hasFlag("color=256"))return 2;if(haveStream&&!streamIsTTY&&void 0===forceColor)return 0;const min=forceColor||0;if("dumb"===env.TERM)return min;if("win32"===process.platform){const osRelease=os.release().split(".");return Number(osRelease[0])>=10&&Number(osRelease[2])>=10586?Number(osRelease[2])>=14931?3:2:1}if("CI"in env)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((sign=>sign in env))||"codeship"===env.CI_NAME?1:min;if("TEAMCITY_VERSION"in env)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION)?1:0;if("truecolor"===env.COLORTERM)return 3;if("TERM_PROGRAM"in env){const version=parseInt((env.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(env.TERM_PROGRAM){case"iTerm.app":return version>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(env.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)||"COLORTERM"in env?1:min}hasFlag("no-color")||hasFlag("no-colors")||hasFlag("color=false")||hasFlag("color=never")?forceColor=0:(hasFlag("color")||hasFlag("colors")||hasFlag("color=true")||hasFlag("color=always"))&&(forceColor=1),"FORCE_COLOR"in env&&(forceColor="true"===env.FORCE_COLOR?1:"false"===env.FORCE_COLOR?0:0===env.FORCE_COLOR.length?1:Math.min(parseInt(env.FORCE_COLOR,10),3)),module.exports={supportsColor:function(stream){return translateLevel(supportsColor(stream,stream&&stream.isTTY))},stdout:translateLevel(supportsColor(!0,tty.isatty(1))),stderr:translateLevel(supportsColor(!0,tty.isatty(2)))}},"./node_modules/.pnpm/to-fast-properties@2.0.0/node_modules/to-fast-properties/index.js":module=>{"use strict";let fastProto=null;function FastObject(o){if(null!==fastProto&&(fastProto.property,1)){const result=fastProto;return fastProto=FastObject.prototype=null,result}return fastProto=FastObject.prototype=null==o?Object.create(null):o,new FastObject}FastObject(),module.exports=function(o){return FastObject(o)}},"./stubs/babel-codeframe.js":(__unused_webpack_module,__webpack_exports__,__nested_webpack_require_106160__)=>{"use strict";function codeFrameColumns(){return""}__nested_webpack_require_106160__.r(__webpack_exports__),__nested_webpack_require_106160__.d(__webpack_exports__,{codeFrameColumns:()=>codeFrameColumns})},"./stubs/helper-compilation-targets.js":(__unused_webpack_module,__webpack_exports__,__nested_webpack_require_106445__)=>{"use strict";function getTargets(){return{}}__nested_webpack_require_106445__.r(__webpack_exports__),__nested_webpack_require_106445__.d(__webpack_exports__,{default:()=>getTargets})},assert:module=>{"use strict";module.exports=__nccwpck_require__(9491)},fs:module=>{"use strict";module.exports=__nccwpck_require__(7147)},module:module=>{"use strict";module.exports=__nccwpck_require__(8188)},os:module=>{"use strict";module.exports=__nccwpck_require__(2037)},path:module=>{"use strict";module.exports=__nccwpck_require__(1017)},process:module=>{"use strict";module.exports=__nccwpck_require__(7282)},tty:module=>{"use strict";module.exports=__nccwpck_require__(6224)},url:module=>{"use strict";module.exports=__nccwpck_require__(7310)},util:module=>{"use strict";module.exports=__nccwpck_require__(3837)},v8:module=>{"use strict";module.exports=__nccwpck_require__(4655)},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/caching.js":(__unused_webpack_module,exports,__nested_webpack_require_107334__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_107334__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.assertSimpleType=assertSimpleType,exports.makeStrongCache=makeStrongCache,exports.makeStrongCacheSync=function(handler){return synchronize(makeStrongCache(handler))},exports.makeWeakCache=makeWeakCache,exports.makeWeakCacheSync=function(handler){return synchronize(makeWeakCache(handler))};var _async=__nested_webpack_require_107334__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/async.js"),_util=__nested_webpack_require_107334__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/util.js");const synchronize=gen=>_gensync()(gen).sync;function*genTrue(){return!0}function makeWeakCache(handler){return makeCachedFunction(WeakMap,handler)}function makeStrongCache(handler){return makeCachedFunction(Map,handler)}function makeCachedFunction(CallCache,handler){const callCacheSync=new CallCache,callCacheAsync=new CallCache,futureCache=new CallCache;return function*(arg,data){const asyncContext=yield*(0,_async.isAsync)(),callCache=asyncContext?callCacheAsync:callCacheSync,cached=yield*function*(asyncContext,callCache,futureCache,arg,data){const cached=yield*getCachedValue(callCache,arg,data);if(cached.valid)return cached;if(asyncContext){const cached=yield*getCachedValue(futureCache,arg,data);if(cached.valid){return{valid:!0,value:yield*(0,_async.waitFor)(cached.value.promise)}}}return{valid:!1,value:null}}(asyncContext,callCache,futureCache,arg,data);if(cached.valid)return cached.value;const cache=new CacheConfigurator(data),handlerResult=handler(arg,cache);let finishLock,value;return value=(0,_util.isIterableIterator)(handlerResult)?yield*(0,_async.onFirstPause)(handlerResult,(()=>{finishLock=function(config,futureCache,arg){const finishLock=new Lock;return updateFunctionCache(futureCache,config,arg,finishLock),finishLock}(cache,futureCache,arg)})):handlerResult,updateFunctionCache(callCache,cache,arg,value),finishLock&&(futureCache.delete(arg),finishLock.release(value)),value}}function*getCachedValue(cache,arg,data){const cachedValue=cache.get(arg);if(cachedValue)for(const{value,valid}of cachedValue)if(yield*valid(data))return{valid:!0,value};return{valid:!1,value:null}}function updateFunctionCache(cache,config,arg,value){config.configured()||config.forever();let cachedValue=cache.get(arg);switch(config.deactivate(),config.mode()){case"forever":cachedValue=[{value,valid:genTrue}],cache.set(arg,cachedValue);break;case"invalidate":cachedValue=[{value,valid:config.validator()}],cache.set(arg,cachedValue);break;case"valid":cachedValue?cachedValue.push({value,valid:config.validator()}):(cachedValue=[{value,valid:config.validator()}],cache.set(arg,cachedValue))}}class CacheConfigurator{constructor(data){this._active=!0,this._never=!1,this._forever=!1,this._invalidate=!1,this._configured=!1,this._pairs=[],this._data=void 0,this._data=data}simple(){return function(cache){function cacheFn(val){if("boolean"!=typeof val)return cache.using((()=>assertSimpleType(val())));val?cache.forever():cache.never()}return cacheFn.forever=()=>cache.forever(),cacheFn.never=()=>cache.never(),cacheFn.using=cb=>cache.using((()=>assertSimpleType(cb()))),cacheFn.invalidate=cb=>cache.invalidate((()=>assertSimpleType(cb()))),cacheFn}(this)}mode(){return this._never?"never":this._forever?"forever":this._invalidate?"invalidate":"valid"}forever(){if(!this._active)throw new Error("Cannot change caching after evaluation has completed.");if(this._never)throw new Error("Caching has already been configured with .never()");this._forever=!0,this._configured=!0}never(){if(!this._active)throw new Error("Cannot change caching after evaluation has completed.");if(this._forever)throw new Error("Caching has already been configured with .forever()");this._never=!0,this._configured=!0}using(handler){if(!this._active)throw new Error("Cannot change caching after evaluation has completed.");if(this._never||this._forever)throw new Error("Caching has already been configured with .never or .forever()");this._configured=!0;const key=handler(this._data),fn=(0,_async.maybeAsync)(handler,"You appear to be using an async cache handler, but Babel has been called synchronously");return(0,_async.isThenable)(key)?key.then((key=>(this._pairs.push([key,fn]),key))):(this._pairs.push([key,fn]),key)}invalidate(handler){return this._invalidate=!0,this.using(handler)}validator(){const pairs=this._pairs;return function*(data){for(const[key,fn]of pairs)if(key!==(yield*fn(data)))return!1;return!0}}deactivate(){this._active=!1}configured(){return this._configured}}function assertSimpleType(value){if((0,_async.isThenable)(value))throw new Error("You appear to be using an async cache handler, which your current version of Babel does not support. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously handle your caching logic.");if(null!=value&&"string"!=typeof value&&"boolean"!=typeof value&&"number"!=typeof value)throw new Error("Cache keys must be either string, boolean, number, null, or undefined.");return value}class Lock{constructor(){this.released=!1,this.promise=void 0,this._resolve=void 0,this.promise=new Promise((resolve=>{this._resolve=resolve}))}release(value){this.released=!0,this._resolve(value)}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/config-chain.js":(__unused_webpack_module,exports,__nested_webpack_require_112994__)=>{"use strict";function _path(){const data=__nested_webpack_require_112994__("path");return _path=function(){return data},data}function _debug(){const data=__nested_webpack_require_112994__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js");return _debug=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildPresetChain=function*(arg,context){const chain=yield*buildPresetChainWalker(arg,context);return chain?{plugins:dedupDescriptors(chain.plugins),presets:dedupDescriptors(chain.presets),options:chain.options.map((o=>normalizeOptions(o))),files:new Set}:null},exports.buildPresetChainWalker=void 0,exports.buildRootChain=function*(opts,context){let configReport,babelRcReport;const programmaticLogger=new _printer.ConfigPrinter,programmaticChain=yield*loadProgrammaticChain({options:opts,dirname:context.cwd},context,void 0,programmaticLogger);if(!programmaticChain)return null;const programmaticReport=yield*programmaticLogger.output();let configFile;"string"==typeof opts.configFile?configFile=yield*(0,_files.loadConfig)(opts.configFile,context.cwd,context.envName,context.caller):!1!==opts.configFile&&(configFile=yield*(0,_files.findRootConfig)(context.root,context.envName,context.caller));let{babelrc,babelrcRoots}=opts,babelrcRootsDirectory=context.cwd;const configFileChain=emptyChain(),configFileLogger=new _printer.ConfigPrinter;if(configFile){const validatedFile=validateConfigFile(configFile),result=yield*loadFileChain(validatedFile,context,void 0,configFileLogger);if(!result)return null;configReport=yield*configFileLogger.output(),void 0===babelrc&&(babelrc=validatedFile.options.babelrc),void 0===babelrcRoots&&(babelrcRootsDirectory=validatedFile.dirname,babelrcRoots=validatedFile.options.babelrcRoots),mergeChain(configFileChain,result)}let ignoreFile,babelrcFile,isIgnored=!1;const fileChain=emptyChain();if((!0===babelrc||void 0===babelrc)&&"string"==typeof context.filename){const pkgData=yield*(0,_files.findPackageData)(context.filename);if(pkgData&&function(context,pkgData,babelrcRoots,babelrcRootsDirectory){if("boolean"==typeof babelrcRoots)return babelrcRoots;const absoluteRoot=context.root;if(void 0===babelrcRoots)return-1!==pkgData.directories.indexOf(absoluteRoot);let babelrcPatterns=babelrcRoots;Array.isArray(babelrcPatterns)||(babelrcPatterns=[babelrcPatterns]);if(babelrcPatterns=babelrcPatterns.map((pat=>"string"==typeof pat?_path().resolve(babelrcRootsDirectory,pat):pat)),1===babelrcPatterns.length&&babelrcPatterns[0]===absoluteRoot)return-1!==pkgData.directories.indexOf(absoluteRoot);return babelrcPatterns.some((pat=>("string"==typeof pat&&(pat=(0,_patternToRegex.default)(pat,babelrcRootsDirectory)),pkgData.directories.some((directory=>matchPattern(pat,babelrcRootsDirectory,directory,context))))))}(context,pkgData,babelrcRoots,babelrcRootsDirectory)){if(({ignore:ignoreFile,config:babelrcFile}=yield*(0,_files.findRelativeConfig)(pkgData,context.envName,context.caller)),ignoreFile&&fileChain.files.add(ignoreFile.filepath),ignoreFile&&shouldIgnore(context,ignoreFile.ignore,null,ignoreFile.dirname)&&(isIgnored=!0),babelrcFile&&!isIgnored){const validatedFile=validateBabelrcFile(babelrcFile),babelrcLogger=new _printer.ConfigPrinter,result=yield*loadFileChain(validatedFile,context,void 0,babelrcLogger);result?(babelRcReport=yield*babelrcLogger.output(),mergeChain(fileChain,result)):isIgnored=!0}babelrcFile&&isIgnored&&fileChain.files.add(babelrcFile.filepath)}}context.showConfig&&console.log(`Babel configs on "${context.filename}" (ascending priority):\n`+[configReport,babelRcReport,programmaticReport].filter((x=>!!x)).join("\n\n")+"\n-----End Babel configs-----");const chain=mergeChain(mergeChain(mergeChain(emptyChain(),configFileChain),fileChain),programmaticChain);return{plugins:isIgnored?[]:dedupDescriptors(chain.plugins),presets:isIgnored?[]:dedupDescriptors(chain.presets),options:isIgnored?[]:chain.options.map((o=>normalizeOptions(o))),fileHandling:isIgnored?"ignored":"transpile",ignore:ignoreFile||void 0,babelrc:babelrcFile||void 0,config:configFile||void 0,files:chain.files}};var _options=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/options.js"),_patternToRegex=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/pattern-to-regex.js"),_printer=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/printer.js"),_rewriteStackTrace=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js"),_configError=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/config-error.js"),_files=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/index.js"),_caching=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/caching.js"),_configDescriptors=__nested_webpack_require_112994__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/config-descriptors.js");const debug=_debug()("babel:config:config-chain");const buildPresetChainWalker=makeChainWalker({root:preset=>loadPresetDescriptors(preset),env:(preset,envName)=>loadPresetEnvDescriptors(preset)(envName),overrides:(preset,index)=>loadPresetOverridesDescriptors(preset)(index),overridesEnv:(preset,index,envName)=>loadPresetOverridesEnvDescriptors(preset)(index)(envName),createLogger:()=>()=>{}});exports.buildPresetChainWalker=buildPresetChainWalker;const loadPresetDescriptors=(0,_caching.makeWeakCacheSync)((preset=>buildRootDescriptors(preset,preset.alias,_configDescriptors.createUncachedDescriptors))),loadPresetEnvDescriptors=(0,_caching.makeWeakCacheSync)((preset=>(0,_caching.makeStrongCacheSync)((envName=>buildEnvDescriptors(preset,preset.alias,_configDescriptors.createUncachedDescriptors,envName))))),loadPresetOverridesDescriptors=(0,_caching.makeWeakCacheSync)((preset=>(0,_caching.makeStrongCacheSync)((index=>buildOverrideDescriptors(preset,preset.alias,_configDescriptors.createUncachedDescriptors,index))))),loadPresetOverridesEnvDescriptors=(0,_caching.makeWeakCacheSync)((preset=>(0,_caching.makeStrongCacheSync)((index=>(0,_caching.makeStrongCacheSync)((envName=>buildOverrideEnvDescriptors(preset,preset.alias,_configDescriptors.createUncachedDescriptors,index,envName)))))));const validateConfigFile=(0,_caching.makeWeakCacheSync)((file=>({filepath:file.filepath,dirname:file.dirname,options:(0,_options.validate)("configfile",file.options,file.filepath)}))),validateBabelrcFile=(0,_caching.makeWeakCacheSync)((file=>({filepath:file.filepath,dirname:file.dirname,options:(0,_options.validate)("babelrcfile",file.options,file.filepath)}))),validateExtendFile=(0,_caching.makeWeakCacheSync)((file=>({filepath:file.filepath,dirname:file.dirname,options:(0,_options.validate)("extendsfile",file.options,file.filepath)}))),loadProgrammaticChain=makeChainWalker({root:input=>buildRootDescriptors(input,"base",_configDescriptors.createCachedDescriptors),env:(input,envName)=>buildEnvDescriptors(input,"base",_configDescriptors.createCachedDescriptors,envName),overrides:(input,index)=>buildOverrideDescriptors(input,"base",_configDescriptors.createCachedDescriptors,index),overridesEnv:(input,index,envName)=>buildOverrideEnvDescriptors(input,"base",_configDescriptors.createCachedDescriptors,index,envName),createLogger:(input,context,baseLogger)=>function(_,context,baseLogger){var _context$caller;if(!baseLogger)return()=>{};return baseLogger.configure(context.showConfig,_printer.ChainFormatter.Programmatic,{callerName:null==(_context$caller=context.caller)?void 0:_context$caller.name})}(0,context,baseLogger)}),loadFileChainWalker=makeChainWalker({root:file=>loadFileDescriptors(file),env:(file,envName)=>loadFileEnvDescriptors(file)(envName),overrides:(file,index)=>loadFileOverridesDescriptors(file)(index),overridesEnv:(file,index,envName)=>loadFileOverridesEnvDescriptors(file)(index)(envName),createLogger:(file,context,baseLogger)=>function(filepath,context,baseLogger){if(!baseLogger)return()=>{};return baseLogger.configure(context.showConfig,_printer.ChainFormatter.Config,{filepath})}(file.filepath,context,baseLogger)});function*loadFileChain(input,context,files,baseLogger){const chain=yield*loadFileChainWalker(input,context,files,baseLogger);return null==chain||chain.files.add(input.filepath),chain}const loadFileDescriptors=(0,_caching.makeWeakCacheSync)((file=>buildRootDescriptors(file,file.filepath,_configDescriptors.createUncachedDescriptors))),loadFileEnvDescriptors=(0,_caching.makeWeakCacheSync)((file=>(0,_caching.makeStrongCacheSync)((envName=>buildEnvDescriptors(file,file.filepath,_configDescriptors.createUncachedDescriptors,envName))))),loadFileOverridesDescriptors=(0,_caching.makeWeakCacheSync)((file=>(0,_caching.makeStrongCacheSync)((index=>buildOverrideDescriptors(file,file.filepath,_configDescriptors.createUncachedDescriptors,index))))),loadFileOverridesEnvDescriptors=(0,_caching.makeWeakCacheSync)((file=>(0,_caching.makeStrongCacheSync)((index=>(0,_caching.makeStrongCacheSync)((envName=>buildOverrideEnvDescriptors(file,file.filepath,_configDescriptors.createUncachedDescriptors,index,envName)))))));function buildRootDescriptors({dirname,options},alias,descriptors){return descriptors(dirname,options,alias)}function buildEnvDescriptors({dirname,options},alias,descriptors,envName){const opts=options.env&&options.env[envName];return opts?descriptors(dirname,opts,`${alias}.env["${envName}"]`):null}function buildOverrideDescriptors({dirname,options},alias,descriptors,index){const opts=options.overrides&&options.overrides[index];if(!opts)throw new Error("Assertion failure - missing override");return descriptors(dirname,opts,`${alias}.overrides[${index}]`)}function buildOverrideEnvDescriptors({dirname,options},alias,descriptors,index,envName){const override=options.overrides&&options.overrides[index];if(!override)throw new Error("Assertion failure - missing override");const opts=override.env&&override.env[envName];return opts?descriptors(dirname,opts,`${alias}.overrides[${index}].env["${envName}"]`):null}function makeChainWalker({root,env,overrides,overridesEnv,createLogger}){return function*(input,context,files=new Set,baseLogger){const{dirname}=input,flattenedConfigs=[],rootOpts=root(input);if(configIsApplicable(rootOpts,dirname,context,input.filepath)){flattenedConfigs.push({config:rootOpts,envName:void 0,index:void 0});const envOpts=env(input,context.envName);envOpts&&configIsApplicable(envOpts,dirname,context,input.filepath)&&flattenedConfigs.push({config:envOpts,envName:context.envName,index:void 0}),(rootOpts.options.overrides||[]).forEach(((_,index)=>{const overrideOps=overrides(input,index);if(configIsApplicable(overrideOps,dirname,context,input.filepath)){flattenedConfigs.push({config:overrideOps,index,envName:void 0});const overrideEnvOpts=overridesEnv(input,index,context.envName);overrideEnvOpts&&configIsApplicable(overrideEnvOpts,dirname,context,input.filepath)&&flattenedConfigs.push({config:overrideEnvOpts,index,envName:context.envName})}}))}if(flattenedConfigs.some((({config:{options:{ignore,only}}})=>shouldIgnore(context,ignore,only,dirname))))return null;const chain=emptyChain(),logger=createLogger(input,context,baseLogger);for(const{config,index,envName}of flattenedConfigs){if(!(yield*mergeExtendsChain(chain,config.options,dirname,context,files,baseLogger)))return null;logger(config,index,envName),yield*mergeChainOpts(chain,config)}return chain}}function*mergeExtendsChain(chain,opts,dirname,context,files,baseLogger){if(void 0===opts.extends)return!0;const file=yield*(0,_files.loadConfig)(opts.extends,dirname,context.envName,context.caller);if(files.has(file))throw new Error(`Configuration cycle detected loading ${file.filepath}.\nFile already loaded following the config chain:\n`+Array.from(files,(file=>` - ${file.filepath}`)).join("\n"));files.add(file);const fileChain=yield*loadFileChain(validateExtendFile(file),context,files,baseLogger);return files.delete(file),!!fileChain&&(mergeChain(chain,fileChain),!0)}function mergeChain(target,source){target.options.push(...source.options),target.plugins.push(...source.plugins),target.presets.push(...source.presets);for(const file of source.files)target.files.add(file);return target}function*mergeChainOpts(target,{options,plugins,presets}){return target.options.push(options),target.plugins.push(...yield*plugins()),target.presets.push(...yield*presets()),target}function emptyChain(){return{options:[],presets:[],plugins:[],files:new Set}}function normalizeOptions(opts){const options=Object.assign({},opts);return delete options.extends,delete options.env,delete options.overrides,delete options.plugins,delete options.presets,delete options.passPerPreset,delete options.ignore,delete options.only,delete options.test,delete options.include,delete options.exclude,Object.prototype.hasOwnProperty.call(options,"sourceMap")&&(options.sourceMaps=options.sourceMap,delete options.sourceMap),options}function dedupDescriptors(items){const map=new Map,descriptors=[];for(const item of items)if("function"==typeof item.value){const fnKey=item.value;let nameMap=map.get(fnKey);nameMap||(nameMap=new Map,map.set(fnKey,nameMap));let desc=nameMap.get(item.name);desc?desc.value=item:(desc={value:item},descriptors.push(desc),item.ownPass||nameMap.set(item.name,desc))}else descriptors.push({value:item});return descriptors.reduce(((acc,desc)=>(acc.push(desc.value),acc)),[])}function configIsApplicable({options},dirname,context,configName){return(void 0===options.test||configFieldIsApplicable(context,options.test,dirname,configName))&&(void 0===options.include||configFieldIsApplicable(context,options.include,dirname,configName))&&(void 0===options.exclude||!configFieldIsApplicable(context,options.exclude,dirname,configName))}function configFieldIsApplicable(context,test,dirname,configName){return matchesPatterns(context,Array.isArray(test)?test:[test],dirname,configName)}function ignoreListReplacer(_key,value){return value instanceof RegExp?String(value):value}function shouldIgnore(context,ignore,only,dirname){if(ignore&&matchesPatterns(context,ignore,dirname)){var _context$filename;const message=`No config is applied to "${null!=(_context$filename=context.filename)?_context$filename:"(unknown)"}" because it matches one of \`ignore: ${JSON.stringify(ignore,ignoreListReplacer)}\` from "${dirname}"`;return debug(message),context.showConfig&&console.log(message),!0}if(only&&!matchesPatterns(context,only,dirname)){var _context$filename2;const message=`No config is applied to "${null!=(_context$filename2=context.filename)?_context$filename2:"(unknown)"}" because it fails to match one of \`only: ${JSON.stringify(only,ignoreListReplacer)}\` from "${dirname}"`;return debug(message),context.showConfig&&console.log(message),!0}return!1}function matchesPatterns(context,patterns,dirname,configName){return patterns.some((pattern=>matchPattern(pattern,dirname,context.filename,context,configName)))}function matchPattern(pattern,dirname,pathToTest,context,configName){if("function"==typeof pattern)return!!(0,_rewriteStackTrace.endHiddenCallStack)(pattern)(pathToTest,{dirname,envName:context.envName,caller:context.caller});if("string"!=typeof pathToTest)throw new _configError.default("Configuration contains string/RegExp pattern, but no filename was passed to Babel",configName);return"string"==typeof pattern&&(pattern=(0,_patternToRegex.default)(pattern,dirname)),pattern.test(pathToTest)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/config-descriptors.js":(__unused_webpack_module,exports,__nested_webpack_require_128762__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_128762__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.createCachedDescriptors=function(dirname,options,alias){const{plugins,presets,passPerPreset}=options;return{options:optionsWithResolvedBrowserslistConfigFile(options,dirname),plugins:plugins?()=>createCachedPluginDescriptors(plugins,dirname)(alias):()=>handlerOf([]),presets:presets?()=>createCachedPresetDescriptors(presets,dirname)(alias)(!!passPerPreset):()=>handlerOf([])}},exports.createDescriptor=createDescriptor,exports.createUncachedDescriptors=function(dirname,options,alias){return{options:optionsWithResolvedBrowserslistConfigFile(options,dirname),plugins:(0,_functional.once)((()=>createPluginDescriptors(options.plugins||[],dirname,alias))),presets:(0,_functional.once)((()=>createPresetDescriptors(options.presets||[],dirname,alias,!!options.passPerPreset)))}};var _functional=__nested_webpack_require_128762__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/functional.js"),_files=__nested_webpack_require_128762__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/index.js"),_item=__nested_webpack_require_128762__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/item.js"),_caching=__nested_webpack_require_128762__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/caching.js"),_resolveTargets=__nested_webpack_require_128762__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/resolve-targets.js");function*handlerOf(value){return value}function optionsWithResolvedBrowserslistConfigFile(options,dirname){return"string"==typeof options.browserslistConfigFile&&(options.browserslistConfigFile=(0,_resolveTargets.resolveBrowserslistConfigFile)(options.browserslistConfigFile,dirname)),options}const PRESET_DESCRIPTOR_CACHE=new WeakMap,createCachedPresetDescriptors=(0,_caching.makeWeakCacheSync)(((items,cache)=>{const dirname=cache.using((dir=>dir));return(0,_caching.makeStrongCacheSync)((alias=>(0,_caching.makeStrongCache)((function*(passPerPreset){return(yield*createPresetDescriptors(items,dirname,alias,passPerPreset)).map((desc=>loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE,desc)))}))))})),PLUGIN_DESCRIPTOR_CACHE=new WeakMap,createCachedPluginDescriptors=(0,_caching.makeWeakCacheSync)(((items,cache)=>{const dirname=cache.using((dir=>dir));return(0,_caching.makeStrongCache)((function*(alias){return(yield*createPluginDescriptors(items,dirname,alias)).map((desc=>loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE,desc)))}))})),DEFAULT_OPTIONS={};function loadCachedDescriptor(cache,desc){const{value,options=DEFAULT_OPTIONS}=desc;if(!1===options)return desc;let cacheByOptions=cache.get(value);cacheByOptions||(cacheByOptions=new WeakMap,cache.set(value,cacheByOptions));let possibilities=cacheByOptions.get(options);if(possibilities||(possibilities=[],cacheByOptions.set(options,possibilities)),-1===possibilities.indexOf(desc)){const matches=possibilities.filter((possibility=>{return b=desc,(a=possibility).name===b.name&&a.value===b.value&&a.options===b.options&&a.dirname===b.dirname&&a.alias===b.alias&&a.ownPass===b.ownPass&&(a.file&&a.file.request)===(b.file&&b.file.request)&&(a.file&&a.file.resolved)===(b.file&&b.file.resolved);var a,b}));if(matches.length>0)return matches[0];possibilities.push(desc)}return desc}function*createPresetDescriptors(items,dirname,alias,passPerPreset){return yield*createDescriptors("preset",items,dirname,alias,passPerPreset)}function*createPluginDescriptors(items,dirname,alias){return yield*createDescriptors("plugin",items,dirname,alias)}function*createDescriptors(type,items,dirname,alias,ownPass){const descriptors=yield*_gensync().all(items.map(((item,index)=>createDescriptor(item,dirname,{type,alias:`${alias}$${index}`,ownPass:!!ownPass}))));return function(items){const map=new Map;for(const item of items){if("function"!=typeof item.value)continue;let nameMap=map.get(item.value);if(nameMap||(nameMap=new Set,map.set(item.value,nameMap)),nameMap.has(item.name)){const conflicts=items.filter((i=>i.value===item.value));throw new Error(["Duplicate plugin/preset detected.","If you'd like to use two separate instances of a plugin,","they need separate names, e.g.","","  plugins: [","    ['some-plugin', {}],","    ['some-plugin', {}, 'some unique name'],","  ]","","Duplicates detected are:",`${JSON.stringify(conflicts,null,2)}`].join("\n"))}nameMap.add(item.name)}}(descriptors),descriptors}function*createDescriptor(pair,dirname,{type,alias,ownPass}){const desc=(0,_item.getItemDescriptor)(pair);if(desc)return desc;let name,options,file,value=pair;Array.isArray(value)&&(3===value.length?[value,options,name]=value:[value,options]=value);let filepath=null;if("string"==typeof value){if("string"!=typeof type)throw new Error("To resolve a string-based item, the type of item must be given");const resolver="plugin"===type?_files.loadPlugin:_files.loadPreset,request=value;({filepath,value}=yield*resolver(value,dirname)),file={request,resolved:filepath}}if(!value)throw new Error(`Unexpected falsy value: ${String(value)}`);if("object"==typeof value&&value.__esModule){if(!value.default)throw new Error("Must export a default export when using ES6 modules.");value=value.default}if("object"!=typeof value&&"function"!=typeof value)throw new Error(`Unsupported format: ${typeof value}. Expected an object or a function.`);if(null!==filepath&&"object"==typeof value&&value)throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`);return{name,alias:filepath||alias,value,options,dirname,ownPass,file}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/configuration.js":(__unused_webpack_module,exports,__nested_webpack_require_134673__)=>{"use strict";function _debug(){const data=__nested_webpack_require_134673__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js");return _debug=function(){return data},data}function _fs(){const data=__nested_webpack_require_134673__("fs");return _fs=function(){return data},data}function _path(){const data=__nested_webpack_require_134673__("path");return _path=function(){return data},data}function _json(){const data=__nested_webpack_require_134673__("./node_modules/.pnpm/json5@2.2.3/node_modules/json5/dist/index.mjs");return _json=function(){return data},data}function _gensync(){const data=__nested_webpack_require_134673__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.ROOT_CONFIG_FILENAMES=void 0,exports.findConfigUpwards=function(rootDir){let dirname=rootDir;for(;;){for(const filename of ROOT_CONFIG_FILENAMES)if(_fs().existsSync(_path().join(dirname,filename)))return dirname;const nextDir=_path().dirname(dirname);if(dirname===nextDir)break;dirname=nextDir}return null},exports.findRelativeConfig=function*(packageData,envName,caller){let config=null,ignore=null;const dirname=_path().dirname(packageData.filepath);for(const loc of packageData.directories){var _packageData$pkg;if(!config)config=yield*loadOneConfig(RELATIVE_CONFIG_FILENAMES,loc,envName,caller,(null==(_packageData$pkg=packageData.pkg)?void 0:_packageData$pkg.dirname)===loc?packageToBabelConfig(packageData.pkg):null);if(!ignore){const ignoreLoc=_path().join(loc,BABELIGNORE_FILENAME);ignore=yield*readIgnoreConfig(ignoreLoc),ignore&&debug("Found ignore %o from %o.",ignore.filepath,dirname)}}return{config,ignore}},exports.findRootConfig=function(dirname,envName,caller){return loadOneConfig(ROOT_CONFIG_FILENAMES,dirname,envName,caller)},exports.loadConfig=function*(name,dirname,envName,caller){const filepath=(v=process.versions.node,w="8.9",v=v.split("."),w=w.split("."),+v[0]>+w[0]||v[0]==w[0]&&+v[1]>=+w[1]?__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").resolve:(r,{paths:[b]},M=__nested_webpack_require_134673__("module"))=>{let f=M._findPath(r,M._nodeModulePaths(b).concat(b));if(f)return f;throw f=new Error(`Cannot resolve module '${r}'`),f.code="MODULE_NOT_FOUND",f})(name,{paths:[dirname]}),conf=yield*readConfig(filepath,envName,caller);var v,w;if(!conf)throw new _configError.default("Config file contains no configuration data",filepath);return debug("Loaded config %o from %o.",name,dirname),conf},exports.resolveShowConfigPath=function*(dirname){const targetPath=process.env.BABEL_SHOW_CONFIG_FOR;if(null!=targetPath){const absolutePath=_path().resolve(dirname,targetPath);if(!(yield*fs.stat(absolutePath)).isFile())throw new Error(`${absolutePath}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);return absolutePath}return null};var _caching=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/caching.js"),_configApi=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/config-api.js"),_utils=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/utils.js"),_moduleTypes=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/module-types.js"),_patternToRegex=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/pattern-to-regex.js"),_configError=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/config-error.js"),fs=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/fs.js"),_rewriteStackTrace=__nested_webpack_require_134673__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js");const debug=_debug()("babel:config:loading:files:configuration"),ROOT_CONFIG_FILENAMES=["babel.config.js","babel.config.cjs","babel.config.mjs","babel.config.json","babel.config.cts"];exports.ROOT_CONFIG_FILENAMES=ROOT_CONFIG_FILENAMES;const RELATIVE_CONFIG_FILENAMES=[".babelrc",".babelrc.js",".babelrc.cjs",".babelrc.mjs",".babelrc.json",".babelrc.cts"],BABELIGNORE_FILENAME=".babelignore",LOADING_CONFIGS=new Set,readConfigCode=(0,_caching.makeStrongCache)((function*(filepath,cache){if(!_fs().existsSync(filepath))return cache.never(),null;if(LOADING_CONFIGS.has(filepath))return cache.never(),debug("Auto-ignoring usage of config %o.",filepath),{filepath,dirname:_path().dirname(filepath),options:{}};let options;try{LOADING_CONFIGS.add(filepath),options=yield*(0,_moduleTypes.default)(filepath,"You appear to be using a native ECMAScript module configuration file, which is only supported when running Babel asynchronously.")}finally{LOADING_CONFIGS.delete(filepath)}let assertCache=!1;if("function"==typeof options&&(yield*[],options=(0,_rewriteStackTrace.endHiddenCallStack)(options)((0,_configApi.makeConfigAPI)(cache)),assertCache=!0),!options||"object"!=typeof options||Array.isArray(options))throw new _configError.default("Configuration should be an exported JavaScript object.",filepath);if("function"==typeof options.then)throw new _configError.default("You appear to be using an async configuration, which your current version of Babel does not support. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously return your config.",filepath);return assertCache&&!cache.configured()&&function(filepath){throw new _configError.default('Caching was left unconfigured. Babel\'s plugins, presets, and .babelrc.js files can be configured\nfor various types of caching, using the first param of their handler functions:\n\nmodule.exports = function(api) {\n  // The API exposes the following:\n\n  // Cache the returned value forever and don\'t call this function again.\n  api.cache(true);\n\n  // Don\'t cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === "production");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === "production");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n  api.cache.never();   // api.cache(false)\n  api.cache.using(fn); // api.cache(fn)\n\n  // Return the value that will be cached.\n  return { };\n};',filepath)}(filepath),{filepath,dirname:_path().dirname(filepath),options}})),packageToBabelConfig=(0,_caching.makeWeakCacheSync)((file=>{const babel=file.options.babel;if(void 0===babel)return null;if("object"!=typeof babel||Array.isArray(babel)||null===babel)throw new _configError.default(".babel property must be an object",file.filepath);return{filepath:file.filepath,dirname:file.dirname,options:babel}})),readConfigJSON5=(0,_utils.makeStaticFileCache)(((filepath,content)=>{let options;try{options=_json().parse(content)}catch(err){throw new _configError.default(`Error while parsing config - ${err.message}`,filepath)}if(!options)throw new _configError.default("No config detected",filepath);if("object"!=typeof options)throw new _configError.default("Config returned typeof "+typeof options,filepath);if(Array.isArray(options))throw new _configError.default("Expected config object but found array",filepath);return delete options.$schema,{filepath,dirname:_path().dirname(filepath),options}})),readIgnoreConfig=(0,_utils.makeStaticFileCache)(((filepath,content)=>{const ignoreDir=_path().dirname(filepath),ignorePatterns=content.split("\n").map((line=>line.replace(/#(.*?)$/,"").trim())).filter((line=>!!line));for(const pattern of ignorePatterns)if("!"===pattern[0])throw new _configError.default("Negation of file paths is not supported.",filepath);return{filepath,dirname:_path().dirname(filepath),ignore:ignorePatterns.map((pattern=>(0,_patternToRegex.default)(pattern,ignoreDir)))}}));function*loadOneConfig(names,dirname,envName,caller,previousConfig=null){const config=(yield*_gensync().all(names.map((filename=>readConfig(_path().join(dirname,filename),envName,caller))))).reduce(((previousConfig,config)=>{if(config&&previousConfig)throw new _configError.default(`Multiple configuration files found. Please remove one:\n - ${_path().basename(previousConfig.filepath)}\n - ${config.filepath}\nfrom ${dirname}`);return config||previousConfig}),previousConfig);return config&&debug("Found configuration %o from %o.",config.filepath,dirname),config}function readConfig(filepath,envName,caller){switch(_path().extname(filepath)){case".js":case".cjs":case".mjs":case".cts":return readConfigCode(filepath,{envName,caller});default:return readConfigJSON5(filepath)}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/import-meta-resolve.js":(__unused_webpack_module,exports,__nested_webpack_require_144345__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(specifier,parent){return importMetaResolve(specifier,parent)};var _importMetaResolve=__nested_webpack_require_144345__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/vendor/import-meta-resolve.js");let importMetaResolve;importMetaResolve=_importMetaResolve.resolve},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/import.cjs":(module,__unused_webpack_exports,__nested_webpack_require_144864__)=>{module.exports=function(filepath){return __nested_webpack_require_144864__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files lazy recursive")(filepath)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/index.js":(__unused_webpack_module,exports,__nested_webpack_require_145186__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"ROOT_CONFIG_FILENAMES",{enumerable:!0,get:function(){return _configuration.ROOT_CONFIG_FILENAMES}}),Object.defineProperty(exports,"findConfigUpwards",{enumerable:!0,get:function(){return _configuration.findConfigUpwards}}),Object.defineProperty(exports,"findPackageData",{enumerable:!0,get:function(){return _package.findPackageData}}),Object.defineProperty(exports,"findRelativeConfig",{enumerable:!0,get:function(){return _configuration.findRelativeConfig}}),Object.defineProperty(exports,"findRootConfig",{enumerable:!0,get:function(){return _configuration.findRootConfig}}),Object.defineProperty(exports,"loadConfig",{enumerable:!0,get:function(){return _configuration.loadConfig}}),Object.defineProperty(exports,"loadPlugin",{enumerable:!0,get:function(){return _plugins.loadPlugin}}),Object.defineProperty(exports,"loadPreset",{enumerable:!0,get:function(){return _plugins.loadPreset}}),Object.defineProperty(exports,"resolvePlugin",{enumerable:!0,get:function(){return _plugins.resolvePlugin}}),Object.defineProperty(exports,"resolvePreset",{enumerable:!0,get:function(){return _plugins.resolvePreset}}),Object.defineProperty(exports,"resolveShowConfigPath",{enumerable:!0,get:function(){return _configuration.resolveShowConfigPath}});var _package=__nested_webpack_require_145186__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/package.js"),_configuration=__nested_webpack_require_145186__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/configuration.js"),_plugins=__nested_webpack_require_145186__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/plugins.js")},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/module-types.js":(__unused_webpack_module,exports,__nested_webpack_require_147075__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function*(filepath,asyncError){switch(_path().extname(filepath)){case".cjs":return loadCjsDefault(filepath,arguments[2]);case".mjs":break;case".cts":return function(filepath){const ext=".cts",hasTsSupport=!!(__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").extensions[".ts"]||__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").extensions[".cts"]||__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").extensions[".mts"]);let handler;if(!hasTsSupport){const opts={babelrc:!1,configFile:!1,sourceType:"unambiguous",sourceMaps:"inline",sourceFileName:_path().basename(filepath),presets:[[getTSPreset(filepath),Object.assign({onlyRemoveTypeImports:!0,optimizeConstEnums:!0},{allowDeclareFields:!0})]]};handler=function(m,filename){if(handler&&filename.endsWith(ext))try{return m._compile((0,_transformFile.transformFileSync)(filename,Object.assign({},opts,{filename})).code,filename)}catch(error){if(!hasTsSupport){const packageJson=__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+preset-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/preset-typescript/package.json");_semverV().lt(packageJson.version,"7.21.4")&&console.error("`.cts` configuration file failed to load, please try to update `@babel/preset-typescript`.")}throw error}return __nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").extensions[".js"](m,filename)},__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").extensions[ext]=handler}try{const module=(0,_rewriteStackTrace.endHiddenCallStack)(__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive"))(filepath);return null!=module&&module.__esModule?module.default:module}finally{hasTsSupport||(__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").extensions[ext]===handler&&delete __nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").extensions[ext],handler=void 0)}}(filepath);default:try{return loadCjsDefault(filepath,arguments[2])}catch(e){if("ERR_REQUIRE_ESM"!==e.code)throw e}}if(yield*(0,_async.isAsync)())return yield*(0,_async.waitFor)(function(_x){return _loadMjsDefault.apply(this,arguments)}(filepath));throw new _configError.default(asyncError,filepath)},exports.supportsESM=void 0;var _async=__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/async.js");function _path(){const data=__nested_webpack_require_147075__("path");return _path=function(){return data},data}function _url(){const data=__nested_webpack_require_147075__("url");return _url=function(){return data},data}function _semverV(){const data=__nested_webpack_require_147075__("./node_modules/.pnpm/@nicolo-ribaudo+semver-v6@6.3.3/node_modules/@nicolo-ribaudo/semver-v6/semver.js");return _semverV=function(){return data},data}var _rewriteStackTrace=__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js"),_configError=__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/config-error.js"),_transformFile=__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transform-file.js");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}let import_;try{import_=__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/import.cjs")}catch(_unused){}const supportsESM=_semverV().satisfies(process.versions.node,"^12.17 || >=13.2");function loadCjsDefault(filepath){const module=(0,_rewriteStackTrace.endHiddenCallStack)(__nested_webpack_require_147075__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive"))(filepath);return null!=module&&module.__esModule?module.default||(arguments[1]?module:void 0):module}function _loadMjsDefault(){var fn;return fn=function*(filepath){if(!import_)throw new _configError.default("Internal error: Native ECMAScript modules aren't supported by this platform.\n",filepath);return(yield(0,_rewriteStackTrace.endHiddenCallStack)(import_)((0,_url().pathToFileURL)(filepath))).default},_loadMjsDefault=function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))},_loadMjsDefault.apply(this,arguments)}function getTSPreset(filepath){try{return __nested_webpack_require_147075__("./node_modules/.pnpm/@babel+preset-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/preset-typescript/lib/index.js")}catch(error){if("MODULE_NOT_FOUND"!==error.code)throw error;let message="You appear to be using a .cts file as Babel configuration, but the `@babel/preset-typescript` package was not found: please install it!";throw process.versions.pnp&&(message+='\nIf you are using Yarn Plug\'n\'Play, you may also need to add the following configuration to your .yarnrc.yml file:\n\npackageExtensions:\n\t"@babel/core@*":\n\t\tpeerDependencies:\n\t\t\t"@babel/preset-typescript": "*"\n'),new _configError.default(message,filepath)}}exports.supportsESM=supportsESM},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/package.js":(__unused_webpack_module,exports,__nested_webpack_require_153056__)=>{"use strict";function _path(){const data=__nested_webpack_require_153056__("path");return _path=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.findPackageData=function*(filepath){let pkg=null;const directories=[];let isPackage=!0,dirname=_path().dirname(filepath);for(;!pkg&&"node_modules"!==_path().basename(dirname);){directories.push(dirname),pkg=yield*readConfigPackage(_path().join(dirname,PACKAGE_FILENAME));const nextLoc=_path().dirname(dirname);if(dirname===nextLoc){isPackage=!1;break}dirname=nextLoc}return{filepath,directories,pkg,isPackage}};var _utils=__nested_webpack_require_153056__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/utils.js"),_configError=__nested_webpack_require_153056__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/config-error.js");const PACKAGE_FILENAME="package.json",readConfigPackage=(0,_utils.makeStaticFileCache)(((filepath,content)=>{let options;try{options=JSON.parse(content)}catch(err){throw new _configError.default(`Error while parsing JSON - ${err.message}`,filepath)}if(!options)throw new Error(`${filepath}: No config detected`);if("object"!=typeof options)throw new _configError.default("Config returned typeof "+typeof options,filepath);if(Array.isArray(options))throw new _configError.default("Expected config object but found array",filepath);return{filepath,dirname:_path().dirname(filepath),options}}))},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/plugins.js":(__unused_webpack_module,exports,__nested_webpack_require_154638__)=>{"use strict";function _debug(){const data=__nested_webpack_require_154638__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js");return _debug=function(){return data},data}function _path(){const data=__nested_webpack_require_154638__("path");return _path=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.loadPlugin=function*(name,dirname){const filepath=resolvePlugin(name,dirname,yield*(0,_async.isAsync)()),value=yield*requireModule("plugin",filepath);return debug("Loaded plugin %o from %o.",name,dirname),{filepath,value}},exports.loadPreset=function*(name,dirname){const filepath=resolvePreset(name,dirname,yield*(0,_async.isAsync)()),value=yield*requireModule("preset",filepath);return debug("Loaded preset %o from %o.",name,dirname),{filepath,value}},exports.resolvePreset=exports.resolvePlugin=void 0;var _async=__nested_webpack_require_154638__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/async.js"),_moduleTypes=__nested_webpack_require_154638__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/module-types.js");function _url(){const data=__nested_webpack_require_154638__("url");return _url=function(){return data},data}var _importMetaResolve=__nested_webpack_require_154638__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/import-meta-resolve.js");const debug=_debug()("babel:config:loading:files:plugins"),EXACT_RE=/^module:/,BABEL_PLUGIN_PREFIX_RE=/^(?!@|module:|[^/]+\/|babel-plugin-)/,BABEL_PRESET_PREFIX_RE=/^(?!@|module:|[^/]+\/|babel-preset-)/,BABEL_PLUGIN_ORG_RE=/^(@babel\/)(?!plugin-|[^/]+\/)/,BABEL_PRESET_ORG_RE=/^(@babel\/)(?!preset-|[^/]+\/)/,OTHER_PLUGIN_ORG_RE=/^(@(?!babel\/)[^/]+\/)(?![^/]*babel-plugin(?:-|\/|$)|[^/]+\/)/,OTHER_PRESET_ORG_RE=/^(@(?!babel\/)[^/]+\/)(?![^/]*babel-preset(?:-|\/|$)|[^/]+\/)/,OTHER_ORG_DEFAULT_RE=/^(@(?!babel$)[^/]+)$/,resolvePlugin=resolveStandardizedName.bind(null,"plugin");exports.resolvePlugin=resolvePlugin;const resolvePreset=resolveStandardizedName.bind(null,"preset");function standardizeName(type,name){if(_path().isAbsolute(name))return name;const isPreset="preset"===type;return name.replace(isPreset?BABEL_PRESET_PREFIX_RE:BABEL_PLUGIN_PREFIX_RE,`babel-${type}-`).replace(isPreset?BABEL_PRESET_ORG_RE:BABEL_PLUGIN_ORG_RE,`$1${type}-`).replace(isPreset?OTHER_PRESET_ORG_RE:OTHER_PLUGIN_ORG_RE,`$1babel-${type}-`).replace(OTHER_ORG_DEFAULT_RE,`$1/babel-${type}`).replace(EXACT_RE,"")}function*resolveAlternativesHelper(type,name){const standardizedName=standardizeName(type,name),{error,value}=yield standardizedName;if(!error)return value;if("MODULE_NOT_FOUND"!==error.code)throw error;standardizedName===name||(yield name).error||(error.message+=`\n- If you want to resolve "${name}", use "module:${name}"`),(yield standardizeName(type,"@babel/"+name)).error||(error.message+=`\n- Did you mean "@babel/${name}"?`);const oppositeType="preset"===type?"plugin":"preset";if((yield standardizeName(oppositeType,name)).error||(error.message+=`\n- Did you accidentally pass a ${oppositeType} as a ${type}?`),"plugin"===type){const transformName=standardizedName.replace("-proposal-","-transform-");transformName===standardizedName||(yield transformName).error||(error.message+=`\n- Did you mean "${transformName}"?`)}throw error.message+="\n\nMake sure that all the Babel plugins and presets you are using\nare defined as dependencies or devDependencies in your package.json\nfile. It's possible that the missing plugin is loaded by a preset\nyou are using that forgot to add the plugin to its dependencies: you\ncan workaround this problem by explicitly adding the missing package\nto your top-level package.json.\n",error}function tryRequireResolve(id,dirname){try{return dirname?{error:null,value:(v=process.versions.node,w="8.9",v=v.split("."),w=w.split("."),+v[0]>+w[0]||v[0]==w[0]&&+v[1]>=+w[1]?__nested_webpack_require_154638__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").resolve:(r,{paths:[b]},M=__nested_webpack_require_154638__("module"))=>{let f=M._findPath(r,M._nodeModulePaths(b).concat(b));if(f)return f;throw f=new Error(`Cannot resolve module '${r}'`),f.code="MODULE_NOT_FOUND",f})(id,{paths:[dirname]})}:{error:null,value:__nested_webpack_require_154638__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files sync recursive").resolve(id)}}catch(error){return{error,value:null}}var v,w}function tryImportMetaResolve(id,options){try{return{error:null,value:(0,_importMetaResolve.default)(id,options)}}catch(error){return{error,value:null}}}function resolveStandardizedNameForRequire(type,name,dirname){const it=resolveAlternativesHelper(type,name);let res=it.next();for(;!res.done;)res=it.next(tryRequireResolve(res.value,dirname));return res.value}function resolveStandardizedName(type,name,dirname,resolveESM){if(!_moduleTypes.supportsESM||!resolveESM)return resolveStandardizedNameForRequire(type,name,dirname);try{return function(type,name,dirname){const parentUrl=(0,_url().pathToFileURL)(_path().join(dirname,"./babel-virtual-resolve-base.js")).href,it=resolveAlternativesHelper(type,name);let res=it.next();for(;!res.done;)res=it.next(tryImportMetaResolve(res.value,parentUrl));return(0,_url().fileURLToPath)(res.value)}(type,name,dirname)}catch(e){try{return resolveStandardizedNameForRequire(type,name,dirname)}catch(e2){if("MODULE_NOT_FOUND"===e.type)throw e;if("MODULE_NOT_FOUND"===e2.type)throw e2;throw e}}}exports.resolvePreset=resolvePreset;var LOADING_MODULES=new Set;function*requireModule(type,name){if(!(yield*(0,_async.isAsync)())&&LOADING_MODULES.has(name))throw new Error(`Reentrant ${type} detected trying to load "${name}". This module is not ignored and is trying to load itself while compiling itself, leading to a dependency cycle. We recommend adding it to your "ignore" list in your babelrc, or to a .babelignore.`);try{return LOADING_MODULES.add(name),yield*(0,_moduleTypes.default)(name,`You appear to be using a native ECMAScript module ${type}, which is only supported when running Babel asynchronously.`,!0)}catch(err){throw err.message=`[BABEL]: ${err.message} (While processing: ${name})`,err}finally{LOADING_MODULES.delete(name)}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/utils.js":(__unused_webpack_module,exports,__nested_webpack_require_160968__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.makeStaticFileCache=function(fn){return(0,_caching.makeStrongCache)((function*(filepath,cache){const cached=cache.invalidate((()=>function(filepath){if(!_fs2().existsSync(filepath))return null;try{return+_fs2().statSync(filepath).mtime}catch(e){if("ENOENT"!==e.code&&"ENOTDIR"!==e.code)throw e}return null}(filepath)));return null===cached?null:fn(filepath,yield*fs.readFile(filepath,"utf8"))}))};var _caching=__nested_webpack_require_160968__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/caching.js"),fs=__nested_webpack_require_160968__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/fs.js");function _fs2(){const data=__nested_webpack_require_160968__("fs");return _fs2=function(){return data},data}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/full.js":(__unused_webpack_module,exports,__nested_webpack_require_161917__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_161917__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _async=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/async.js"),_util=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/util.js"),context=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_plugin=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/plugin.js"),_item=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/item.js"),_configChain=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/config-chain.js"),_deepArray=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/deep-array.js");function _traverse(){const data=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js");return _traverse=function(){return data},data}var _caching=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/caching.js"),_options=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/options.js"),_plugins=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/plugins.js"),_configApi=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/config-api.js"),_partial=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/partial.js"),_configError=__nested_webpack_require_161917__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/config-error.js"),_default=_gensync()((function*(inputOpts){var _opts$assumptions;const result=yield*(0,_partial.default)(inputOpts);if(!result)return null;const{options,context,fileHandling}=result;if("ignored"===fileHandling)return null;const optionDefaults={},{plugins,presets}=options;if(!plugins||!presets)throw new Error("Assertion failure - plugins and presets exist");const presetContext=Object.assign({},context,{targets:options.targets}),toDescriptor=item=>{const desc=(0,_item.getItemDescriptor)(item);if(!desc)throw new Error("Assertion failure - must be config item");return desc},presetsDescriptors=presets.map(toDescriptor),initialPluginsDescriptors=plugins.map(toDescriptor),pluginDescriptorsByPass=[[]],passes=[],externalDependencies=[],ignored=yield*enhanceError(context,(function*recursePresetDescriptors(rawPresets,pluginDescriptorsPass){const presets=[];for(let i=0;i<rawPresets.length;i++){const descriptor=rawPresets[i];if(!1!==descriptor.options){try{var preset=yield*loadPresetDescriptor(descriptor,presetContext)}catch(e){throw"BABEL_UNKNOWN_OPTION"===e.code&&(0,_options.checkNoUnwrappedItemOptionPairs)(rawPresets,i,"preset",e),e}externalDependencies.push(preset.externalDependencies),descriptor.ownPass?presets.push({preset:preset.chain,pass:[]}):presets.unshift({preset:preset.chain,pass:pluginDescriptorsPass})}}if(presets.length>0){pluginDescriptorsByPass.splice(1,0,...presets.map((o=>o.pass)).filter((p=>p!==pluginDescriptorsPass)));for(const{preset,pass}of presets){if(!preset)return!0;pass.push(...preset.plugins);if(yield*recursePresetDescriptors(preset.presets,pass))return!0;preset.options.forEach((opts=>{(0,_util.mergeOptions)(optionDefaults,opts)}))}}}))(presetsDescriptors,pluginDescriptorsByPass[0]);if(ignored)return null;const opts=optionDefaults;(0,_util.mergeOptions)(opts,options);const pluginContext=Object.assign({},presetContext,{assumptions:null!=(_opts$assumptions=opts.assumptions)?_opts$assumptions:{}});return yield*enhanceError(context,(function*(){pluginDescriptorsByPass[0].unshift(...initialPluginsDescriptors);for(const descs of pluginDescriptorsByPass){const pass=[];passes.push(pass);for(let i=0;i<descs.length;i++){const descriptor=descs[i];if(!1!==descriptor.options){try{var plugin=yield*loadPluginDescriptor(descriptor,pluginContext)}catch(e){throw"BABEL_UNKNOWN_PLUGIN_PROPERTY"===e.code&&(0,_options.checkNoUnwrappedItemOptionPairs)(descs,i,"plugin",e),e}pass.push(plugin),externalDependencies.push(plugin.externalDependencies)}}}}))(),opts.plugins=passes[0],opts.presets=passes.slice(1).filter((plugins=>plugins.length>0)).map((plugins=>({plugins}))),opts.passPerPreset=opts.presets.length>0,{options:opts,passes,externalDependencies:(0,_deepArray.finalize)(externalDependencies)}}));function enhanceError(context,fn){return function*(arg1,arg2){try{return yield*fn(arg1,arg2)}catch(e){var _context$filename;if(!/^\[BABEL\]/.test(e.message))e.message=`[BABEL] ${null!=(_context$filename=context.filename)?_context$filename:"unknown file"}: ${e.message}`;throw e}}}exports.default=_default;const makeDescriptorLoader=apiFactory=>(0,_caching.makeWeakCache)((function*({value,options,dirname,alias},cache){if(!1===options)throw new Error("Assertion failure");options=options||{};const externalDependencies=[];let item=value;if("function"==typeof value){const factory=(0,_async.maybeAsync)(value,"You appear to be using an async plugin/preset, but Babel has been called synchronously"),api=Object.assign({},context,apiFactory(cache,externalDependencies));try{item=yield*factory(api,options,dirname)}catch(e){throw alias&&(e.message+=` (While processing: ${JSON.stringify(alias)})`),e}}if(!item||"object"!=typeof item)throw new Error("Plugin/Preset did not return an object.");if((0,_async.isThenable)(item))throw yield*[],new Error(`You appear to be using a promise as a plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version. As an alternative, you can prefix the promise with "await". (While processing: ${JSON.stringify(alias)})`);if(externalDependencies.length>0&&(!cache.configured()||"forever"===cache.mode())){let error=`A plugin/preset has external untracked dependencies (${externalDependencies[0]}), but the cache `;throw cache.configured()?error+=" has been configured to never be invalidated. ":error+="has not been configured to be invalidated when the external dependencies change. ",error+=`Plugins/presets should configure their cache to be invalidated when the external dependencies change, for example using \`api.cache.invalidate(() => statSync(filepath).mtimeMs)\` or \`api.cache.never()\`\n(While processing: ${JSON.stringify(alias)})`,new Error(error)}return{value:item,options,dirname,alias,externalDependencies:(0,_deepArray.finalize)(externalDependencies)}})),pluginDescriptorLoader=makeDescriptorLoader(_configApi.makePluginAPI),presetDescriptorLoader=makeDescriptorLoader(_configApi.makePresetAPI),instantiatePlugin=(0,_caching.makeWeakCache)((function*({value,options,dirname,alias,externalDependencies},cache){const pluginObj=(0,_plugins.validatePluginObject)(value),plugin=Object.assign({},pluginObj);if(plugin.visitor&&(plugin.visitor=_traverse().default.explode(Object.assign({},plugin.visitor))),plugin.inherits){const inheritsDescriptor={name:void 0,alias:`${alias}$inherits`,value:plugin.inherits,options,dirname},inherits=yield*(0,_async.forwardAsync)(loadPluginDescriptor,(run=>cache.invalidate((data=>run(inheritsDescriptor,data)))));plugin.pre=chain(inherits.pre,plugin.pre),plugin.post=chain(inherits.post,plugin.post),plugin.manipulateOptions=chain(inherits.manipulateOptions,plugin.manipulateOptions),plugin.visitor=_traverse().default.visitors.merge([inherits.visitor||{},plugin.visitor||{}]),inherits.externalDependencies.length>0&&(externalDependencies=0===externalDependencies.length?inherits.externalDependencies:(0,_deepArray.finalize)([externalDependencies,inherits.externalDependencies]))}return new _plugin.default(plugin,options,alias,externalDependencies)}));function*loadPluginDescriptor(descriptor,context){if(descriptor.value instanceof _plugin.default){if(descriptor.options)throw new Error("Passed options to an existing Plugin instance will not work.");return descriptor.value}return yield*instantiatePlugin(yield*pluginDescriptorLoader(descriptor,context),context)}const needsFilename=val=>val&&"function"!=typeof val,validateIfOptionNeedsFilename=(options,descriptor)=>{if(needsFilename(options.test)||needsFilename(options.include)||needsFilename(options.exclude)){const formattedPresetName=descriptor.name?`"${descriptor.name}"`:"/* your preset */";throw new _configError.default([`Preset ${formattedPresetName} requires a filename to be set when babel is called directly,`,"```",`babel.transformSync(code, { filename: 'file.ts', presets: [${formattedPresetName}] });`,"```","See https://babeljs.io/docs/en/options#filename for more information."].join("\n"))}},validatePreset=(preset,context,descriptor)=>{if(!context.filename){var _options$overrides;const{options}=preset;validateIfOptionNeedsFilename(options,descriptor),null==(_options$overrides=options.overrides)||_options$overrides.forEach((overrideOptions=>validateIfOptionNeedsFilename(overrideOptions,descriptor)))}},instantiatePreset=(0,_caching.makeWeakCacheSync)((({value,dirname,alias,externalDependencies})=>({options:(0,_options.validate)("preset",value),alias,dirname,externalDependencies})));function*loadPresetDescriptor(descriptor,context){const preset=instantiatePreset(yield*presetDescriptorLoader(descriptor,context));return validatePreset(preset,context,descriptor),{chain:yield*(0,_configChain.buildPresetChain)(preset,context),externalDependencies:preset.externalDependencies}}function chain(a,b){const fns=[a,b].filter(Boolean);return fns.length<=1?fns[0]:function(...args){for(const fn of fns)fn.apply(this,args)}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/config-api.js":(__unused_webpack_module,exports,__nested_webpack_require_172020__)=>{"use strict";function _semverV(){const data=__nested_webpack_require_172020__("./node_modules/.pnpm/@nicolo-ribaudo+semver-v6@6.3.3/node_modules/@nicolo-ribaudo/semver-v6/semver.js");return _semverV=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.makeConfigAPI=makeConfigAPI,exports.makePluginAPI=function(cache,externalDependencies){return Object.assign({},makePresetAPI(cache,externalDependencies),{assumption:name=>cache.using((data=>data.assumptions[name]))})},exports.makePresetAPI=makePresetAPI;var _=__nested_webpack_require_172020__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_caching=__nested_webpack_require_172020__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/caching.js");function makeConfigAPI(cache){return{version:_.version,cache:cache.simple(),env:value=>cache.using((data=>void 0===value?data.envName:"function"==typeof value?(0,_caching.assertSimpleType)(value(data.envName)):(Array.isArray(value)?value:[value]).some((entry=>{if("string"!=typeof entry)throw new Error("Unexpected non-string value");return entry===data.envName})))),async:()=>!1,caller:cb=>cache.using((data=>(0,_caching.assertSimpleType)(cb(data.caller)))),assertVersion}}function makePresetAPI(cache,externalDependencies){return Object.assign({},makeConfigAPI(cache),{targets:()=>JSON.parse(cache.using((data=>JSON.stringify(data.targets)))),addExternalDependency:ref=>{externalDependencies.push(ref)}})}function assertVersion(range){if("number"==typeof range){if(!Number.isInteger(range))throw new Error("Expected string or integer value.");range=`^${range}.0.0-0`}if("string"!=typeof range)throw new Error("Expected string or integer value.");if(_semverV().satisfies(_.version,range))return;const limit=Error.stackTraceLimit;"number"==typeof limit&&limit<25&&(Error.stackTraceLimit=25);const err=new Error(`Requires Babel "${range}", but was loaded with "${_.version}". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn't mention "@babel/core" or "babel-core" to see what is calling Babel.`);throw"number"==typeof limit&&(Error.stackTraceLimit=limit),Object.assign(err,{code:"BABEL_VERSION_UNSUPPORTED",version:_.version,range})}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/deep-array.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.finalize=function(deepArr){return Object.freeze(deepArr)},exports.flattenToSet=function(arr){const result=new Set,stack=[arr];for(;stack.length>0;)for(const el of stack.pop())Array.isArray(el)?stack.push(el):result.add(el);return result}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/environment.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEnv=function(defaultValue="development"){return process.env.BABEL_ENV||process.env.NODE_ENV||defaultValue}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/index.js":(__unused_webpack_module,exports,__nested_webpack_require_175300__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_175300__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.createConfigItem=function(target,options,callback){if(void 0!==callback)createConfigItemRunner.errback(target,options,callback);else{if("function"!=typeof options)return createConfigItemRunner.sync(target,options);createConfigItemRunner.errback(target,void 0,callback)}},exports.createConfigItemSync=exports.createConfigItemAsync=void 0,Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return _full.default}}),exports.loadPartialConfigSync=exports.loadPartialConfigAsync=exports.loadPartialConfig=exports.loadOptionsSync=exports.loadOptionsAsync=exports.loadOptions=void 0;var _full=__nested_webpack_require_175300__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/full.js"),_partial=__nested_webpack_require_175300__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/partial.js"),_item=__nested_webpack_require_175300__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/item.js");const loadOptionsRunner=_gensync()((function*(opts){var _config$options;const config=yield*(0,_full.default)(opts);return null!=(_config$options=null==config?void 0:config.options)?_config$options:null})),createConfigItemRunner=_gensync()(_item.createConfigItem),maybeErrback=runner=>(argOrCallback,maybeCallback)=>{let arg,callback;if(void 0===maybeCallback&&"function"==typeof argOrCallback?(callback=argOrCallback,arg=void 0):(callback=maybeCallback,arg=argOrCallback),!callback)return runner.sync(arg);runner.errback(arg,callback)},loadPartialConfig=maybeErrback(_partial.loadPartialConfig);exports.loadPartialConfig=loadPartialConfig;const loadPartialConfigSync=_partial.loadPartialConfig.sync;exports.loadPartialConfigSync=loadPartialConfigSync;const loadPartialConfigAsync=_partial.loadPartialConfig.async;exports.loadPartialConfigAsync=loadPartialConfigAsync;const loadOptions=maybeErrback(loadOptionsRunner);exports.loadOptions=loadOptions;const loadOptionsSync=loadOptionsRunner.sync;exports.loadOptionsSync=loadOptionsSync;const loadOptionsAsync=loadOptionsRunner.async;exports.loadOptionsAsync=loadOptionsAsync;const createConfigItemSync=createConfigItemRunner.sync;exports.createConfigItemSync=createConfigItemSync;const createConfigItemAsync=createConfigItemRunner.async;exports.createConfigItemAsync=createConfigItemAsync},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/item.js":(__unused_webpack_module,exports,__nested_webpack_require_177970__)=>{"use strict";function _path(){const data=__nested_webpack_require_177970__("path");return _path=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.createConfigItem=function*(value,{dirname=".",type}={}){return createItemFromDescriptor(yield*(0,_configDescriptors.createDescriptor)(value,_path().resolve(dirname),{type,alias:"programmatic item"}))},exports.createItemFromDescriptor=createItemFromDescriptor,exports.getItemDescriptor=function(item){if(null!=item&&item[CONFIG_ITEM_BRAND])return item._descriptor;return};var _configDescriptors=__nested_webpack_require_177970__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/config-descriptors.js");function createItemFromDescriptor(desc){return new ConfigItem(desc)}const CONFIG_ITEM_BRAND=Symbol.for("@babel/core@7 - ConfigItem");class ConfigItem{constructor(descriptor){this._descriptor=void 0,this[CONFIG_ITEM_BRAND]=!0,this.value=void 0,this.options=void 0,this.dirname=void 0,this.name=void 0,this.file=void 0,this._descriptor=descriptor,Object.defineProperty(this,"_descriptor",{enumerable:!1}),Object.defineProperty(this,CONFIG_ITEM_BRAND,{enumerable:!1}),this.value=this._descriptor.value,this.options=this._descriptor.options,this.dirname=this._descriptor.dirname,this.name=this._descriptor.name,this.file=this._descriptor.file?{request:this._descriptor.file.request,resolved:this._descriptor.file.resolved}:void 0,Object.freeze(this)}}Object.freeze(ConfigItem.prototype)},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/partial.js":(__unused_webpack_module,exports,__nested_webpack_require_179588__)=>{"use strict";function _path(){const data=__nested_webpack_require_179588__("path");return _path=function(){return data},data}function _gensync(){const data=__nested_webpack_require_179588__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=loadPrivatePartialConfig,exports.loadPartialConfig=void 0;var _plugin=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/plugin.js"),_util=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/util.js"),_item=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/item.js"),_configChain=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/config-chain.js"),_environment=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/environment.js"),_options=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/options.js"),_files=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/index.js"),_resolveTargets=__nested_webpack_require_179588__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/resolve-targets.js");const _excluded=["showIgnoredFiles"];function*loadPrivatePartialConfig(inputOpts){if(null!=inputOpts&&("object"!=typeof inputOpts||Array.isArray(inputOpts)))throw new Error("Babel options must be an object, null, or undefined");const args=inputOpts?(0,_options.validate)("arguments",inputOpts):{},{envName=(0,_environment.getEnv)(),cwd=".",root:rootDir=".",rootMode="root",caller,cloneInputAst=!0}=args,absoluteCwd=_path().resolve(cwd),absoluteRootDir=function(rootDir,rootMode){switch(rootMode){case"root":return rootDir;case"upward-optional":{const upwardRootDir=(0,_files.findConfigUpwards)(rootDir);return null===upwardRootDir?rootDir:upwardRootDir}case"upward":{const upwardRootDir=(0,_files.findConfigUpwards)(rootDir);if(null!==upwardRootDir)return upwardRootDir;throw Object.assign(new Error(`Babel was run with rootMode:"upward" but a root could not be found when searching upward from "${rootDir}".\nOne of the following config files must be in the directory tree: "${_files.ROOT_CONFIG_FILENAMES.join(", ")}".`),{code:"BABEL_ROOT_NOT_FOUND",dirname:rootDir})}default:throw new Error("Assertion failure - unknown rootMode value.")}}(_path().resolve(absoluteCwd,rootDir),rootMode),filename="string"==typeof args.filename?_path().resolve(cwd,args.filename):void 0,context={filename,cwd:absoluteCwd,root:absoluteRootDir,envName,caller,showConfig:(yield*(0,_files.resolveShowConfigPath)(absoluteCwd))===filename},configChain=yield*(0,_configChain.buildRootChain)(args,context);if(!configChain)return null;const merged={assumptions:{}};configChain.options.forEach((opts=>{(0,_util.mergeOptions)(merged,opts)}));return{options:Object.assign({},merged,{targets:(0,_resolveTargets.resolveTargets)(merged,absoluteRootDir),cloneInputAst,babelrc:!1,configFile:!1,browserslistConfigFile:!1,passPerPreset:!1,envName:context.envName,cwd:context.cwd,root:context.root,rootMode:"root",filename:"string"==typeof context.filename?context.filename:void 0,plugins:configChain.plugins.map((descriptor=>(0,_item.createItemFromDescriptor)(descriptor))),presets:configChain.presets.map((descriptor=>(0,_item.createItemFromDescriptor)(descriptor)))}),context,fileHandling:configChain.fileHandling,ignore:configChain.ignore,babelrc:configChain.babelrc,config:configChain.config,files:configChain.files}}const loadPartialConfig=_gensync()((function*(opts){let showIgnoredFiles=!1;if("object"==typeof opts&&null!==opts&&!Array.isArray(opts)){var _opts=opts;({showIgnoredFiles}=_opts),opts=function(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_opts,_excluded)}const result=yield*loadPrivatePartialConfig(opts);if(!result)return null;const{options,babelrc,ignore,config,fileHandling,files}=result;return"ignored"!==fileHandling||showIgnoredFiles?((options.plugins||[]).forEach((item=>{if(item.value instanceof _plugin.default)throw new Error("Passing cached plugin instances is not supported in babel.loadPartialConfig()")})),new PartialConfig(options,babelrc?babelrc.filepath:void 0,ignore?ignore.filepath:void 0,config?config.filepath:void 0,fileHandling,files)):null}));exports.loadPartialConfig=loadPartialConfig;class PartialConfig{constructor(options,babelrc,ignore,config,fileHandling,files){this.options=void 0,this.babelrc=void 0,this.babelignore=void 0,this.config=void 0,this.fileHandling=void 0,this.files=void 0,this.options=options,this.babelignore=ignore,this.babelrc=babelrc,this.config=config,this.fileHandling=fileHandling,this.files=files,Object.freeze(this)}hasFilesystemConfig(){return void 0!==this.babelrc||void 0!==this.config}}Object.freeze(PartialConfig.prototype)},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/pattern-to-regex.js":(__unused_webpack_module,exports,__nested_webpack_require_184886__)=>{"use strict";function _path(){const data=__nested_webpack_require_184886__("path");return _path=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(pattern,dirname){const parts=_path().resolve(dirname,pattern).split(_path().sep);return new RegExp(["^",...parts.map(((part,i)=>{const last=i===parts.length-1;return"**"===part?last?starStarPatLast:starStarPat:"*"===part?last?starPatLast:starPat:0===part.indexOf("*.")?substitution+escapeRegExp(part.slice(1))+(last?endSep:sep):escapeRegExp(part)+(last?endSep:sep)}))].join(""))};const sep=`\\${_path().sep}`,endSep=`(?:${sep}|$)`,substitution=`[^${sep}]+`,starPat=`(?:${substitution}${sep})`,starPatLast=`(?:${substitution}${endSep})`,starStarPat=`${starPat}*?`,starStarPatLast=`${starPat}*?${starPatLast}?`;function escapeRegExp(string){return string.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&")}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/plugin.js":(__unused_webpack_module,exports,__nested_webpack_require_185914__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _deepArray=__nested_webpack_require_185914__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/deep-array.js");exports.default=class{constructor(plugin,options,key,externalDependencies=(0,_deepArray.finalize)([])){this.key=void 0,this.manipulateOptions=void 0,this.post=void 0,this.pre=void 0,this.visitor=void 0,this.parserOverride=void 0,this.generatorOverride=void 0,this.options=void 0,this.externalDependencies=void 0,this.key=plugin.name||key,this.manipulateOptions=plugin.manipulateOptions,this.post=plugin.post,this.pre=plugin.pre,this.visitor=plugin.visitor||{},this.parserOverride=plugin.parserOverride,this.generatorOverride=plugin.generatorOverride,this.options=options,this.externalDependencies=externalDependencies}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/printer.js":(__unused_webpack_module,exports,__nested_webpack_require_186907__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_186907__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConfigPrinter=exports.ChainFormatter=void 0;const ChainFormatter={Programmatic:0,Config:1};exports.ChainFormatter=ChainFormatter;const Formatter={title(type,callerName,filepath){let title="";return type===ChainFormatter.Programmatic?(title="programmatic options",callerName&&(title+=" from "+callerName)):title="config "+filepath,title},loc(index,envName){let loc="";return null!=index&&(loc+=`.overrides[${index}]`),null!=envName&&(loc+=`.env["${envName}"]`),loc},*optionsAndDescriptors(opt){const content=Object.assign({},opt.options);delete content.overrides,delete content.env;const pluginDescriptors=[...yield*opt.plugins()];pluginDescriptors.length&&(content.plugins=pluginDescriptors.map((d=>descriptorToConfig(d))));const presetDescriptors=[...yield*opt.presets()];return presetDescriptors.length&&(content.presets=[...presetDescriptors].map((d=>descriptorToConfig(d)))),JSON.stringify(content,void 0,2)}};function descriptorToConfig(d){var _d$file;let name=null==(_d$file=d.file)?void 0:_d$file.request;return null==name&&("object"==typeof d.value?name=d.value:"function"==typeof d.value&&(name=`[Function: ${d.value.toString().slice(0,50)} ... ]`)),null==name&&(name="[Unknown]"),void 0===d.options?name:null==d.name?[name,d.options]:[name,d.options,d.name]}class ConfigPrinter{constructor(){this._stack=[]}configure(enabled,type,{callerName,filepath}){return enabled?(content,index,envName)=>{this._stack.push({type,callerName,filepath,content,index,envName})}:()=>{}}static*format(config){let title=Formatter.title(config.type,config.callerName,config.filepath);const loc=Formatter.loc(config.index,config.envName);loc&&(title+=` ${loc}`);return`${title}\n${yield*Formatter.optionsAndDescriptors(config.content)}`}*output(){if(0===this._stack.length)return"";return(yield*_gensync().all(this._stack.map((s=>ConfigPrinter.format(s))))).join("\n\n")}}exports.ConfigPrinter=ConfigPrinter},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/resolve-targets.js":(__unused_webpack_module,exports,__nested_webpack_require_189205__)=>{"use strict";function _path(){const data=__nested_webpack_require_189205__("path");return _path=function(){return data},data}function _helperCompilationTargets(){const data=__nested_webpack_require_189205__("./stubs/helper-compilation-targets.js");return _helperCompilationTargets=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.resolveBrowserslistConfigFile=function(browserslistConfigFile,configFileDir){return _path().resolve(configFileDir,browserslistConfigFile)},exports.resolveTargets=function(options,root){const optTargets=options.targets;let targets;"string"==typeof optTargets||Array.isArray(optTargets)?targets={browsers:optTargets}:optTargets&&(targets="esmodules"in optTargets?Object.assign({},optTargets,{esmodules:"intersect"}):optTargets);const{browserslistConfigFile}=options;let configFile,ignoreBrowserslistConfig=!1;"string"==typeof browserslistConfigFile?configFile=browserslistConfigFile:ignoreBrowserslistConfig=!1===browserslistConfigFile;return(0,_helperCompilationTargets().default)(targets,{ignoreBrowserslistConfig,configFile,configPath:root,browserslistEnv:options.browserslistEnv})}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/util.js":(__unused_webpack_module,exports)=>{"use strict";function mergeDefaultFields(target,source){for(const k of Object.keys(source)){const val=source[k];void 0!==val&&(target[k]=val)}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.isIterableIterator=function(value){return!!value&&"function"==typeof value.next&&"function"==typeof value[Symbol.iterator]},exports.mergeOptions=function(target,source){for(const k of Object.keys(source))if("parserOpts"!==k&&"generatorOpts"!==k&&"assumptions"!==k||!source[k]){const val=source[k];void 0!==val&&(target[k]=val)}else{const parserOpts=source[k];mergeDefaultFields(target[k]||(target[k]={}),parserOpts)}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/option-assertions.js":(__unused_webpack_module,exports,__nested_webpack_require_191248__)=>{"use strict";function _helperCompilationTargets(){const data=__nested_webpack_require_191248__("./stubs/helper-compilation-targets.js");return _helperCompilationTargets=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.access=access,exports.assertArray=assertArray,exports.assertAssumptions=function(loc,value){if(void 0===value)return;if("object"!=typeof value||null===value)throw new Error(`${msg(loc)} must be an object or undefined.`);let root=loc;do{root=root.parent}while("root"!==root.type);const inPreset="preset"===root.source;for(const name of Object.keys(value)){const subLoc=access(loc,name);if(!_options.assumptionsNames.has(name))throw new Error(`${msg(subLoc)} is not a supported assumption.`);if("boolean"!=typeof value[name])throw new Error(`${msg(subLoc)} must be a boolean.`);if(inPreset&&!1===value[name])throw new Error(`${msg(subLoc)} cannot be set to 'false' inside presets.`)}return value},exports.assertBabelrcSearch=function(loc,value){if(void 0===value||"boolean"==typeof value)return value;if(Array.isArray(value))value.forEach(((item,i)=>{if(!checkValidTest(item))throw new Error(`${msg(access(loc,i))} must be a string/Function/RegExp.`)}));else if(!checkValidTest(value))throw new Error(`${msg(loc)} must be a undefined, a boolean, a string/Function/RegExp or an array of those, got ${JSON.stringify(value)}`);return value},exports.assertBoolean=assertBoolean,exports.assertCallerMetadata=function(loc,value){const obj=assertObject(loc,value);if(obj){if("string"!=typeof obj.name)throw new Error(`${msg(loc)} set but does not contain "name" property string`);for(const prop of Object.keys(obj)){const propLoc=access(loc,prop),value=obj[prop];if(null!=value&&"boolean"!=typeof value&&"string"!=typeof value&&"number"!=typeof value)throw new Error(`${msg(propLoc)} must be null, undefined, a boolean, a string, or a number.`)}}return value},exports.assertCompact=function(loc,value){if(void 0!==value&&"boolean"!=typeof value&&"auto"!==value)throw new Error(`${msg(loc)} must be a boolean, "auto", or undefined`);return value},exports.assertConfigApplicableTest=function(loc,value){if(void 0===value)return value;if(Array.isArray(value))value.forEach(((item,i)=>{if(!checkValidTest(item))throw new Error(`${msg(access(loc,i))} must be a string/Function/RegExp.`)}));else if(!checkValidTest(value))throw new Error(`${msg(loc)} must be a string/Function/RegExp, or an array of those`);return value},exports.assertConfigFileSearch=function(loc,value){if(void 0!==value&&"boolean"!=typeof value&&"string"!=typeof value)throw new Error(`${msg(loc)} must be a undefined, a boolean, a string, got ${JSON.stringify(value)}`);return value},exports.assertFunction=function(loc,value){if(void 0!==value&&"function"!=typeof value)throw new Error(`${msg(loc)} must be a function, or undefined`);return value},exports.assertIgnoreList=function(loc,value){const arr=assertArray(loc,value);return null==arr||arr.forEach(((item,i)=>function(loc,value){if("string"!=typeof value&&"function"!=typeof value&&!(value instanceof RegExp))throw new Error(`${msg(loc)} must be an array of string/Function/RegExp values, or undefined`);return value}(access(loc,i),item))),arr},exports.assertInputSourceMap=function(loc,value){if(void 0!==value&&"boolean"!=typeof value&&("object"!=typeof value||!value))throw new Error(`${msg(loc)} must be a boolean, object, or undefined`);return value},exports.assertObject=assertObject,exports.assertPluginList=function(loc,value){const arr=assertArray(loc,value);arr&&arr.forEach(((item,i)=>function(loc,value){if(Array.isArray(value)){if(0===value.length)throw new Error(`${msg(loc)} must include an object`);if(value.length>3)throw new Error(`${msg(loc)} may only be a two-tuple or three-tuple`);if(assertPluginTarget(access(loc,0),value[0]),value.length>1){const opts=value[1];if(void 0!==opts&&!1!==opts&&("object"!=typeof opts||Array.isArray(opts)||null===opts))throw new Error(`${msg(access(loc,1))} must be an object, false, or undefined`)}if(3===value.length){const name=value[2];if(void 0!==name&&"string"!=typeof name)throw new Error(`${msg(access(loc,2))} must be a string, or undefined`)}}else assertPluginTarget(loc,value);return value}(access(loc,i),item)));return arr},exports.assertRootMode=function(loc,value){if(void 0!==value&&"root"!==value&&"upward"!==value&&"upward-optional"!==value)throw new Error(`${msg(loc)} must be a "root", "upward", "upward-optional" or undefined`);return value},exports.assertSourceMaps=function(loc,value){if(void 0!==value&&"boolean"!=typeof value&&"inline"!==value&&"both"!==value)throw new Error(`${msg(loc)} must be a boolean, "inline", "both", or undefined`);return value},exports.assertSourceType=function(loc,value){if(void 0!==value&&"module"!==value&&"script"!==value&&"unambiguous"!==value)throw new Error(`${msg(loc)} must be "module", "script", "unambiguous", or undefined`);return value},exports.assertString=function(loc,value){if(void 0!==value&&"string"!=typeof value)throw new Error(`${msg(loc)} must be a string, or undefined`);return value},exports.assertTargets=function(loc,value){if((0,_helperCompilationTargets().isBrowsersQueryValid)(value))return value;if("object"!=typeof value||!value||Array.isArray(value))throw new Error(`${msg(loc)} must be a string, an array of strings or an object`);const browsersLoc=access(loc,"browsers"),esmodulesLoc=access(loc,"esmodules");assertBrowsersList(browsersLoc,value.browsers),assertBoolean(esmodulesLoc,value.esmodules);for(const key of Object.keys(value)){const val=value[key],subLoc=access(loc,key);if("esmodules"===key)assertBoolean(subLoc,val);else if("browsers"===key)assertBrowsersList(subLoc,val);else{if(!Object.hasOwnProperty.call(_helperCompilationTargets().TargetNames,key)){const validTargets=Object.keys(_helperCompilationTargets().TargetNames).join(", ");throw new Error(`${msg(subLoc)} is not a valid target. Supported targets are ${validTargets}`)}assertBrowserVersion(subLoc,val)}}return value},exports.msg=msg;var _options=__nested_webpack_require_191248__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/options.js");function msg(loc){switch(loc.type){case"root":return"";case"env":return`${msg(loc.parent)}.env["${loc.name}"]`;case"overrides":return`${msg(loc.parent)}.overrides[${loc.index}]`;case"option":return`${msg(loc.parent)}.${loc.name}`;case"access":return`${msg(loc.parent)}[${JSON.stringify(loc.name)}]`;default:throw new Error(`Assertion failure: Unknown type ${loc.type}`)}}function access(loc,name){return{type:"access",name,parent:loc}}function assertBoolean(loc,value){if(void 0!==value&&"boolean"!=typeof value)throw new Error(`${msg(loc)} must be a boolean, or undefined`);return value}function assertObject(loc,value){if(void 0!==value&&("object"!=typeof value||Array.isArray(value)||!value))throw new Error(`${msg(loc)} must be an object, or undefined`);return value}function assertArray(loc,value){if(null!=value&&!Array.isArray(value))throw new Error(`${msg(loc)} must be an array, or undefined`);return value}function checkValidTest(value){return"string"==typeof value||"function"==typeof value||value instanceof RegExp}function assertPluginTarget(loc,value){if(("object"!=typeof value||!value)&&"string"!=typeof value&&"function"!=typeof value)throw new Error(`${msg(loc)} must be a string, object, function`);return value}function assertBrowsersList(loc,value){if(void 0!==value&&!(0,_helperCompilationTargets().isBrowsersQueryValid)(value))throw new Error(`${msg(loc)} must be undefined, a string or an array of strings`)}function assertBrowserVersion(loc,value){if(("number"!=typeof value||Math.round(value)!==value)&&"string"!=typeof value)throw new Error(`${msg(loc)} must be a string or an integer number`)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/options.js":(__unused_webpack_module,exports,__nested_webpack_require_199171__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.assumptionsNames=void 0,exports.checkNoUnwrappedItemOptionPairs=function(items,index,type,e){if(0===index)return;const lastItem=items[index-1],thisItem=items[index];lastItem.file&&void 0===lastItem.options&&"object"==typeof thisItem.value&&(e.message+=`\n- Maybe you meant to use\n"${type}s": [\n  ["${lastItem.file.request}", ${JSON.stringify(thisItem.value,void 0,2)}]\n]\nTo be a valid ${type}, its name and options should be wrapped in a pair of brackets`)},exports.validate=function(type,opts,filename){try{return validateNested({type:"root",source:type},opts)}catch(error){const configError=new _configError.default(error.message,filename);throw error.code&&(configError.code=error.code),configError}};var _removed=__nested_webpack_require_199171__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/removed.js"),_optionAssertions=__nested_webpack_require_199171__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/option-assertions.js"),_configError=__nested_webpack_require_199171__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/config-error.js");const ROOT_VALIDATORS={cwd:_optionAssertions.assertString,root:_optionAssertions.assertString,rootMode:_optionAssertions.assertRootMode,configFile:_optionAssertions.assertConfigFileSearch,caller:_optionAssertions.assertCallerMetadata,filename:_optionAssertions.assertString,filenameRelative:_optionAssertions.assertString,code:_optionAssertions.assertBoolean,ast:_optionAssertions.assertBoolean,cloneInputAst:_optionAssertions.assertBoolean,envName:_optionAssertions.assertString},BABELRC_VALIDATORS={babelrc:_optionAssertions.assertBoolean,babelrcRoots:_optionAssertions.assertBabelrcSearch},NONPRESET_VALIDATORS={extends:_optionAssertions.assertString,ignore:_optionAssertions.assertIgnoreList,only:_optionAssertions.assertIgnoreList,targets:_optionAssertions.assertTargets,browserslistConfigFile:_optionAssertions.assertConfigFileSearch,browserslistEnv:_optionAssertions.assertString},COMMON_VALIDATORS={inputSourceMap:_optionAssertions.assertInputSourceMap,presets:_optionAssertions.assertPluginList,plugins:_optionAssertions.assertPluginList,passPerPreset:_optionAssertions.assertBoolean,assumptions:_optionAssertions.assertAssumptions,env:function(loc,value){if("env"===loc.parent.type)throw new Error(`${(0,_optionAssertions.msg)(loc)} is not allowed inside of another .env block`);const parent=loc.parent,obj=(0,_optionAssertions.assertObject)(loc,value);if(obj)for(const envName of Object.keys(obj)){const env=(0,_optionAssertions.assertObject)((0,_optionAssertions.access)(loc,envName),obj[envName]);if(!env)continue;validateNested({type:"env",name:envName,parent},env)}return obj},overrides:function(loc,value){if("env"===loc.parent.type)throw new Error(`${(0,_optionAssertions.msg)(loc)} is not allowed inside an .env block`);if("overrides"===loc.parent.type)throw new Error(`${(0,_optionAssertions.msg)(loc)} is not allowed inside an .overrides block`);const parent=loc.parent,arr=(0,_optionAssertions.assertArray)(loc,value);if(arr)for(const[index,item]of arr.entries()){const objLoc=(0,_optionAssertions.access)(loc,index),env=(0,_optionAssertions.assertObject)(objLoc,item);if(!env)throw new Error(`${(0,_optionAssertions.msg)(objLoc)} must be an object`);validateNested({type:"overrides",index,parent},env)}return arr},test:_optionAssertions.assertConfigApplicableTest,include:_optionAssertions.assertConfigApplicableTest,exclude:_optionAssertions.assertConfigApplicableTest,retainLines:_optionAssertions.assertBoolean,comments:_optionAssertions.assertBoolean,shouldPrintComment:_optionAssertions.assertFunction,compact:_optionAssertions.assertCompact,minified:_optionAssertions.assertBoolean,auxiliaryCommentBefore:_optionAssertions.assertString,auxiliaryCommentAfter:_optionAssertions.assertString,sourceType:_optionAssertions.assertSourceType,wrapPluginVisitorMethod:_optionAssertions.assertFunction,highlightCode:_optionAssertions.assertBoolean,sourceMaps:_optionAssertions.assertSourceMaps,sourceMap:_optionAssertions.assertSourceMaps,sourceFileName:_optionAssertions.assertString,sourceRoot:_optionAssertions.assertString,parserOpts:_optionAssertions.assertObject,generatorOpts:_optionAssertions.assertObject};Object.assign(COMMON_VALIDATORS,{getModuleId:_optionAssertions.assertFunction,moduleRoot:_optionAssertions.assertString,moduleIds:_optionAssertions.assertBoolean,moduleId:_optionAssertions.assertString});const assumptionsNames=new Set(["arrayLikeIsIterable","constantReexports","constantSuper","enumerableModuleMeta","ignoreFunctionLength","ignoreToPrimitiveHint","iterableIsArray","mutableTemplateObject","noClassCalls","noDocumentAll","noIncompleteNsImportDetection","noNewArrows","objectRestNoSymbols","privateFieldsAsSymbols","privateFieldsAsProperties","pureGetters","setClassMethods","setComputedProperties","setPublicClassFields","setSpreadProperties","skipForOfIteratorClosing","superIsCallableConstructor"]);function getSource(loc){return"root"===loc.type?loc.source:getSource(loc.parent)}function validateNested(loc,opts){const type=getSource(loc);return function(opts){if(has(opts,"sourceMap")&&has(opts,"sourceMaps"))throw new Error(".sourceMap is an alias for .sourceMaps, cannot use both")}(opts),Object.keys(opts).forEach((key=>{const optLoc={type:"option",name:key,parent:loc};if("preset"===type&&NONPRESET_VALIDATORS[key])throw new Error(`${(0,_optionAssertions.msg)(optLoc)} is not allowed in preset options`);if("arguments"!==type&&ROOT_VALIDATORS[key])throw new Error(`${(0,_optionAssertions.msg)(optLoc)} is only allowed in root programmatic options`);if("arguments"!==type&&"configfile"!==type&&BABELRC_VALIDATORS[key]){if("babelrcfile"===type||"extendsfile"===type)throw new Error(`${(0,_optionAssertions.msg)(optLoc)} is not allowed in .babelrc or "extends"ed files, only in root programmatic options, or babel.config.js/config file options`);throw new Error(`${(0,_optionAssertions.msg)(optLoc)} is only allowed in root programmatic options, or babel.config.js/config file options`)}(COMMON_VALIDATORS[key]||NONPRESET_VALIDATORS[key]||BABELRC_VALIDATORS[key]||ROOT_VALIDATORS[key]||throwUnknownError)(optLoc,opts[key])})),opts}function throwUnknownError(loc){const key=loc.name;if(_removed.default[key]){const{message,version=5}=_removed.default[key];throw new Error(`Using removed Babel ${version} option: ${(0,_optionAssertions.msg)(loc)} - ${message}`)}{const unknownOptErr=new Error(`Unknown option: ${(0,_optionAssertions.msg)(loc)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`);throw unknownOptErr.code="BABEL_UNKNOWN_OPTION",unknownOptErr}}function has(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}exports.assumptionsNames=assumptionsNames},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/plugins.js":(__unused_webpack_module,exports,__nested_webpack_require_206195__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.validatePluginObject=function(obj){const rootPath={type:"root",source:"plugin"};return Object.keys(obj).forEach((key=>{const validator=VALIDATORS[key];if(!validator){const invalidPluginPropertyError=new Error(`.${key} is not a valid Plugin property`);throw invalidPluginPropertyError.code="BABEL_UNKNOWN_PLUGIN_PROPERTY",invalidPluginPropertyError}validator({type:"option",name:key,parent:rootPath},obj[key])})),obj};var _optionAssertions=__nested_webpack_require_206195__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/option-assertions.js");const VALIDATORS={name:_optionAssertions.assertString,manipulateOptions:_optionAssertions.assertFunction,pre:_optionAssertions.assertFunction,post:_optionAssertions.assertFunction,inherits:_optionAssertions.assertFunction,visitor:function(loc,value){const obj=(0,_optionAssertions.assertObject)(loc,value);if(obj&&(Object.keys(obj).forEach((prop=>function(key,value){if(value&&"object"==typeof value)Object.keys(value).forEach((handler=>{if("enter"!==handler&&"exit"!==handler)throw new Error(`.visitor["${key}"] may only have .enter and/or .exit handlers.`)}));else if("function"!=typeof value)throw new Error(`.visitor["${key}"] must be a function`);return value}(prop,obj[prop]))),obj.enter||obj.exit))throw new Error(`${(0,_optionAssertions.msg)(loc)} cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.`);return obj},parserOverride:_optionAssertions.assertFunction,generatorOverride:_optionAssertions.assertFunction}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/validation/removed.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;exports.default={auxiliaryComment:{message:"Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`"},blacklist:{message:"Put the specific transforms you want in the `plugins` option"},breakConfig:{message:"This is not a necessary option in Babel 6"},experimental:{message:"Put the specific transforms you want in the `plugins` option"},externalHelpers:{message:"Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/"},extra:{message:""},jsxPragma:{message:"use the `pragma` option in the `react-jsx` plugin. Check out http://babeljs.io/docs/plugins/transform-react-jsx/"},loose:{message:"Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option."},metadataUsedHelpers:{message:"Not required anymore as this is enabled by default"},modules:{message:"Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules"},nonStandard:{message:"Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/"},optional:{message:"Put the specific transforms you want in the `plugins` option"},sourceMapName:{message:"The `sourceMapName` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves."},stage:{message:"Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets"},whitelist:{message:"Put the specific transforms you want in the `plugins` option"},resolveModuleSource:{version:6,message:"Use `babel-plugin-module-resolver@3`'s 'resolvePath' options"},metadata:{version:6,message:"Generated plugin metadata is always included in the output result"},sourceMapTarget:{version:6,message:"The `sourceMapTarget` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves."}}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/config-error.js":(__unused_webpack_module,exports,__nested_webpack_require_210128__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _rewriteStackTrace=__nested_webpack_require_210128__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js");class ConfigError extends Error{constructor(message,filename){super(message),(0,_rewriteStackTrace.expectedError)(this),filename&&(0,_rewriteStackTrace.injectVirtualStackFrame)(this,filename)}}exports.default=ConfigError},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js":(__unused_webpack_module,exports)=>{"use strict";var _Object$getOwnPropert;Object.defineProperty(exports,"__esModule",{value:!0}),exports.beginHiddenCallStack=function(fn){return SUPPORTED?Object.defineProperty((function(...args){return setupPrepareStackTrace(),fn(...args)}),"name",{value:STOP_HIDING}):fn},exports.endHiddenCallStack=function(fn){return SUPPORTED?Object.defineProperty((function(...args){return fn(...args)}),"name",{value:START_HIDING}):fn},exports.expectedError=function(error){if(!SUPPORTED)return;return expectedErrors.add(error),error},exports.injectVirtualStackFrame=function(error,filename){if(!SUPPORTED)return;let frames=virtualFrames.get(error);frames||virtualFrames.set(error,frames=[]);return frames.push(function(filename){return Object.create({isNative:()=>!1,isConstructor:()=>!1,isToplevel:()=>!0,getFileName:()=>filename,getLineNumber:()=>{},getColumnNumber:()=>{},getFunctionName:()=>{},getMethodName:()=>{},getTypeName:()=>{},toString:()=>filename})}(filename)),error};const ErrorToString=Function.call.bind(Error.prototype.toString),SUPPORTED=!!Error.captureStackTrace&&!0===(null==(_Object$getOwnPropert=Object.getOwnPropertyDescriptor(Error,"stackTraceLimit"))?void 0:_Object$getOwnPropert.writable),START_HIDING="startHiding - secret - don't use this - v1",STOP_HIDING="stopHiding - secret - don't use this - v1",expectedErrors=new WeakSet,virtualFrames=new WeakMap;function setupPrepareStackTrace(){setupPrepareStackTrace=()=>{};const{prepareStackTrace=defaultPrepareStackTrace}=Error;Error.stackTraceLimit&&(Error.stackTraceLimit=Math.max(Error.stackTraceLimit,50)),Error.prepareStackTrace=function(err,trace){let newTrace=[];let status=expectedErrors.has(err)?"hiding":"unknown";for(let i=0;i<trace.length;i++){const name=trace[i].getFunctionName();if(name===START_HIDING)status="hiding";else if(name===STOP_HIDING){if("hiding"===status)status="showing",virtualFrames.has(err)&&newTrace.unshift(...virtualFrames.get(err));else if("unknown"===status){newTrace=trace;break}}else"hiding"!==status&&newTrace.push(trace[i])}return prepareStackTrace(err,newTrace)}}function defaultPrepareStackTrace(err,trace){return 0===trace.length?ErrorToString(err):`${ErrorToString(err)}\n    at ${trace.join("\n    at ")}`}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/async.js":(__unused_webpack_module,exports,__nested_webpack_require_213089__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_213089__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.forwardAsync=function(action,cb){const g=_gensync()(action);return withKind((kind=>{const adapted=g[kind];return cb(adapted)}))},exports.isAsync=void 0,exports.isThenable=isThenable,exports.maybeAsync=function(fn,message){return _gensync()({sync(...args){const result=fn.apply(this,args);if(isThenable(result))throw new Error(message);return result},async(...args){return Promise.resolve(fn.apply(this,args))}})},exports.waitFor=exports.onFirstPause=void 0;const runGenerator=_gensync()((function*(item){return yield*item})),isAsync=_gensync()({sync:()=>!1,errback:cb=>cb(null,!0)});exports.isAsync=isAsync;const withKind=_gensync()({sync:cb=>cb("sync"),async:(_ref=_asyncToGenerator((function*(cb){return cb("async")})),function(_x){return _ref.apply(this,arguments)})});var _ref;const onFirstPause=_gensync()({name:"onFirstPause",arity:2,sync:function(item){return runGenerator.sync(item)},errback:function(item,firstPause,cb){let completed=!1;runGenerator.errback(item,((err,value)=>{completed=!0,cb(err,value)})),completed||firstPause()}});exports.onFirstPause=onFirstPause;const waitFor=_gensync()({sync:x=>x,async:(_ref2=_asyncToGenerator((function*(x){return x})),function(_x2){return _ref2.apply(this,arguments)})});var _ref2;function isThenable(val){return!(!val||"object"!=typeof val&&"function"!=typeof val||!val.then||"function"!=typeof val.then)}exports.waitFor=waitFor},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/fs.js":(__unused_webpack_module,exports,__nested_webpack_require_215427__)=>{"use strict";function _fs(){const data=__nested_webpack_require_215427__("fs");return _fs=function(){return data},data}function _gensync(){const data=__nested_webpack_require_215427__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.stat=exports.readFile=void 0;const readFile=_gensync()({sync:_fs().readFileSync,errback:_fs().readFile});exports.readFile=readFile;const stat=_gensync()({sync:_fs().statSync,errback:_fs().stat});exports.stat=stat},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/functional.js":(__unused_webpack_module,exports,__nested_webpack_require_216135__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.once=function(fn){let result,resultP;return function*(){if(result)return result;if(!(yield*(0,_async.isAsync)()))return result=yield*fn();if(resultP)return yield*(0,_async.waitFor)(resultP);let resolve,reject;resultP=new Promise(((res,rej)=>{resolve=res,reject=rej}));try{return result=yield*fn(),resultP=null,resolve(result),result}catch(error){throw reject(error),error}}};var _async=__nested_webpack_require_216135__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/async.js")},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_216849__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DEFAULT_EXTENSIONS=void 0,Object.defineProperty(exports,"File",{enumerable:!0,get:function(){return _file.default}}),Object.defineProperty(exports,"buildExternalHelpers",{enumerable:!0,get:function(){return _buildExternalHelpers.default}}),Object.defineProperty(exports,"createConfigItem",{enumerable:!0,get:function(){return _config.createConfigItem}}),Object.defineProperty(exports,"createConfigItemAsync",{enumerable:!0,get:function(){return _config.createConfigItemAsync}}),Object.defineProperty(exports,"createConfigItemSync",{enumerable:!0,get:function(){return _config.createConfigItemSync}}),Object.defineProperty(exports,"getEnv",{enumerable:!0,get:function(){return _environment.getEnv}}),Object.defineProperty(exports,"loadOptions",{enumerable:!0,get:function(){return _config.loadOptions}}),Object.defineProperty(exports,"loadOptionsAsync",{enumerable:!0,get:function(){return _config.loadOptionsAsync}}),Object.defineProperty(exports,"loadOptionsSync",{enumerable:!0,get:function(){return _config.loadOptionsSync}}),Object.defineProperty(exports,"loadPartialConfig",{enumerable:!0,get:function(){return _config.loadPartialConfig}}),Object.defineProperty(exports,"loadPartialConfigAsync",{enumerable:!0,get:function(){return _config.loadPartialConfigAsync}}),Object.defineProperty(exports,"loadPartialConfigSync",{enumerable:!0,get:function(){return _config.loadPartialConfigSync}}),Object.defineProperty(exports,"parse",{enumerable:!0,get:function(){return _parse.parse}}),Object.defineProperty(exports,"parseAsync",{enumerable:!0,get:function(){return _parse.parseAsync}}),Object.defineProperty(exports,"parseSync",{enumerable:!0,get:function(){return _parse.parseSync}}),Object.defineProperty(exports,"resolvePlugin",{enumerable:!0,get:function(){return _files.resolvePlugin}}),Object.defineProperty(exports,"resolvePreset",{enumerable:!0,get:function(){return _files.resolvePreset}}),Object.defineProperty(exports,"template",{enumerable:!0,get:function(){return _template().default}}),Object.defineProperty(exports,"tokTypes",{enumerable:!0,get:function(){return _parser().tokTypes}}),Object.defineProperty(exports,"transform",{enumerable:!0,get:function(){return _transform.transform}}),Object.defineProperty(exports,"transformAsync",{enumerable:!0,get:function(){return _transform.transformAsync}}),Object.defineProperty(exports,"transformFile",{enumerable:!0,get:function(){return _transformFile.transformFile}}),Object.defineProperty(exports,"transformFileAsync",{enumerable:!0,get:function(){return _transformFile.transformFileAsync}}),Object.defineProperty(exports,"transformFileSync",{enumerable:!0,get:function(){return _transformFile.transformFileSync}}),Object.defineProperty(exports,"transformFromAst",{enumerable:!0,get:function(){return _transformAst.transformFromAst}}),Object.defineProperty(exports,"transformFromAstAsync",{enumerable:!0,get:function(){return _transformAst.transformFromAstAsync}}),Object.defineProperty(exports,"transformFromAstSync",{enumerable:!0,get:function(){return _transformAst.transformFromAstSync}}),Object.defineProperty(exports,"transformSync",{enumerable:!0,get:function(){return _transform.transformSync}}),Object.defineProperty(exports,"traverse",{enumerable:!0,get:function(){return _traverse().default}}),exports.version=exports.types=void 0;var _file=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/file.js"),_buildExternalHelpers=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/tools/build-external-helpers.js"),_files=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/files/index.js"),_environment=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/environment.js");function _types(){const data=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");return _types=function(){return data},data}function _parser(){const data=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+parser@7.22.6/node_modules/@babel/parser/lib/index.js");return _parser=function(){return data},data}function _traverse(){const data=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js");return _traverse=function(){return data},data}function _template(){const data=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js");return _template=function(){return data},data}Object.defineProperty(exports,"types",{enumerable:!0,get:function(){return _types()}});var _config=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/index.js"),_transform=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transform.js"),_transformFile=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transform-file.js"),_transformAst=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transform-ast.js"),_parse=__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/parse.js");__nested_webpack_require_216849__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js");exports.version="7.22.6";const DEFAULT_EXTENSIONS=Object.freeze([".js",".jsx",".es6",".es",".mjs",".cjs"]);exports.DEFAULT_EXTENSIONS=DEFAULT_EXTENSIONS,exports.OptionManager=class{init(opts){return(0,_config.loadOptionsSync)(opts)}},exports.Plugin=function(alias){throw new Error(`The (${alias}) Babel 5 plugin is being run with an unsupported Babel version.`)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/parse.js":(__unused_webpack_module,exports,__nested_webpack_require_222772__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_222772__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.parse=void 0,exports.parseAsync=function(...args){return(0,_rewriteStackTrace.beginHiddenCallStack)(parseRunner.async)(...args)},exports.parseSync=function(...args){return(0,_rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync)(...args)};var _config=__nested_webpack_require_222772__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/index.js"),_parser=__nested_webpack_require_222772__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/parser/index.js"),_normalizeOpts=__nested_webpack_require_222772__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/normalize-opts.js"),_rewriteStackTrace=__nested_webpack_require_222772__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js");const parseRunner=_gensync()((function*(code,opts){const config=yield*(0,_config.default)(opts);return null===config?null:yield*(0,_parser.default)(config.passes,(0,_normalizeOpts.default)(config),code)}));exports.parse=function(code,opts,callback){if("function"==typeof opts&&(callback=opts,opts=void 0),void 0===callback)return(0,_rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync)(code,opts);(0,_rewriteStackTrace.beginHiddenCallStack)(parseRunner.errback)(code,opts,callback)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/parser/index.js":(__unused_webpack_module,exports,__nested_webpack_require_224411__)=>{"use strict";function _parser(){const data=__nested_webpack_require_224411__("./node_modules/.pnpm/@babel+parser@7.22.6/node_modules/@babel/parser/lib/index.js");return _parser=function(){return data},data}function _codeFrame(){const data=__nested_webpack_require_224411__("./stubs/babel-codeframe.js");return _codeFrame=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function*(pluginPasses,{parserOpts,highlightCode=!0,filename="unknown"},code){try{const results=[];for(const plugins of pluginPasses)for(const plugin of plugins){const{parserOverride}=plugin;if(parserOverride){const ast=parserOverride(code,parserOpts,_parser().parse);void 0!==ast&&results.push(ast)}}if(0===results.length)return(0,_parser().parse)(code,parserOpts);if(1===results.length){if(yield*[],"function"==typeof results[0].then)throw new Error("You appear to be using an async parser plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");return results[0]}throw new Error("More than one plugin attempted to override parsing.")}catch(err){"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"===err.code&&(err.message+="\nConsider renaming the file to '.mjs', or setting sourceType:module or sourceType:unambiguous in your Babel config for this file.");const{loc,missingPlugin}=err;if(loc){const codeFrame=(0,_codeFrame().codeFrameColumns)(code,{start:{line:loc.line,column:loc.column+1}},{highlightCode});err.message=missingPlugin?`${filename}: `+(0,_missingPluginHelper.default)(missingPlugin[0],loc,codeFrame):`${filename}: ${err.message}\n\n`+codeFrame,err.code="BABEL_PARSE_ERROR"}throw err}};var _missingPluginHelper=__nested_webpack_require_224411__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js")},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(missingPluginName,loc,codeFrame){let helpMessage=`Support for the experimental syntax '${missingPluginName}' isn't currently enabled (${loc.line}:${loc.column+1}):\n\n`+codeFrame;const pluginInfo=pluginNameMap[missingPluginName];if(pluginInfo){const{syntax:syntaxPlugin,transform:transformPlugin}=pluginInfo;if(syntaxPlugin){const syntaxPluginInfo=getNameURLCombination(syntaxPlugin);if(transformPlugin){helpMessage+=`\n\nAdd ${getNameURLCombination(transformPlugin)} to the '${transformPlugin.name.startsWith("@babel/plugin")?"plugins":"presets"}' section of your Babel config to enable transformation.\nIf you want to leave it as-is, add ${syntaxPluginInfo} to the 'plugins' section to enable parsing.`}else helpMessage+=`\n\nAdd ${syntaxPluginInfo} to the 'plugins' section of your Babel config to enable parsing.`}}return helpMessage};const pluginNameMap={asyncDoExpressions:{syntax:{name:"@babel/plugin-syntax-async-do-expressions",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-do-expressions"}},decimal:{syntax:{name:"@babel/plugin-syntax-decimal",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decimal"}},decorators:{syntax:{name:"@babel/plugin-syntax-decorators",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decorators"},transform:{name:"@babel/plugin-proposal-decorators",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-decorators"}},doExpressions:{syntax:{name:"@babel/plugin-syntax-do-expressions",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-do-expressions"},transform:{name:"@babel/plugin-proposal-do-expressions",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-do-expressions"}},exportDefaultFrom:{syntax:{name:"@babel/plugin-syntax-export-default-from",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-default-from"},transform:{name:"@babel/plugin-proposal-export-default-from",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-export-default-from"}},flow:{syntax:{name:"@babel/plugin-syntax-flow",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-flow"},transform:{name:"@babel/preset-flow",url:"https://github.com/babel/babel/tree/main/packages/babel-preset-flow"}},functionBind:{syntax:{name:"@babel/plugin-syntax-function-bind",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-bind"},transform:{name:"@babel/plugin-proposal-function-bind",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-bind"}},functionSent:{syntax:{name:"@babel/plugin-syntax-function-sent",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-sent"},transform:{name:"@babel/plugin-proposal-function-sent",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-sent"}},jsx:{syntax:{name:"@babel/plugin-syntax-jsx",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx"},transform:{name:"@babel/preset-react",url:"https://github.com/babel/babel/tree/main/packages/babel-preset-react"}},importAttributes:{syntax:{name:"@babel/plugin-syntax-import-attributes",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-attributes"}},pipelineOperator:{syntax:{name:"@babel/plugin-syntax-pipeline-operator",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-pipeline-operator"},transform:{name:"@babel/plugin-proposal-pipeline-operator",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-pipeline-operator"}},recordAndTuple:{syntax:{name:"@babel/plugin-syntax-record-and-tuple",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-record-and-tuple"}},throwExpressions:{syntax:{name:"@babel/plugin-syntax-throw-expressions",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-throw-expressions"},transform:{name:"@babel/plugin-proposal-throw-expressions",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-throw-expressions"}},typescript:{syntax:{name:"@babel/plugin-syntax-typescript",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-typescript"},transform:{name:"@babel/preset-typescript",url:"https://github.com/babel/babel/tree/main/packages/babel-preset-typescript"}}};Object.assign(pluginNameMap,{asyncGenerators:{syntax:{name:"@babel/plugin-syntax-async-generators",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-generators"},transform:{name:"@babel/plugin-transform-async-generator-functions",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-async-generator-functions"}},classProperties:{syntax:{name:"@babel/plugin-syntax-class-properties",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties"},transform:{name:"@babel/plugin-transform-class-properties",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-class-properties"}},classPrivateProperties:{syntax:{name:"@babel/plugin-syntax-class-properties",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties"},transform:{name:"@babel/plugin-transform-class-properties",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-class-properties"}},classPrivateMethods:{syntax:{name:"@babel/plugin-syntax-class-properties",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties"},transform:{name:"@babel/plugin-transform-private-methods",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-private-methods"}},classStaticBlock:{syntax:{name:"@babel/plugin-syntax-class-static-block",url:"https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-syntax-class-static-block"},transform:{name:"@babel/plugin-transform-class-static-block",url:"https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-class-static-block"}},dynamicImport:{syntax:{name:"@babel/plugin-syntax-dynamic-import",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-dynamic-import"}},exportNamespaceFrom:{syntax:{name:"@babel/plugin-syntax-export-namespace-from",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-namespace-from"},transform:{name:"@babel/plugin-transform-export-namespace-from",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-export-namespace-from"}},importAssertions:{syntax:{name:"@babel/plugin-syntax-import-assertions",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-assertions"}},importMeta:{syntax:{name:"@babel/plugin-syntax-import-meta",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-meta"}},logicalAssignment:{syntax:{name:"@babel/plugin-syntax-logical-assignment-operators",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-logical-assignment-operators"},transform:{name:"@babel/plugin-transform-logical-assignment-operators",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-logical-assignment-operators"}},moduleStringNames:{syntax:{name:"@babel/plugin-syntax-module-string-names",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-module-string-names"}},numericSeparator:{syntax:{name:"@babel/plugin-syntax-numeric-separator",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-numeric-separator"},transform:{name:"@babel/plugin-transform-numeric-separator",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-numeric-separator"}},nullishCoalescingOperator:{syntax:{name:"@babel/plugin-syntax-nullish-coalescing-operator",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-nullish-coalescing-operator"},transform:{name:"@babel/plugin-transform-nullish-coalescing-operator",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-nullish-coalescing-opearator"}},objectRestSpread:{syntax:{name:"@babel/plugin-syntax-object-rest-spread",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-object-rest-spread"},transform:{name:"@babel/plugin-transform-object-rest-spread",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-object-rest-spread"}},optionalCatchBinding:{syntax:{name:"@babel/plugin-syntax-optional-catch-binding",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-catch-binding"},transform:{name:"@babel/plugin-transform-optional-catch-binding",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-catch-binding"}},optionalChaining:{syntax:{name:"@babel/plugin-syntax-optional-chaining",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-chaining"},transform:{name:"@babel/plugin-transform-optional-chaining",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-chaining"}},privateIn:{syntax:{name:"@babel/plugin-syntax-private-property-in-object",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-private-property-in-object"},transform:{name:"@babel/plugin-transform-private-property-in-object",url:"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-private-property-in-object"}},regexpUnicodeSets:{syntax:{name:"@babel/plugin-syntax-unicode-sets-regex",url:"https://github.com/babel/babel/blob/main/packages/babel-plugin-syntax-unicode-sets-regex/README.md"},transform:{name:"@babel/plugin-transform-unicode-sets-regex",url:"https://github.com/babel/babel/blob/main/packages/babel-plugin-proposalunicode-sets-regex/README.md"}}});const getNameURLCombination=({name,url})=>`${name} (${url})`},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/tools/build-external-helpers.js":(__unused_webpack_module,exports,__nested_webpack_require_236607__)=>{"use strict";function helpers(){const data=__nested_webpack_require_236607__("./node_modules/.pnpm/@babel+helpers@7.22.6/node_modules/@babel/helpers/lib/index.js");return helpers=function(){return data},data}function _generator(){const data=__nested_webpack_require_236607__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/index.js");return _generator=function(){return data},data}function _template(){const data=__nested_webpack_require_236607__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js");return _template=function(){return data},data}function _t(){const data=__nested_webpack_require_236607__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");return _t=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(allowlist,outputType="global"){let tree;const build={global:buildGlobal,module:buildModule,umd:buildUmd,var:buildVar}[outputType];if(!build)throw new Error(`Unsupported output type ${outputType}`);tree=build(allowlist);return(0,_generator().default)(tree).code};var _file=__nested_webpack_require_236607__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/file.js");const{arrayExpression,assignmentExpression,binaryExpression,blockStatement,callExpression,cloneNode,conditionalExpression,exportNamedDeclaration,exportSpecifier,expressionStatement,functionExpression,identifier,memberExpression,objectExpression,program,stringLiteral,unaryExpression,variableDeclaration,variableDeclarator}=_t(),buildUmdWrapper=replacements=>_template().default.statement`
    (function (root, factory) {
      if (typeof define === "function" && define.amd) {
        define(AMD_ARGUMENTS, factory);
      } else if (typeof exports === "object") {
        factory(COMMON_ARGUMENTS);
      } else {
        factory(BROWSER_ARGUMENTS);
      }
    })(UMD_ROOT, function (FACTORY_PARAMETERS) {
      FACTORY_BODY
    });
  `(replacements);function buildGlobal(allowlist){const namespace=identifier("babelHelpers"),body=[],container=functionExpression(null,[identifier("global")],blockStatement(body)),tree=program([expressionStatement(callExpression(container,[conditionalExpression(binaryExpression("===",unaryExpression("typeof",identifier("global")),stringLiteral("undefined")),identifier("self"),identifier("global"))]))]);return body.push(variableDeclaration("var",[variableDeclarator(namespace,assignmentExpression("=",memberExpression(identifier("global"),namespace),objectExpression([])))])),buildHelpers(body,namespace,allowlist),tree}function buildModule(allowlist){const body=[],refs=buildHelpers(body,null,allowlist);return body.unshift(exportNamedDeclaration(null,Object.keys(refs).map((name=>exportSpecifier(cloneNode(refs[name]),identifier(name)))))),program(body,[],"module")}function buildUmd(allowlist){const namespace=identifier("babelHelpers"),body=[];return body.push(variableDeclaration("var",[variableDeclarator(namespace,identifier("global"))])),buildHelpers(body,namespace,allowlist),program([buildUmdWrapper({FACTORY_PARAMETERS:identifier("global"),BROWSER_ARGUMENTS:assignmentExpression("=",memberExpression(identifier("root"),namespace),objectExpression([])),COMMON_ARGUMENTS:identifier("exports"),AMD_ARGUMENTS:arrayExpression([stringLiteral("exports")]),FACTORY_BODY:body,UMD_ROOT:identifier("this")})])}function buildVar(allowlist){const namespace=identifier("babelHelpers"),body=[];body.push(variableDeclaration("var",[variableDeclarator(namespace,objectExpression([]))]));const tree=program(body);return buildHelpers(body,namespace,allowlist),body.push(expressionStatement(namespace)),tree}function buildHelpers(body,namespace,allowlist){const getHelperReference=name=>namespace?memberExpression(namespace,identifier(name)):identifier(`_${name}`),refs={};return helpers().list.forEach((function(name){if(allowlist&&allowlist.indexOf(name)<0)return;const ref=refs[name]=getHelperReference(name);helpers().ensure(name,_file.default);const{nodes}=helpers().get(name,getHelperReference,ref);body.push(...nodes)})),refs}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transform-ast.js":(__unused_webpack_module,exports,__nested_webpack_require_240826__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_240826__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.transformFromAst=void 0,exports.transformFromAstAsync=function(...args){return(0,_rewriteStackTrace.beginHiddenCallStack)(transformFromAstRunner.async)(...args)},exports.transformFromAstSync=function(...args){return(0,_rewriteStackTrace.beginHiddenCallStack)(transformFromAstRunner.sync)(...args)};var _config=__nested_webpack_require_240826__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/index.js"),_transformation=__nested_webpack_require_240826__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/index.js"),_rewriteStackTrace=__nested_webpack_require_240826__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js");const transformFromAstRunner=_gensync()((function*(ast,code,opts){const config=yield*(0,_config.default)(opts);if(null===config)return null;if(!ast)throw new Error("No AST given");return yield*(0,_transformation.run)(config,code,ast)}));exports.transformFromAst=function(ast,code,optsOrCallback,maybeCallback){let opts,callback;if("function"==typeof optsOrCallback?(callback=optsOrCallback,opts=void 0):(opts=optsOrCallback,callback=maybeCallback),void 0===callback)return(0,_rewriteStackTrace.beginHiddenCallStack)(transformFromAstRunner.sync)(ast,code,opts);(0,_rewriteStackTrace.beginHiddenCallStack)(transformFromAstRunner.errback)(ast,code,opts,callback)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transform-file.js":(__unused_webpack_module,exports,__nested_webpack_require_242571__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_242571__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.transformFile=function(...args){transformFileRunner.errback(...args)},exports.transformFileAsync=function(...args){return transformFileRunner.async(...args)},exports.transformFileSync=function(...args){return transformFileRunner.sync(...args)};var _config=__nested_webpack_require_242571__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/index.js"),_transformation=__nested_webpack_require_242571__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/index.js"),fs=__nested_webpack_require_242571__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/gensync-utils/fs.js");const transformFileRunner=_gensync()((function*(filename,opts){const options=Object.assign({},opts,{filename}),config=yield*(0,_config.default)(options);if(null===config)return null;const code=yield*fs.readFile(filename,"utf8");return yield*(0,_transformation.run)(config,code)}))},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transform.js":(__unused_webpack_module,exports,__nested_webpack_require_243851__)=>{"use strict";function _gensync(){const data=__nested_webpack_require_243851__("./node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js");return _gensync=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.transform=void 0,exports.transformAsync=function(...args){return(0,_rewriteStackTrace.beginHiddenCallStack)(transformRunner.async)(...args)},exports.transformSync=function(...args){return(0,_rewriteStackTrace.beginHiddenCallStack)(transformRunner.sync)(...args)};var _config=__nested_webpack_require_243851__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/index.js"),_transformation=__nested_webpack_require_243851__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/index.js"),_rewriteStackTrace=__nested_webpack_require_243851__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js");const transformRunner=_gensync()((function*(code,opts){const config=yield*(0,_config.default)(opts);return null===config?null:yield*(0,_transformation.run)(config,code)}));exports.transform=function(code,optsOrCallback,maybeCallback){let opts,callback;if("function"==typeof optsOrCallback?(callback=optsOrCallback,opts=void 0):(opts=optsOrCallback,callback=maybeCallback),void 0===callback)return(0,_rewriteStackTrace.beginHiddenCallStack)(transformRunner.sync)(code,opts);(0,_rewriteStackTrace.beginHiddenCallStack)(transformRunner.errback)(code,opts,callback)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/block-hoist-plugin.js":(__unused_webpack_module,exports,__nested_webpack_require_245482__)=>{"use strict";function _traverse(){const data=__nested_webpack_require_245482__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js");return _traverse=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(){LOADED_PLUGIN||(LOADED_PLUGIN=new _plugin.default(Object.assign({},blockHoistPlugin,{visitor:_traverse().default.explode(blockHoistPlugin.visitor)}),{}));return LOADED_PLUGIN};var _plugin=__nested_webpack_require_245482__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/plugin.js");let LOADED_PLUGIN;const blockHoistPlugin={name:"internal.blockHoist",visitor:{Block:{exit({node}){const{body}=node;let max=Math.pow(2,30)-1,hasChange=!1;for(let i=0;i<body.length;i++){const p=priority(body[i]);if(p>max){hasChange=!0;break}max=p}hasChange&&(node.body=function(body){const buckets=Object.create(null);for(let i=0;i<body.length;i++){const n=body[i],p=priority(n);(buckets[p]||(buckets[p]=[])).push(n)}const keys=Object.keys(buckets).map((k=>+k)).sort(((a,b)=>b-a));let index=0;for(const key of keys){const bucket=buckets[key];for(const n of bucket)body[index++]=n}return body}(body.slice()))}}}};function priority(bodyNode){const priority=null==bodyNode?void 0:bodyNode._blockHoist;return null==priority?1:!0===priority?2:priority}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/file.js":(__unused_webpack_module,exports,__nested_webpack_require_246963__)=>{"use strict";function helpers(){const data=__nested_webpack_require_246963__("./node_modules/.pnpm/@babel+helpers@7.22.6/node_modules/@babel/helpers/lib/index.js");return helpers=function(){return data},data}function _traverse(){const data=__nested_webpack_require_246963__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js");return _traverse=function(){return data},data}function _codeFrame(){const data=__nested_webpack_require_246963__("./stubs/babel-codeframe.js");return _codeFrame=function(){return data},data}function _t(){const data=__nested_webpack_require_246963__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");return _t=function(){return data},data}function _helperModuleTransforms(){const data=__nested_webpack_require_246963__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/index.js");return _helperModuleTransforms=function(){return data},data}function _semverV(){const data=__nested_webpack_require_246963__("./node_modules/.pnpm/@nicolo-ribaudo+semver-v6@6.3.3/node_modules/@nicolo-ribaudo/semver-v6/semver.js");return _semverV=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;const{cloneNode,interpreterDirective}=_t(),errorVisitor={enter(path,state){const loc=path.node.loc;loc&&(state.loc=loc,path.stop())}};class File{constructor(options,{code,ast,inputMap}){this._map=new Map,this.opts=void 0,this.declarations={},this.path=void 0,this.ast=void 0,this.scope=void 0,this.metadata={},this.code="",this.inputMap=void 0,this.hub={file:this,getCode:()=>this.code,getScope:()=>this.scope,addHelper:this.addHelper.bind(this),buildError:this.buildCodeFrameError.bind(this)},this.opts=options,this.code=code,this.ast=ast,this.inputMap=inputMap,this.path=_traverse().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:"program"}).setContext(),this.scope=this.path.scope}get shebang(){const{interpreter}=this.path.node;return interpreter?interpreter.value:""}set shebang(value){value?this.path.get("interpreter").replaceWith(interpreterDirective(value)):this.path.get("interpreter").remove()}set(key,val){if("helpersNamespace"===key)throw new Error("Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to explore using 'helperGenerator' alongside 'file.availableHelper()'.");this._map.set(key,val)}get(key){return this._map.get(key)}has(key){return this._map.has(key)}getModuleName(){return(0,_helperModuleTransforms().getModuleName)(this.opts,this.opts)}addImport(){throw new Error("This API has been removed. If you're looking for this functionality in Babel 7, you should import the '@babel/helper-module-imports' module and use the functions exposed  from that module, such as 'addNamed' or 'addDefault'.")}availableHelper(name,versionRange){let minVersion;try{minVersion=helpers().minVersion(name)}catch(err){if("BABEL_HELPER_UNKNOWN"!==err.code)throw err;return!1}return"string"!=typeof versionRange||(_semverV().valid(versionRange)&&(versionRange=`^${versionRange}`),!_semverV().intersects(`<${minVersion}`,versionRange)&&!_semverV().intersects(">=8.0.0",versionRange))}addHelper(name){const declar=this.declarations[name];if(declar)return cloneNode(declar);const generator=this.get("helperGenerator");if(generator){const res=generator(name);if(res)return res}helpers().ensure(name,File);const uid=this.declarations[name]=this.scope.generateUidIdentifier(name),dependencies={};for(const dep of helpers().getDependencies(name))dependencies[dep]=this.addHelper(dep);const{nodes,globals}=helpers().get(name,(dep=>dependencies[dep]),uid,Object.keys(this.scope.getAllBindings()));return globals.forEach((name=>{this.path.scope.hasBinding(name,!0)&&this.path.scope.rename(name)})),nodes.forEach((node=>{node._compact=!0})),this.path.unshiftContainer("body",nodes),this.path.get("body").forEach((path=>{-1!==nodes.indexOf(path.node)&&path.isVariableDeclaration()&&this.scope.registerDeclaration(path)})),uid}addTemplateObject(){throw new Error("This function has been moved into the template literal transform itself.")}buildCodeFrameError(node,msg,_Error=SyntaxError){let loc=node&&(node.loc||node._loc);if(!loc&&node){const state={loc:null};(0,_traverse().default)(node,errorVisitor,this.scope,state),loc=state.loc;let txt="This is an error on an internal node. Probably an internal error.";loc&&(txt+=" Location has been estimated."),msg+=` (${txt})`}if(loc){const{highlightCode=!0}=this.opts;msg+="\n"+(0,_codeFrame().codeFrameColumns)(this.code,{start:{line:loc.start.line,column:loc.start.column+1},end:loc.end&&loc.start.line===loc.end.line?{line:loc.end.line,column:loc.end.column+1}:void 0},{highlightCode})}return new _Error(msg)}}exports.default=File},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/generate.js":(__unused_webpack_module,exports,__nested_webpack_require_252037__)=>{"use strict";function _convertSourceMap(){const data=__nested_webpack_require_252037__("./node_modules/.pnpm/convert-source-map@1.9.0/node_modules/convert-source-map/index.js");return _convertSourceMap=function(){return data},data}function _generator(){const data=__nested_webpack_require_252037__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/index.js");return _generator=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(pluginPasses,file){const{opts,ast,code,inputMap}=file,{generatorOpts}=opts;generatorOpts.inputSourceMap=null==inputMap?void 0:inputMap.toObject();const results=[];for(const plugins of pluginPasses)for(const plugin of plugins){const{generatorOverride}=plugin;if(generatorOverride){const result=generatorOverride(ast,generatorOpts,code,_generator().default);void 0!==result&&results.push(result)}}let result;if(0===results.length)result=(0,_generator().default)(ast,generatorOpts,code);else{if(1!==results.length)throw new Error("More than one plugin attempted to override codegen.");if(result=results[0],"function"==typeof result.then)throw new Error("You appear to be using an async codegen plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.")}let{code:outputCode,decodedMap:outputMap=result.map}=result;result.__mergedMap?outputMap=Object.assign({},result.map):outputMap&&(outputMap=inputMap?(0,_mergeMap.default)(inputMap.toObject(),outputMap,generatorOpts.sourceFileName):result.map);"inline"!==opts.sourceMaps&&"both"!==opts.sourceMaps||(outputCode+="\n"+_convertSourceMap().fromObject(outputMap).toComment());"inline"===opts.sourceMaps&&(outputMap=null);return{outputCode,outputMap}};var _mergeMap=__nested_webpack_require_252037__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/merge-map.js")},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/merge-map.js":(__unused_webpack_module,exports,__nested_webpack_require_254111__)=>{"use strict";function _remapping(){const data=__nested_webpack_require_254111__("./node_modules/.pnpm/@ampproject+remapping@2.2.1/node_modules/@ampproject/remapping/dist/remapping.umd.js");return _remapping=function(){return data},data}function rootless(map){return Object.assign({},map,{sourceRoot:null})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(inputMap,map,sourceFileName){const source=sourceFileName.replace(/\\/g,"/");let found=!1;const result=_remapping()(rootless(map),((s,ctx)=>s!==source||found?null:(found=!0,ctx.source="",rootless(inputMap))));"string"==typeof inputMap.sourceRoot&&(result.sourceRoot=inputMap.sourceRoot);return Object.assign({},result)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/index.js":(__unused_webpack_module,exports,__nested_webpack_require_254954__)=>{"use strict";function _traverse(){const data=__nested_webpack_require_254954__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js");return _traverse=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.run=function*(config,code,ast){const file=yield*(0,_normalizeFile.default)(config.passes,(0,_normalizeOpts.default)(config),code,ast),opts=file.opts;try{yield*function*(file,pluginPasses){for(const pluginPairs of pluginPasses){const passPairs=[],passes=[],visitors=[];for(const plugin of pluginPairs.concat([(0,_blockHoistPlugin.default)()])){const pass=new _pluginPass.default(file,plugin.key,plugin.options);passPairs.push([plugin,pass]),passes.push(pass),visitors.push(plugin.visitor)}for(const[plugin,pass]of passPairs){const fn=plugin.pre;if(fn){const result=fn.call(pass,file);if(yield*[],isThenable(result))throw new Error("You appear to be using an plugin with an async .pre, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.")}}const visitor=_traverse().default.visitors.merge(visitors,passes,file.opts.wrapPluginVisitorMethod);(0,_traverse().default)(file.ast,visitor,file.scope);for(const[plugin,pass]of passPairs){const fn=plugin.post;if(fn){const result=fn.call(pass,file);if(yield*[],isThenable(result))throw new Error("You appear to be using an plugin with an async .post, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.")}}}}(file,config.passes)}catch(e){var _opts$filename;throw e.message=`${null!=(_opts$filename=opts.filename)?_opts$filename:"unknown file"}: ${e.message}`,e.code||(e.code="BABEL_TRANSFORM_ERROR"),e}let outputCode,outputMap;try{!1!==opts.code&&({outputCode,outputMap}=(0,_generate.default)(config.passes,file))}catch(e){var _opts$filename2;throw e.message=`${null!=(_opts$filename2=opts.filename)?_opts$filename2:"unknown file"}: ${e.message}`,e.code||(e.code="BABEL_GENERATE_ERROR"),e}return{metadata:file.metadata,options:opts,ast:!0===opts.ast?file.ast:null,code:void 0===outputCode?null:outputCode,map:void 0===outputMap?null:outputMap,sourceType:file.ast.program.sourceType,externalDependencies:(0,_deepArray.flattenToSet)(config.externalDependencies)}};var _pluginPass=__nested_webpack_require_254954__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/plugin-pass.js"),_blockHoistPlugin=__nested_webpack_require_254954__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/block-hoist-plugin.js"),_normalizeOpts=__nested_webpack_require_254954__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/normalize-opts.js"),_normalizeFile=__nested_webpack_require_254954__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/normalize-file.js"),_generate=__nested_webpack_require_254954__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/generate.js"),_deepArray=__nested_webpack_require_254954__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/config/helpers/deep-array.js");function isThenable(val){return!(!val||"object"!=typeof val&&"function"!=typeof val||!val.then||"function"!=typeof val.then)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/normalize-file.js":(__unused_webpack_module,exports,__nested_webpack_require_258412__)=>{"use strict";function _fs(){const data=__nested_webpack_require_258412__("fs");return _fs=function(){return data},data}function _path(){const data=__nested_webpack_require_258412__("path");return _path=function(){return data},data}function _debug(){const data=__nested_webpack_require_258412__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js");return _debug=function(){return data},data}function _t(){const data=__nested_webpack_require_258412__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");return _t=function(){return data},data}function _convertSourceMap(){const data=__nested_webpack_require_258412__("./node_modules/.pnpm/convert-source-map@1.9.0/node_modules/convert-source-map/index.js");return _convertSourceMap=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function*(pluginPasses,options,code,ast){if(code=`${code||""}`,ast){if("Program"===ast.type)ast=file(ast,[],[]);else if("File"!==ast.type)throw new Error("AST root must be a Program or File node");options.cloneInputAst&&(ast=(0,_cloneDeep.default)(ast))}else ast=yield*(0,_parser.default)(pluginPasses,options,code);let inputMap=null;if(!1!==options.inputSourceMap){if("object"==typeof options.inputSourceMap&&(inputMap=_convertSourceMap().fromObject(options.inputSourceMap)),!inputMap){const lastComment=extractComments(INLINE_SOURCEMAP_REGEX,ast);if(lastComment)try{inputMap=_convertSourceMap().fromComment(lastComment)}catch(err){debug("discarding unknown inline input sourcemap",err)}}if(!inputMap){const lastComment=extractComments(EXTERNAL_SOURCEMAP_REGEX,ast);if("string"==typeof options.filename&&lastComment)try{const match=EXTERNAL_SOURCEMAP_REGEX.exec(lastComment),inputMapContent=_fs().readFileSync(_path().resolve(_path().dirname(options.filename),match[1]),"utf8");inputMap=_convertSourceMap().fromJSON(inputMapContent)}catch(err){debug("discarding unknown file input sourcemap",err)}else lastComment&&debug("discarding un-loadable file input sourcemap")}}return new _file.default(options,{code,ast,inputMap})};var _file=__nested_webpack_require_258412__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/file/file.js"),_parser=__nested_webpack_require_258412__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/parser/index.js"),_cloneDeep=__nested_webpack_require_258412__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/util/clone-deep.js");const{file,traverseFast}=_t(),debug=_debug()("babel:transform:file"),INLINE_SOURCEMAP_REGEX=/^[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/,EXTERNAL_SOURCEMAP_REGEX=/^[@#][ \t]+sourceMappingURL=([^\s'"`]+)[ \t]*$/;function extractCommentsFromList(regex,comments,lastComment){return comments&&(comments=comments.filter((({value})=>!regex.test(value)||(lastComment=value,!1)))),[comments,lastComment]}function extractComments(regex,ast){let lastComment=null;return traverseFast(ast,(node=>{[node.leadingComments,lastComment]=extractCommentsFromList(regex,node.leadingComments,lastComment),[node.innerComments,lastComment]=extractCommentsFromList(regex,node.innerComments,lastComment),[node.trailingComments,lastComment]=extractCommentsFromList(regex,node.trailingComments,lastComment)})),lastComment}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/normalize-opts.js":(__unused_webpack_module,exports,__nested_webpack_require_261832__)=>{"use strict";function _path(){const data=__nested_webpack_require_261832__("path");return _path=function(){return data},data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(config){const{filename,cwd,filenameRelative="string"==typeof filename?_path().relative(cwd,filename):"unknown",sourceType="module",inputSourceMap,sourceMaps=!!inputSourceMap,sourceRoot=config.options.moduleRoot,sourceFileName=_path().basename(filenameRelative),comments=!0,compact="auto"}=config.options,opts=config.options,options=Object.assign({},opts,{parserOpts:Object.assign({sourceType:".mjs"===_path().extname(filenameRelative)?"module":sourceType,sourceFileName:filename,plugins:[]},opts.parserOpts),generatorOpts:Object.assign({filename,auxiliaryCommentBefore:opts.auxiliaryCommentBefore,auxiliaryCommentAfter:opts.auxiliaryCommentAfter,retainLines:opts.retainLines,comments,shouldPrintComment:opts.shouldPrintComment,compact,minified:opts.minified,sourceMaps,sourceRoot,sourceFileName},opts.generatorOpts)});for(const plugins of config.passes)for(const plugin of plugins)plugin.manipulateOptions&&plugin.manipulateOptions(options,options.parserOpts);return options}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/plugin-pass.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;class PluginPass{constructor(file,key,options){this._map=new Map,this.key=void 0,this.file=void 0,this.opts=void 0,this.cwd=void 0,this.filename=void 0,this.key=key,this.file=file,this.opts=options||{},this.cwd=file.opts.cwd,this.filename=file.opts.filename}set(key,val){this._map.set(key,val)}get(key){return this._map.get(key)}availableHelper(name,versionRange){return this.file.availableHelper(name,versionRange)}addHelper(name){return this.file.addHelper(name)}buildCodeFrameError(node,msg,_Error){return this.file.buildCodeFrameError(node,msg,_Error)}}exports.default=PluginPass,PluginPass.prototype.getModuleName=function(){return this.file.getModuleName()},PluginPass.prototype.addImport=function(){this.file.addImport()}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/transformation/util/clone-deep.js":(__unused_webpack_module,exports)=>{"use strict";function deepClone(value,cache){if(null!==value){if(cache.has(value))return cache.get(value);let cloned;if(Array.isArray(value)){cloned=new Array(value.length),cache.set(value,cloned);for(let i=0;i<value.length;i++)cloned[i]="object"!=typeof value[i]?value[i]:deepClone(value[i],cache)}else{cloned={},cache.set(value,cloned);const keys=Object.keys(value);for(let i=0;i<keys.length;i++){const key=keys[i];cloned[key]="object"!=typeof value[key]?value[key]:deepClone(value[key],cache)}}return cloned}return value}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(value){return"object"!=typeof value?value:deepClone(value,new Map)}},"./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/vendor/import-meta-resolve.js":(__unused_webpack_module,exports,__nested_webpack_require_264929__)=>{"use strict";function _assert(){const data=__nested_webpack_require_264929__("assert");return _assert=function(){return data},data}function _fs(){const data=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__nested_webpack_require_264929__("fs"),!0);return _fs=function(){return data},data}function _process(){const data=__nested_webpack_require_264929__("process");return _process=function(){return data},data}function _url(){const data=__nested_webpack_require_264929__("url");return _url=function(){return data},data}function _path(){const data=__nested_webpack_require_264929__("path");return _path=function(){return data},data}function _module(){const data=__nested_webpack_require_264929__("module");return _module=function(){return data},data}function _v(){const data=__nested_webpack_require_264929__("v8");return _v=function(){return data},data}function _util(){const data=__nested_webpack_require_264929__("util");return _util=function(){return data},data}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.moduleResolve=moduleResolve,exports.resolve=function(specifier,parent){if(!parent)throw new Error("Please pass `parent`: `import-meta-resolve` cannot ponyfill that");try{return function(specifier,context={}){const{parentURL}=context;let parsedParentURL,parsed;if(_assert()(void 0!==parentURL,"expected `parentURL` to be defined"),function(parentURL){if(void 0===parentURL)return;if("string"!=typeof parentURL&&(self=parentURL,!Boolean(self&&"object"==typeof self&&"href"in self&&"string"==typeof self.href&&"protocol"in self&&"string"==typeof self.protocol&&self.href&&self.protocol)))throw new codes.ERR_INVALID_ARG_TYPE("parentURL",["string","URL"],parentURL);var self}(parentURL),parentURL)try{parsedParentURL=new(_url().URL)(parentURL)}catch(_unused5){}try{parsed=shouldBeTreatedAsRelativeOrAbsolutePath(specifier)?new(_url().URL)(specifier,parsedParentURL):new(_url().URL)(specifier);const protocol=parsed.protocol;if("data:"===protocol||experimentalNetworkImports&&("https:"===protocol||"http:"===protocol))return{url:parsed.href,format:null}}catch(_unused6){}const maybeReturn=function(specifier,parsed,parsedParentURL){if(parsedParentURL){const parentProtocol=parsedParentURL.protocol;if("http:"===parentProtocol||"https:"===parentProtocol){if(shouldBeTreatedAsRelativeOrAbsolutePath(specifier)){const parsedProtocol=null==parsed?void 0:parsed.protocol;if(parsedProtocol&&"https:"!==parsedProtocol&&"http:"!==parsedProtocol)throw new ERR_NETWORK_IMPORT_DISALLOWED(specifier,parsedParentURL,"remote imports cannot import from a local location.");return{url:(null==parsed?void 0:parsed.href)||""}}if(_module().builtinModules.includes(specifier))throw new ERR_NETWORK_IMPORT_DISALLOWED(specifier,parsedParentURL,"remote imports cannot import from a local location.");throw new ERR_NETWORK_IMPORT_DISALLOWED(specifier,parsedParentURL,"only relative and absolute specifiers are supported.")}}}(specifier,parsed,parsedParentURL);if(maybeReturn)return maybeReturn;if(parsed&&"node:"===parsed.protocol)return{url:specifier};!function(parsed,experimentalNetworkImports){const protocol=null==parsed?void 0:parsed.protocol;if(protocol&&"file:"!==protocol&&"data:"!==protocol&&(!experimentalNetworkImports||"https:"!==protocol&&"http:"!==protocol))throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed,["file","data"].concat(experimentalNetworkImports?["https","http"]:[]))}(parsed,experimentalNetworkImports);const conditions=function(conditions){if(void 0!==conditions&&conditions!==DEFAULT_CONDITIONS){if(!Array.isArray(conditions))throw new ERR_INVALID_ARG_VALUE("conditions",conditions,"expected an array");return new Set(conditions)}return DEFAULT_CONDITIONS_SET}(context.conditions),url=moduleResolve(specifier,new(_url().URL)(parentURL),conditions,!1);return function(url){const protocol=url.protocol;if("file:"!==protocol&&"data:"!==protocol&&"node:"!==protocol)throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url)}(url),{url:url.href,format:defaultGetFormatWithoutErrors(url,{parentURL})}}(specifier,{parentURL:parent}).url}catch(error){const exception=error;if("ERR_UNSUPPORTED_DIR_IMPORT"===exception.code&&"string"==typeof exception.url)return exception.url;throw error}};const isWindows="win32"===_process().platform,own$1={}.hasOwnProperty,classRegExp=/^([A-Z][a-z\d]*)+$/,kTypes=new Set(["string","function","number","object","Function","Object","boolean","bigint","symbol"]),codes={};function formatList(array,type="and"){return array.length<3?array.join(` ${type} `):`${array.slice(0,-1).join(", ")}, ${type} ${array[array.length-1]}`}const messages=new Map;let userStackTraceLimit;function createError(sym,value,def){return messages.set(sym,value),function(Base,key){return NodeError;function NodeError(...args){const limit=Error.stackTraceLimit;isErrorStackTraceLimitWritable()&&(Error.stackTraceLimit=0);const error=new Base;isErrorStackTraceLimitWritable()&&(Error.stackTraceLimit=limit);const message=function(key,args,self){const message=messages.get(key);if(_assert()(void 0!==message,"expected `message` to be found"),"function"==typeof message)return _assert()(message.length<=args.length,`Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${message.length}).`),Reflect.apply(message,self,args);const regex=/%[dfijoOs]/g;let expectedLength=0;for(;null!==regex.exec(message);)expectedLength++;return _assert()(expectedLength===args.length,`Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`),0===args.length?message:(args.unshift(message),Reflect.apply(_util().format,null,args))}(key,args,error);return Object.defineProperties(error,{message:{value:message,enumerable:!1,writable:!0,configurable:!0},toString:{value(){return`${this.name} [${key}]: ${this.message}`},enumerable:!1,writable:!0,configurable:!0}}),captureLargerStackTrace(error),error.code=key,error}}(def,sym)}function isErrorStackTraceLimitWritable(){try{if(_v().startupSnapshot.isBuildingSnapshot())return!1}catch(_unused){}const desc=Object.getOwnPropertyDescriptor(Error,"stackTraceLimit");return void 0===desc?Object.isExtensible(Error):own$1.call(desc,"writable")&&void 0!==desc.writable?desc.writable:void 0!==desc.set}codes.ERR_INVALID_ARG_TYPE=createError("ERR_INVALID_ARG_TYPE",((name,expected,actual)=>{_assert()("string"==typeof name,"'name' must be a string"),Array.isArray(expected)||(expected=[expected]);let message="The ";if(name.endsWith(" argument"))message+=`${name} `;else{const type=name.includes(".")?"property":"argument";message+=`"${name}" ${type} `}message+="must be ";const types=[],instances=[],other=[];for(const value of expected)_assert()("string"==typeof value,"All expected entries have to be of type string"),kTypes.has(value)?types.push(value.toLowerCase()):null===classRegExp.exec(value)?(_assert()("object"!==value,'The value "object" should be written as "Object"'),other.push(value)):instances.push(value);if(instances.length>0){const pos=types.indexOf("object");-1!==pos&&(types.slice(pos,1),instances.push("Object"))}return types.length>0&&(message+=`${types.length>1?"one of type":"of type"} ${formatList(types,"or")}`,(instances.length>0||other.length>0)&&(message+=" or ")),instances.length>0&&(message+=`an instance of ${formatList(instances,"or")}`,other.length>0&&(message+=" or ")),other.length>0&&(other.length>1?message+=`one of ${formatList(other,"or")}`:(other[0].toLowerCase()!==other[0]&&(message+="an "),message+=`${other[0]}`)),message+=`. Received ${function(value){if(null==value)return String(value);if("function"==typeof value&&value.name)return`function ${value.name}`;if("object"==typeof value)return value.constructor&&value.constructor.name?`an instance of ${value.constructor.name}`:`${(0,_util().inspect)(value,{depth:-1})}`;let inspected=(0,_util().inspect)(value,{colors:!1});inspected.length>28&&(inspected=`${inspected.slice(0,25)}...`);return`type ${typeof value} (${inspected})`}(actual)}`,message}),TypeError),codes.ERR_INVALID_MODULE_SPECIFIER=createError("ERR_INVALID_MODULE_SPECIFIER",((request,reason,base=void 0)=>`Invalid module "${request}" ${reason}${base?` imported from ${base}`:""}`),TypeError),codes.ERR_INVALID_PACKAGE_CONFIG=createError("ERR_INVALID_PACKAGE_CONFIG",((path,base,message)=>`Invalid package config ${path}${base?` while importing ${base}`:""}${message?`. ${message}`:""}`),Error),codes.ERR_INVALID_PACKAGE_TARGET=createError("ERR_INVALID_PACKAGE_TARGET",((pkgPath,key,target,isImport=!1,base=void 0)=>{const relError="string"==typeof target&&!isImport&&target.length>0&&!target.startsWith("./");return"."===key?(_assert()(!1===isImport),`Invalid "exports" main target ${JSON.stringify(target)} defined in the package config ${pkgPath}package.json${base?` imported from ${base}`:""}${relError?'; targets must start with "./"':""}`):`Invalid "${isImport?"imports":"exports"}" target ${JSON.stringify(target)} defined for '${key}' in the package config ${pkgPath}package.json${base?` imported from ${base}`:""}${relError?'; targets must start with "./"':""}`}),Error),codes.ERR_MODULE_NOT_FOUND=createError("ERR_MODULE_NOT_FOUND",((path,base,type="package")=>`Cannot find ${type} '${path}' imported from ${base}`),Error),codes.ERR_NETWORK_IMPORT_DISALLOWED=createError("ERR_NETWORK_IMPORT_DISALLOWED","import of '%s' by %s is not supported: %s",Error),codes.ERR_PACKAGE_IMPORT_NOT_DEFINED=createError("ERR_PACKAGE_IMPORT_NOT_DEFINED",((specifier,packagePath,base)=>`Package import specifier "${specifier}" is not defined${packagePath?` in package ${packagePath}package.json`:""} imported from ${base}`),TypeError),codes.ERR_PACKAGE_PATH_NOT_EXPORTED=createError("ERR_PACKAGE_PATH_NOT_EXPORTED",((pkgPath,subpath,base=void 0)=>"."===subpath?`No "exports" main defined in ${pkgPath}package.json${base?` imported from ${base}`:""}`:`Package subpath '${subpath}' is not defined by "exports" in ${pkgPath}package.json${base?` imported from ${base}`:""}`),Error),codes.ERR_UNSUPPORTED_DIR_IMPORT=createError("ERR_UNSUPPORTED_DIR_IMPORT","Directory import '%s' is not supported resolving ES modules imported from %s",Error),codes.ERR_UNKNOWN_FILE_EXTENSION=createError("ERR_UNKNOWN_FILE_EXTENSION",((ext,path)=>`Unknown file extension "${ext}" for ${path}`),TypeError),codes.ERR_INVALID_ARG_VALUE=createError("ERR_INVALID_ARG_VALUE",((name,value,reason="is invalid")=>{let inspected=(0,_util().inspect)(value);inspected.length>128&&(inspected=`${inspected.slice(0,128)}...`);return`The ${name.includes(".")?"property":"argument"} '${name}' ${reason}. Received ${inspected}`}),TypeError),codes.ERR_UNSUPPORTED_ESM_URL_SCHEME=createError("ERR_UNSUPPORTED_ESM_URL_SCHEME",((url,supported)=>{let message=`Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;return isWindows&&2===url.protocol.length&&(message+=". On Windows, absolute paths must be valid file:// URLs"),message+=`. Received protocol '${url.protocol}'`,message}),Error);const captureLargerStackTrace=function(fn){const hidden="__node_internal_"+fn.name;return Object.defineProperty(fn,"name",{value:hidden}),fn}((function(error){const stackTraceLimitIsWritable=isErrorStackTraceLimitWritable();return stackTraceLimitIsWritable&&(userStackTraceLimit=Error.stackTraceLimit,Error.stackTraceLimit=Number.POSITIVE_INFINITY),Error.captureStackTrace(error),stackTraceLimitIsWritable&&(Error.stackTraceLimit=userStackTraceLimit),error}));var packageJsonReader={read:function(jsonPath){try{return{string:_fs().default.readFileSync(_path().toNamespacedPath(_path().join(_path().dirname(jsonPath),"package.json")),"utf8")}}catch(error){const exception=error;if("ENOENT"===exception.code)return{string:void 0};throw exception}}};const{ERR_INVALID_PACKAGE_CONFIG:ERR_INVALID_PACKAGE_CONFIG$1}=codes,packageJsonCache=new Map;function getPackageConfig(path,specifier,base){const existing=packageJsonCache.get(path);if(void 0!==existing)return existing;const source=packageJsonReader.read(path).string;if(void 0===source){const packageConfig={pjsonPath:path,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return packageJsonCache.set(path,packageConfig),packageConfig}let packageJson;try{packageJson=JSON.parse(source)}catch(error){const exception=error;throw new ERR_INVALID_PACKAGE_CONFIG$1(path,(base?`"${specifier}" from `:"")+(0,_url().fileURLToPath)(base||specifier),exception.message)}const{exports,imports,main,name,type}=packageJson,packageConfig={pjsonPath:path,exists:!0,main:"string"==typeof main?main:void 0,name:"string"==typeof name?name:void 0,type:"module"===type||"commonjs"===type?type:"none",exports,imports:imports&&"object"==typeof imports?imports:void 0};return packageJsonCache.set(path,packageConfig),packageConfig}function getPackageScopeConfig(resolved){let packageJsonUrl=new(_url().URL)("package.json",resolved);for(;;){if(packageJsonUrl.pathname.endsWith("node_modules/package.json"))break;const packageConfig=getPackageConfig((0,_url().fileURLToPath)(packageJsonUrl),resolved);if(packageConfig.exists)return packageConfig;const lastPackageJsonUrl=packageJsonUrl;if(packageJsonUrl=new(_url().URL)("../package.json",packageJsonUrl),packageJsonUrl.pathname===lastPackageJsonUrl.pathname)break}const packageJsonPath=(0,_url().fileURLToPath)(packageJsonUrl),packageConfig={pjsonPath:packageJsonPath,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return packageJsonCache.set(packageJsonPath,packageConfig),packageConfig}const{ERR_UNKNOWN_FILE_EXTENSION}=codes,hasOwnProperty={}.hasOwnProperty,extensionFormatMap={__proto__:null,".cjs":"commonjs",".js":"module",".json":"json",".mjs":"module"};const protocolHandlers={__proto__:null,"data:":function(parsed){const{1:mime}=/^([^/]+\/[^;,]+)[^,]*?(;base64)?,/.exec(parsed.pathname)||[null,null,null];return function(mime){return mime&&/\s*(text|application)\/javascript\s*(;\s*charset=utf-?8\s*)?/i.test(mime)?"module":"application/json"===mime?"json":null}(mime)},"file:":function(url,_context,ignoreErrors){const ext=function(url){const pathname=url.pathname;let index=pathname.length;for(;index--;){const code=pathname.codePointAt(index);if(47===code)return"";if(46===code)return 47===pathname.codePointAt(index-1)?"":pathname.slice(index)}return""}(url);if(".js"===ext)return"module"===function(url){return getPackageScopeConfig(url).type}(url)?"module":"commonjs";const format=extensionFormatMap[ext];if(format)return format;if(ignoreErrors)return;const filepath=(0,_url().fileURLToPath)(url);throw new ERR_UNKNOWN_FILE_EXTENSION(ext,filepath)},"http:":getHttpProtocolModuleFormat,"https:":getHttpProtocolModuleFormat,"node:":()=>"builtin"};function getHttpProtocolModuleFormat(){}function defaultGetFormatWithoutErrors(url,context){return hasOwnProperty.call(protocolHandlers,url.protocol)&&protocolHandlers[url.protocol](url,context,!0)||null}const{ERR_INVALID_ARG_VALUE}=codes,DEFAULT_CONDITIONS=Object.freeze(["node","import"]),DEFAULT_CONDITIONS_SET=new Set(DEFAULT_CONDITIONS);const RegExpPrototypeSymbolReplace=RegExp.prototype[Symbol.replace],experimentalNetworkImports=!1,{ERR_NETWORK_IMPORT_DISALLOWED,ERR_INVALID_MODULE_SPECIFIER,ERR_INVALID_PACKAGE_CONFIG,ERR_INVALID_PACKAGE_TARGET,ERR_MODULE_NOT_FOUND,ERR_PACKAGE_IMPORT_NOT_DEFINED,ERR_PACKAGE_PATH_NOT_EXPORTED,ERR_UNSUPPORTED_DIR_IMPORT,ERR_UNSUPPORTED_ESM_URL_SCHEME}=codes,own={}.hasOwnProperty,invalidSegmentRegEx=/(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\|\/|$)/i,deprecatedInvalidSegmentRegEx=/(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i,invalidPackageNameRegEx=/^\.|%|\\/,patternRegEx=/\*/g,encodedSepRegEx=/%2f|%5c/i,emittedPackageWarnings=new Set,doubleSlashRegEx=/[/\\]{2}/;function emitInvalidSegmentDeprecation(target,request,match,packageJsonUrl,internal,base,isTarget){const pjsonPath=(0,_url().fileURLToPath)(packageJsonUrl),double=null!==doubleSlashRegEx.exec(isTarget?target:request);_process().emitWarning(`Use of deprecated ${double?"double slash":"leading or trailing slash matching"} resolving "${target}" for module request "${request}" ${request===match?"":`matched to "${match}" `}in the "${internal?"imports":"exports"}" field module resolution of the package at ${pjsonPath}${base?` imported from ${(0,_url().fileURLToPath)(base)}`:""}.`,"DeprecationWarning","DEP0166")}function emitLegacyIndexDeprecation(url,packageJsonUrl,base,main){if("module"!==defaultGetFormatWithoutErrors(url,{parentURL:base.href}))return;const path=(0,_url().fileURLToPath)(url.href),pkgPath=(0,_url().fileURLToPath)(new(_url().URL)(".",packageJsonUrl)),basePath=(0,_url().fileURLToPath)(base);main?_process().emitWarning(`Package ${pkgPath} has a "main" field set to ${JSON.stringify(main)}, excluding the full filename and extension to the resolved file at "${path.slice(pkgPath.length)}", imported from ${basePath}.\n Automatic extension resolution of the "main" field isdeprecated for ES modules.`,"DeprecationWarning","DEP0151"):_process().emitWarning(`No "main" or "exports" field defined in the package.json for ${pkgPath} resolving the main entry point "${path.slice(pkgPath.length)}", imported from ${basePath}.\nDefault "index" lookups for the main are deprecated for ES modules.`,"DeprecationWarning","DEP0151")}function tryStatSync(path){try{return(0,_fs().statSync)(path)}catch(_unused2){return new(_fs().Stats)}}function fileExists(url){const stats=(0,_fs().statSync)(url,{throwIfNoEntry:!1}),isFile=stats?stats.isFile():void 0;return null!=isFile&&isFile}function legacyMainResolve(packageJsonUrl,packageConfig,base){let guess;if(void 0!==packageConfig.main){if(guess=new(_url().URL)(packageConfig.main,packageJsonUrl),fileExists(guess))return guess;const tries=[`./${packageConfig.main}.js`,`./${packageConfig.main}.json`,`./${packageConfig.main}.node`,`./${packageConfig.main}/index.js`,`./${packageConfig.main}/index.json`,`./${packageConfig.main}/index.node`];let i=-1;for(;++i<tries.length&&(guess=new(_url().URL)(tries[i],packageJsonUrl),!fileExists(guess));)guess=void 0;if(guess)return emitLegacyIndexDeprecation(guess,packageJsonUrl,base,packageConfig.main),guess}const tries=["./index.js","./index.json","./index.node"];let i=-1;for(;++i<tries.length&&(guess=new(_url().URL)(tries[i],packageJsonUrl),!fileExists(guess));)guess=void 0;if(guess)return emitLegacyIndexDeprecation(guess,packageJsonUrl,base,packageConfig.main),guess;throw new ERR_MODULE_NOT_FOUND((0,_url().fileURLToPath)(new(_url().URL)(".",packageJsonUrl)),(0,_url().fileURLToPath)(base))}function exportsNotFound(subpath,packageJsonUrl,base){return new ERR_PACKAGE_PATH_NOT_EXPORTED((0,_url().fileURLToPath)(new(_url().URL)(".",packageJsonUrl)),subpath,base&&(0,_url().fileURLToPath)(base))}function invalidPackageTarget(subpath,target,packageJsonUrl,internal,base){return target="object"==typeof target&&null!==target?JSON.stringify(target,null,""):`${target}`,new ERR_INVALID_PACKAGE_TARGET((0,_url().fileURLToPath)(new(_url().URL)(".",packageJsonUrl)),subpath,target,internal,base&&(0,_url().fileURLToPath)(base))}function resolvePackageTargetString(target,subpath,match,packageJsonUrl,base,pattern,internal,isPathMap,conditions){if(""!==subpath&&!pattern&&"/"!==target[target.length-1])throw invalidPackageTarget(match,target,packageJsonUrl,internal,base);if(!target.startsWith("./")){if(internal&&!target.startsWith("../")&&!target.startsWith("/")){let isURL=!1;try{new(_url().URL)(target),isURL=!0}catch(_unused3){}if(!isURL){return packageResolve(pattern?RegExpPrototypeSymbolReplace.call(patternRegEx,target,(()=>subpath)):target+subpath,packageJsonUrl,conditions)}}throw invalidPackageTarget(match,target,packageJsonUrl,internal,base)}if(null!==invalidSegmentRegEx.exec(target.slice(2))){if(null!==deprecatedInvalidSegmentRegEx.exec(target.slice(2)))throw invalidPackageTarget(match,target,packageJsonUrl,internal,base);if(!isPathMap){const request=pattern?match.replace("*",(()=>subpath)):match+subpath;emitInvalidSegmentDeprecation(pattern?RegExpPrototypeSymbolReplace.call(patternRegEx,target,(()=>subpath)):target,request,match,packageJsonUrl,internal,base,!0)}}const resolved=new(_url().URL)(target,packageJsonUrl),resolvedPath=resolved.pathname,packagePath=new(_url().URL)(".",packageJsonUrl).pathname;if(!resolvedPath.startsWith(packagePath))throw invalidPackageTarget(match,target,packageJsonUrl,internal,base);if(""===subpath)return resolved;if(null!==invalidSegmentRegEx.exec(subpath)){const request=pattern?match.replace("*",(()=>subpath)):match+subpath;if(null===deprecatedInvalidSegmentRegEx.exec(subpath)){if(!isPathMap){emitInvalidSegmentDeprecation(pattern?RegExpPrototypeSymbolReplace.call(patternRegEx,target,(()=>subpath)):target,request,match,packageJsonUrl,internal,base,!1)}}else!function(request,match,packageJsonUrl,internal,base){const reason=`request is not a valid match in pattern "${match}" for the "${internal?"imports":"exports"}" resolution of ${(0,_url().fileURLToPath)(packageJsonUrl)}`;throw new ERR_INVALID_MODULE_SPECIFIER(request,reason,base&&(0,_url().fileURLToPath)(base))}(request,match,packageJsonUrl,internal,base)}return pattern?new(_url().URL)(RegExpPrototypeSymbolReplace.call(patternRegEx,resolved.href,(()=>subpath))):new(_url().URL)(subpath,resolved)}function isArrayIndex(key){const keyNumber=Number(key);return`${keyNumber}`===key&&(keyNumber>=0&&keyNumber<4294967295)}function resolvePackageTarget(packageJsonUrl,target,subpath,packageSubpath,base,pattern,internal,isPathMap,conditions){if("string"==typeof target)return resolvePackageTargetString(target,subpath,packageSubpath,packageJsonUrl,base,pattern,internal,isPathMap,conditions);if(Array.isArray(target)){const targetList=target;if(0===targetList.length)return null;let lastException,i=-1;for(;++i<targetList.length;){const targetItem=targetList[i];let resolveResult;try{resolveResult=resolvePackageTarget(packageJsonUrl,targetItem,subpath,packageSubpath,base,pattern,internal,isPathMap,conditions)}catch(error){if(lastException=error,"ERR_INVALID_PACKAGE_TARGET"===error.code)continue;throw error}if(void 0!==resolveResult){if(null!==resolveResult)return resolveResult;lastException=null}}if(null==lastException)return null;throw lastException}if("object"==typeof target&&null!==target){const keys=Object.getOwnPropertyNames(target);let i=-1;for(;++i<keys.length;){if(isArrayIndex(keys[i]))throw new ERR_INVALID_PACKAGE_CONFIG((0,_url().fileURLToPath)(packageJsonUrl),base,'"exports" cannot contain numeric property keys.')}for(i=-1;++i<keys.length;){const key=keys[i];if("default"===key||conditions&&conditions.has(key)){const resolveResult=resolvePackageTarget(packageJsonUrl,target[key],subpath,packageSubpath,base,pattern,internal,isPathMap,conditions);if(void 0===resolveResult)continue;return resolveResult}}return null}if(null===target)return null;throw invalidPackageTarget(packageSubpath,target,packageJsonUrl,internal,base)}function emitTrailingSlashPatternDeprecation(match,pjsonUrl,base){const pjsonPath=(0,_url().fileURLToPath)(pjsonUrl);emittedPackageWarnings.has(pjsonPath+"|"+match)||(emittedPackageWarnings.add(pjsonPath+"|"+match),_process().emitWarning(`Use of deprecated trailing slash pattern mapping "${match}" in the "exports" field module resolution of the package at ${pjsonPath}${base?` imported from ${(0,_url().fileURLToPath)(base)}`:""}. Mapping specifiers ending in "/" is no longer supported.`,"DeprecationWarning","DEP0155"))}function packageExportsResolve(packageJsonUrl,packageSubpath,packageConfig,base,conditions){let exports=packageConfig.exports;if(function(exports,packageJsonUrl,base){if("string"==typeof exports||Array.isArray(exports))return!0;if("object"!=typeof exports||null===exports)return!1;const keys=Object.getOwnPropertyNames(exports);let isConditionalSugar=!1,i=0,j=-1;for(;++j<keys.length;){const key=keys[j],curIsConditionalSugar=""===key||"."!==key[0];if(0==i++)isConditionalSugar=curIsConditionalSugar;else if(isConditionalSugar!==curIsConditionalSugar)throw new ERR_INVALID_PACKAGE_CONFIG((0,_url().fileURLToPath)(packageJsonUrl),base,"\"exports\" cannot contain some keys starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.")}return isConditionalSugar}(exports,packageJsonUrl,base)&&(exports={".":exports}),own.call(exports,packageSubpath)&&!packageSubpath.includes("*")&&!packageSubpath.endsWith("/")){const resolveResult=resolvePackageTarget(packageJsonUrl,exports[packageSubpath],"",packageSubpath,base,!1,!1,!1,conditions);if(null==resolveResult)throw exportsNotFound(packageSubpath,packageJsonUrl,base);return resolveResult}let bestMatch="",bestMatchSubpath="";const keys=Object.getOwnPropertyNames(exports);let i=-1;for(;++i<keys.length;){const key=keys[i],patternIndex=key.indexOf("*");if(-1!==patternIndex&&packageSubpath.startsWith(key.slice(0,patternIndex))){packageSubpath.endsWith("/")&&emitTrailingSlashPatternDeprecation(packageSubpath,packageJsonUrl,base);const patternTrailer=key.slice(patternIndex+1);packageSubpath.length>=key.length&&packageSubpath.endsWith(patternTrailer)&&1===patternKeyCompare(bestMatch,key)&&key.lastIndexOf("*")===patternIndex&&(bestMatch=key,bestMatchSubpath=packageSubpath.slice(patternIndex,packageSubpath.length-patternTrailer.length))}}if(bestMatch){const resolveResult=resolvePackageTarget(packageJsonUrl,exports[bestMatch],bestMatchSubpath,bestMatch,base,!0,!1,packageSubpath.endsWith("/"),conditions);if(null==resolveResult)throw exportsNotFound(packageSubpath,packageJsonUrl,base);return resolveResult}throw exportsNotFound(packageSubpath,packageJsonUrl,base)}function patternKeyCompare(a,b){const aPatternIndex=a.indexOf("*"),bPatternIndex=b.indexOf("*"),baseLengthA=-1===aPatternIndex?a.length:aPatternIndex+1,baseLengthB=-1===bPatternIndex?b.length:bPatternIndex+1;return baseLengthA>baseLengthB?-1:baseLengthB>baseLengthA||-1===aPatternIndex?1:-1===bPatternIndex||a.length>b.length?-1:b.length>a.length?1:0}function packageImportsResolve(name,base,conditions){if("#"===name||name.startsWith("#/")||name.endsWith("/")){throw new ERR_INVALID_MODULE_SPECIFIER(name,"is not a valid internal imports specifier name",(0,_url().fileURLToPath)(base))}let packageJsonUrl;const packageConfig=getPackageScopeConfig(base);if(packageConfig.exists){packageJsonUrl=(0,_url().pathToFileURL)(packageConfig.pjsonPath);const imports=packageConfig.imports;if(imports)if(own.call(imports,name)&&!name.includes("*")){const resolveResult=resolvePackageTarget(packageJsonUrl,imports[name],"",name,base,!1,!0,!1,conditions);if(null!=resolveResult)return resolveResult}else{let bestMatch="",bestMatchSubpath="";const keys=Object.getOwnPropertyNames(imports);let i=-1;for(;++i<keys.length;){const key=keys[i],patternIndex=key.indexOf("*");if(-1!==patternIndex&&name.startsWith(key.slice(0,-1))){const patternTrailer=key.slice(patternIndex+1);name.length>=key.length&&name.endsWith(patternTrailer)&&1===patternKeyCompare(bestMatch,key)&&key.lastIndexOf("*")===patternIndex&&(bestMatch=key,bestMatchSubpath=name.slice(patternIndex,name.length-patternTrailer.length))}}if(bestMatch){const resolveResult=resolvePackageTarget(packageJsonUrl,imports[bestMatch],bestMatchSubpath,bestMatch,base,!0,!0,!1,conditions);if(null!=resolveResult)return resolveResult}}}throw function(specifier,packageJsonUrl,base){return new ERR_PACKAGE_IMPORT_NOT_DEFINED(specifier,packageJsonUrl&&(0,_url().fileURLToPath)(new(_url().URL)(".",packageJsonUrl)),(0,_url().fileURLToPath)(base))}(name,packageJsonUrl,base)}function packageResolve(specifier,base,conditions){if(_module().builtinModules.includes(specifier))return new(_url().URL)("node:"+specifier);const{packageName,packageSubpath,isScoped}=function(specifier,base){let separatorIndex=specifier.indexOf("/"),validPackageName=!0,isScoped=!1;"@"===specifier[0]&&(isScoped=!0,-1===separatorIndex||0===specifier.length?validPackageName=!1:separatorIndex=specifier.indexOf("/",separatorIndex+1));const packageName=-1===separatorIndex?specifier:specifier.slice(0,separatorIndex);if(null!==invalidPackageNameRegEx.exec(packageName)&&(validPackageName=!1),!validPackageName)throw new ERR_INVALID_MODULE_SPECIFIER(specifier,"is not a valid package name",(0,_url().fileURLToPath)(base));return{packageName,packageSubpath:"."+(-1===separatorIndex?"":specifier.slice(separatorIndex)),isScoped}}(specifier,base),packageConfig=getPackageScopeConfig(base);if(packageConfig.exists){const packageJsonUrl=(0,_url().pathToFileURL)(packageConfig.pjsonPath);if(packageConfig.name===packageName&&void 0!==packageConfig.exports&&null!==packageConfig.exports)return packageExportsResolve(packageJsonUrl,packageSubpath,packageConfig,base,conditions)}let lastPath,packageJsonUrl=new(_url().URL)("./node_modules/"+packageName+"/package.json",base),packageJsonPath=(0,_url().fileURLToPath)(packageJsonUrl);do{if(!tryStatSync(packageJsonPath.slice(0,-13)).isDirectory()){lastPath=packageJsonPath,packageJsonUrl=new(_url().URL)((isScoped?"../../../../node_modules/":"../../../node_modules/")+packageName+"/package.json",packageJsonUrl),packageJsonPath=(0,_url().fileURLToPath)(packageJsonUrl);continue}const packageConfig=getPackageConfig(packageJsonPath,specifier,base);return void 0!==packageConfig.exports&&null!==packageConfig.exports?packageExportsResolve(packageJsonUrl,packageSubpath,packageConfig,base,conditions):"."===packageSubpath?legacyMainResolve(packageJsonUrl,packageConfig,base):new(_url().URL)(packageSubpath,packageJsonUrl)}while(packageJsonPath.length!==lastPath.length);throw new ERR_MODULE_NOT_FOUND(packageName,(0,_url().fileURLToPath)(base))}function shouldBeTreatedAsRelativeOrAbsolutePath(specifier){return""!==specifier&&("/"===specifier[0]||function(specifier){if("."===specifier[0]){if(1===specifier.length||"/"===specifier[1])return!0;if("."===specifier[1]&&(2===specifier.length||"/"===specifier[2]))return!0}return!1}(specifier))}function moduleResolve(specifier,base,conditions,preserveSymlinks){const protocol=base.protocol,isRemote="http:"===protocol||"https:"===protocol;let resolved;if(shouldBeTreatedAsRelativeOrAbsolutePath(specifier))resolved=new(_url().URL)(specifier,base);else if(isRemote||"#"!==specifier[0])try{resolved=new(_url().URL)(specifier)}catch(_unused4){isRemote||(resolved=packageResolve(specifier,base,conditions))}else resolved=packageImportsResolve(specifier,base,conditions);return _assert()(void 0!==resolved,"expected to be defined"),"file:"!==resolved.protocol?resolved:function(resolved,base,preserveSymlinks){if(null!==encodedSepRegEx.exec(resolved.pathname))throw new ERR_INVALID_MODULE_SPECIFIER(resolved.pathname,'must not include encoded "/" or "\\" characters',(0,_url().fileURLToPath)(base));const filePath=(0,_url().fileURLToPath)(resolved),stats=tryStatSync(filePath.endsWith("/")?filePath.slice(-1):filePath);if(stats.isDirectory()){const error=new ERR_UNSUPPORTED_DIR_IMPORT(filePath,(0,_url().fileURLToPath)(base));throw error.url=String(resolved),error}if(!stats.isFile())throw new ERR_MODULE_NOT_FOUND(filePath||resolved.pathname,base&&(0,_url().fileURLToPath)(base),"module");if(!preserveSymlinks){const real=(0,_fs().realpathSync)(filePath),{search,hash}=resolved;(resolved=(0,_url().pathToFileURL)(real+(filePath.endsWith(_path().sep)?"/":""))).search=search,resolved.hash=hash}return resolved}(resolved,base,preserveSymlinks)}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/buffer.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;exports.default=class{constructor(map){this._map=null,this._buf="",this._str="",this._appendCount=0,this._last=0,this._queue=[],this._queueCursor=0,this._canMarkIdName=!0,this._position={line:1,column:0},this._sourcePosition={identifierName:void 0,identifierNamePos:void 0,line:void 0,column:void 0,filename:void 0},this._map=map,this._allocQueue()}_allocQueue(){const queue=this._queue;for(let i=0;i<16;i++)queue.push({char:0,repeat:1,line:void 0,column:void 0,identifierName:void 0,identifierNamePos:void 0,filename:""})}_pushQueue(char,repeat,line,column,filename){const cursor=this._queueCursor;cursor===this._queue.length&&this._allocQueue();const item=this._queue[cursor];item.char=char,item.repeat=repeat,item.line=line,item.column=column,item.filename=filename,this._queueCursor++}_popQueue(){if(0===this._queueCursor)throw new Error("Cannot pop from empty queue");return this._queue[--this._queueCursor]}get(){this._flush();const map=this._map,result={code:(this._buf+this._str).trimRight(),decodedMap:null==map?void 0:map.getDecoded(),get __mergedMap(){return this.map},get map(){const resultMap=map?map.get():null;return result.map=resultMap,resultMap},set map(value){Object.defineProperty(result,"map",{value,writable:!0})},get rawMappings(){const mappings=null==map?void 0:map.getRawMappings();return result.rawMappings=mappings,mappings},set rawMappings(value){Object.defineProperty(result,"rawMappings",{value,writable:!0})}};return result}append(str,maybeNewline){this._flush(),this._append(str,this._sourcePosition,maybeNewline)}appendChar(char){this._flush(),this._appendChar(char,1,this._sourcePosition)}queue(char){if(10===char)for(;0!==this._queueCursor;){const char=this._queue[this._queueCursor-1].char;if(32!==char&&9!==char)break;this._queueCursor--}const sourcePosition=this._sourcePosition;this._pushQueue(char,1,sourcePosition.line,sourcePosition.column,sourcePosition.filename)}queueIndentation(char,repeat){this._pushQueue(char,repeat,void 0,void 0,void 0)}_flush(){const queueCursor=this._queueCursor,queue=this._queue;for(let i=0;i<queueCursor;i++){const item=queue[i];this._appendChar(item.char,item.repeat,item)}this._queueCursor=0}_appendChar(char,repeat,sourcePos){this._last=char,this._str+=repeat>1?String.fromCharCode(char).repeat(repeat):String.fromCharCode(char),10!==char?(this._mark(sourcePos.line,sourcePos.column,sourcePos.identifierName,sourcePos.identifierNamePos,sourcePos.filename),this._position.column+=repeat):(this._position.line++,this._position.column=0),this._canMarkIdName&&(sourcePos.identifierName=void 0,sourcePos.identifierNamePos=void 0)}_append(str,sourcePos,maybeNewline){const len=str.length,position=this._position;if(this._last=str.charCodeAt(len-1),++this._appendCount>4096?(this._str,this._buf+=this._str,this._str=str,this._appendCount=0):this._str+=str,!maybeNewline&&!this._map)return void(position.column+=len);const{column,identifierName,identifierNamePos,filename}=sourcePos;let line=sourcePos.line;null==identifierName&&null==identifierNamePos||!this._canMarkIdName||(sourcePos.identifierName=void 0,sourcePos.identifierNamePos=void 0);let i=str.indexOf("\n"),last=0;for(0!==i&&this._mark(line,column,identifierName,identifierNamePos,filename);-1!==i;)position.line++,position.column=0,last=i+1,last<len&&void 0!==line&&this._mark(++line,0,null,null,filename),i=str.indexOf("\n",last);position.column+=len-last}_mark(line,column,identifierName,identifierNamePos,filename){var _this$_map;null==(_this$_map=this._map)||_this$_map.mark(this._position,line,column,identifierName,identifierNamePos,filename)}removeTrailingNewline(){const queueCursor=this._queueCursor;0!==queueCursor&&10===this._queue[queueCursor-1].char&&this._queueCursor--}removeLastSemicolon(){const queueCursor=this._queueCursor;0!==queueCursor&&59===this._queue[queueCursor-1].char&&this._queueCursor--}getLastChar(){const queueCursor=this._queueCursor;return 0!==queueCursor?this._queue[queueCursor-1].char:this._last}getNewlineCount(){const queueCursor=this._queueCursor;let count=0;if(0===queueCursor)return 10===this._last?1:0;for(let i=queueCursor-1;i>=0&&10===this._queue[i].char;i--)count++;return count===queueCursor&&10===this._last?count+1:count}endsWithCharAndNewline(){const queue=this._queue,queueCursor=this._queueCursor;if(0!==queueCursor){if(10!==queue[queueCursor-1].char)return;return queueCursor>1?queue[queueCursor-2].char:this._last}}hasContent(){return 0!==this._queueCursor||!!this._last}exactSource(loc,cb){if(!this._map)return void cb();this.source("start",loc);const identifierName=loc.identifierName,sourcePos=this._sourcePosition;identifierName&&(this._canMarkIdName=!1,sourcePos.identifierName=identifierName),cb(),identifierName&&(this._canMarkIdName=!0,sourcePos.identifierName=void 0,sourcePos.identifierNamePos=void 0),this.source("end",loc)}source(prop,loc){this._map&&this._normalizePosition(prop,loc,0,0)}sourceWithOffset(prop,loc,lineOffset,columnOffset){this._map&&this._normalizePosition(prop,loc,lineOffset,columnOffset)}withSource(prop,loc,cb){this._map&&this.source(prop,loc),cb()}_normalizePosition(prop,loc,lineOffset,columnOffset){const pos=loc[prop],target=this._sourcePosition;pos&&(target.line=pos.line+lineOffset,target.column=pos.column+columnOffset,target.filename=loc.filename)}getCurrentColumn(){const queue=this._queue,queueCursor=this._queueCursor;let lastIndex=-1,len=0;for(let i=0;i<queueCursor;i++){const item=queue[i];10===item.char&&(lastIndex=len),len+=item.repeat}return-1===lastIndex?this._position.column+len:len-1-lastIndex}getCurrentLine(){let count=0;const queue=this._queue;for(let i=0;i<this._queueCursor;i++)10===queue[i].char&&count++;return this._position.line+count}}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/base.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BlockStatement=function(node){var _node$directives2;this.tokenChar(123);const directivesLen=null==(_node$directives2=node.directives)?void 0:_node$directives2.length;if(directivesLen){var _node$directives$trai2;const newline=node.body.length?2:1;this.printSequence(node.directives,node,{indent:!0,trailingCommentsLineOffset:newline}),null!=(_node$directives$trai2=node.directives[directivesLen-1].trailingComments)&&_node$directives$trai2.length||this.newline(newline)}this.printSequence(node.body,node,{indent:!0}),this.rightBrace(node)},exports.Directive=function(node){this.print(node.value,node),this.semicolon()},exports.DirectiveLiteral=function(node){const raw=this.getPossibleRaw(node);if(!this.format.minified&&void 0!==raw)return void this.token(raw);const{value}=node;if(unescapedDoubleQuoteRE.test(value)){if(unescapedSingleQuoteRE.test(value))throw new Error("Malformed AST: it is not possible to print a directive containing both unescaped single and double quotes.");this.token(`'${value}'`)}else this.token(`"${value}"`)},exports.File=function(node){node.program&&this.print(node.program.interpreter,node);this.print(node.program,node)},exports.InterpreterDirective=function(node){this.token(`#!${node.value}`),this.newline(1,!0)},exports.Placeholder=function(node){this.token("%%"),this.print(node.name),this.token("%%"),"Statement"===node.expectedNode&&this.semicolon()},exports.Program=function(node){var _node$directives;this.noIndentInnerCommentsHere(),this.printInnerComments();const directivesLen=null==(_node$directives=node.directives)?void 0:_node$directives.length;if(directivesLen){var _node$directives$trai;const newline=node.body.length?2:1;this.printSequence(node.directives,node,{trailingCommentsLineOffset:newline}),null!=(_node$directives$trai=node.directives[directivesLen-1].trailingComments)&&_node$directives$trai.length||this.newline(newline)}this.printSequence(node.body,node)};const unescapedSingleQuoteRE=/(?:^|[^\\])(?:\\\\)*'/,unescapedDoubleQuoteRE=/(?:^|[^\\])(?:\\\\)*"/},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/classes.js":(__unused_webpack_module,exports,__nested_webpack_require_305539__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassAccessorProperty=function(node){var _node$key$loc2,_node$key$loc2$end;this.printJoin(node.decorators,node);const endLine=null==(_node$key$loc2=node.key.loc)||null==(_node$key$loc2$end=_node$key$loc2.end)?void 0:_node$key$loc2$end.line;endLine&&this.catchUp(endLine);this.tsPrintClassMemberModifiers(node),this.word("accessor",!0),this.space(),node.computed?(this.tokenChar(91),this.print(node.key,node),this.tokenChar(93)):(this._variance(node),this.print(node.key,node));node.optional&&this.tokenChar(63);node.definite&&this.tokenChar(33);this.print(node.typeAnnotation,node),node.value&&(this.space(),this.tokenChar(61),this.space(),this.print(node.value,node));this.semicolon()},exports.ClassBody=function(node){this.tokenChar(123),0===node.body.length?this.tokenChar(125):(this.newline(),this.printSequence(node.body,node,{indent:!0}),this.endsWith(10)||this.newline(),this.rightBrace(node))},exports.ClassExpression=exports.ClassDeclaration=function(node,parent){(isExportDefaultDeclaration(parent)||isExportNamedDeclaration(parent))&&this._shouldPrintDecoratorsBeforeExport(parent)||this.printJoin(node.decorators,node);node.declare&&(this.word("declare"),this.space());node.abstract&&(this.word("abstract"),this.space());this.word("class"),node.id&&(this.space(),this.print(node.id,node));this.print(node.typeParameters,node),node.superClass&&(this.space(),this.word("extends"),this.space(),this.print(node.superClass,node),this.print(node.superTypeParameters,node));node.implements&&(this.space(),this.word("implements"),this.space(),this.printList(node.implements,node));this.space(),this.print(node.body,node)},exports.ClassMethod=function(node){this._classMethodHead(node),this.space(),this.print(node.body,node)},exports.ClassPrivateMethod=function(node){this._classMethodHead(node),this.space(),this.print(node.body,node)},exports.ClassPrivateProperty=function(node){this.printJoin(node.decorators,node),node.static&&(this.word("static"),this.space());this.print(node.key,node),this.print(node.typeAnnotation,node),node.value&&(this.space(),this.tokenChar(61),this.space(),this.print(node.value,node));this.semicolon()},exports.ClassProperty=function(node){var _node$key$loc,_node$key$loc$end;this.printJoin(node.decorators,node);const endLine=null==(_node$key$loc=node.key.loc)||null==(_node$key$loc$end=_node$key$loc.end)?void 0:_node$key$loc$end.line;endLine&&this.catchUp(endLine);this.tsPrintClassMemberModifiers(node),node.computed?(this.tokenChar(91),this.print(node.key,node),this.tokenChar(93)):(this._variance(node),this.print(node.key,node));node.optional&&this.tokenChar(63);node.definite&&this.tokenChar(33);this.print(node.typeAnnotation,node),node.value&&(this.space(),this.tokenChar(61),this.space(),this.print(node.value,node));this.semicolon()},exports.StaticBlock=function(node){this.word("static"),this.space(),this.tokenChar(123),0===node.body.length?this.tokenChar(125):(this.newline(),this.printSequence(node.body,node,{indent:!0}),this.rightBrace(node))},exports._classMethodHead=function(node){var _node$key$loc3,_node$key$loc3$end;this.printJoin(node.decorators,node);const endLine=null==(_node$key$loc3=node.key.loc)||null==(_node$key$loc3$end=_node$key$loc3.end)?void 0:_node$key$loc3$end.line;endLine&&this.catchUp(endLine);this.tsPrintClassMemberModifiers(node),this._methodHead(node)};var _t=__nested_webpack_require_305539__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{isExportDefaultDeclaration,isExportNamedDeclaration}=_t},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/expressions.js":(__unused_webpack_module,exports,__nested_webpack_require_309285__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LogicalExpression=exports.BinaryExpression=exports.AssignmentExpression=function(node,parent){const parens=this.inForStatementInitCounter&&"in"===node.operator&&!n.needsParens(node,parent);parens&&this.tokenChar(40);this.print(node.left,node),this.space(),"in"===node.operator||"instanceof"===node.operator?this.word(node.operator):this.token(node.operator);this.space(),this.print(node.right,node),parens&&this.tokenChar(41)},exports.AssignmentPattern=function(node){this.print(node.left,node),node.left.optional&&this.tokenChar(63);this.print(node.left.typeAnnotation,node),this.space(),this.tokenChar(61),this.space(),this.print(node.right,node)},exports.AwaitExpression=function(node){this.word("await"),node.argument&&(this.space(),this.printTerminatorless(node.argument,node,!1))},exports.BindExpression=function(node){this.print(node.object,node),this.token("::"),this.print(node.callee,node)},exports.CallExpression=function(node){this.print(node.callee,node),this.print(node.typeArguments,node),this.print(node.typeParameters,node),this.tokenChar(40),this.printList(node.arguments,node),this.rightParens(node)},exports.ConditionalExpression=function(node){this.print(node.test,node),this.space(),this.tokenChar(63),this.space(),this.print(node.consequent,node),this.space(),this.tokenChar(58),this.space(),this.print(node.alternate,node)},exports.Decorator=function(node){this.tokenChar(64);const{expression}=node;!function(node){if("ParenthesizedExpression"===node.type)return!1;return!isDecoratorMemberExpression("CallExpression"===node.type?node.callee:node)}(expression)?this.print(expression,node):(this.tokenChar(40),this.print(expression,node),this.tokenChar(41));this.newline()},exports.DoExpression=function(node){node.async&&(this.word("async",!0),this.space());this.word("do"),this.space(),this.print(node.body,node)},exports.EmptyStatement=function(){this.semicolon(!0)},exports.ExpressionStatement=function(node){this.print(node.expression,node),this.semicolon()},exports.Import=function(){this.word("import")},exports.MemberExpression=function(node){if(this.print(node.object,node),!node.computed&&isMemberExpression(node.property))throw new TypeError("Got a MemberExpression for MemberExpression property");let computed=node.computed;isLiteral(node.property)&&"number"==typeof node.property.value&&(computed=!0);computed?(this.tokenChar(91),this.print(node.property,node),this.tokenChar(93)):(this.tokenChar(46),this.print(node.property,node))},exports.MetaProperty=function(node){this.print(node.meta,node),this.tokenChar(46),this.print(node.property,node)},exports.ModuleExpression=function(node){this.word("module",!0),this.space(),this.tokenChar(123),this.indent();const{body}=node;(body.body.length||body.directives.length)&&this.newline();this.print(body,node),this.dedent(),this.rightBrace(node)},exports.NewExpression=function(node,parent){if(this.word("new"),this.space(),this.print(node.callee,node),this.format.minified&&0===node.arguments.length&&!node.optional&&!isCallExpression(parent,{callee:node})&&!isMemberExpression(parent)&&!isNewExpression(parent))return;this.print(node.typeArguments,node),this.print(node.typeParameters,node),node.optional&&this.token("?.");this.tokenChar(40),this.printList(node.arguments,node),this.rightParens(node)},exports.OptionalCallExpression=function(node){this.print(node.callee,node),this.print(node.typeParameters,node),node.optional&&this.token("?.");this.print(node.typeArguments,node),this.tokenChar(40),this.printList(node.arguments,node),this.rightParens(node)},exports.OptionalMemberExpression=function(node){let{computed}=node;const{optional,property}=node;if(this.print(node.object,node),!computed&&isMemberExpression(property))throw new TypeError("Got a MemberExpression for MemberExpression property");isLiteral(property)&&"number"==typeof property.value&&(computed=!0);optional&&this.token("?.");computed?(this.tokenChar(91),this.print(property,node),this.tokenChar(93)):(optional||this.tokenChar(46),this.print(property,node))},exports.ParenthesizedExpression=function(node){this.tokenChar(40),this.print(node.expression,node),this.rightParens(node)},exports.PrivateName=function(node){this.tokenChar(35),this.print(node.id,node)},exports.SequenceExpression=function(node){this.printList(node.expressions,node)},exports.Super=function(){this.word("super")},exports.ThisExpression=function(){this.word("this")},exports.UnaryExpression=function(node){const{operator}=node;"void"===operator||"delete"===operator||"typeof"===operator||"throw"===operator?(this.word(operator),this.space()):this.token(operator);this.print(node.argument,node)},exports.UpdateExpression=function(node){node.prefix?(this.token(node.operator),this.print(node.argument,node)):(this.printTerminatorless(node.argument,node,!0),this.token(node.operator))},exports.V8IntrinsicIdentifier=function(node){this.tokenChar(37),this.word(node.name)},exports.YieldExpression=function(node){this.word("yield",!0),node.delegate?(this.tokenChar(42),node.argument&&(this.space(),this.print(node.argument,node))):node.argument&&(this.space(),this.printTerminatorless(node.argument,node,!1))},exports._shouldPrintDecoratorsBeforeExport=function(node){if("boolean"==typeof this.format.decoratorsBeforeExport)return this.format.decoratorsBeforeExport;return"number"==typeof node.start&&node.start===node.declaration.start};var _t=__nested_webpack_require_309285__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),n=__nested_webpack_require_309285__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/node/index.js");const{isCallExpression,isLiteral,isMemberExpression,isNewExpression}=_t;function isDecoratorMemberExpression(node){switch(node.type){case"Identifier":return!0;case"MemberExpression":return!node.computed&&"Identifier"===node.property.type&&isDecoratorMemberExpression(node.object);default:return!1}}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/flow.js":(__unused_webpack_module,exports,__nested_webpack_require_315410__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AnyTypeAnnotation=function(){this.word("any")},exports.ArrayTypeAnnotation=function(node){this.print(node.elementType,node,!0),this.tokenChar(91),this.tokenChar(93)},exports.BooleanLiteralTypeAnnotation=function(node){this.word(node.value?"true":"false")},exports.BooleanTypeAnnotation=function(){this.word("boolean")},exports.DeclareClass=function(node,parent){isDeclareExportDeclaration(parent)||(this.word("declare"),this.space());this.word("class"),this.space(),this._interfaceish(node)},exports.DeclareExportAllDeclaration=function(node){this.word("declare"),this.space(),_modules.ExportAllDeclaration.call(this,node)},exports.DeclareExportDeclaration=function(node){this.word("declare"),this.space(),this.word("export"),this.space(),node.default&&(this.word("default"),this.space());FlowExportDeclaration.call(this,node)},exports.DeclareFunction=function(node,parent){isDeclareExportDeclaration(parent)||(this.word("declare"),this.space());this.word("function"),this.space(),this.print(node.id,node),this.print(node.id.typeAnnotation.typeAnnotation,node),node.predicate&&(this.space(),this.print(node.predicate,node));this.semicolon()},exports.DeclareInterface=function(node){this.word("declare"),this.space(),this.InterfaceDeclaration(node)},exports.DeclareModule=function(node){this.word("declare"),this.space(),this.word("module"),this.space(),this.print(node.id,node),this.space(),this.print(node.body,node)},exports.DeclareModuleExports=function(node){this.word("declare"),this.space(),this.word("module"),this.tokenChar(46),this.word("exports"),this.print(node.typeAnnotation,node)},exports.DeclareOpaqueType=function(node,parent){isDeclareExportDeclaration(parent)||(this.word("declare"),this.space());this.OpaqueType(node)},exports.DeclareTypeAlias=function(node){this.word("declare"),this.space(),this.TypeAlias(node)},exports.DeclareVariable=function(node,parent){isDeclareExportDeclaration(parent)||(this.word("declare"),this.space());this.word("var"),this.space(),this.print(node.id,node),this.print(node.id.typeAnnotation,node),this.semicolon()},exports.DeclaredPredicate=function(node){this.tokenChar(37),this.word("checks"),this.tokenChar(40),this.print(node.value,node),this.tokenChar(41)},exports.EmptyTypeAnnotation=function(){this.word("empty")},exports.EnumBooleanBody=function(node){const{explicitType}=node;enumExplicitType(this,"boolean",explicitType),enumBody(this,node)},exports.EnumBooleanMember=function(node){enumInitializedMember(this,node)},exports.EnumDeclaration=function(node){const{id,body}=node;this.word("enum"),this.space(),this.print(id,node),this.print(body,node)},exports.EnumDefaultedMember=function(node){const{id}=node;this.print(id,node),this.tokenChar(44)},exports.EnumNumberBody=function(node){const{explicitType}=node;enumExplicitType(this,"number",explicitType),enumBody(this,node)},exports.EnumNumberMember=function(node){enumInitializedMember(this,node)},exports.EnumStringBody=function(node){const{explicitType}=node;enumExplicitType(this,"string",explicitType),enumBody(this,node)},exports.EnumStringMember=function(node){enumInitializedMember(this,node)},exports.EnumSymbolBody=function(node){enumExplicitType(this,"symbol",!0),enumBody(this,node)},exports.ExistsTypeAnnotation=function(){this.tokenChar(42)},exports.FunctionTypeAnnotation=function(node,parent){this.print(node.typeParameters,node),this.tokenChar(40),node.this&&(this.word("this"),this.tokenChar(58),this.space(),this.print(node.this.typeAnnotation,node),(node.params.length||node.rest)&&(this.tokenChar(44),this.space()));this.printList(node.params,node),node.rest&&(node.params.length&&(this.tokenChar(44),this.space()),this.token("..."),this.print(node.rest,node));this.tokenChar(41);const type=null==parent?void 0:parent.type;null!=type&&("ObjectTypeCallProperty"===type||"ObjectTypeInternalSlot"===type||"DeclareFunction"===type||"ObjectTypeProperty"===type&&parent.method)?this.tokenChar(58):(this.space(),this.token("=>"));this.space(),this.print(node.returnType,node)},exports.FunctionTypeParam=function(node){this.print(node.name,node),node.optional&&this.tokenChar(63);node.name&&(this.tokenChar(58),this.space());this.print(node.typeAnnotation,node)},exports.IndexedAccessType=function(node){this.print(node.objectType,node,!0),this.tokenChar(91),this.print(node.indexType,node),this.tokenChar(93)},exports.InferredPredicate=function(){this.tokenChar(37),this.word("checks")},exports.InterfaceDeclaration=function(node){this.word("interface"),this.space(),this._interfaceish(node)},exports.GenericTypeAnnotation=exports.ClassImplements=exports.InterfaceExtends=function(node){this.print(node.id,node),this.print(node.typeParameters,node,!0)},exports.InterfaceTypeAnnotation=function(node){var _node$extends2;this.word("interface"),null!=(_node$extends2=node.extends)&&_node$extends2.length&&(this.space(),this.word("extends"),this.space(),this.printList(node.extends,node));this.space(),this.print(node.body,node)},exports.IntersectionTypeAnnotation=function(node){this.printJoin(node.types,node,{separator:andSeparator})},exports.MixedTypeAnnotation=function(){this.word("mixed")},exports.NullLiteralTypeAnnotation=function(){this.word("null")},exports.NullableTypeAnnotation=function(node){this.tokenChar(63),this.print(node.typeAnnotation,node)},Object.defineProperty(exports,"NumberLiteralTypeAnnotation",{enumerable:!0,get:function(){return _types2.NumericLiteral}}),exports.NumberTypeAnnotation=function(){this.word("number")},exports.ObjectTypeAnnotation=function(node){node.exact?this.token("{|"):this.tokenChar(123);const props=[...node.properties,...node.callProperties||[],...node.indexers||[],...node.internalSlots||[]];props.length&&(this.newline(),this.space(),this.printJoin(props,node,{addNewlines(leading){if(leading&&!props[0])return 1},indent:!0,statement:!0,iterator:()=>{(1!==props.length||node.inexact)&&(this.tokenChar(44),this.space())}}),this.space());node.inexact&&(this.indent(),this.token("..."),props.length&&this.newline(),this.dedent());node.exact?this.token("|}"):this.tokenChar(125)},exports.ObjectTypeCallProperty=function(node){node.static&&(this.word("static"),this.space());this.print(node.value,node)},exports.ObjectTypeIndexer=function(node){node.static&&(this.word("static"),this.space());this._variance(node),this.tokenChar(91),node.id&&(this.print(node.id,node),this.tokenChar(58),this.space());this.print(node.key,node),this.tokenChar(93),this.tokenChar(58),this.space(),this.print(node.value,node)},exports.ObjectTypeInternalSlot=function(node){node.static&&(this.word("static"),this.space());this.tokenChar(91),this.tokenChar(91),this.print(node.id,node),this.tokenChar(93),this.tokenChar(93),node.optional&&this.tokenChar(63);node.method||(this.tokenChar(58),this.space());this.print(node.value,node)},exports.ObjectTypeProperty=function(node){node.proto&&(this.word("proto"),this.space());node.static&&(this.word("static"),this.space());"get"!==node.kind&&"set"!==node.kind||(this.word(node.kind),this.space());this._variance(node),this.print(node.key,node),node.optional&&this.tokenChar(63);node.method||(this.tokenChar(58),this.space());this.print(node.value,node)},exports.ObjectTypeSpreadProperty=function(node){this.token("..."),this.print(node.argument,node)},exports.OpaqueType=function(node){this.word("opaque"),this.space(),this.word("type"),this.space(),this.print(node.id,node),this.print(node.typeParameters,node),node.supertype&&(this.tokenChar(58),this.space(),this.print(node.supertype,node));node.impltype&&(this.space(),this.tokenChar(61),this.space(),this.print(node.impltype,node));this.semicolon()},exports.OptionalIndexedAccessType=function(node){this.print(node.objectType,node),node.optional&&this.token("?.");this.tokenChar(91),this.print(node.indexType,node),this.tokenChar(93)},exports.QualifiedTypeIdentifier=function(node){this.print(node.qualification,node),this.tokenChar(46),this.print(node.id,node)},Object.defineProperty(exports,"StringLiteralTypeAnnotation",{enumerable:!0,get:function(){return _types2.StringLiteral}}),exports.StringTypeAnnotation=function(){this.word("string")},exports.SymbolTypeAnnotation=function(){this.word("symbol")},exports.ThisTypeAnnotation=function(){this.word("this")},exports.TupleTypeAnnotation=function(node){this.tokenChar(91),this.printList(node.types,node),this.tokenChar(93)},exports.TypeAlias=function(node){this.word("type"),this.space(),this.print(node.id,node),this.print(node.typeParameters,node),this.space(),this.tokenChar(61),this.space(),this.print(node.right,node),this.semicolon()},exports.TypeAnnotation=function(node){this.tokenChar(58),this.space(),node.optional&&this.tokenChar(63);this.print(node.typeAnnotation,node)},exports.TypeCastExpression=function(node){this.tokenChar(40),this.print(node.expression,node),this.print(node.typeAnnotation,node),this.tokenChar(41)},exports.TypeParameter=function(node){this._variance(node),this.word(node.name),node.bound&&this.print(node.bound,node);node.default&&(this.space(),this.tokenChar(61),this.space(),this.print(node.default,node))},exports.TypeParameterDeclaration=exports.TypeParameterInstantiation=function(node){this.tokenChar(60),this.printList(node.params,node,{}),this.tokenChar(62)},exports.TypeofTypeAnnotation=function(node){this.word("typeof"),this.space(),this.print(node.argument,node)},exports.UnionTypeAnnotation=function(node){this.printJoin(node.types,node,{separator:orSeparator})},exports.Variance=function(node){"plus"===node.kind?this.tokenChar(43):this.tokenChar(45)},exports.VoidTypeAnnotation=function(){this.word("void")},exports._interfaceish=function(node){var _node$extends;this.print(node.id,node),this.print(node.typeParameters,node),null!=(_node$extends=node.extends)&&_node$extends.length&&(this.space(),this.word("extends"),this.space(),this.printList(node.extends,node));if("DeclareClass"===node.type){var _node$mixins,_node$implements;null!=(_node$mixins=node.mixins)&&_node$mixins.length&&(this.space(),this.word("mixins"),this.space(),this.printList(node.mixins,node)),null!=(_node$implements=node.implements)&&_node$implements.length&&(this.space(),this.word("implements"),this.space(),this.printList(node.implements,node))}this.space(),this.print(node.body,node)},exports._variance=function(node){var _node$variance;const kind=null==(_node$variance=node.variance)?void 0:_node$variance.kind;null!=kind&&("plus"===kind?this.tokenChar(43):"minus"===kind&&this.tokenChar(45))};var _t=__nested_webpack_require_315410__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_modules=__nested_webpack_require_315410__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/modules.js"),_types2=__nested_webpack_require_315410__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/types.js");const{isDeclareExportDeclaration,isStatement}=_t;function enumExplicitType(context,name,hasExplicitType){hasExplicitType&&(context.space(),context.word("of"),context.space(),context.word(name)),context.space()}function enumBody(context,node){const{members}=node;context.token("{"),context.indent(),context.newline();for(const member of members)context.print(member,node),context.newline();node.hasUnknownMembers&&(context.token("..."),context.newline()),context.dedent(),context.token("}")}function enumInitializedMember(context,node){const{id,init}=node;context.print(id,node),context.space(),context.token("="),context.space(),context.print(init,node),context.token(",")}function FlowExportDeclaration(node){if(node.declaration){const declar=node.declaration;this.print(declar,node),isStatement(declar)||this.semicolon()}else this.tokenChar(123),node.specifiers.length&&(this.space(),this.printList(node.specifiers,node),this.space()),this.tokenChar(125),node.source&&(this.space(),this.word("from"),this.space(),this.print(node.source,node)),this.semicolon()}function andSeparator(){this.space(),this.tokenChar(38),this.space()}function orSeparator(){this.space(),this.tokenChar(124),this.space()}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/index.js":(__unused_webpack_module,exports,__nested_webpack_require_327650__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _templateLiterals=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/template-literals.js");Object.keys(_templateLiterals).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_templateLiterals[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _templateLiterals[key]}}))}));var _expressions=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/expressions.js");Object.keys(_expressions).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_expressions[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _expressions[key]}}))}));var _statements=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/statements.js");Object.keys(_statements).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_statements[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _statements[key]}}))}));var _classes=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/classes.js");Object.keys(_classes).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_classes[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _classes[key]}}))}));var _methods=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/methods.js");Object.keys(_methods).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_methods[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _methods[key]}}))}));var _modules=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/modules.js");Object.keys(_modules).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_modules[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _modules[key]}}))}));var _types=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/types.js");Object.keys(_types).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_types[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _types[key]}}))}));var _flow=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/flow.js");Object.keys(_flow).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_flow[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _flow[key]}}))}));var _base=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/base.js");Object.keys(_base).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_base[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _base[key]}}))}));var _jsx=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/jsx.js");Object.keys(_jsx).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_jsx[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _jsx[key]}}))}));var _typescript=__nested_webpack_require_327650__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/typescript.js");Object.keys(_typescript).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_typescript[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _typescript[key]}}))}))},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/jsx.js":(__unused_webpack_module,exports)=>{"use strict";function spaceSeparator(){this.space()}Object.defineProperty(exports,"__esModule",{value:!0}),exports.JSXAttribute=function(node){this.print(node.name,node),node.value&&(this.tokenChar(61),this.print(node.value,node))},exports.JSXClosingElement=function(node){this.token("</"),this.print(node.name,node),this.tokenChar(62)},exports.JSXClosingFragment=function(){this.token("</"),this.tokenChar(62)},exports.JSXElement=function(node){const open=node.openingElement;if(this.print(open,node),open.selfClosing)return;this.indent();for(const child of node.children)this.print(child,node);this.dedent(),this.print(node.closingElement,node)},exports.JSXEmptyExpression=function(){this.printInnerComments()},exports.JSXExpressionContainer=function(node){this.tokenChar(123),this.print(node.expression,node),this.tokenChar(125)},exports.JSXFragment=function(node){this.print(node.openingFragment,node),this.indent();for(const child of node.children)this.print(child,node);this.dedent(),this.print(node.closingFragment,node)},exports.JSXIdentifier=function(node){this.word(node.name)},exports.JSXMemberExpression=function(node){this.print(node.object,node),this.tokenChar(46),this.print(node.property,node)},exports.JSXNamespacedName=function(node){this.print(node.namespace,node),this.tokenChar(58),this.print(node.name,node)},exports.JSXOpeningElement=function(node){this.tokenChar(60),this.print(node.name,node),this.print(node.typeParameters,node),node.attributes.length>0&&(this.space(),this.printJoin(node.attributes,node,{separator:spaceSeparator}));node.selfClosing?(this.space(),this.token("/>")):this.tokenChar(62)},exports.JSXOpeningFragment=function(){this.tokenChar(60),this.tokenChar(62)},exports.JSXSpreadAttribute=function(node){this.tokenChar(123),this.token("..."),this.print(node.argument,node),this.tokenChar(125)},exports.JSXSpreadChild=function(node){this.tokenChar(123),this.token("..."),this.print(node.expression,node),this.tokenChar(125)},exports.JSXText=function(node){const raw=this.getPossibleRaw(node);void 0!==raw?this.token(raw,!0):this.token(node.value,!0)}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/methods.js":(__unused_webpack_module,exports,__nested_webpack_require_334082__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArrowFunctionExpression=function(node,parent){node.async&&(this.word("async",!0),this.space());let firstParam;this.format.retainLines||1!==node.params.length||!isIdentifier(firstParam=node.params[0])||function(node,param){var _param$leadingComment,_param$trailingCommen;return!!(node.typeParameters||node.returnType||node.predicate||param.typeAnnotation||param.optional||null!=(_param$leadingComment=param.leadingComments)&&_param$leadingComment.length||null!=(_param$trailingCommen=param.trailingComments)&&_param$trailingCommen.length)}(node,firstParam)?this._params(node,void 0,parent):this.print(firstParam,node,!0);this._predicate(node,!0),this.space(),this.printInnerComments(),this.token("=>"),this.space(),this.print(node.body,node)},exports.FunctionDeclaration=exports.FunctionExpression=function(node,parent){this._functionHead(node,parent),this.space(),this.print(node.body,node)},exports._functionHead=function(node,parent){node.async&&(this.word("async"),this._endsWithInnerRaw=!1,this.space());this.word("function"),node.generator&&(this._endsWithInnerRaw=!1,this.tokenChar(42));this.space(),node.id&&this.print(node.id,node);this._params(node,node.id,parent),"TSDeclareFunction"!==node.type&&this._predicate(node)},exports._methodHead=function(node){const kind=node.kind,key=node.key;"get"!==kind&&"set"!==kind||(this.word(kind),this.space());node.async&&(this.word("async",!0),this.space());"method"!==kind&&"init"!==kind||node.generator&&this.tokenChar(42);node.computed?(this.tokenChar(91),this.print(key,node),this.tokenChar(93)):this.print(key,node);node.optional&&this.tokenChar(63);this._params(node,node.computed&&"StringLiteral"!==node.key.type?void 0:node.key,void 0)},exports._param=function(parameter,parent){this.printJoin(parameter.decorators,parameter),this.print(parameter,parent),parameter.optional&&this.tokenChar(63);this.print(parameter.typeAnnotation,parameter)},exports._parameters=function(parameters,parent){const paramLength=parameters.length;for(let i=0;i<paramLength;i++)this._param(parameters[i],parent),i<parameters.length-1&&(this.tokenChar(44),this.space())},exports._params=function(node,idNode,parentNode){this.print(node.typeParameters,node);const nameInfo=_getFuncIdName.call(this,idNode,parentNode);nameInfo&&this.sourceIdentifierName(nameInfo.name,nameInfo.pos);this.tokenChar(40),this._parameters(node.params,node),this.tokenChar(41);const noLineTerminator="ArrowFunctionExpression"===node.type;this.print(node.returnType,node,noLineTerminator),this._noLineTerminator=noLineTerminator},exports._predicate=function(node,noLineTerminatorAfter){node.predicate&&(node.returnType||this.tokenChar(58),this.space(),this.print(node.predicate,node,noLineTerminatorAfter))};var _t=__nested_webpack_require_334082__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{isIdentifier}=_t;function _getFuncIdName(idNode,parent){let nameInfo,id=idNode;if(!id&&parent){const parentType=parent.type;"VariableDeclarator"===parentType?id=parent.id:"AssignmentExpression"===parentType||"AssignmentPattern"===parentType?id=parent.left:"ObjectProperty"===parentType||"ClassProperty"===parentType?parent.computed&&"StringLiteral"!==parent.key.type||(id=parent.key):"ClassPrivateProperty"!==parentType&&"ClassAccessorProperty"!==parentType||(id=parent.key)}if(id){var _id$loc,_id$loc2;if("Identifier"===id.type)nameInfo={pos:null==(_id$loc=id.loc)?void 0:_id$loc.start,name:(null==(_id$loc2=id.loc)?void 0:_id$loc2.identifierName)||id.name};else if("PrivateName"===id.type){var _id$loc3;nameInfo={pos:null==(_id$loc3=id.loc)?void 0:_id$loc3.start,name:"#"+id.id.name}}else if("StringLiteral"===id.type){var _id$loc4;nameInfo={pos:null==(_id$loc4=id.loc)?void 0:_id$loc4.start,name:id.value}}return nameInfo}}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/modules.js":(__unused_webpack_module,exports,__nested_webpack_require_338078__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ExportAllDeclaration=function(node){var _node$attributes,_node$assertions;this.word("export"),this.space(),"type"===node.exportKind&&(this.word("type"),this.space());this.tokenChar(42),this.space(),this.word("from"),this.space(),null!=(_node$attributes=node.attributes)&&_node$attributes.length||null!=(_node$assertions=node.assertions)&&_node$assertions.length?(this.print(node.source,node,!0),this.space(),this._printAttributes(node)):this.print(node.source,node);this.semicolon()},exports.ExportDefaultDeclaration=function(node){maybePrintDecoratorsBeforeExport(this,node),this.word("export"),this.noIndentInnerCommentsHere(),this.space(),this.word("default"),this.space();const declar=node.declaration;this.print(declar,node),isStatement(declar)||this.semicolon()},exports.ExportDefaultSpecifier=function(node){this.print(node.exported,node)},exports.ExportNamedDeclaration=function(node){if(maybePrintDecoratorsBeforeExport(this,node),this.word("export"),this.space(),node.declaration){const declar=node.declaration;this.print(declar,node),isStatement(declar)||this.semicolon()}else{"type"===node.exportKind&&(this.word("type"),this.space());const specifiers=node.specifiers.slice(0);let hasSpecial=!1;for(;;){const first=specifiers[0];if(!isExportDefaultSpecifier(first)&&!isExportNamespaceSpecifier(first))break;hasSpecial=!0,this.print(specifiers.shift(),node),specifiers.length&&(this.tokenChar(44),this.space())}var _node$attributes2,_node$assertions2;if((specifiers.length||!specifiers.length&&!hasSpecial)&&(this.tokenChar(123),specifiers.length&&(this.space(),this.printList(specifiers,node),this.space()),this.tokenChar(125)),node.source)this.space(),this.word("from"),this.space(),null!=(_node$attributes2=node.attributes)&&_node$attributes2.length||null!=(_node$assertions2=node.assertions)&&_node$assertions2.length?(this.print(node.source,node,!0),this.space(),this._printAttributes(node)):this.print(node.source,node);this.semicolon()}},exports.ExportNamespaceSpecifier=function(node){this.tokenChar(42),this.space(),this.word("as"),this.space(),this.print(node.exported,node)},exports.ExportSpecifier=function(node){"type"===node.exportKind&&(this.word("type"),this.space());this.print(node.local,node),node.exported&&node.local.name!==node.exported.name&&(this.space(),this.word("as"),this.space(),this.print(node.exported,node))},exports.ImportAttribute=function(node){this.print(node.key),this.tokenChar(58),this.space(),this.print(node.value)},exports.ImportDeclaration=function(node){var _node$attributes3,_node$assertions3;this.word("import"),this.space();const isTypeKind="type"===node.importKind||"typeof"===node.importKind;isTypeKind?(this.noIndentInnerCommentsHere(),this.word(node.importKind),this.space()):node.module&&(this.noIndentInnerCommentsHere(),this.word("module"),this.space());const specifiers=node.specifiers.slice(0),hasSpecifiers=!!specifiers.length;for(;hasSpecifiers;){const first=specifiers[0];if(!isImportDefaultSpecifier(first)&&!isImportNamespaceSpecifier(first))break;this.print(specifiers.shift(),node),specifiers.length&&(this.tokenChar(44),this.space())}specifiers.length?(this.tokenChar(123),this.space(),this.printList(specifiers,node),this.space(),this.tokenChar(125)):isTypeKind&&!hasSpecifiers&&(this.tokenChar(123),this.tokenChar(125));(hasSpecifiers||isTypeKind)&&(this.space(),this.word("from"),this.space());null!=(_node$attributes3=node.attributes)&&_node$attributes3.length||null!=(_node$assertions3=node.assertions)&&_node$assertions3.length?(this.print(node.source,node,!0),this.space(),this._printAttributes(node)):this.print(node.source,node);this.semicolon()},exports.ImportDefaultSpecifier=function(node){this.print(node.local,node)},exports.ImportNamespaceSpecifier=function(node){this.tokenChar(42),this.space(),this.word("as"),this.space(),this.print(node.local,node)},exports.ImportSpecifier=function(node){"type"!==node.importKind&&"typeof"!==node.importKind||(this.word(node.importKind),this.space());this.print(node.imported,node),node.local&&node.local.name!==node.imported.name&&(this.space(),this.word("as"),this.space(),this.print(node.local,node))},exports._printAttributes=function(node){const{importAttributesKeyword}=this.format,{attributes,assertions}=node;!attributes||importAttributesKeyword||warningShown||(warningShown=!0,console.warn('You are using import attributes, without specifying the desired output syntax.\nPlease specify the "importAttributesKeyword" generator option, whose value can be one of:\n - "with"        : `import { a } from "b" with { type: "json" };`\n - "assert"      : `import { a } from "b" assert { type: "json" };`\n - "with-legacy" : `import { a } from "b" with type: "json";`\n'));const useAssertKeyword="assert"===importAttributesKeyword||!importAttributesKeyword&&assertions;if(this.word(useAssertKeyword?"assert":"with"),this.space(),!useAssertKeyword&&"with"!==importAttributesKeyword)return void this.printList(attributes||assertions,node);this.tokenChar(123),this.space(),this.printList(attributes||assertions,node),this.space(),this.tokenChar(125)};var _t=__nested_webpack_require_338078__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{isClassDeclaration,isExportDefaultSpecifier,isExportNamespaceSpecifier,isImportDefaultSpecifier,isImportNamespaceSpecifier,isStatement}=_t;let warningShown=!1;function maybePrintDecoratorsBeforeExport(printer,node){isClassDeclaration(node.declaration)&&printer._shouldPrintDecoratorsBeforeExport(node)&&printer.printJoin(node.declaration.decorators,node)}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/statements.js":(__unused_webpack_module,exports,__nested_webpack_require_343866__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BreakStatement=function(node){this.word("break"),printStatementAfterKeyword(this,node.label,node,!0)},exports.CatchClause=function(node){this.word("catch"),this.space(),node.param&&(this.tokenChar(40),this.print(node.param,node),this.print(node.param.typeAnnotation,node),this.tokenChar(41),this.space());this.print(node.body,node)},exports.ContinueStatement=function(node){this.word("continue"),printStatementAfterKeyword(this,node.label,node,!0)},exports.DebuggerStatement=function(){this.word("debugger"),this.semicolon()},exports.DoWhileStatement=function(node){this.word("do"),this.space(),this.print(node.body,node),this.space(),this.word("while"),this.space(),this.tokenChar(40),this.print(node.test,node),this.tokenChar(41),this.semicolon()},exports.ForOfStatement=exports.ForInStatement=void 0,exports.ForStatement=function(node){this.word("for"),this.space(),this.tokenChar(40),this.inForStatementInitCounter++,this.print(node.init,node),this.inForStatementInitCounter--,this.tokenChar(59),node.test&&(this.space(),this.print(node.test,node));this.tokenChar(59),node.update&&(this.space(),this.print(node.update,node));this.tokenChar(41),this.printBlock(node)},exports.IfStatement=function(node){this.word("if"),this.space(),this.tokenChar(40),this.print(node.test,node),this.tokenChar(41),this.space();const needsBlock=node.alternate&&isIfStatement(getLastStatement(node.consequent));needsBlock&&(this.tokenChar(123),this.newline(),this.indent());this.printAndIndentOnComments(node.consequent,node),needsBlock&&(this.dedent(),this.newline(),this.tokenChar(125));node.alternate&&(this.endsWith(125)&&this.space(),this.word("else"),this.space(),this.printAndIndentOnComments(node.alternate,node))},exports.LabeledStatement=function(node){this.print(node.label,node),this.tokenChar(58),this.space(),this.print(node.body,node)},exports.ReturnStatement=function(node){this.word("return"),printStatementAfterKeyword(this,node.argument,node,!1)},exports.SwitchCase=function(node){node.test?(this.word("case"),this.space(),this.print(node.test,node),this.tokenChar(58)):(this.word("default"),this.tokenChar(58));node.consequent.length&&(this.newline(),this.printSequence(node.consequent,node,{indent:!0}))},exports.SwitchStatement=function(node){this.word("switch"),this.space(),this.tokenChar(40),this.print(node.discriminant,node),this.tokenChar(41),this.space(),this.tokenChar(123),this.printSequence(node.cases,node,{indent:!0,addNewlines(leading,cas){if(!leading&&node.cases[node.cases.length-1]===cas)return-1}}),this.rightBrace(node)},exports.ThrowStatement=function(node){this.word("throw"),printStatementAfterKeyword(this,node.argument,node,!1)},exports.TryStatement=function(node){this.word("try"),this.space(),this.print(node.block,node),this.space(),node.handlers?this.print(node.handlers[0],node):this.print(node.handler,node);node.finalizer&&(this.space(),this.word("finally"),this.space(),this.print(node.finalizer,node))},exports.VariableDeclaration=function(node,parent){node.declare&&(this.word("declare"),this.space());const{kind}=node;this.word(kind,"using"===kind||"await using"===kind),this.space();let hasInits=!1;if(!isFor(parent))for(const declar of node.declarations)declar.init&&(hasInits=!0);if(this.printList(node.declarations,node,{separator:hasInits?function(){this.tokenChar(44),this.newline()}:void 0,indent:node.declarations.length>1}),isFor(parent))if(isForStatement(parent)){if(parent.init===node)return}else if(parent.left===node)return;this.semicolon()},exports.VariableDeclarator=function(node){this.print(node.id,node),node.definite&&this.tokenChar(33);this.print(node.id.typeAnnotation,node),node.init&&(this.space(),this.tokenChar(61),this.space(),this.print(node.init,node))},exports.WhileStatement=function(node){this.word("while"),this.space(),this.tokenChar(40),this.print(node.test,node),this.tokenChar(41),this.printBlock(node)},exports.WithStatement=function(node){this.word("with"),this.space(),this.tokenChar(40),this.print(node.object,node),this.tokenChar(41),this.printBlock(node)};var _t=__nested_webpack_require_343866__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{isFor,isForStatement,isIfStatement,isStatement}=_t;function getLastStatement(statement){const{body}=statement;return!1===isStatement(body)?statement:getLastStatement(body)}function ForXStatement(node){this.word("for"),this.space();const isForOf="ForOfStatement"===node.type;isForOf&&node.await&&(this.word("await"),this.space()),this.noIndentInnerCommentsHere(),this.tokenChar(40),this.print(node.left,node),this.space(),this.word(isForOf?"of":"in"),this.space(),this.print(node.right,node),this.tokenChar(41),this.printBlock(node)}const ForInStatement=ForXStatement;exports.ForInStatement=ForInStatement;const ForOfStatement=ForXStatement;function printStatementAfterKeyword(printer,node,parent,isLabel){node&&(printer.space(),printer.printTerminatorless(node,parent,isLabel)),printer.semicolon()}exports.ForOfStatement=ForOfStatement},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/template-literals.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TaggedTemplateExpression=function(node){this.print(node.tag,node),this.print(node.typeParameters,node),this.print(node.quasi,node)},exports.TemplateElement=function(node,parent){const isFirst=parent.quasis[0]===node,isLast=parent.quasis[parent.quasis.length-1]===node,value=(isFirst?"`":"}")+node.value.raw+(isLast?"`":"${");this.token(value,!0)},exports.TemplateLiteral=function(node){const quasis=node.quasis;for(let i=0;i<quasis.length;i++)this.print(quasis[i],node),i+1<quasis.length&&this.print(node.expressions[i],node)}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/types.js":(__unused_webpack_module,exports,__nested_webpack_require_349843__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArgumentPlaceholder=function(){this.tokenChar(63)},exports.ArrayPattern=exports.ArrayExpression=function(node){const elems=node.elements,len=elems.length;this.tokenChar(91);for(let i=0;i<elems.length;i++){const elem=elems[i];elem?(i>0&&this.space(),this.print(elem,node),i<len-1&&this.tokenChar(44)):this.tokenChar(44)}this.tokenChar(93)},exports.BigIntLiteral=function(node){const raw=this.getPossibleRaw(node);if(!this.format.minified&&void 0!==raw)return void this.word(raw);this.word(node.value+"n")},exports.BooleanLiteral=function(node){this.word(node.value?"true":"false")},exports.DecimalLiteral=function(node){const raw=this.getPossibleRaw(node);if(!this.format.minified&&void 0!==raw)return void this.word(raw);this.word(node.value+"m")},exports.Identifier=function(node){var _node$loc;this.sourceIdentifierName((null==(_node$loc=node.loc)?void 0:_node$loc.identifierName)||node.name),this.word(node.name)},exports.NullLiteral=function(){this.word("null")},exports.NumericLiteral=function(node){const raw=this.getPossibleRaw(node),opts=this.format.jsescOption,value=node.value+"";opts.numbers?this.number(_jsesc(node.value,opts)):null==raw?this.number(value):this.format.minified?this.number(raw.length<value.length?raw:value):this.number(raw)},exports.ObjectPattern=exports.ObjectExpression=function(node){const props=node.properties;this.tokenChar(123),props.length&&(this.space(),this.printList(props,node,{indent:!0,statement:!0}),this.space());this.sourceWithOffset("end",node.loc,0,-1),this.tokenChar(125)},exports.ObjectMethod=function(node){this.printJoin(node.decorators,node),this._methodHead(node),this.space(),this.print(node.body,node)},exports.ObjectProperty=function(node){if(this.printJoin(node.decorators,node),node.computed)this.tokenChar(91),this.print(node.key,node),this.tokenChar(93);else{if(isAssignmentPattern(node.value)&&isIdentifier(node.key)&&node.key.name===node.value.left.name)return void this.print(node.value,node);if(this.print(node.key,node),node.shorthand&&isIdentifier(node.key)&&isIdentifier(node.value)&&node.key.name===node.value.name)return}this.tokenChar(58),this.space(),this.print(node.value,node)},exports.PipelineBareFunction=function(node){this.print(node.callee,node)},exports.PipelinePrimaryTopicReference=function(){this.tokenChar(35)},exports.PipelineTopicExpression=function(node){this.print(node.expression,node)},exports.RecordExpression=function(node){const props=node.properties;let startToken,endToken;if("bar"===this.format.recordAndTupleSyntaxType)startToken="{|",endToken="|}";else{if("hash"!==this.format.recordAndTupleSyntaxType&&null!=this.format.recordAndTupleSyntaxType)throw new Error(`The "recordAndTupleSyntaxType" generator option must be "bar" or "hash" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);startToken="#{",endToken="}"}this.token(startToken),props.length&&(this.space(),this.printList(props,node,{indent:!0,statement:!0}),this.space());this.token(endToken)},exports.RegExpLiteral=function(node){this.word(`/${node.pattern}/${node.flags}`)},exports.SpreadElement=exports.RestElement=function(node){this.token("..."),this.print(node.argument,node)},exports.StringLiteral=function(node){const raw=this.getPossibleRaw(node);if(!this.format.minified&&void 0!==raw)return void this.token(raw);const val=_jsesc(node.value,this.format.jsescOption);this.token(val)},exports.TopicReference=function(){const{topicToken}=this.format;if(!validTopicTokenSet.has(topicToken)){const givenTopicTokenJSON=JSON.stringify(topicToken),validTopics=Array.from(validTopicTokenSet,(v=>JSON.stringify(v)));throw new Error(`The "topicToken" generator option must be one of ${validTopics.join(", ")} (${givenTopicTokenJSON} received instead).`)}this.token(topicToken)},exports.TupleExpression=function(node){const elems=node.elements,len=elems.length;let startToken,endToken;if("bar"===this.format.recordAndTupleSyntaxType)startToken="[|",endToken="|]";else{if("hash"!==this.format.recordAndTupleSyntaxType)throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);startToken="#[",endToken="]"}this.token(startToken);for(let i=0;i<elems.length;i++){const elem=elems[i];elem&&(i>0&&this.space(),this.print(elem,node),i<len-1&&this.tokenChar(44))}this.token(endToken)};var _t=__nested_webpack_require_349843__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_jsesc=__nested_webpack_require_349843__("./node_modules/.pnpm/jsesc@2.5.2/node_modules/jsesc/jsesc.js");const{isAssignmentPattern,isIdentifier}=_t;const validTopicTokenSet=new Set(["^^","@@","^","%","#"])},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/typescript.js":(__unused_webpack_module,exports)=>{"use strict";function tsPrintBraced(printer,members,node){if(printer.token("{"),members.length){printer.indent(),printer.newline();for(const member of members)printer.print(member,node),printer.newline();printer.dedent()}printer.rightBrace(node)}function tsPrintUnionOrIntersectionType(printer,node,sep){printer.printJoin(node.types,node,{separator(){this.space(),this.token(sep),this.space()}})}function tokenIfPlusMinus(self,tok){!0!==tok&&self.token(tok)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.TSAnyKeyword=function(){this.word("any")},exports.TSArrayType=function(node){this.print(node.elementType,node,!0),this.token("[]")},exports.TSSatisfiesExpression=exports.TSAsExpression=function(node){var _expression$trailingC;const{type,expression,typeAnnotation}=node,forceParens=!(null==(_expression$trailingC=expression.trailingComments)||!_expression$trailingC.length);this.print(expression,node,!0,void 0,forceParens),this.space(),this.word("TSAsExpression"===type?"as":"satisfies"),this.space(),this.print(typeAnnotation,node)},exports.TSBigIntKeyword=function(){this.word("bigint")},exports.TSBooleanKeyword=function(){this.word("boolean")},exports.TSCallSignatureDeclaration=function(node){this.tsPrintSignatureDeclarationBase(node),this.tokenChar(59)},exports.TSConditionalType=function(node){this.print(node.checkType),this.space(),this.word("extends"),this.space(),this.print(node.extendsType),this.space(),this.tokenChar(63),this.space(),this.print(node.trueType),this.space(),this.tokenChar(58),this.space(),this.print(node.falseType)},exports.TSConstructSignatureDeclaration=function(node){this.word("new"),this.space(),this.tsPrintSignatureDeclarationBase(node),this.tokenChar(59)},exports.TSConstructorType=function(node){node.abstract&&(this.word("abstract"),this.space());this.word("new"),this.space(),this.tsPrintFunctionOrConstructorType(node)},exports.TSDeclareFunction=function(node,parent){node.declare&&(this.word("declare"),this.space());this._functionHead(node,parent),this.tokenChar(59)},exports.TSDeclareMethod=function(node){this._classMethodHead(node),this.tokenChar(59)},exports.TSEnumDeclaration=function(node){const{declare,const:isConst,id,members}=node;declare&&(this.word("declare"),this.space());isConst&&(this.word("const"),this.space());this.word("enum"),this.space(),this.print(id,node),this.space(),tsPrintBraced(this,members,node)},exports.TSEnumMember=function(node){const{id,initializer}=node;this.print(id,node),initializer&&(this.space(),this.tokenChar(61),this.space(),this.print(initializer,node));this.tokenChar(44)},exports.TSExportAssignment=function(node){this.word("export"),this.space(),this.tokenChar(61),this.space(),this.print(node.expression,node),this.tokenChar(59)},exports.TSExpressionWithTypeArguments=function(node){this.print(node.expression,node),this.print(node.typeParameters,node)},exports.TSExternalModuleReference=function(node){this.token("require("),this.print(node.expression,node),this.tokenChar(41)},exports.TSFunctionType=function(node){this.tsPrintFunctionOrConstructorType(node)},exports.TSImportEqualsDeclaration=function(node){const{isExport,id,moduleReference}=node;isExport&&(this.word("export"),this.space());this.word("import"),this.space(),this.print(id,node),this.space(),this.tokenChar(61),this.space(),this.print(moduleReference,node),this.tokenChar(59)},exports.TSImportType=function(node){const{argument,qualifier,typeParameters}=node;this.word("import"),this.tokenChar(40),this.print(argument,node),this.tokenChar(41),qualifier&&(this.tokenChar(46),this.print(qualifier,node));typeParameters&&this.print(typeParameters,node)},exports.TSIndexSignature=function(node){const{readonly,static:isStatic}=node;isStatic&&(this.word("static"),this.space());readonly&&(this.word("readonly"),this.space());this.tokenChar(91),this._parameters(node.parameters,node),this.tokenChar(93),this.print(node.typeAnnotation,node),this.tokenChar(59)},exports.TSIndexedAccessType=function(node){this.print(node.objectType,node,!0),this.tokenChar(91),this.print(node.indexType,node),this.tokenChar(93)},exports.TSInferType=function(node){this.token("infer"),this.space(),this.print(node.typeParameter)},exports.TSInstantiationExpression=function(node){this.print(node.expression,node),this.print(node.typeParameters,node)},exports.TSInterfaceBody=function(node){this.tsPrintTypeLiteralOrInterfaceBody(node.body,node)},exports.TSInterfaceDeclaration=function(node){const{declare,id,typeParameters,extends:extendz,body}=node;declare&&(this.word("declare"),this.space());this.word("interface"),this.space(),this.print(id,node),this.print(typeParameters,node),null!=extendz&&extendz.length&&(this.space(),this.word("extends"),this.space(),this.printList(extendz,node));this.space(),this.print(body,node)},exports.TSIntersectionType=function(node){tsPrintUnionOrIntersectionType(this,node,"&")},exports.TSIntrinsicKeyword=function(){this.word("intrinsic")},exports.TSLiteralType=function(node){this.print(node.literal,node)},exports.TSMappedType=function(node){const{nameType,optional,readonly,typeParameter}=node;this.tokenChar(123),this.space(),readonly&&(tokenIfPlusMinus(this,readonly),this.word("readonly"),this.space());this.tokenChar(91),this.word(typeParameter.name),this.space(),this.word("in"),this.space(),this.print(typeParameter.constraint,typeParameter),nameType&&(this.space(),this.word("as"),this.space(),this.print(nameType,node));this.tokenChar(93),optional&&(tokenIfPlusMinus(this,optional),this.tokenChar(63));this.tokenChar(58),this.space(),this.print(node.typeAnnotation,node),this.space(),this.tokenChar(125)},exports.TSMethodSignature=function(node){const{kind}=node;"set"!==kind&&"get"!==kind||(this.word(kind),this.space());this.tsPrintPropertyOrMethodName(node),this.tsPrintSignatureDeclarationBase(node),this.tokenChar(59)},exports.TSModuleBlock=function(node){tsPrintBraced(this,node.body,node)},exports.TSModuleDeclaration=function(node){const{declare,id}=node;declare&&(this.word("declare"),this.space());node.global||(this.word("Identifier"===id.type?"namespace":"module"),this.space());if(this.print(id,node),!node.body)return void this.tokenChar(59);let body=node.body;for(;"TSModuleDeclaration"===body.type;)this.tokenChar(46),this.print(body.id,body),body=body.body;this.space(),this.print(body,node)},exports.TSNamedTupleMember=function(node){this.print(node.label,node),node.optional&&this.tokenChar(63);this.tokenChar(58),this.space(),this.print(node.elementType,node)},exports.TSNamespaceExportDeclaration=function(node){this.word("export"),this.space(),this.word("as"),this.space(),this.word("namespace"),this.space(),this.print(node.id,node)},exports.TSNeverKeyword=function(){this.word("never")},exports.TSNonNullExpression=function(node){this.print(node.expression,node),this.tokenChar(33)},exports.TSNullKeyword=function(){this.word("null")},exports.TSNumberKeyword=function(){this.word("number")},exports.TSObjectKeyword=function(){this.word("object")},exports.TSOptionalType=function(node){this.print(node.typeAnnotation,node),this.tokenChar(63)},exports.TSParameterProperty=function(node){node.accessibility&&(this.word(node.accessibility),this.space());node.readonly&&(this.word("readonly"),this.space());this._param(node.parameter)},exports.TSParenthesizedType=function(node){this.tokenChar(40),this.print(node.typeAnnotation,node),this.tokenChar(41)},exports.TSPropertySignature=function(node){const{readonly,initializer}=node;readonly&&(this.word("readonly"),this.space());this.tsPrintPropertyOrMethodName(node),this.print(node.typeAnnotation,node),initializer&&(this.space(),this.tokenChar(61),this.space(),this.print(initializer,node));this.tokenChar(59)},exports.TSQualifiedName=function(node){this.print(node.left,node),this.tokenChar(46),this.print(node.right,node)},exports.TSRestType=function(node){this.token("..."),this.print(node.typeAnnotation,node)},exports.TSStringKeyword=function(){this.word("string")},exports.TSSymbolKeyword=function(){this.word("symbol")},exports.TSThisType=function(){this.word("this")},exports.TSTupleType=function(node){this.tokenChar(91),this.printList(node.elementTypes,node),this.tokenChar(93)},exports.TSTypeAliasDeclaration=function(node){const{declare,id,typeParameters,typeAnnotation}=node;declare&&(this.word("declare"),this.space());this.word("type"),this.space(),this.print(id,node),this.print(typeParameters,node),this.space(),this.tokenChar(61),this.space(),this.print(typeAnnotation,node),this.tokenChar(59)},exports.TSTypeAnnotation=function(node){this.tokenChar(58),this.space(),node.optional&&this.tokenChar(63);this.print(node.typeAnnotation,node)},exports.TSTypeAssertion=function(node){const{typeAnnotation,expression}=node;this.tokenChar(60),this.print(typeAnnotation,node),this.tokenChar(62),this.space(),this.print(expression,node)},exports.TSTypeLiteral=function(node){this.tsPrintTypeLiteralOrInterfaceBody(node.members,node)},exports.TSTypeOperator=function(node){this.word(node.operator),this.space(),this.print(node.typeAnnotation,node)},exports.TSTypeParameter=function(node){node.in&&(this.word("in"),this.space());node.out&&(this.word("out"),this.space());this.word(node.name),node.constraint&&(this.space(),this.word("extends"),this.space(),this.print(node.constraint,node));node.default&&(this.space(),this.tokenChar(61),this.space(),this.print(node.default,node))},exports.TSTypeParameterDeclaration=exports.TSTypeParameterInstantiation=function(node,parent){this.tokenChar(60),this.printList(node.params,node,{}),"ArrowFunctionExpression"===parent.type&&1===node.params.length&&this.tokenChar(44);this.tokenChar(62)},exports.TSTypePredicate=function(node){node.asserts&&(this.word("asserts"),this.space());this.print(node.parameterName),node.typeAnnotation&&(this.space(),this.word("is"),this.space(),this.print(node.typeAnnotation.typeAnnotation))},exports.TSTypeQuery=function(node){this.word("typeof"),this.space(),this.print(node.exprName),node.typeParameters&&this.print(node.typeParameters,node)},exports.TSTypeReference=function(node){this.print(node.typeName,node,!0),this.print(node.typeParameters,node,!0)},exports.TSUndefinedKeyword=function(){this.word("undefined")},exports.TSUnionType=function(node){tsPrintUnionOrIntersectionType(this,node,"|")},exports.TSUnknownKeyword=function(){this.word("unknown")},exports.TSVoidKeyword=function(){this.word("void")},exports.tsPrintClassMemberModifiers=function(node){const isField="ClassAccessorProperty"===node.type||"ClassProperty"===node.type;isField&&node.declare&&(this.word("declare"),this.space());node.accessibility&&(this.word(node.accessibility),this.space());node.static&&(this.word("static"),this.space());node.override&&(this.word("override"),this.space());node.abstract&&(this.word("abstract"),this.space());isField&&node.readonly&&(this.word("readonly"),this.space())},exports.tsPrintFunctionOrConstructorType=function(node){const{typeParameters}=node,parameters=node.parameters;this.print(typeParameters,node),this.tokenChar(40),this._parameters(parameters,node),this.tokenChar(41),this.space(),this.token("=>"),this.space();const returnType=node.typeAnnotation;this.print(returnType.typeAnnotation,node)},exports.tsPrintPropertyOrMethodName=function(node){node.computed&&this.tokenChar(91);this.print(node.key,node),node.computed&&this.tokenChar(93);node.optional&&this.tokenChar(63)},exports.tsPrintSignatureDeclarationBase=function(node){const{typeParameters}=node,parameters=node.parameters;this.print(typeParameters,node),this.tokenChar(40),this._parameters(parameters,node),this.tokenChar(41);const returnType=node.typeAnnotation;this.print(returnType,node)},exports.tsPrintTypeLiteralOrInterfaceBody=function(members,node){tsPrintBraced(this,members,node)}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_366549__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CodeGenerator=void 0,exports.default=function(ast,opts,code){return new Generator(ast,opts,code).generate()};var _sourceMap=__nested_webpack_require_366549__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/source-map.js"),_printer=__nested_webpack_require_366549__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/printer.js");class Generator extends _printer.default{constructor(ast,opts={},code){const format=function(code,opts){const format={auxiliaryCommentBefore:opts.auxiliaryCommentBefore,auxiliaryCommentAfter:opts.auxiliaryCommentAfter,shouldPrintComment:opts.shouldPrintComment,retainLines:opts.retainLines,retainFunctionParens:opts.retainFunctionParens,comments:null==opts.comments||opts.comments,compact:opts.compact,minified:opts.minified,concise:opts.concise,indent:{adjustMultilineComment:!0,style:"  "},jsescOption:Object.assign({quotes:"double",wrap:!0,minimal:!1},opts.jsescOption),recordAndTupleSyntaxType:opts.recordAndTupleSyntaxType,topicToken:opts.topicToken,importAttributesKeyword:opts.importAttributesKeyword};format.decoratorsBeforeExport=opts.decoratorsBeforeExport,format.jsescOption.json=opts.jsonCompatibleStrings,format.minified?(format.compact=!0,format.shouldPrintComment=format.shouldPrintComment||(()=>format.comments)):format.shouldPrintComment=format.shouldPrintComment||(value=>format.comments||value.includes("@license")||value.includes("@preserve"));"auto"===format.compact&&(format.compact="string"==typeof code&&code.length>5e5,format.compact&&console.error(`[BABEL] Note: The code generator has deoptimised the styling of ${opts.filename} as it exceeds the max of 500KB.`));format.compact&&(format.indent.adjustMultilineComment=!1);const{auxiliaryCommentBefore,auxiliaryCommentAfter,shouldPrintComment}=format;auxiliaryCommentBefore&&!shouldPrintComment(auxiliaryCommentBefore)&&(format.auxiliaryCommentBefore=void 0);auxiliaryCommentAfter&&!shouldPrintComment(auxiliaryCommentAfter)&&(format.auxiliaryCommentAfter=void 0);return format}(code,opts);super(format,opts.sourceMaps?new _sourceMap.default(opts,code):null),this.ast=void 0,this.ast=ast}generate(){return super.generate(this.ast)}}exports.CodeGenerator=class{constructor(ast,opts,code){this._generator=void 0,this._generator=new Generator(ast,opts,code)}generate(){return this._generator.generate()}}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/node/index.js":(__unused_webpack_module,exports,__nested_webpack_require_369117__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.needsParens=function(node,parent,printStack){if(!parent)return!1;if(isNewExpression(parent)&&parent.callee===node&&isOrHasCallExpression(node))return!0;return find(expandedParens,node,parent,printStack)},exports.needsWhitespace=needsWhitespace,exports.needsWhitespaceAfter=function(node,parent){return needsWhitespace(node,parent,2)},exports.needsWhitespaceBefore=function(node,parent){return needsWhitespace(node,parent,1)};var whitespace=__nested_webpack_require_369117__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/node/whitespace.js"),parens=__nested_webpack_require_369117__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/node/parentheses.js"),_t=__nested_webpack_require_369117__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{FLIPPED_ALIAS_KEYS,isCallExpression,isExpressionStatement,isMemberExpression,isNewExpression}=_t;function expandAliases(obj){const newObj={};function add(type,func){const fn=newObj[type];newObj[type]=fn?function(node,parent,stack){const result=fn(node,parent,stack);return null==result?func(node,parent,stack):result}:func}for(const type of Object.keys(obj)){const aliases=FLIPPED_ALIAS_KEYS[type];if(aliases)for(const alias of aliases)add(alias,obj[type]);else add(type,obj[type])}return newObj}const expandedParens=expandAliases(parens),expandedWhitespaceNodes=expandAliases(whitespace.nodes);function find(obj,node,parent,printStack){const fn=obj[node.type];return fn?fn(node,parent,printStack):null}function isOrHasCallExpression(node){return!!isCallExpression(node)||isMemberExpression(node)&&isOrHasCallExpression(node.object)}function needsWhitespace(node,parent,type){if(!node)return!1;isExpressionStatement(node)&&(node=node.expression);const flag=find(expandedWhitespaceNodes,node,parent);return"number"==typeof flag&&0!=(flag&type)}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/node/parentheses.js":(__unused_webpack_module,exports,__nested_webpack_require_371197__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArrowFunctionExpression=function(node,parent){return isExportDeclaration(parent)||ConditionalExpression(node,parent)},exports.AssignmentExpression=function(node,parent){return!!isObjectPattern(node.left)||ConditionalExpression(node,parent)},exports.Binary=function(node,parent){if("**"===node.operator&&isBinaryExpression(parent,{operator:"**"}))return parent.left===node;if(isClassExtendsClause(node,parent))return!0;if(hasPostfixPart(node,parent)||isUnaryLike(parent)||isAwaitExpression(parent))return!0;if(isBinary(parent)){const parentOp=parent.operator,parentPos=PRECEDENCE[parentOp],nodeOp=node.operator,nodePos=PRECEDENCE[nodeOp];if(parentPos===nodePos&&parent.right===node&&!isLogicalExpression(parent)||parentPos>nodePos)return!0}},exports.BinaryExpression=function(node,parent){return"in"===node.operator&&(isVariableDeclarator(parent)||isFor(parent))},exports.ClassExpression=function(node,parent,printStack){return isFirstInContext(printStack,5)},exports.ConditionalExpression=ConditionalExpression,exports.DoExpression=function(node,parent,printStack){return!node.async&&isFirstInContext(printStack,1)},exports.FunctionExpression=function(node,parent,printStack){return isFirstInContext(printStack,5)},exports.FunctionTypeAnnotation=function(node,parent,printStack){if(printStack.length<3)return;return isUnionTypeAnnotation(parent)||isIntersectionTypeAnnotation(parent)||isArrayTypeAnnotation(parent)||isTypeAnnotation(parent)&&isArrowFunctionExpression(printStack[printStack.length-3])},exports.Identifier=function(node,parent,printStack){var _node$extra;if(null!=(_node$extra=node.extra)&&_node$extra.parenthesized&&isAssignmentExpression(parent,{left:node})&&(isFunctionExpression(parent.right)||isClassExpression(parent.right))&&null==parent.right.id)return!0;if("let"===node.name){return isFirstInContext(printStack,isMemberExpression(parent,{object:node,computed:!0})||isOptionalMemberExpression(parent,{object:node,computed:!0,optional:!1})?57:32)}return"async"===node.name&&isForOfStatement(parent)&&node===parent.left},exports.LogicalExpression=function(node,parent){if(isTSTypeExpression(parent))return!0;switch(node.operator){case"||":return!!isLogicalExpression(parent)&&("??"===parent.operator||"&&"===parent.operator);case"&&":return isLogicalExpression(parent,{operator:"??"});case"??":return isLogicalExpression(parent)&&"??"!==parent.operator}},exports.NullableTypeAnnotation=function(node,parent){return isArrayTypeAnnotation(parent)},exports.ObjectExpression=function(node,parent,printStack){return isFirstInContext(printStack,3)},exports.OptionalIndexedAccessType=function(node,parent){return isIndexedAccessType(parent,{objectType:node})},exports.OptionalCallExpression=exports.OptionalMemberExpression=function(node,parent){return isCallExpression(parent,{callee:node})||isMemberExpression(parent,{object:node})},exports.SequenceExpression=function(node,parent){if(isForStatement(parent)||isThrowStatement(parent)||isReturnStatement(parent)||isIfStatement(parent)&&parent.test===node||isWhileStatement(parent)&&parent.test===node||isForInStatement(parent)&&parent.right===node||isSwitchStatement(parent)&&parent.discriminant===node||isExpressionStatement(parent)&&parent.expression===node)return!1;return!0},exports.TSTypeAssertion=exports.TSSatisfiesExpression=exports.TSAsExpression=function(){return!0},exports.TSInferType=function(node,parent){return isTSArrayType(parent)||isTSOptionalType(parent)},exports.TSInstantiationExpression=function(node,parent){return(isCallExpression(parent)||isOptionalCallExpression(parent)||isNewExpression(parent)||isTSInstantiationExpression(parent))&&!!parent.typeParameters},exports.TSIntersectionType=exports.TSUnionType=function(node,parent){return isTSArrayType(parent)||isTSOptionalType(parent)||isTSIntersectionType(parent)||isTSUnionType(parent)||isTSRestType(parent)},exports.UnaryLike=UnaryLike,exports.IntersectionTypeAnnotation=exports.UnionTypeAnnotation=function(node,parent){return isArrayTypeAnnotation(parent)||isNullableTypeAnnotation(parent)||isIntersectionTypeAnnotation(parent)||isUnionTypeAnnotation(parent)},exports.UpdateExpression=function(node,parent){return hasPostfixPart(node,parent)||isClassExtendsClause(node,parent)},exports.AwaitExpression=exports.YieldExpression=function(node,parent){return isBinary(parent)||isUnaryLike(parent)||hasPostfixPart(node,parent)||isAwaitExpression(parent)&&isYieldExpression(node)||isConditionalExpression(parent)&&node===parent.test||isClassExtendsClause(node,parent)};var _t=__nested_webpack_require_371197__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{isArrayTypeAnnotation,isArrowFunctionExpression,isAssignmentExpression,isAwaitExpression,isBinary,isBinaryExpression,isUpdateExpression,isCallExpression,isClass,isClassExpression,isConditional,isConditionalExpression,isExportDeclaration,isExportDefaultDeclaration,isExpressionStatement,isFor,isForInStatement,isForOfStatement,isForStatement,isFunctionExpression,isIfStatement,isIndexedAccessType,isIntersectionTypeAnnotation,isLogicalExpression,isMemberExpression,isNewExpression,isNullableTypeAnnotation,isObjectPattern,isOptionalCallExpression,isOptionalMemberExpression,isReturnStatement,isSequenceExpression,isSwitchStatement,isTSArrayType,isTSAsExpression,isTSInstantiationExpression,isTSIntersectionType,isTSNonNullExpression,isTSOptionalType,isTSRestType,isTSTypeAssertion,isTSUnionType,isTaggedTemplateExpression,isThrowStatement,isTypeAnnotation,isUnaryLike,isUnionTypeAnnotation,isVariableDeclarator,isWhileStatement,isYieldExpression,isTSSatisfiesExpression}=_t,PRECEDENCE={"||":0,"??":0,"|>":0,"&&":1,"|":2,"^":3,"&":4,"==":5,"===":5,"!=":5,"!==":5,"<":6,">":6,"<=":6,">=":6,in:6,instanceof:6,">>":7,"<<":7,">>>":7,"+":8,"-":8,"*":9,"/":9,"%":9,"**":10};function isTSTypeExpression(node){return isTSAsExpression(node)||isTSSatisfiesExpression(node)||isTSTypeAssertion(node)}const isClassExtendsClause=(node,parent)=>isClass(parent,{superClass:node}),hasPostfixPart=(node,parent)=>(isMemberExpression(parent)||isOptionalMemberExpression(parent))&&parent.object===node||(isCallExpression(parent)||isOptionalCallExpression(parent)||isNewExpression(parent))&&parent.callee===node||isTaggedTemplateExpression(parent)&&parent.tag===node||isTSNonNullExpression(parent);function UnaryLike(node,parent){return hasPostfixPart(node,parent)||isBinaryExpression(parent,{operator:"**",left:node})||isClassExtendsClause(node,parent)}function ConditionalExpression(node,parent){return!!(isUnaryLike(parent)||isBinary(parent)||isConditionalExpression(parent,{test:node})||isAwaitExpression(parent)||isTSTypeExpression(parent))||UnaryLike(node,parent)}function isFirstInContext(printStack,checkParam){const expressionStatement=1&checkParam,arrowBody=2&checkParam,exportDefault=4&checkParam,forHead=8&checkParam,forInHead=16&checkParam,forOfHead=32&checkParam;let i=printStack.length-1;if(i<=0)return;let node=printStack[i];i--;let parent=printStack[i];for(;i>=0;){if(expressionStatement&&isExpressionStatement(parent,{expression:node})||exportDefault&&isExportDefaultDeclaration(parent,{declaration:node})||arrowBody&&isArrowFunctionExpression(parent,{body:node})||forHead&&isForStatement(parent,{init:node})||forInHead&&isForInStatement(parent,{left:node})||forOfHead&&isForOfStatement(parent,{left:node}))return!0;if(!(i>0&&(hasPostfixPart(node,parent)&&!isNewExpression(parent)||isSequenceExpression(parent)&&parent.expressions[0]===node||isUpdateExpression(parent)&&!parent.prefix||isConditional(parent,{test:node})||isBinary(parent,{left:node})||isAssignmentExpression(parent,{left:node}))))return!1;node=parent,i--,parent=printStack[i]}return!1}},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/node/whitespace.js":(__unused_webpack_module,exports,__nested_webpack_require_379100__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.nodes=void 0;var _t=__nested_webpack_require_379100__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{FLIPPED_ALIAS_KEYS,isArrayExpression,isAssignmentExpression,isBinary,isBlockStatement,isCallExpression,isFunction,isIdentifier,isLiteral,isMemberExpression,isObjectExpression,isOptionalCallExpression,isOptionalMemberExpression,isStringLiteral}=_t;function crawlInternal(node,state){return node?(isMemberExpression(node)||isOptionalMemberExpression(node)?(crawlInternal(node.object,state),node.computed&&crawlInternal(node.property,state)):isBinary(node)||isAssignmentExpression(node)?(crawlInternal(node.left,state),crawlInternal(node.right,state)):isCallExpression(node)||isOptionalCallExpression(node)?(state.hasCall=!0,crawlInternal(node.callee,state)):isFunction(node)?state.hasFunction=!0:isIdentifier(node)&&(state.hasHelper=state.hasHelper||node.callee&&isHelper(node.callee)),state):state}function crawl(node){return crawlInternal(node,{hasCall:!1,hasFunction:!1,hasHelper:!1})}function isHelper(node){return!!node&&(isMemberExpression(node)?isHelper(node.object)||isHelper(node.property):isIdentifier(node)?"require"===node.name||95===node.name.charCodeAt(0):isCallExpression(node)?isHelper(node.callee):!(!isBinary(node)&&!isAssignmentExpression(node))&&(isIdentifier(node.left)&&isHelper(node.left)||isHelper(node.right)))}function isType(node){return isLiteral(node)||isObjectExpression(node)||isArrayExpression(node)||isIdentifier(node)||isMemberExpression(node)}const nodes={AssignmentExpression(node){const state=crawl(node.right);if(state.hasCall&&state.hasHelper||state.hasFunction)return state.hasFunction?3:2},SwitchCase:(node,parent)=>(node.consequent.length||parent.cases[0]===node?1:0)|(node.consequent.length||parent.cases[parent.cases.length-1]!==node?0:2),LogicalExpression(node){if(isFunction(node.left)||isFunction(node.right))return 2},Literal(node){if(isStringLiteral(node)&&"use strict"===node.value)return 2},CallExpression(node){if(isFunction(node.callee)||isHelper(node))return 3},OptionalCallExpression(node){if(isFunction(node.callee))return 3},VariableDeclaration(node){for(let i=0;i<node.declarations.length;i++){const declar=node.declarations[i];let enabled=isHelper(declar.id)&&!isType(declar.init);if(!enabled&&declar.init){const state=crawl(declar.init);enabled=isHelper(declar.init)&&state.hasCall||state.hasFunction}if(enabled)return 3}},IfStatement(node){if(isBlockStatement(node.consequent))return 3}};exports.nodes=nodes,nodes.ObjectProperty=nodes.ObjectTypeProperty=nodes.ObjectMethod=function(node,parent){if(parent.properties[0]===node)return 1},nodes.ObjectTypeCallProperty=function(node,parent){var _parent$properties;if(parent.callProperties[0]===node&&(null==(_parent$properties=parent.properties)||!_parent$properties.length))return 1},nodes.ObjectTypeIndexer=function(node,parent){var _parent$properties2,_parent$callPropertie;if(!(parent.indexers[0]!==node||null!=(_parent$properties2=parent.properties)&&_parent$properties2.length||null!=(_parent$callPropertie=parent.callProperties)&&_parent$callPropertie.length))return 1},nodes.ObjectTypeInternalSlot=function(node,parent){var _parent$properties3,_parent$callPropertie2,_parent$indexers;if(!(parent.internalSlots[0]!==node||null!=(_parent$properties3=parent.properties)&&_parent$properties3.length||null!=(_parent$callPropertie2=parent.callProperties)&&_parent$callPropertie2.length||null!=(_parent$indexers=parent.indexers)&&_parent$indexers.length))return 1},[["Function",!0],["Class",!0],["Loop",!0],["LabeledStatement",!0],["SwitchStatement",!0],["TryStatement",!0]].forEach((function([type,amounts]){[type].concat(FLIPPED_ALIAS_KEYS[type]||[]).forEach((function(type){const ret=amounts?3:0;nodes[type]=()=>ret}))}))},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/printer.js":(__unused_webpack_module,exports,__nested_webpack_require_383085__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _buffer=__nested_webpack_require_383085__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/buffer.js"),n=__nested_webpack_require_383085__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/node/index.js"),_t=__nested_webpack_require_383085__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),generatorFunctions=__nested_webpack_require_383085__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/generators/index.js");const{isFunction,isStatement,isClassBody,isTSInterfaceBody,isTSEnumDeclaration}=_t,SCIENTIFIC_NOTATION=/e/i,ZERO_DECIMAL_INTEGER=/\.0+$/,NON_DECIMAL_LITERAL=/^0[box]/,PURE_ANNOTATION_RE=/^\s*[@#]__PURE__\s*$/,HAS_NEWLINE=/[\n\r\u2028\u2029]/,HAS_BlOCK_COMMENT_END=/\*\//,{needsParens}=n;class Printer{constructor(format,map){this.inForStatementInitCounter=0,this._printStack=[],this._indent=0,this._indentChar=0,this._indentRepeat=0,this._insideAux=!1,this._parenPushNewlineState=null,this._noLineTerminator=!1,this._printAuxAfterOnNextUserNode=!1,this._printedComments=new Set,this._endsWithInteger=!1,this._endsWithWord=!1,this._lastCommentLine=0,this._endsWithInnerRaw=!1,this._indentInnerComments=!0,this.format=format,this._buf=new _buffer.default(map),this._indentChar=format.indent.style.charCodeAt(0),this._indentRepeat=format.indent.style.length,this._inputMap=null==map?void 0:map._inputMap}generate(ast){return this.print(ast),this._maybeAddAuxComment(),this._buf.get()}indent(){this.format.compact||this.format.concise||this._indent++}dedent(){this.format.compact||this.format.concise||this._indent--}semicolon(force=!1){this._maybeAddAuxComment(),force?this._appendChar(59):this._queue(59),this._noLineTerminator=!1}rightBrace(node){this.format.minified&&this._buf.removeLastSemicolon(),this.sourceWithOffset("end",node.loc,0,-1),this.tokenChar(125)}rightParens(node){this.sourceWithOffset("end",node.loc,0,-1),this.tokenChar(41)}space(force=!1){if(!this.format.compact)if(force)this._space();else if(this._buf.hasContent()){const lastCp=this.getLastChar();32!==lastCp&&10!==lastCp&&this._space()}}word(str,noLineTerminatorAfter=!1){this._maybePrintInnerComments(),(this._endsWithWord||47===str.charCodeAt(0)&&this.endsWith(47))&&this._space(),this._maybeAddAuxComment(),this._append(str,!1),this._endsWithWord=!0,this._noLineTerminator=noLineTerminatorAfter}number(str){this.word(str),this._endsWithInteger=Number.isInteger(+str)&&!NON_DECIMAL_LITERAL.test(str)&&!SCIENTIFIC_NOTATION.test(str)&&!ZERO_DECIMAL_INTEGER.test(str)&&46!==str.charCodeAt(str.length-1)}token(str,maybeNewline=!1){this._maybePrintInnerComments();const lastChar=this.getLastChar(),strFirst=str.charCodeAt(0);(33===lastChar&&("--"===str||61===strFirst)||43===strFirst&&43===lastChar||45===strFirst&&45===lastChar||46===strFirst&&this._endsWithInteger)&&this._space(),this._maybeAddAuxComment(),this._append(str,maybeNewline),this._noLineTerminator=!1}tokenChar(char){this._maybePrintInnerComments();const lastChar=this.getLastChar();(43===char&&43===lastChar||45===char&&45===lastChar||46===char&&this._endsWithInteger)&&this._space(),this._maybeAddAuxComment(),this._appendChar(char),this._noLineTerminator=!1}newline(i=1,force){if(!(i<=0)){if(!force){if(this.format.retainLines||this.format.compact)return;if(this.format.concise)return void this.space()}i>2&&(i=2),i-=this._buf.getNewlineCount();for(let j=0;j<i;j++)this._newline()}}endsWith(char){return this.getLastChar()===char}getLastChar(){return this._buf.getLastChar()}endsWithCharAndNewline(){return this._buf.endsWithCharAndNewline()}removeTrailingNewline(){this._buf.removeTrailingNewline()}exactSource(loc,cb){loc?(this._catchUp("start",loc),this._buf.exactSource(loc,cb)):cb()}source(prop,loc){loc&&(this._catchUp(prop,loc),this._buf.source(prop,loc))}sourceWithOffset(prop,loc,lineOffset,columnOffset){loc&&(this._catchUp(prop,loc),this._buf.sourceWithOffset(prop,loc,lineOffset,columnOffset))}withSource(prop,loc,cb){loc?(this._catchUp(prop,loc),this._buf.withSource(prop,loc,cb)):cb()}sourceIdentifierName(identifierName,pos){if(!this._buf._canMarkIdName)return;const sourcePosition=this._buf._sourcePosition;sourcePosition.identifierNamePos=pos,sourcePosition.identifierName=identifierName}_space(){this._queue(32)}_newline(){this._queue(10)}_append(str,maybeNewline){this._maybeAddParen(str),this._maybeIndent(str.charCodeAt(0)),this._buf.append(str,maybeNewline),this._endsWithWord=!1,this._endsWithInteger=!1}_appendChar(char){this._maybeAddParenChar(char),this._maybeIndent(char),this._buf.appendChar(char),this._endsWithWord=!1,this._endsWithInteger=!1}_queue(char){this._maybeAddParenChar(char),this._maybeIndent(char),this._buf.queue(char),this._endsWithWord=!1,this._endsWithInteger=!1}_maybeIndent(firstChar){this._indent&&10!==firstChar&&this.endsWith(10)&&this._buf.queueIndentation(this._indentChar,this._getIndent())}_shouldIndent(firstChar){if(this._indent&&10!==firstChar&&this.endsWith(10))return!0}_maybeAddParenChar(char){const parenPushNewlineState=this._parenPushNewlineState;parenPushNewlineState&&32!==char&&(10===char?(this.tokenChar(40),this.indent(),parenPushNewlineState.printed=!0):this._parenPushNewlineState=null)}_maybeAddParen(str){const parenPushNewlineState=this._parenPushNewlineState;if(!parenPushNewlineState)return;const len=str.length;let i;for(i=0;i<len&&32===str.charCodeAt(i);i++)continue;if(i===len)return;const cha=str.charCodeAt(i);if(10!==cha){if(47!==cha||i+1===len)return void(this._parenPushNewlineState=null);const chaPost=str.charCodeAt(i+1);if(42===chaPost){if(PURE_ANNOTATION_RE.test(str.slice(i+2,len-2)))return}else if(47!==chaPost)return void(this._parenPushNewlineState=null)}this.tokenChar(40),this.indent(),parenPushNewlineState.printed=!0}catchUp(line){if(!this.format.retainLines)return;const count=line-this._buf.getCurrentLine();for(let i=0;i<count;i++)this._newline()}_catchUp(prop,loc){var _loc$prop;if(!this.format.retainLines)return;const line=null==loc||null==(_loc$prop=loc[prop])?void 0:_loc$prop.line;if(null!=line){const count=line-this._buf.getCurrentLine();for(let i=0;i<count;i++)this._newline()}}_getIndent(){return this._indentRepeat*this._indent}printTerminatorless(node,parent,isLabel){if(isLabel)this._noLineTerminator=!0,this.print(node,parent);else{const terminatorState={printed:!1};this._parenPushNewlineState=terminatorState,this.print(node,parent),terminatorState.printed&&(this.dedent(),this.newline(),this.tokenChar(41))}}print(node,parent,noLineTerminatorAfter,trailingCommentsLineOffset,forceParens){var _node$extra;if(!node)return;this._endsWithInnerRaw=!1;const nodeType=node.type,format=this.format,oldConcise=format.concise;node._compact&&(format.concise=!0);const printMethod=this[nodeType];if(void 0===printMethod)throw new ReferenceError(`unknown node of type ${JSON.stringify(nodeType)} with constructor ${JSON.stringify(node.constructor.name)}`);this._printStack.push(node);const oldInAux=this._insideAux;this._insideAux=null==node.loc,this._maybeAddAuxComment(this._insideAux&&!oldInAux);const shouldPrintParens=forceParens||format.retainFunctionParens&&"FunctionExpression"===nodeType&&(null==(_node$extra=node.extra)?void 0:_node$extra.parenthesized)||needsParens(node,parent,this._printStack);shouldPrintParens&&(this.tokenChar(40),this._endsWithInnerRaw=!1),this._lastCommentLine=0,this._printLeadingComments(node,parent);const loc="Program"===nodeType||"File"===nodeType?null:node.loc;this.exactSource(loc,printMethod.bind(this,node,parent)),shouldPrintParens?(this._printTrailingComments(node,parent),this.tokenChar(41),this._noLineTerminator=noLineTerminatorAfter):noLineTerminatorAfter&&!this._noLineTerminator?(this._noLineTerminator=!0,this._printTrailingComments(node,parent)):this._printTrailingComments(node,parent,trailingCommentsLineOffset),this._printStack.pop(),format.concise=oldConcise,this._insideAux=oldInAux,this._endsWithInnerRaw=!1}_maybeAddAuxComment(enteredPositionlessNode){enteredPositionlessNode&&this._printAuxBeforeComment(),this._insideAux||this._printAuxAfterComment()}_printAuxBeforeComment(){if(this._printAuxAfterOnNextUserNode)return;this._printAuxAfterOnNextUserNode=!0;const comment=this.format.auxiliaryCommentBefore;comment&&this._printComment({type:"CommentBlock",value:comment},0)}_printAuxAfterComment(){if(!this._printAuxAfterOnNextUserNode)return;this._printAuxAfterOnNextUserNode=!1;const comment=this.format.auxiliaryCommentAfter;comment&&this._printComment({type:"CommentBlock",value:comment},0)}getPossibleRaw(node){const extra=node.extra;if(extra&&null!=extra.raw&&null!=extra.rawValue&&node.value===extra.rawValue)return extra.raw}printJoin(nodes,parent,opts={}){if(null==nodes||!nodes.length)return;let{indent}=opts;if(null==indent&&this.format.retainLines){var _nodes$0$loc;const startLine=null==(_nodes$0$loc=nodes[0].loc)?void 0:_nodes$0$loc.start.line;null!=startLine&&startLine!==this._buf.getCurrentLine()&&(indent=!0)}indent&&this.indent();const newlineOpts={addNewlines:opts.addNewlines,nextNodeStartLine:0},separator=opts.separator?opts.separator.bind(this):null,len=nodes.length;for(let i=0;i<len;i++){const node=nodes[i];if(node&&(opts.statement&&this._printNewline(0===i,newlineOpts),this.print(node,parent,void 0,opts.trailingCommentsLineOffset||0),null==opts.iterator||opts.iterator(node,i),i<len-1&&(null==separator||separator()),opts.statement))if(i+1===len)this.newline(1);else{var _nextNode$loc;const nextNode=nodes[i+1];newlineOpts.nextNodeStartLine=(null==(_nextNode$loc=nextNode.loc)?void 0:_nextNode$loc.start.line)||0,this._printNewline(!0,newlineOpts)}}indent&&this.dedent()}printAndIndentOnComments(node,parent){const indent=node.leadingComments&&node.leadingComments.length>0;indent&&this.indent(),this.print(node,parent),indent&&this.dedent()}printBlock(parent){const node=parent.body;"EmptyStatement"!==node.type&&this.space(),this.print(node,parent)}_printTrailingComments(node,parent,lineOffset){const{innerComments,trailingComments}=node;null!=innerComments&&innerComments.length&&this._printComments(2,innerComments,node,parent,lineOffset),null!=trailingComments&&trailingComments.length&&this._printComments(2,trailingComments,node,parent,lineOffset)}_printLeadingComments(node,parent){const comments=node.leadingComments;null!=comments&&comments.length&&this._printComments(0,comments,node,parent)}_maybePrintInnerComments(){this._endsWithInnerRaw&&this.printInnerComments(),this._endsWithInnerRaw=!0,this._indentInnerComments=!0}printInnerComments(){const node=this._printStack[this._printStack.length-1],comments=node.innerComments;if(null==comments||!comments.length)return;const hasSpace=this.endsWith(32),indent=this._indentInnerComments,printedCommentsCount=this._printedComments.size;indent&&this.indent(),this._printComments(1,comments,node),hasSpace&&printedCommentsCount!==this._printedComments.size&&this.space(),indent&&this.dedent()}noIndentInnerCommentsHere(){this._indentInnerComments=!1}printSequence(nodes,parent,opts={}){opts.statement=!0,null!=opts.indent||(opts.indent=!1),this.printJoin(nodes,parent,opts)}printList(items,parent,opts={}){null==opts.separator&&(opts.separator=commaSeparator),this.printJoin(items,parent,opts)}_printNewline(newLine,opts){const format=this.format;if(format.retainLines||format.compact)return;if(format.concise)return void this.space();if(!newLine)return;const startLine=opts.nextNodeStartLine,lastCommentLine=this._lastCommentLine;if(startLine>0&&lastCommentLine>0){const offset=startLine-lastCommentLine;if(offset>=0)return void this.newline(offset||1)}this._buf.hasContent()&&this.newline(1)}_shouldPrintComment(comment){return comment.ignore||this._printedComments.has(comment)?0:this._noLineTerminator&&(HAS_NEWLINE.test(comment.value)||HAS_BlOCK_COMMENT_END.test(comment.value))?2:(this._printedComments.add(comment),this.format.shouldPrintComment(comment.value)?1:0)}_printComment(comment,skipNewLines){const noLineTerminator=this._noLineTerminator,isBlockComment="CommentBlock"===comment.type,printNewLines=isBlockComment&&1!==skipNewLines&&!this._noLineTerminator;printNewLines&&this._buf.hasContent()&&2!==skipNewLines&&this.newline(1);const lastCharCode=this.getLastChar();let val;if(91!==lastCharCode&&123!==lastCharCode&&this.space(),isBlockComment){if(val=`/*${comment.value}*/`,this.format.indent.adjustMultilineComment){var _comment$loc;const offset=null==(_comment$loc=comment.loc)?void 0:_comment$loc.start.column;if(offset){const newlineRegex=new RegExp("\\n\\s{1,"+offset+"}","g");val=val.replace(newlineRegex,"\n")}let indentSize=this.format.retainLines?0:this._buf.getCurrentColumn();(this._shouldIndent(47)||this.format.retainLines)&&(indentSize+=this._getIndent()),val=val.replace(/\n(?!$)/g,`\n${" ".repeat(indentSize)}`)}}else val=noLineTerminator?`/*${comment.value}*/`:`//${comment.value}`;this.endsWith(47)&&this._space(),this.source("start",comment.loc),this._append(val,isBlockComment),isBlockComment||noLineTerminator||this.newline(1,!0),printNewLines&&3!==skipNewLines&&this.newline(1)}_printComments(type,comments,node,parent,lineOffset=0){const nodeLoc=node.loc,len=comments.length;let hasLoc=!!nodeLoc;const nodeStartLine=hasLoc?nodeLoc.start.line:0,nodeEndLine=hasLoc?nodeLoc.end.line:0;let lastLine=0,leadingCommentNewline=0;const maybeNewline=this._noLineTerminator?function(){}:this.newline.bind(this);for(let i=0;i<len;i++){const comment=comments[i],shouldPrint=this._shouldPrintComment(comment);if(2===shouldPrint){hasLoc=!1;break}if(hasLoc&&comment.loc&&1===shouldPrint){const commentStartLine=comment.loc.start.line,commentEndLine=comment.loc.end.line;if(0===type){let offset=0;0===i?!this._buf.hasContent()||"CommentLine"!==comment.type&&commentStartLine==commentEndLine||(offset=leadingCommentNewline=1):offset=commentStartLine-lastLine,lastLine=commentEndLine,maybeNewline(offset),this._printComment(comment,1),i+1===len&&(maybeNewline(Math.max(nodeStartLine-lastLine,leadingCommentNewline)),lastLine=nodeStartLine)}else if(1===type){const offset=commentStartLine-(0===i?nodeStartLine:lastLine);lastLine=commentEndLine,maybeNewline(offset),this._printComment(comment,1),i+1===len&&(maybeNewline(Math.min(1,nodeEndLine-lastLine)),lastLine=nodeEndLine)}else{const offset=commentStartLine-(0===i?nodeEndLine-lineOffset:lastLine);lastLine=commentEndLine,maybeNewline(offset),this._printComment(comment,1)}}else{if(hasLoc=!1,1!==shouldPrint)continue;if(1===len){const singleLine=comment.loc?comment.loc.start.line===comment.loc.end.line:!HAS_NEWLINE.test(comment.value),shouldSkipNewline=singleLine&&!isStatement(node)&&!isClassBody(parent)&&!isTSInterfaceBody(parent)&&!isTSEnumDeclaration(parent);0===type?this._printComment(comment,shouldSkipNewline&&"ObjectExpression"!==node.type||singleLine&&isFunction(parent,{body:node})?1:0):shouldSkipNewline&&2===type?this._printComment(comment,1):this._printComment(comment,0)}else 1!==type||"ObjectExpression"===node.type&&node.properties.length>1||"ClassBody"===node.type||"TSInterfaceBody"===node.type?this._printComment(comment,0):this._printComment(comment,0===i?2:i===len-1?3:0)}}2===type&&hasLoc&&lastLine&&(this._lastCommentLine=lastLine)}}Object.assign(Printer.prototype,generatorFunctions),Printer.prototype.Noop=function(){};var _default=Printer;function commaSeparator(){this.tokenChar(44),this.space()}exports.default=_default},"./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/source-map.js":(__unused_webpack_module,exports,__nested_webpack_require_398637__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _genMapping=__nested_webpack_require_398637__("./node_modules/.pnpm/@jridgewell+gen-mapping@0.3.3/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.umd.js"),_traceMapping=__nested_webpack_require_398637__("./node_modules/.pnpm/@jridgewell+trace-mapping@0.3.18/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js");exports.default=class{constructor(opts,code){var _opts$sourceFileName;this._map=void 0,this._rawMappings=void 0,this._sourceFileName=void 0,this._lastGenLine=0,this._lastSourceLine=0,this._lastSourceColumn=0,this._inputMap=void 0;const map=this._map=new _genMapping.GenMapping({sourceRoot:opts.sourceRoot});if(this._sourceFileName=null==(_opts$sourceFileName=opts.sourceFileName)?void 0:_opts$sourceFileName.replace(/\\/g,"/"),this._rawMappings=void 0,opts.inputSourceMap){this._inputMap=new _traceMapping.TraceMap(opts.inputSourceMap);const resolvedSources=this._inputMap.resolvedSources;if(resolvedSources.length)for(let i=0;i<resolvedSources.length;i++){var _this$_inputMap$sourc;(0,_genMapping.setSourceContent)(map,resolvedSources[i],null==(_this$_inputMap$sourc=this._inputMap.sourcesContent)?void 0:_this$_inputMap$sourc[i])}}if("string"!=typeof code||opts.inputSourceMap){if("object"==typeof code)for(const sourceFileName of Object.keys(code))(0,_genMapping.setSourceContent)(map,sourceFileName.replace(/\\/g,"/"),code[sourceFileName])}else(0,_genMapping.setSourceContent)(map,this._sourceFileName,code)}get(){return(0,_genMapping.toEncodedMap)(this._map)}getDecoded(){return(0,_genMapping.toDecodedMap)(this._map)}getRawMappings(){return this._rawMappings||(this._rawMappings=(0,_genMapping.allMappings)(this._map))}mark(generated,line,column,identifierName,identifierNamePos,filename){var _originalMapping;let originalMapping;if(this._rawMappings=void 0,null!=line)if(this._inputMap){if(originalMapping=(0,_traceMapping.originalPositionFor)(this._inputMap,{line,column}),!originalMapping.name&&identifierNamePos){const originalIdentifierMapping=(0,_traceMapping.originalPositionFor)(this._inputMap,identifierNamePos);originalIdentifierMapping.name&&(identifierName=originalIdentifierMapping.name)}}else originalMapping={source:(null==filename?void 0:filename.replace(/\\/g,"/"))||this._sourceFileName,line,column};(0,_genMapping.maybeAddMapping)(this._map,{name:identifierName,generated,source:null==(_originalMapping=originalMapping)?void 0:_originalMapping.source,original:originalMapping})}}},"./node_modules/.pnpm/@babel+helper-annotate-as-pure@7.22.5/node_modules/@babel/helper-annotate-as-pure/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_401315__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(pathOrNode){const node=pathOrNode.node||pathOrNode;if(isPureAnnotated(node))return;addComment(node,"leading",PURE_ANNOTATION)};var _t=__nested_webpack_require_401315__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{addComment}=_t,PURE_ANNOTATION="#__PURE__",isPureAnnotated=({leadingComments})=>!!leadingComments&&leadingComments.some((comment=>/[@#]__PURE__/.test(comment.value)))},"./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/decorators.js":(__unused_webpack_module,exports,__nested_webpack_require_402041__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildDecoratedClass=function(ref,path,elements,file){const{node,scope}=path,initializeId=scope.generateUidIdentifier("initialize"),isDeclaration=node.id&&path.isDeclaration(),isStrict=path.isInStrictMode(),{superClass}=node;node.type="ClassDeclaration",node.id||(node.id=_core.types.cloneNode(ref));let superId;superClass&&(superId=scope.generateUidIdentifierBasedOnNode(node.superClass,"super"),node.superClass=superId);const classDecorators=takeDecorators(node),definitions=_core.types.arrayExpression(elements.filter((element=>!element.node.abstract&&"TSIndexSignature"!==element.node.type)).map((path=>function(file,classRef,superRef,path){const isMethod=path.isClassMethod();if(path.isPrivate())throw path.buildCodeFrameError(`Private ${isMethod?"methods":"fields"} in decorated classes are not supported yet.`);if("ClassAccessorProperty"===path.node.type)throw path.buildCodeFrameError('Accessor properties are not supported in 2018-09 decorator transform, please specify { "version": "2021-12" } instead.');if("StaticBlock"===path.node.type)throw path.buildCodeFrameError('Static blocks are not supported in 2018-09 decorator transform, please specify { "version": "2021-12" } instead.');const{node,scope}=path;path.isTSDeclareMethod()||new _helperReplaceSupers.default({methodPath:path,objectRef:classRef,superRef,file,refToPreserve:classRef}).replace();const properties=[prop("kind",_core.types.stringLiteral(_core.types.isClassMethod(node)?node.kind:"field")),prop("decorators",takeDecorators(node)),prop("static",node.static&&_core.types.booleanLiteral(!0)),prop("key",getKey(node))].filter(Boolean);if(_core.types.isClassMethod(node)){const id=node.computed?null:node.key,transformed=_core.types.toExpression(node);properties.push(prop("value",(0,_helperFunctionName.default)({node:transformed,id,scope})||transformed))}else _core.types.isClassProperty(node)&&node.value?properties.push((key="value",body=_core.template.statements.ast`return ${node.value}`,_core.types.objectMethod("method",_core.types.identifier(key),[],_core.types.blockStatement(body)))):properties.push(prop("value",scope.buildUndefinedNode()));var key,body;return path.remove(),_core.types.objectExpression(properties)}(file,node.id,superId,path)))),wrapperCall=_core.template.expression.ast`
    ${function(file){return file.addHelper("decorate")}(file)}(
      ${classDecorators||_core.types.nullLiteral()},
      function (${initializeId}, ${superClass?_core.types.cloneNode(superId):null}) {
        ${node}
        return { F: ${_core.types.cloneNode(node.id)}, d: ${definitions} };
      },
      ${superClass}
    )
  `;isStrict||wrapperCall.arguments[1].body.directives.push(_core.types.directive(_core.types.directiveLiteral("use strict")));let replacement=wrapperCall,classPathDesc="arguments.1.body.body.0";isDeclaration&&(replacement=_core.template.statement.ast`let ${ref} = ${wrapperCall}`,classPathDesc="declarations.0.init."+classPathDesc);return{instanceNodes:[_core.template.statement.ast`${_core.types.cloneNode(initializeId)}(this)`],wrapClass:path=>(path.replaceWith(replacement),path.get(classPathDesc))}},exports.hasDecorators=function(node){return hasOwnDecorators(node)||node.body.body.some(hasOwnDecorators)},exports.hasOwnDecorators=hasOwnDecorators;var _core=__nested_webpack_require_402041__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_helperReplaceSupers=__nested_webpack_require_402041__("./node_modules/.pnpm/@babel+helper-replace-supers@7.22.5/node_modules/@babel/helper-replace-supers/lib/index.js"),_helperFunctionName=__nested_webpack_require_402041__("./node_modules/.pnpm/@babel+helper-function-name@7.22.5/node_modules/@babel/helper-function-name/lib/index.js");function hasOwnDecorators(node){return!(!node.decorators||!node.decorators.length)}function prop(key,value){return value?_core.types.objectProperty(_core.types.identifier(key),value):null}function takeDecorators(node){let result;return node.decorators&&node.decorators.length>0&&(result=_core.types.arrayExpression(node.decorators.map((decorator=>decorator.expression)))),node.decorators=void 0,result}function getKey(node){return node.computed?node.key:_core.types.isIdentifier(node.key)?_core.types.stringLiteral(node.key.name):_core.types.stringLiteral(String(node.key.value))}},"./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/features.js":(__unused_webpack_module,exports,__nested_webpack_require_406600__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FEATURES=void 0,exports.enableFeature=function(file,feature,loose){hasFeature(file,feature)&&!canIgnoreLoose(file,feature)||(file.set(featuresKey,file.get(featuresKey)|feature),"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error"===loose?(setLoose(file,feature,!0),file.set(looseLowPriorityKey,file.get(looseLowPriorityKey)|feature)):"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"===loose?(setLoose(file,feature,!1),file.set(looseLowPriorityKey,file.get(looseLowPriorityKey)|feature)):setLoose(file,feature,loose));let resolvedLoose,higherPriorityPluginName;for(const[mask,name]of featuresSameLoose){if(!hasFeature(file,mask))continue;const loose=isLoose(file,mask);if(!canIgnoreLoose(file,mask)){if(resolvedLoose===!loose)throw new Error("'loose' mode configuration must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled).");resolvedLoose=loose,higherPriorityPluginName=name}}if(void 0!==resolvedLoose)for(const[mask,name]of featuresSameLoose)hasFeature(file,mask)&&isLoose(file,mask)!==resolvedLoose&&(setLoose(file,mask,resolvedLoose),console.warn(`Though the "loose" option was set to "${!resolvedLoose}" in your @babel/preset-env config, it will not be used for ${name} since the "loose" mode option was set to "${resolvedLoose}" for ${higherPriorityPluginName}.\nThe "loose" option must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding\n\t["${name}", { "loose": ${resolvedLoose} }]\nto the "plugins" section of your Babel config.`))},exports.isLoose=isLoose,exports.shouldTransform=function(path,file){let decoratorPath=null,publicFieldPath=null,privateFieldPath=null,privateMethodPath=null,staticBlockPath=null;(0,_decorators.hasOwnDecorators)(path.node)&&(decoratorPath=path.get("decorators.0"));for(const el of path.get("body.body"))!decoratorPath&&(0,_decorators.hasOwnDecorators)(el.node)&&(decoratorPath=el.get("decorators.0")),!publicFieldPath&&el.isClassProperty()&&(publicFieldPath=el),!privateFieldPath&&el.isClassPrivateProperty()&&(privateFieldPath=el),!privateMethodPath&&null!=el.isClassPrivateMethod&&el.isClassPrivateMethod()&&(privateMethodPath=el),!staticBlockPath&&null!=el.isStaticBlock&&el.isStaticBlock()&&(staticBlockPath=el);if(decoratorPath&&privateFieldPath)throw privateFieldPath.buildCodeFrameError("Private fields in decorated classes are not supported yet.");if(decoratorPath&&privateMethodPath)throw privateMethodPath.buildCodeFrameError("Private methods in decorated classes are not supported yet.");if(decoratorPath&&!hasFeature(file,FEATURES.decorators))throw path.buildCodeFrameError('Decorators are not enabled.\nIf you are using ["@babel/plugin-proposal-decorators", { "version": "legacy" }], make sure it comes *before* "@babel/plugin-transform-class-properties" and enable loose mode, like so:\n\t["@babel/plugin-proposal-decorators", { "version": "legacy" }]\n\t["@babel/plugin-transform-class-properties", { "loose": true }]');if(privateMethodPath&&!hasFeature(file,FEATURES.privateMethods))throw privateMethodPath.buildCodeFrameError("Class private methods are not enabled. Please add `@babel/plugin-transform-private-methods` to your configuration.");if((publicFieldPath||privateFieldPath)&&!hasFeature(file,FEATURES.fields)&&!hasFeature(file,FEATURES.privateMethods))throw path.buildCodeFrameError("Class fields are not enabled. Please add `@babel/plugin-transform-class-properties` to your configuration.");if(staticBlockPath&&!hasFeature(file,FEATURES.staticBlocks))throw path.buildCodeFrameError("Static class blocks are not enabled. Please add `@babel/plugin-transform-class-static-block` to your configuration.");if(decoratorPath||privateMethodPath||staticBlockPath)return!0;if((publicFieldPath||privateFieldPath)&&hasFeature(file,FEATURES.fields))return!0;return!1};var _decorators=__nested_webpack_require_406600__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/decorators.js");const FEATURES=Object.freeze({fields:2,privateMethods:4,decorators:8,privateIn:16,staticBlocks:32});exports.FEATURES=FEATURES;const featuresSameLoose=new Map([[FEATURES.fields,"@babel/plugin-transform-class-properties"],[FEATURES.privateMethods,"@babel/plugin-transform-private-methods"],[FEATURES.privateIn,"@babel/plugin-transform-private-property-in-object"]]),featuresKey="@babel/plugin-class-features/featuresKey",looseKey="@babel/plugin-class-features/looseKey",looseLowPriorityKey="@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing";function hasFeature(file,feature){return!!(file.get(featuresKey)&feature)}function isLoose(file,feature){return!!(file.get(looseKey)&feature)}function setLoose(file,feature,loose){loose?file.set(looseKey,file.get(looseKey)|feature):file.set(looseKey,file.get(looseKey)&~feature),file.set(looseLowPriorityKey,file.get(looseLowPriorityKey)&~feature)}function canIgnoreLoose(file,feature){return!!(file.get(looseLowPriorityKey)&feature)}},"./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/fields.js":(__unused_webpack_module,exports,__nested_webpack_require_412246__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildCheckInRHS=buildCheckInRHS,exports.buildFieldsInitNodes=function(ref,superRef,props,privateNamesMap,state,setPublicClassFields,privateFieldsAsProperties,constantSuper,innerBindingRef){let injectSuperRef,needsClassRef=!1;const staticNodes=[],instanceNodes=[],pureStaticNodes=[],getSuperRef=_core.types.isIdentifier(superRef)?()=>superRef:()=>(null!=injectSuperRef||(injectSuperRef=props[0].scope.generateUidIdentifierBasedOnNode(superRef)),injectSuperRef);for(const prop of props){prop.isClassProperty()&&ts.assertFieldTransformed(prop);const isStatic=!(null!=_core.types.isStaticBlock&&_core.types.isStaticBlock(prop.node))&&prop.node.static,isInstance=!isStatic,isPrivate=prop.isPrivate(),isPublic=!isPrivate,isField=prop.isProperty(),isMethod=!isField,isStaticBlock=null==prop.isStaticBlock?void 0:prop.isStaticBlock();if(isStatic||isMethod&&isPrivate||isStaticBlock){const replaced=replaceThisContext(prop,ref,getSuperRef,state,isStaticBlock,constantSuper,innerBindingRef);needsClassRef=needsClassRef||replaced}switch(!0){case isStaticBlock:{const blockBody=prop.node.body;1===blockBody.length&&_core.types.isExpressionStatement(blockBody[0])?staticNodes.push(inheritPropComments(blockBody[0],prop)):staticNodes.push(_core.types.inheritsComments(_core.template.statement.ast`(() => { ${blockBody} })()`,prop.node));break}case isStatic&&isPrivate&&isField&&privateFieldsAsProperties:needsClassRef=!0,staticNodes.push(buildPrivateFieldInitLoose(_core.types.cloneNode(ref),prop,privateNamesMap));break;case isStatic&&isPrivate&&isField&&!privateFieldsAsProperties:needsClassRef=!0,staticNodes.push(buildPrivateStaticFieldInitSpec(prop,privateNamesMap));break;case isStatic&&isPublic&&isField&&setPublicClassFields:if(!isNameOrLength(prop.node)){needsClassRef=!0,staticNodes.push(buildPublicFieldInitLoose(_core.types.cloneNode(ref),prop));break}case isStatic&&isPublic&&isField&&!setPublicClassFields:needsClassRef=!0,staticNodes.push(buildPublicFieldInitSpec(_core.types.cloneNode(ref),prop,state));break;case isInstance&&isPrivate&&isField&&privateFieldsAsProperties:instanceNodes.push(buildPrivateFieldInitLoose(_core.types.thisExpression(),prop,privateNamesMap));break;case isInstance&&isPrivate&&isField&&!privateFieldsAsProperties:instanceNodes.push(buildPrivateInstanceFieldInitSpec(_core.types.thisExpression(),prop,privateNamesMap,state));break;case isInstance&&isPrivate&&isMethod&&privateFieldsAsProperties:instanceNodes.unshift(buildPrivateMethodInitLoose(_core.types.thisExpression(),prop,privateNamesMap)),pureStaticNodes.push(buildPrivateMethodDeclaration(prop,privateNamesMap,privateFieldsAsProperties));break;case isInstance&&isPrivate&&isMethod&&!privateFieldsAsProperties:instanceNodes.unshift(buildPrivateInstanceMethodInitSpec(_core.types.thisExpression(),prop,privateNamesMap,state)),pureStaticNodes.push(buildPrivateMethodDeclaration(prop,privateNamesMap,privateFieldsAsProperties));break;case isStatic&&isPrivate&&isMethod&&!privateFieldsAsProperties:needsClassRef=!0,staticNodes.unshift(buildPrivateStaticFieldInitSpec(prop,privateNamesMap)),pureStaticNodes.push(buildPrivateMethodDeclaration(prop,privateNamesMap,privateFieldsAsProperties));break;case isStatic&&isPrivate&&isMethod&&privateFieldsAsProperties:needsClassRef=!0,staticNodes.unshift(buildPrivateStaticMethodInitLoose(_core.types.cloneNode(ref),prop,state,privateNamesMap)),pureStaticNodes.push(buildPrivateMethodDeclaration(prop,privateNamesMap,privateFieldsAsProperties));break;case isInstance&&isPublic&&isField&&setPublicClassFields:instanceNodes.push(buildPublicFieldInitLoose(_core.types.thisExpression(),prop));break;case isInstance&&isPublic&&isField&&!setPublicClassFields:instanceNodes.push(buildPublicFieldInitSpec(_core.types.thisExpression(),prop,state));break;default:throw new Error("Unreachable.")}}return{staticNodes:staticNodes.filter(Boolean),instanceNodes:instanceNodes.filter(Boolean),pureStaticNodes:pureStaticNodes.filter(Boolean),wrapClass(path){for(const prop of props)prop.node.leadingComments=null,prop.remove();return injectSuperRef&&(path.scope.push({id:_core.types.cloneNode(injectSuperRef)}),path.set("superClass",_core.types.assignmentExpression("=",injectSuperRef,path.node.superClass))),needsClassRef?(path.isClassExpression()?(path.scope.push({id:ref}),path.replaceWith(_core.types.assignmentExpression("=",_core.types.cloneNode(ref),path.node))):path.node.id||(path.node.id=ref),path):path}}},exports.buildPrivateNamesMap=function(props){const privateNamesMap=new Map;for(const prop of props)if(prop.isPrivate()){const{name}=prop.node.key.id,update=privateNamesMap.has(name)?privateNamesMap.get(name):{id:prop.scope.generateUidIdentifier(name),static:prop.node.static,method:!prop.isProperty()};prop.isClassPrivateMethod()&&("get"===prop.node.kind?update.getId=prop.scope.generateUidIdentifier(`get_${name}`):"set"===prop.node.kind?update.setId=prop.scope.generateUidIdentifier(`set_${name}`):"method"===prop.node.kind&&(update.methodId=prop.scope.generateUidIdentifier(name))),privateNamesMap.set(name,update)}return privateNamesMap},exports.buildPrivateNamesNodes=function(privateNamesMap,privateFieldsAsProperties,privateFieldsAsSymbols,state){const initNodes=[];for(const[name,value]of privateNamesMap){const{static:isStatic,method:isMethod,getId,setId}=value,isAccessor=getId||setId,id=_core.types.cloneNode(value.id);let init;privateFieldsAsProperties?init=_core.types.callExpression(state.addHelper("classPrivateFieldLooseKey"),[_core.types.stringLiteral(name)]):privateFieldsAsSymbols?init=_core.types.callExpression(_core.types.identifier("Symbol"),[_core.types.stringLiteral(name)]):isStatic||(init=_core.types.newExpression(_core.types.identifier(!isMethod||isAccessor?"WeakMap":"WeakSet"),[])),init&&((0,_helperAnnotateAsPure.default)(init),initNodes.push(_core.template.statement.ast`var ${id} = ${init}`))}return initNodes},exports.transformPrivateNamesUsage=function(ref,path,privateNamesMap,{privateFieldsAsProperties,noDocumentAll,innerBinding},state){if(!privateNamesMap.size)return;const body=path.get("body"),handler=privateFieldsAsProperties?privateNameHandlerLoose:privateNameHandlerSpec;(0,_helperMemberExpressionToFunctions.default)(body,privateNameVisitor,Object.assign({privateNamesMap,classRef:ref,file:state},handler,{noDocumentAll,innerBinding})),body.traverse(privateInVisitor,{privateNamesMap,classRef:ref,file:state,privateFieldsAsProperties,innerBinding})};var _core=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_helperReplaceSupers=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+helper-replace-supers@7.22.5/node_modules/@babel/helper-replace-supers/lib/index.js"),_helperEnvironmentVisitor=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js"),_helperMemberExpressionToFunctions=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+helper-member-expression-to-functions@7.22.5/node_modules/@babel/helper-member-expression-to-functions/lib/index.js"),_helperOptimiseCallExpression=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+helper-optimise-call-expression@7.22.5/node_modules/@babel/helper-optimise-call-expression/lib/index.js"),_helperAnnotateAsPure=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+helper-annotate-as-pure@7.22.5/node_modules/@babel/helper-annotate-as-pure/lib/index.js"),_helperSkipTransparentExpressionWrappers=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+helper-skip-transparent-expression-wrappers@7.22.5/node_modules/@babel/helper-skip-transparent-expression-wrappers/lib/index.js"),ts=__nested_webpack_require_412246__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/typescript.js");function privateNameVisitorFactory(visitor){const nestedVisitor=_core.traverse.visitors.merge([Object.assign({},visitor),_helperEnvironmentVisitor.default]),privateNameVisitor=Object.assign({},visitor,{Class(path){const{privateNamesMap}=this,body=path.get("body.body"),visiblePrivateNames=new Map(privateNamesMap),redeclared=[];for(const prop of body){if(!prop.isPrivate())continue;const{name}=prop.node.key.id;visiblePrivateNames.delete(name),redeclared.push(name)}redeclared.length&&(path.get("body").traverse(nestedVisitor,Object.assign({},this,{redeclared})),path.traverse(privateNameVisitor,Object.assign({},this,{privateNamesMap:visiblePrivateNames})),path.skipKey("body"))}});return privateNameVisitor}const privateNameVisitor=privateNameVisitorFactory({PrivateName(path,{noDocumentAll}){const{privateNamesMap,redeclared}=this,{node,parentPath}=path;if(!parentPath.isMemberExpression({property:node})&&!parentPath.isOptionalMemberExpression({property:node}))return;const{name}=node.id;privateNamesMap.has(name)&&(redeclared&&redeclared.includes(name)||this.handle(parentPath,noDocumentAll))}});function unshadow(name,scope,innerBinding){for(;null!=(_scope=scope)&&_scope.hasBinding(name)&&!scope.bindingIdentifierEquals(name,innerBinding);){var _scope;scope.rename(name),scope=scope.parent}}function buildCheckInRHS(rhs,file,inRHSIsObject){return inRHSIsObject||null==file.availableHelper||!file.availableHelper("checkInRHS")?rhs:_core.types.callExpression(file.addHelper("checkInRHS"),[rhs])}const privateInVisitor=privateNameVisitorFactory({BinaryExpression(path,{file}){const{operator,left,right}=path.node;if("in"!==operator)return;if(!_core.types.isPrivateName(left))return;const{privateFieldsAsProperties,privateNamesMap,redeclared}=this,{name}=left.id;if(!privateNamesMap.has(name))return;if(redeclared&&redeclared.includes(name))return;if(unshadow(this.classRef.name,path.scope,this.innerBinding),privateFieldsAsProperties){const{id}=privateNamesMap.get(name);return void path.replaceWith(_core.template.expression.ast`
        Object.prototype.hasOwnProperty.call(${buildCheckInRHS(right,file)}, ${_core.types.cloneNode(id)})
      `)}const{id,static:isStatic}=privateNamesMap.get(name);isStatic?path.replaceWith(_core.template.expression.ast`${buildCheckInRHS(right,file)} === ${_core.types.cloneNode(this.classRef)}`):path.replaceWith(_core.template.expression.ast`${_core.types.cloneNode(id)}.has(${buildCheckInRHS(right,file)})`)}}),privateNameHandlerSpec={memoise(member,count){const{scope}=member,{object}=member.node,memo=scope.maybeGenerateMemoised(object);memo&&this.memoiser.set(object,memo,count)},receiver(member){const{object}=member.node;return this.memoiser.has(object)?_core.types.cloneNode(this.memoiser.get(object)):_core.types.cloneNode(object)},get(member){const{classRef,privateNamesMap,file,innerBinding}=this,{name}=member.node.property.id,{id,static:isStatic,method:isMethod,methodId,getId,setId}=privateNamesMap.get(name),isAccessor=getId||setId;if(isStatic){const helperName=isMethod&&!isAccessor?"classStaticPrivateMethodGet":"classStaticPrivateFieldSpecGet";return unshadow(classRef.name,member.scope,innerBinding),_core.types.callExpression(file.addHelper(helperName),[this.receiver(member),_core.types.cloneNode(classRef),_core.types.cloneNode(id)])}if(isMethod){if(isAccessor){if(!getId&&setId){if(file.availableHelper("writeOnlyError"))return _core.types.sequenceExpression([this.receiver(member),_core.types.callExpression(file.addHelper("writeOnlyError"),[_core.types.stringLiteral(`#${name}`)])]);console.warn("@babel/helpers is outdated, update it to silence this warning.")}return _core.types.callExpression(file.addHelper("classPrivateFieldGet"),[this.receiver(member),_core.types.cloneNode(id)])}return _core.types.callExpression(file.addHelper("classPrivateMethodGet"),[this.receiver(member),_core.types.cloneNode(id),_core.types.cloneNode(methodId)])}return _core.types.callExpression(file.addHelper("classPrivateFieldGet"),[this.receiver(member),_core.types.cloneNode(id)])},boundGet(member){return this.memoise(member,1),_core.types.callExpression(_core.types.memberExpression(this.get(member),_core.types.identifier("bind")),[this.receiver(member)])},set(member,value){const{classRef,privateNamesMap,file}=this,{name}=member.node.property.id,{id,static:isStatic,method:isMethod,setId,getId}=privateNamesMap.get(name);if(isStatic){const helperName=isMethod&&!(getId||setId)?"classStaticPrivateMethodSet":"classStaticPrivateFieldSpecSet";return _core.types.callExpression(file.addHelper(helperName),[this.receiver(member),_core.types.cloneNode(classRef),_core.types.cloneNode(id),value])}return isMethod?setId?_core.types.callExpression(file.addHelper("classPrivateFieldSet"),[this.receiver(member),_core.types.cloneNode(id),value]):_core.types.sequenceExpression([this.receiver(member),value,_core.types.callExpression(file.addHelper("readOnlyError"),[_core.types.stringLiteral(`#${name}`)])]):_core.types.callExpression(file.addHelper("classPrivateFieldSet"),[this.receiver(member),_core.types.cloneNode(id),value])},destructureSet(member){const{classRef,privateNamesMap,file}=this,{name}=member.node.property.id,{id,static:isStatic}=privateNamesMap.get(name);if(isStatic){try{var helper=file.addHelper("classStaticPrivateFieldDestructureSet")}catch(_unused){throw new Error("Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \nplease update @babel/helpers to the latest version.")}return _core.types.memberExpression(_core.types.callExpression(helper,[this.receiver(member),_core.types.cloneNode(classRef),_core.types.cloneNode(id)]),_core.types.identifier("value"))}return _core.types.memberExpression(_core.types.callExpression(file.addHelper("classPrivateFieldDestructureSet"),[this.receiver(member),_core.types.cloneNode(id)]),_core.types.identifier("value"))},call(member,args){return this.memoise(member,1),(0,_helperOptimiseCallExpression.default)(this.get(member),this.receiver(member),args,!1)},optionalCall(member,args){return this.memoise(member,1),(0,_helperOptimiseCallExpression.default)(this.get(member),this.receiver(member),args,!0)},delete(){throw new Error("Internal Babel error: deleting private elements is a parsing error.")}},privateNameHandlerLoose={get(member){const{privateNamesMap,file}=this,{object}=member.node,{name}=member.node.property.id;return _core.template.expression`BASE(REF, PROP)[PROP]`({BASE:file.addHelper("classPrivateFieldLooseBase"),REF:_core.types.cloneNode(object),PROP:_core.types.cloneNode(privateNamesMap.get(name).id)})},set(){throw new Error("private name handler with loose = true don't need set()")},boundGet(member){return _core.types.callExpression(_core.types.memberExpression(this.get(member),_core.types.identifier("bind")),[_core.types.cloneNode(member.node.object)])},simpleSet(member){return this.get(member)},destructureSet(member){return this.get(member)},call(member,args){return _core.types.callExpression(this.get(member),args)},optionalCall(member,args){return _core.types.optionalCallExpression(this.get(member),args,!0)},delete(){throw new Error("Internal Babel error: deleting private elements is a parsing error.")}};function buildPrivateFieldInitLoose(ref,prop,privateNamesMap){const{id}=privateNamesMap.get(prop.node.key.id.name),value=prop.node.value||prop.scope.buildUndefinedNode();return inheritPropComments(_core.template.statement.ast`
      Object.defineProperty(${ref}, ${_core.types.cloneNode(id)}, {
        // configurable is false by default
        // enumerable is false by default
        writable: true,
        value: ${value}
      });
    `,prop)}function buildPrivateInstanceFieldInitSpec(ref,prop,privateNamesMap,state){const{id}=privateNamesMap.get(prop.node.key.id.name),value=prop.node.value||prop.scope.buildUndefinedNode();if(!state.availableHelper("classPrivateFieldInitSpec"))return inheritPropComments(_core.template.statement.ast`${_core.types.cloneNode(id)}.set(${ref}, {
          // configurable is always false for private elements
          // enumerable is always false for private elements
          writable: true,
          value: ${value},
        })`,prop);const helper=state.addHelper("classPrivateFieldInitSpec");return inheritPropComments(_core.template.statement.ast`${helper}(
      ${_core.types.thisExpression()},
      ${_core.types.cloneNode(id)},
      {
        writable: true,
        value: ${value}
      },
    )`,prop)}function buildPrivateStaticFieldInitSpec(prop,privateNamesMap){const privateName=privateNamesMap.get(prop.node.key.id.name),{id,getId,setId,initAdded}=privateName,isAccessor=getId||setId;if(!prop.isProperty()&&(initAdded||!isAccessor))return;if(isAccessor)return privateNamesMap.set(prop.node.key.id.name,Object.assign({},privateName,{initAdded:!0})),inheritPropComments(_core.template.statement.ast`
        var ${_core.types.cloneNode(id)} = {
          // configurable is false by default
          // enumerable is false by default
          // writable is false by default
          get: ${getId?getId.name:prop.scope.buildUndefinedNode()},
          set: ${setId?setId.name:prop.scope.buildUndefinedNode()}
        }
      `,prop);const value=prop.node.value||prop.scope.buildUndefinedNode();return inheritPropComments(_core.template.statement.ast`
      var ${_core.types.cloneNode(id)} = {
        // configurable is false by default
        // enumerable is false by default
        writable: true,
        value: ${value}
      };
    `,prop)}function buildPrivateMethodInitLoose(ref,prop,privateNamesMap){const privateName=privateNamesMap.get(prop.node.key.id.name),{methodId,id,getId,setId,initAdded}=privateName;if(initAdded)return;if(methodId)return inheritPropComments(_core.template.statement.ast`
        Object.defineProperty(${ref}, ${id}, {
          // configurable is false by default
          // enumerable is false by default
          // writable is false by default
          value: ${methodId.name}
        });
      `,prop);return getId||setId?(privateNamesMap.set(prop.node.key.id.name,Object.assign({},privateName,{initAdded:!0})),inheritPropComments(_core.template.statement.ast`
        Object.defineProperty(${ref}, ${id}, {
          // configurable is false by default
          // enumerable is false by default
          // writable is false by default
          get: ${getId?getId.name:prop.scope.buildUndefinedNode()},
          set: ${setId?setId.name:prop.scope.buildUndefinedNode()}
        });
      `,prop)):void 0}function buildPrivateInstanceMethodInitSpec(ref,prop,privateNamesMap,state){const privateName=privateNamesMap.get(prop.node.key.id.name),{getId,setId,initAdded}=privateName;if(initAdded)return;return getId||setId?function(ref,prop,privateNamesMap,state){const privateName=privateNamesMap.get(prop.node.key.id.name),{id,getId,setId}=privateName;if(privateNamesMap.set(prop.node.key.id.name,Object.assign({},privateName,{initAdded:!0})),!state.availableHelper("classPrivateFieldInitSpec"))return inheritPropComments(_core.template.statement.ast`
          ${id}.set(${ref}, {
            get: ${getId?getId.name:prop.scope.buildUndefinedNode()},
            set: ${setId?setId.name:prop.scope.buildUndefinedNode()}
          });
        `,prop);const helper=state.addHelper("classPrivateFieldInitSpec");return inheritPropComments(_core.template.statement.ast`${helper}(
      ${_core.types.thisExpression()},
      ${_core.types.cloneNode(id)},
      {
        get: ${getId?getId.name:prop.scope.buildUndefinedNode()},
        set: ${setId?setId.name:prop.scope.buildUndefinedNode()}
      },
    )`,prop)}(ref,prop,privateNamesMap,state):function(ref,prop,privateNamesMap,state){const privateName=privateNamesMap.get(prop.node.key.id.name),{id}=privateName;if(!state.availableHelper("classPrivateMethodInitSpec"))return inheritPropComments(_core.template.statement.ast`${id}.add(${ref})`,prop);const helper=state.addHelper("classPrivateMethodInitSpec");return inheritPropComments(_core.template.statement.ast`${helper}(
      ${_core.types.thisExpression()},
      ${_core.types.cloneNode(id)}
    )`,prop)}(ref,prop,privateNamesMap,state)}function buildPublicFieldInitLoose(ref,prop){const{key,computed}=prop.node,value=prop.node.value||prop.scope.buildUndefinedNode();return inheritPropComments(_core.types.expressionStatement(_core.types.assignmentExpression("=",_core.types.memberExpression(ref,key,computed||_core.types.isLiteral(key)),value)),prop)}function buildPublicFieldInitSpec(ref,prop,state){const{key,computed}=prop.node,value=prop.node.value||prop.scope.buildUndefinedNode();return inheritPropComments(_core.types.expressionStatement(_core.types.callExpression(state.addHelper("defineProperty"),[ref,computed||_core.types.isLiteral(key)?key:_core.types.stringLiteral(key.name),value])),prop)}function buildPrivateStaticMethodInitLoose(ref,prop,state,privateNamesMap){const privateName=privateNamesMap.get(prop.node.key.id.name),{id,methodId,getId,setId,initAdded}=privateName;if(initAdded)return;return getId||setId?(privateNamesMap.set(prop.node.key.id.name,Object.assign({},privateName,{initAdded:!0})),inheritPropComments(_core.template.statement.ast`
        Object.defineProperty(${ref}, ${id}, {
          // configurable is false by default
          // enumerable is false by default
          // writable is false by default
          get: ${getId?getId.name:prop.scope.buildUndefinedNode()},
          set: ${setId?setId.name:prop.scope.buildUndefinedNode()}
        })
      `,prop)):inheritPropComments(_core.template.statement.ast`
      Object.defineProperty(${ref}, ${id}, {
        // configurable is false by default
        // enumerable is false by default
        // writable is false by default
        value: ${methodId.name}
      });
    `,prop)}function buildPrivateMethodDeclaration(prop,privateNamesMap,privateFieldsAsProperties=!1){const privateName=privateNamesMap.get(prop.node.key.id.name),{id,methodId,getId,setId,getterDeclared,setterDeclared,static:isStatic}=privateName,{params,body,generator,async}=prop.node,isGetter=getId&&!getterDeclared&&0===params.length,isSetter=setId&&!setterDeclared&&params.length>0;let declId=methodId;return isGetter?(privateNamesMap.set(prop.node.key.id.name,Object.assign({},privateName,{getterDeclared:!0})),declId=getId):isSetter?(privateNamesMap.set(prop.node.key.id.name,Object.assign({},privateName,{setterDeclared:!0})),declId=setId):isStatic&&!privateFieldsAsProperties&&(declId=id),inheritPropComments(_core.types.functionDeclaration(_core.types.cloneNode(declId),params,body,generator,async),prop)}const thisContextVisitor=_core.traverse.visitors.merge([{UnaryExpression(path){const{node}=path;if("delete"===node.operator){const argument=(0,_helperSkipTransparentExpressionWrappers.skipTransparentExprWrapperNodes)(node.argument);_core.types.isThisExpression(argument)&&path.replaceWith(_core.types.booleanLiteral(!0))}},ThisExpression(path,state){state.needsClassRef=!0,path.replaceWith(_core.types.cloneNode(state.classRef))},MetaProperty(path){const{node,scope}=path;"new"===node.meta.name&&"target"===node.property.name&&path.replaceWith(scope.buildUndefinedNode())}},_helperEnvironmentVisitor.default]),innerReferencesVisitor={ReferencedIdentifier(path,state){path.scope.bindingIdentifierEquals(path.node.name,state.innerBinding)&&(state.needsClassRef=!0,path.node.name=state.classRef.name)}};function replaceThisContext(path,ref,getSuperRef,file,isStaticBlock,constantSuper,innerBindingRef){var _state$classRef;const state={classRef:ref,needsClassRef:!1,innerBinding:innerBindingRef};return new _helperReplaceSupers.default({methodPath:path,constantSuper,file,refToPreserve:ref,getSuperRef,getObjectRef:()=>(state.needsClassRef=!0,null!=_core.types.isStaticBlock&&_core.types.isStaticBlock(path.node)||path.node.static?ref:_core.types.memberExpression(ref,_core.types.identifier("prototype")))}).replace(),(isStaticBlock||path.isProperty())&&path.traverse(thisContextVisitor,state),null!=innerBindingRef&&null!=(_state$classRef=state.classRef)&&_state$classRef.name&&state.classRef.name!==(null==innerBindingRef?void 0:innerBindingRef.name)&&path.traverse(innerReferencesVisitor,state),state.needsClassRef}function isNameOrLength({key,computed}){return"Identifier"===key.type?!computed&&("name"===key.name||"length"===key.name):"StringLiteral"===key.type&&("name"===key.value||"length"===key.value)}function inheritPropComments(node,prop){return _core.types.inheritLeadingComments(node,prop.node),_core.types.inheritInnerComments(node,prop.node),node}},"./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_436893__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"FEATURES",{enumerable:!0,get:function(){return _features.FEATURES}}),Object.defineProperty(exports,"buildCheckInRHS",{enumerable:!0,get:function(){return _fields.buildCheckInRHS}}),exports.createClassFeaturePlugin=function({name,feature,loose,manipulateOptions,api,inherits}){null!=api||(api={assumption:()=>{}});const setPublicClassFields=api.assumption("setPublicClassFields"),privateFieldsAsSymbols=api.assumption("privateFieldsAsSymbols"),privateFieldsAsProperties=api.assumption("privateFieldsAsProperties"),constantSuper=api.assumption("constantSuper"),noDocumentAll=api.assumption("noDocumentAll");if(privateFieldsAsProperties&&privateFieldsAsSymbols)throw new Error('Cannot enable both the "privateFieldsAsProperties" and "privateFieldsAsSymbols" assumptions as the same time.');const privateFieldsAsSymbolsOrProperties=privateFieldsAsProperties||privateFieldsAsSymbols;if(!0===loose){const explicit=[];void 0!==setPublicClassFields&&explicit.push('"setPublicClassFields"'),void 0!==privateFieldsAsProperties&&explicit.push('"privateFieldsAsProperties"'),void 0!==privateFieldsAsSymbols&&explicit.push('"privateFieldsAsSymbols"'),0!==explicit.length&&console.warn(`[${name}]: You are using the "loose: true" option and you are explicitly setting a value for the ${explicit.join(" and ")} assumption${explicit.length>1?"s":""}. The "loose" option can cause incompatibilities with the other class features plugins, so it's recommended that you replace it with the following top-level option:\n\t"assumptions": {\n\t\t"setPublicClassFields": true,\n\t\t"privateFieldsAsSymbols": true\n\t}`)}return{name,manipulateOptions,inherits,pre(file){(0,_features.enableFeature)(file,feature,loose),"number"!=typeof file.get(versionKey)&&file.get(versionKey)&&!_semverV.lt(file.get(versionKey),"7.22.6")||file.set(versionKey,"7.22.6")},visitor:{Class(path,{file}){if("7.22.6"!==file.get(versionKey))return;if(!(0,_features.shouldTransform)(path,file))return;path.isClassDeclaration()&&(0,_typescript.assertFieldTransformed)(path);const loose=(0,_features.isLoose)(file,feature);let constructor;const isDecorated=(0,_decorators.hasDecorators)(path.node),props=[],elements=[],computedPaths=[],privateNames=new Set,body=path.get("body");for(const path of body.get("body")){if((path.isClassProperty()||path.isClassMethod())&&path.node.computed&&computedPaths.push(path),path.isPrivate()){const{name}=path.node.key.id,getName=`get ${name}`,setName=`set ${name}`;if(path.isClassPrivateMethod()){if("get"===path.node.kind){if(privateNames.has(getName)||privateNames.has(name)&&!privateNames.has(setName))throw path.buildCodeFrameError("Duplicate private field");privateNames.add(getName).add(name)}else if("set"===path.node.kind){if(privateNames.has(setName)||privateNames.has(name)&&!privateNames.has(getName))throw path.buildCodeFrameError("Duplicate private field");privateNames.add(setName).add(name)}}else{if(privateNames.has(name)&&!privateNames.has(getName)&&!privateNames.has(setName)||privateNames.has(name)&&(privateNames.has(getName)||privateNames.has(setName)))throw path.buildCodeFrameError("Duplicate private field");privateNames.add(name)}}path.isClassMethod({kind:"constructor"})?constructor=path:(elements.push(path),(path.isProperty()||path.isPrivate()||null!=path.isStaticBlock&&path.isStaticBlock())&&props.push(path))}if(!props.length&&!isDecorated)return;const innerBinding=path.node.id;let ref;!innerBinding||path.isClassExpression()?((0,_helperFunctionName.default)(path),ref=path.scope.generateUidIdentifier("class")):ref=_core.types.cloneNode(path.node.id);const privateNamesMap=(0,_fields.buildPrivateNamesMap)(props),privateNamesNodes=(0,_fields.buildPrivateNamesNodes)(privateNamesMap,null!=privateFieldsAsProperties?privateFieldsAsProperties:loose,null!=privateFieldsAsSymbols&&privateFieldsAsSymbols,file);let keysNodes,staticNodes,instanceNodes,pureStaticNodes,wrapClass;(0,_fields.transformPrivateNamesUsage)(ref,path,privateNamesMap,{privateFieldsAsProperties:null!=privateFieldsAsSymbolsOrProperties?privateFieldsAsSymbolsOrProperties:loose,noDocumentAll,innerBinding},file),isDecorated?(staticNodes=pureStaticNodes=keysNodes=[],({instanceNodes,wrapClass}=(0,_decorators.buildDecoratedClass)(ref,path,elements,file))):(keysNodes=(0,_misc.extractComputedKeys)(path,computedPaths,file),({staticNodes,pureStaticNodes,instanceNodes,wrapClass}=(0,_fields.buildFieldsInitNodes)(ref,path.node.superClass,props,privateNamesMap,file,null!=setPublicClassFields?setPublicClassFields:loose,null!=privateFieldsAsSymbolsOrProperties?privateFieldsAsSymbolsOrProperties:loose,null!=constantSuper?constantSuper:loose,innerBinding))),instanceNodes.length>0&&(0,_misc.injectInitialization)(path,constructor,instanceNodes,((referenceVisitor,state)=>{if(!isDecorated)for(const prop of props)null!=_core.types.isStaticBlock&&_core.types.isStaticBlock(prop.node)||prop.node.static||prop.traverse(referenceVisitor,state)}));const wrappedPath=wrapClass(path);wrappedPath.insertBefore([...privateNamesNodes,...keysNodes]),staticNodes.length>0&&wrappedPath.insertAfter(staticNodes),pureStaticNodes.length>0&&wrappedPath.find((parent=>parent.isStatement()||parent.isDeclaration())).insertAfter(pureStaticNodes)},ExportDefaultDeclaration(path,{file}){{if("7.22.6"!==file.get(versionKey))return;const decl=path.get("declaration");decl.isClassDeclaration()&&(0,_decorators.hasDecorators)(decl.node)&&(decl.node.id?(0,_helperSplitExportDeclaration.default)(path):decl.node.type="ClassExpression")}}}}},Object.defineProperty(exports,"enableFeature",{enumerable:!0,get:function(){return _features.enableFeature}}),Object.defineProperty(exports,"injectInitialization",{enumerable:!0,get:function(){return _misc.injectInitialization}});var _core=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_helperFunctionName=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+helper-function-name@7.22.5/node_modules/@babel/helper-function-name/lib/index.js"),_helperSplitExportDeclaration=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+helper-split-export-declaration@7.22.6/node_modules/@babel/helper-split-export-declaration/lib/index.js"),_semverV=__nested_webpack_require_436893__("./node_modules/.pnpm/@nicolo-ribaudo+semver-v6@6.3.3/node_modules/@nicolo-ribaudo/semver-v6/semver.js"),_fields=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/fields.js"),_decorators=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/decorators.js"),_misc=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/misc.js"),_features=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/features.js"),_typescript=__nested_webpack_require_436893__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/typescript.js");const versionKey="@babel/plugin-class-features/version"},"./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/misc.js":(__unused_webpack_module,exports,__nested_webpack_require_444541__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.extractComputedKeys=function(path,computedPaths,file){const declarations=[],state={classBinding:path.node.id&&path.scope.getBinding(path.node.id.name),file};for(const computedPath of computedPaths){const computedKey=computedPath.get("key");computedKey.isReferencedIdentifier()?handleClassTDZ(computedKey,state):computedKey.traverse(classFieldDefinitionEvaluationTDZVisitor,state);const computedNode=computedPath.node;if(!computedKey.isConstantExpression()){const ident=path.scope.generateUidIdentifierBasedOnNode(computedNode.key);path.scope.push({id:ident,kind:"let"}),declarations.push(_core.types.expressionStatement(_core.types.assignmentExpression("=",_core.types.cloneNode(ident),computedNode.key))),computedNode.key=_core.types.cloneNode(ident)}}return declarations},exports.injectInitialization=function(path,constructor,nodes,renamer){if(!nodes.length)return;const isDerived=!!path.node.superClass;if(!constructor){const newConstructor=_core.types.classMethod("constructor",_core.types.identifier("constructor"),[],_core.types.blockStatement([]));isDerived&&(newConstructor.params=[_core.types.restElement(_core.types.identifier("args"))],newConstructor.body.body.push(_core.template.statement.ast`super(...args)`)),[constructor]=path.get("body").unshiftContainer("body",newConstructor)}renamer&&renamer(referenceVisitor,{scope:constructor.scope});if(isDerived){const bareSupers=[];constructor.traverse(findBareSupers,bareSupers);let isFirst=!0;for(const bareSuper of bareSupers)isFirst?(bareSuper.insertAfter(nodes),isFirst=!1):bareSuper.insertAfter(nodes.map((n=>_core.types.cloneNode(n))))}else constructor.get("body").unshiftContainer("body",nodes)};var _core=__nested_webpack_require_444541__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_helperEnvironmentVisitor=__nested_webpack_require_444541__("./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js");const findBareSupers=_core.traverse.visitors.merge([{Super(path){const{node,parentPath}=path;parentPath.isCallExpression({callee:node})&&this.push(parentPath)}},_helperEnvironmentVisitor.default]),referenceVisitor={"TSTypeAnnotation|TypeAnnotation"(path){path.skip()},ReferencedIdentifier(path,{scope}){scope.hasOwnBinding(path.node.name)&&(scope.rename(path.node.name),path.skip())}};function handleClassTDZ(path,state){if(state.classBinding&&state.classBinding===path.scope.getBinding(path.node.name)){const classNameTDZError=state.file.addHelper("classNameTDZError"),throwNode=_core.types.callExpression(classNameTDZError,[_core.types.stringLiteral(path.node.name)]);path.replaceWith(_core.types.sequenceExpression([throwNode,path.node])),path.skip()}}const classFieldDefinitionEvaluationTDZVisitor={ReferencedIdentifier:handleClassTDZ}},"./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/typescript.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.assertFieldTransformed=function(path){if(path.node.declare)throw path.buildCodeFrameError("TypeScript 'declare' fields must first be transformed by @babel/plugin-transform-typescript.\nIf you have already enabled that plugin (or '@babel/preset-typescript'), make sure that it runs before any plugin related to additional class features:\n - @babel/plugin-transform-class-properties\n - @babel/plugin-transform-private-methods\n - @babel/plugin-proposal-decorators")}},"./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function requeueComputedKeyAndDecorators(path){const{context,node}=path;if(node.computed&&context.maybeQueue(path.get("key")),node.decorators)for(const decorator of path.get("decorators"))context.maybeQueue(decorator)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,exports.requeueComputedKeyAndDecorators=requeueComputedKeyAndDecorators,exports.skipAllButComputedKey=function(path){path.skip(),path.node.computed&&path.context.maybeQueue(path.get("key"))};var _default={FunctionParent(path){path.isArrowFunctionExpression()||(path.skip(),path.isMethod()&&requeueComputedKeyAndDecorators(path))},Property(path){path.isObjectProperty()||(path.skip(),requeueComputedKeyAndDecorators(path))}};exports.default=_default},"./node_modules/.pnpm/@babel+helper-function-name@7.22.5/node_modules/@babel/helper-function-name/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_449236__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function({node,parent,scope,id},localBinding=!1,supportUnicodeId=!1){if(node.id)return;if(!isObjectProperty(parent)&&!isObjectMethod(parent,{kind:"method"})||parent.computed&&!isLiteral(parent.key)){if(isVariableDeclarator(parent)){if(id=parent.id,isIdentifier(id)&&!localBinding){const binding=scope.parent.getBinding(id.name);if(binding&&binding.constant&&scope.getBinding(id.name)===binding)return node.id=cloneNode(id),void(node.id[NOT_LOCAL_BINDING]=!0)}}else if(isAssignmentExpression(parent,{operator:"="}))id=parent.left;else if(!id)return}else id=parent.key;let name;id&&isLiteral(id)?name=function(id){if(isNullLiteral(id))return"null";if(isRegExpLiteral(id))return`_${id.pattern}_${id.flags}`;if(isTemplateLiteral(id))return id.quasis.map((quasi=>quasi.value.raw)).join("");if(void 0!==id.value)return id.value+"";return""}(id):id&&isIdentifier(id)&&(name=id.name);if(void 0===name)return;if(!supportUnicodeId&&isFunction(node)&&/[\uD800-\uDFFF]/.test(name))return;name=toBindingIdentifierName(name);const newId=identifier(name);newId[NOT_LOCAL_BINDING]=!0;return function(state,method,id,scope){if(state.selfReference){if(!scope.hasBinding(id.name)||scope.hasGlobal(id.name)){if(!isFunction(method))return;let build=buildPropertyMethodAssignmentWrapper;method.generator&&(build=buildGeneratorPropertyMethodAssignmentWrapper);const template=build({FUNCTION:method,FUNCTION_ID:id,FUNCTION_KEY:scope.generateUidIdentifier(id.name)}).expression,params=template.callee.body.body[0].params;for(let i=0,len=function(node){const count=node.params.findIndex((param=>isAssignmentPattern(param)||isRestElement(param)));return-1===count?node.params.length:count}(method);i<len;i++)params.push(scope.generateUidIdentifier("x"));return template}scope.rename(id.name)}method.id=id,scope.getProgramParent().references[id.name]=!0}(function(node,name,scope){const state={selfAssignment:!1,selfReference:!1,outerDeclar:scope.getBindingIdentifier(name),name},binding=scope.getOwnBinding(name);binding?"param"===binding.kind&&(state.selfReference=!0):(state.outerDeclar||scope.hasGlobal(name))&&scope.traverse(node,visitor,state);return state}(node,name,scope),node,newId,scope)||node};var _template=__nested_webpack_require_449236__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js"),_t=__nested_webpack_require_449236__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{NOT_LOCAL_BINDING,cloneNode,identifier,isAssignmentExpression,isAssignmentPattern,isFunction,isIdentifier,isLiteral,isNullLiteral,isObjectMethod,isObjectProperty,isRegExpLiteral,isRestElement,isTemplateLiteral,isVariableDeclarator,toBindingIdentifierName}=_t;const buildPropertyMethodAssignmentWrapper=_template.default.statement("\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),buildGeneratorPropertyMethodAssignmentWrapper=_template.default.statement("\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),visitor={"ReferencedIdentifier|BindingIdentifier"(path,state){if(path.node.name!==state.name)return;path.scope.getBindingIdentifier(state.name)===state.outerDeclar&&(state.selfReference=!0,path.stop())}}},"./node_modules/.pnpm/@babel+helper-hoist-variables@7.22.5/node_modules/@babel/helper-hoist-variables/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_453037__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(path,emit,kind="var"){path.traverse(visitor,{kind,emit})};var _t=__nested_webpack_require_453037__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{assignmentExpression,expressionStatement,identifier}=_t,visitor={Scope(path,state){"let"===state.kind&&path.skip()},FunctionParent(path){path.skip()},VariableDeclaration(path,state){if(state.kind&&path.node.kind!==state.kind)return;const nodes=[],declarations=path.get("declarations");let firstId;for(const declar of declarations){firstId=declar.node.id,declar.node.init&&nodes.push(expressionStatement(assignmentExpression("=",declar.node.id,declar.node.init)));for(const name of Object.keys(declar.getBindingIdentifiers()))state.emit(identifier(name),name,null!==declar.node.init)}path.parentPath.isFor({left:path.node})?path.replaceWith(firstId):path.replaceWithMultiple(nodes)}}},"./node_modules/.pnpm/@babel+helper-member-expression-to-functions@7.22.5/node_modules/@babel/helper-member-expression-to-functions/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_454190__)=>{"use strict";function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach((function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}})),n.default=e,Object.freeze(n)}Object.defineProperty(exports,"__esModule",{value:!0});var _t__namespace=_interopNamespace(__nested_webpack_require_454190__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"));function willPathCastToBoolean(path){const maybeWrapped=path,{node,parentPath}=maybeWrapped;if(parentPath.isLogicalExpression()){const{operator,right}=parentPath.node;if("&&"===operator||"||"===operator||"??"===operator&&node===right)return willPathCastToBoolean(parentPath)}if(parentPath.isSequenceExpression()){const{expressions}=parentPath.node;return expressions[expressions.length-1]!==node||willPathCastToBoolean(parentPath)}return parentPath.isConditional({test:node})||parentPath.isUnaryExpression({operator:"!"})||parentPath.isLoop({test:node})}const{LOGICAL_OPERATORS,arrowFunctionExpression,assignmentExpression,binaryExpression,booleanLiteral,callExpression,cloneNode,conditionalExpression,identifier,isMemberExpression,isOptionalCallExpression,isOptionalMemberExpression,isUpdateExpression,logicalExpression,memberExpression,nullLiteral,optionalCallExpression,optionalMemberExpression,sequenceExpression,updateExpression}=_t__namespace;class AssignmentMemoiser{constructor(){this._map=void 0,this._map=new WeakMap}has(key){return this._map.has(key)}get(key){if(!this.has(key))return;const record=this._map.get(key),{value}=record;return record.count--,0===record.count?assignmentExpression("=",value,key):value}set(key,value,count){return this._map.set(key,{count,value})}}function toNonOptional(path,base){const{node}=path;if(isOptionalMemberExpression(node))return memberExpression(base,node.property,node.computed);if(path.isOptionalCallExpression()){const callee=path.get("callee");if(path.node.optional&&callee.isOptionalMemberExpression()){const object=callee.node.object,context=path.scope.maybeGenerateMemoised(object);return callee.get("object").replaceWith(assignmentExpression("=",context,object)),callExpression(memberExpression(base,identifier("call")),[context,...path.node.arguments])}return callExpression(base,path.node.arguments)}return path.node}const handle={memoise(){},handle(member,noDocumentAll){const{node,parent,parentPath,scope}=member;if(member.isOptionalMemberExpression()){if(function(path){for(;path&&!path.isProgram();){const{parentPath,container,listKey}=path,parentNode=parentPath.node;if(listKey){if(container!==parentNode[listKey])return!0}else if(container!==parentNode)return!0;path=parentPath}return!1}(member))return;const endPath=member.find((({node,parent})=>isOptionalMemberExpression(parent)?parent.optional||parent.object!==node:!isOptionalCallExpression(parent)||(node!==member.node&&parent.optional||parent.callee!==node)));if(scope.path.isPattern())return void endPath.replaceWith(callExpression(arrowFunctionExpression([],endPath.node),[]));const willEndPathCastToBoolean=willPathCastToBoolean(endPath),rootParentPath=endPath.parentPath;if(rootParentPath.isUpdateExpression({argument:node})||rootParentPath.isAssignmentExpression({left:node}))throw member.buildCodeFrameError("can't handle assignment");const isDeleteOperation=rootParentPath.isUnaryExpression({operator:"delete"});if(isDeleteOperation&&endPath.isOptionalMemberExpression()&&endPath.get("property").isPrivateName())throw member.buildCodeFrameError("can't delete a private class element");let startingOptional=member;for(;;)if(startingOptional.isOptionalMemberExpression()){if(startingOptional.node.optional)break;startingOptional=startingOptional.get("object")}else{if(!startingOptional.isOptionalCallExpression())throw new Error(`Internal error: unexpected ${startingOptional.node.type}`);if(startingOptional.node.optional)break;startingOptional=startingOptional.get("callee")}const startingNode=startingOptional.isOptionalMemberExpression()?startingOptional.node.object:startingOptional.node.callee,baseNeedsMemoised=scope.maybeGenerateMemoised(startingNode),baseRef=null!=baseNeedsMemoised?baseNeedsMemoised:startingNode,parentIsOptionalCall=parentPath.isOptionalCallExpression({callee:node}),isOptionalCall=parent=>parentIsOptionalCall,parentIsCall=parentPath.isCallExpression({callee:node});startingOptional.replaceWith(toNonOptional(startingOptional,baseRef)),isOptionalCall()?parent.optional?parentPath.replaceWith(this.optionalCall(member,parent.arguments)):parentPath.replaceWith(this.call(member,parent.arguments)):parentIsCall?member.replaceWith(this.boundGet(member)):this.delete&&parentPath.isUnaryExpression({operator:"delete"})?parentPath.replaceWith(this.delete(member)):member.replaceWith(this.get(member));let context,regular=member.node;for(let current=member;current!==endPath;){const parentPath=current.parentPath;if(parentPath===endPath&&isOptionalCall()&&parent.optional){regular=parentPath.node;break}regular=toNonOptional(parentPath,regular),current=parentPath}const endParentPath=endPath.parentPath;if(isMemberExpression(regular)&&endParentPath.isOptionalCallExpression({callee:endPath.node,optional:!0})){const{object}=regular;context=member.scope.maybeGenerateMemoised(object),context&&(regular.object=assignmentExpression("=",context,object))}let replacementPath=endPath;isDeleteOperation&&(replacementPath=endParentPath,regular=endParentPath.node);const baseMemoised=baseNeedsMemoised?assignmentExpression("=",cloneNode(baseRef),cloneNode(startingNode)):cloneNode(baseRef);if(willEndPathCastToBoolean){let nonNullishCheck;nonNullishCheck=noDocumentAll?binaryExpression("!=",baseMemoised,nullLiteral()):logicalExpression("&&",binaryExpression("!==",baseMemoised,nullLiteral()),binaryExpression("!==",cloneNode(baseRef),scope.buildUndefinedNode())),replacementPath.replaceWith(logicalExpression("&&",nonNullishCheck,regular))}else{let nullishCheck;nullishCheck=noDocumentAll?binaryExpression("==",baseMemoised,nullLiteral()):logicalExpression("||",binaryExpression("===",baseMemoised,nullLiteral()),binaryExpression("===",cloneNode(baseRef),scope.buildUndefinedNode())),replacementPath.replaceWith(conditionalExpression(nullishCheck,isDeleteOperation?booleanLiteral(!0):scope.buildUndefinedNode(),regular))}if(context){const endParent=endParentPath.node;endParentPath.replaceWith(optionalCallExpression(optionalMemberExpression(endParent.callee,identifier("call"),!1,!0),[cloneNode(context),...endParent.arguments],!1))}}else{if(isUpdateExpression(parent,{argument:node})){if(this.simpleSet)return void member.replaceWith(this.simpleSet(member));const{operator,prefix}=parent;this.memoise(member,2);const ref=scope.generateUidIdentifierBasedOnNode(node);scope.push({id:ref});const seq=[assignmentExpression("=",cloneNode(ref),this.get(member))];if(prefix){seq.push(updateExpression(operator,cloneNode(ref),prefix));const value=sequenceExpression(seq);return void parentPath.replaceWith(this.set(member,value))}{const ref2=scope.generateUidIdentifierBasedOnNode(node);scope.push({id:ref2}),seq.push(assignmentExpression("=",cloneNode(ref2),updateExpression(operator,cloneNode(ref),prefix)),cloneNode(ref));const value=sequenceExpression(seq);return void parentPath.replaceWith(sequenceExpression([this.set(member,value),cloneNode(ref2)]))}}if(parentPath.isAssignmentExpression({left:node})){if(this.simpleSet)return void member.replaceWith(this.simpleSet(member));const{operator,right:value}=parentPath.node;if("="===operator)parentPath.replaceWith(this.set(member,value));else{const operatorTrunc=operator.slice(0,-1);LOGICAL_OPERATORS.includes(operatorTrunc)?(this.memoise(member,1),parentPath.replaceWith(logicalExpression(operatorTrunc,this.get(member),this.set(member,value)))):(this.memoise(member,2),parentPath.replaceWith(this.set(member,binaryExpression(operatorTrunc,this.get(member),value))))}}else{if(!parentPath.isCallExpression({callee:node}))return parentPath.isOptionalCallExpression({callee:node})?scope.path.isPattern()?void parentPath.replaceWith(callExpression(arrowFunctionExpression([],parentPath.node),[])):void parentPath.replaceWith(this.optionalCall(member,parentPath.node.arguments)):void(this.delete&&parentPath.isUnaryExpression({operator:"delete"})?parentPath.replaceWith(this.delete(member)):parentPath.isForXStatement({left:node})||parentPath.isObjectProperty({value:node})&&parentPath.parentPath.isObjectPattern()||parentPath.isAssignmentPattern({left:node})&&parentPath.parentPath.isObjectProperty({value:parent})&&parentPath.parentPath.parentPath.isObjectPattern()||parentPath.isArrayPattern()||parentPath.isAssignmentPattern({left:node})&&parentPath.parentPath.isArrayPattern()||parentPath.isRestElement()?member.replaceWith(this.destructureSet(member)):parentPath.isTaggedTemplateExpression()?member.replaceWith(this.boundGet(member)):member.replaceWith(this.get(member)));parentPath.replaceWith(this.call(member,parentPath.node.arguments))}}}};exports.default=function(path,visitor,state){path.traverse(visitor,Object.assign({},handle,state,{memoiser:new AssignmentMemoiser}))}},"./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/import-builder.js":(__unused_webpack_module,exports,__nested_webpack_require_463552__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _assert=__nested_webpack_require_463552__("assert"),_t=__nested_webpack_require_463552__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{callExpression,cloneNode,expressionStatement,identifier,importDeclaration,importDefaultSpecifier,importNamespaceSpecifier,importSpecifier,memberExpression,stringLiteral,variableDeclaration,variableDeclarator}=_t;exports.default=class{constructor(importedSource,scope,hub){this._statements=[],this._resultName=null,this._importedSource=void 0,this._scope=scope,this._hub=hub,this._importedSource=importedSource}done(){return{statements:this._statements,resultName:this._resultName}}import(){return this._statements.push(importDeclaration([],stringLiteral(this._importedSource))),this}require(){return this._statements.push(expressionStatement(callExpression(identifier("require"),[stringLiteral(this._importedSource)]))),this}namespace(name="namespace"){const local=this._scope.generateUidIdentifier(name),statement=this._statements[this._statements.length-1];return _assert("ImportDeclaration"===statement.type),_assert(0===statement.specifiers.length),statement.specifiers=[importNamespaceSpecifier(local)],this._resultName=cloneNode(local),this}default(name){const id=this._scope.generateUidIdentifier(name),statement=this._statements[this._statements.length-1];return _assert("ImportDeclaration"===statement.type),_assert(0===statement.specifiers.length),statement.specifiers=[importDefaultSpecifier(id)],this._resultName=cloneNode(id),this}named(name,importName){if("default"===importName)return this.default(name);const id=this._scope.generateUidIdentifier(name),statement=this._statements[this._statements.length-1];return _assert("ImportDeclaration"===statement.type),_assert(0===statement.specifiers.length),statement.specifiers=[importSpecifier(id,identifier(importName))],this._resultName=cloneNode(id),this}var(name){const id=this._scope.generateUidIdentifier(name);let statement=this._statements[this._statements.length-1];return"ExpressionStatement"!==statement.type&&(_assert(this._resultName),statement=expressionStatement(this._resultName),this._statements.push(statement)),this._statements[this._statements.length-1]=variableDeclaration("var",[variableDeclarator(id,statement.expression)]),this._resultName=cloneNode(id),this}defaultInterop(){return this._interop(this._hub.addHelper("interopRequireDefault"))}wildcardInterop(){return this._interop(this._hub.addHelper("interopRequireWildcard"))}_interop(callee){const statement=this._statements[this._statements.length-1];return"ExpressionStatement"===statement.type?statement.expression=callExpression(callee,[statement.expression]):"VariableDeclaration"===statement.type?(_assert(1===statement.declarations.length),statement.declarations[0].init=callExpression(callee,[statement.declarations[0].init])):_assert.fail("Unexpected type."),this}prop(name){const statement=this._statements[this._statements.length-1];return"ExpressionStatement"===statement.type?statement.expression=memberExpression(statement.expression,identifier(name)):"VariableDeclaration"===statement.type?(_assert(1===statement.declarations.length),statement.declarations[0].init=memberExpression(statement.declarations[0].init,identifier(name))):_assert.fail("Unexpected type:"+statement.type),this}read(name){this._resultName=memberExpression(this._resultName,identifier(name))}}},"./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/import-injector.js":(__unused_webpack_module,exports,__nested_webpack_require_467198__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _assert=__nested_webpack_require_467198__("assert"),_t=__nested_webpack_require_467198__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_importBuilder=__nested_webpack_require_467198__("./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/import-builder.js"),_isModule=__nested_webpack_require_467198__("./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/is-module.js");const{numericLiteral,sequenceExpression}=_t;exports.default=class{constructor(path,importedSource,opts){this._defaultOpts={importedSource:null,importedType:"commonjs",importedInterop:"babel",importingInterop:"babel",ensureLiveReference:!1,ensureNoContext:!1,importPosition:"before"};const programPath=path.find((p=>p.isProgram()));this._programPath=programPath,this._programScope=programPath.scope,this._hub=programPath.hub,this._defaultOpts=this._applyDefaults(importedSource,opts,!0)}addDefault(importedSourceIn,opts){return this.addNamed("default",importedSourceIn,opts)}addNamed(importName,importedSourceIn,opts){return _assert("string"==typeof importName),this._generateImport(this._applyDefaults(importedSourceIn,opts),importName)}addNamespace(importedSourceIn,opts){return this._generateImport(this._applyDefaults(importedSourceIn,opts),null)}addSideEffect(importedSourceIn,opts){return this._generateImport(this._applyDefaults(importedSourceIn,opts),void 0)}_applyDefaults(importedSource,opts,isInit=!1){let newOpts;return"string"==typeof importedSource?newOpts=Object.assign({},this._defaultOpts,{importedSource},opts):(_assert(!opts,"Unexpected secondary arguments."),newOpts=Object.assign({},this._defaultOpts,importedSource)),!isInit&&opts&&(void 0!==opts.nameHint&&(newOpts.nameHint=opts.nameHint),void 0!==opts.blockHoist&&(newOpts.blockHoist=opts.blockHoist)),newOpts}_generateImport(opts,importName){const isDefault="default"===importName,isNamed=!!importName&&!isDefault,isNamespace=null===importName,{importedSource,importedType,importedInterop,importingInterop,ensureLiveReference,ensureNoContext,nameHint,importPosition,blockHoist}=opts;let name=nameHint||importName;const isMod=(0,_isModule.default)(this._programPath),isModuleForNode=isMod&&"node"===importingInterop,isModuleForBabel=isMod&&"babel"===importingInterop;if("after"===importPosition&&!isMod)throw new Error('"importPosition": "after" is only supported in modules');const builder=new _importBuilder.default(importedSource,this._programScope,this._hub);if("es6"===importedType){if(!isModuleForNode&&!isModuleForBabel)throw new Error("Cannot import an ES6 module from CommonJS");builder.import(),isNamespace?builder.namespace(nameHint||importedSource):(isDefault||isNamed)&&builder.named(name,importName)}else{if("commonjs"!==importedType)throw new Error(`Unexpected interopType "${importedType}"`);if("babel"===importedInterop)if(isModuleForNode){name="default"!==name?name:importedSource;const es6Default=`${importedSource}$es6Default`;builder.import(),isNamespace?builder.default(es6Default).var(name||importedSource).wildcardInterop():isDefault?ensureLiveReference?builder.default(es6Default).var(name||importedSource).defaultInterop().read("default"):builder.default(es6Default).var(name).defaultInterop().prop(importName):isNamed&&builder.default(es6Default).read(importName)}else isModuleForBabel?(builder.import(),isNamespace?builder.namespace(name||importedSource):(isDefault||isNamed)&&builder.named(name,importName)):(builder.require(),isNamespace?builder.var(name||importedSource).wildcardInterop():(isDefault||isNamed)&&ensureLiveReference?isDefault?(name="default"!==name?name:importedSource,builder.var(name).read(importName),builder.defaultInterop()):builder.var(importedSource).read(importName):isDefault?builder.var(name).defaultInterop().prop(importName):isNamed&&builder.var(name).prop(importName));else if("compiled"===importedInterop)isModuleForNode?(builder.import(),isNamespace?builder.default(name||importedSource):(isDefault||isNamed)&&builder.default(importedSource).read(name)):isModuleForBabel?(builder.import(),isNamespace?builder.namespace(name||importedSource):(isDefault||isNamed)&&builder.named(name,importName)):(builder.require(),isNamespace?builder.var(name||importedSource):(isDefault||isNamed)&&(ensureLiveReference?builder.var(importedSource).read(name):builder.prop(importName).var(name)));else{if("uncompiled"!==importedInterop)throw new Error(`Unknown importedInterop "${importedInterop}".`);if(isDefault&&ensureLiveReference)throw new Error("No live reference for commonjs default");isModuleForNode?(builder.import(),isNamespace?builder.default(name||importedSource):isDefault?builder.default(name):isNamed&&builder.default(importedSource).read(name)):isModuleForBabel?(builder.import(),isNamespace?builder.default(name||importedSource):isDefault?builder.default(name):isNamed&&builder.named(name,importName)):(builder.require(),isNamespace?builder.var(name||importedSource):isDefault?builder.var(name):isNamed&&(ensureLiveReference?builder.var(importedSource).read(name):builder.var(name).prop(importName)))}}const{statements,resultName}=builder.done();return this._insertStatements(statements,importPosition,blockHoist),(isDefault||isNamed)&&ensureNoContext&&"Identifier"!==resultName.type?sequenceExpression([numericLiteral(0),resultName]):resultName}_insertStatements(statements,importPosition="before",blockHoist=3){const body=this._programPath.get("body");if("after"===importPosition){for(let i=body.length-1;i>=0;i--)if(body[i].isImportDeclaration())return void body[i].insertAfter(statements)}else{statements.forEach((node=>{node._blockHoist=blockHoist}));const targetPath=body.find((p=>{const val=p.node._blockHoist;return Number.isFinite(val)&&val<4}));if(targetPath)return void targetPath.insertBefore(statements)}this._programPath.unshiftContainer("body",statements)}}},"./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_473323__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"ImportInjector",{enumerable:!0,get:function(){return _importInjector.default}}),exports.addDefault=function(path,importedSource,opts){return new _importInjector.default(path).addDefault(importedSource,opts)},exports.addNamed=function(path,name,importedSource,opts){return new _importInjector.default(path).addNamed(name,importedSource,opts)},exports.addNamespace=function(path,importedSource,opts){return new _importInjector.default(path).addNamespace(importedSource,opts)},exports.addSideEffect=function(path,importedSource,opts){return new _importInjector.default(path).addSideEffect(importedSource,opts)},Object.defineProperty(exports,"isModule",{enumerable:!0,get:function(){return _isModule.default}});var _importInjector=__nested_webpack_require_473323__("./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/import-injector.js"),_isModule=__nested_webpack_require_473323__("./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/is-module.js")},"./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/is-module.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(path){return"module"===path.node.sourceType}},"./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/dynamic-import.js":(__unused_webpack_module,exports,__nested_webpack_require_474922__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildDynamicImport=function(node,deferToThen,wrapWithPromise,builder){const[specifier]=node.arguments;if(t.isStringLiteral(specifier)||t.isTemplateLiteral(specifier)&&0===specifier.quasis.length)return deferToThen?_template.default.expression.ast`
        Promise.resolve().then(() => ${builder(specifier)})
      `:builder(specifier);const specifierToString=t.isTemplateLiteral(specifier)?t.identifier("specifier"):t.templateLiteral([t.templateElement({raw:""}),t.templateElement({raw:""})],[t.identifier("specifier")]);return deferToThen?_template.default.expression.ast`
      (specifier =>
        new Promise(r => r(${specifierToString}))
          .then(s => ${builder(t.identifier("s"))})
      )(${specifier})
    `:wrapWithPromise?_template.default.expression.ast`
      (specifier =>
        new Promise(r => r(${builder(specifierToString)}))
      )(${specifier})
    `:_template.default.expression.ast`
      (specifier => ${builder(specifierToString)})(${specifier})
    `};var t=__nested_webpack_require_474922__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_template=__nested_webpack_require_474922__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js");exports.getDynamicImportSource=function(node){const[source]=node.arguments;return t.isStringLiteral(source)||t.isTemplateLiteral(source)?source:_template.default.expression.ast`\`\${${source}}\``}},"./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/get-module-name.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=getModuleName;{const originalGetModuleName=getModuleName;exports.default=getModuleName=function(rootOpts,pluginOpts){var _pluginOpts$moduleId,_pluginOpts$moduleIds,_pluginOpts$getModule,_pluginOpts$moduleRoo;return originalGetModuleName(rootOpts,{moduleId:null!=(_pluginOpts$moduleId=pluginOpts.moduleId)?_pluginOpts$moduleId:rootOpts.moduleId,moduleIds:null!=(_pluginOpts$moduleIds=pluginOpts.moduleIds)?_pluginOpts$moduleIds:rootOpts.moduleIds,getModuleId:null!=(_pluginOpts$getModule=pluginOpts.getModuleId)?_pluginOpts$getModule:rootOpts.getModuleId,moduleRoot:null!=(_pluginOpts$moduleRoo=pluginOpts.moduleRoot)?_pluginOpts$moduleRoo:rootOpts.moduleRoot})}}function getModuleName(rootOpts,pluginOpts){const{filename,filenameRelative=filename,sourceRoot=pluginOpts.moduleRoot}=rootOpts,{moduleId,moduleIds=!!moduleId,getModuleId,moduleRoot=sourceRoot}=pluginOpts;if(!moduleIds)return null;if(null!=moduleId&&!getModuleId)return moduleId;let moduleName=null!=moduleRoot?moduleRoot+"/":"";if(filenameRelative){const sourceRootReplacer=null!=sourceRoot?new RegExp("^"+sourceRoot+"/?"):"";moduleName+=filenameRelative.replace(sourceRootReplacer,"").replace(/\.(\w*?)$/,"")}return moduleName=moduleName.replace(/\\/g,"/"),getModuleId&&getModuleId(moduleName)||moduleName}},"./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_478109__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"buildDynamicImport",{enumerable:!0,get:function(){return _dynamicImport.buildDynamicImport}}),exports.buildNamespaceInitStatements=function(metadata,sourceMetadata,constantReexports=!1){const statements=[];let srcNamespace=identifier(sourceMetadata.name);sourceMetadata.lazy&&(srcNamespace=callExpression(srcNamespace,[]));for(const localName of sourceMetadata.importsNamespace)localName!==sourceMetadata.name&&statements.push(_template.default.statement`var NAME = SOURCE;`({NAME:localName,SOURCE:cloneNode(srcNamespace)}));constantReexports&&statements.push(...buildReexportsFromMeta(metadata,sourceMetadata,!0));for(const exportName of sourceMetadata.reexportNamespace)statements.push((sourceMetadata.lazy?_template.default.statement`
            Object.defineProperty(EXPORTS, "NAME", {
              enumerable: true,
              get: function() {
                return NAMESPACE;
              }
            });
          `:_template.default.statement`EXPORTS.NAME = NAMESPACE;`)({EXPORTS:metadata.exportName,NAME:exportName,NAMESPACE:cloneNode(srcNamespace)}));if(sourceMetadata.reexportAll){const statement=function(metadata,namespace,constantReexports){return(constantReexports?_template.default.statement`
        Object.keys(NAMESPACE).forEach(function(key) {
          if (key === "default" || key === "__esModule") return;
          VERIFY_NAME_LIST;
          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;

          EXPORTS[key] = NAMESPACE[key];
        });
      `:_template.default.statement`
        Object.keys(NAMESPACE).forEach(function(key) {
          if (key === "default" || key === "__esModule") return;
          VERIFY_NAME_LIST;
          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;

          Object.defineProperty(EXPORTS, key, {
            enumerable: true,
            get: function() {
              return NAMESPACE[key];
            },
          });
        });
    `)({NAMESPACE:namespace,EXPORTS:metadata.exportName,VERIFY_NAME_LIST:metadata.exportNameListName?_template.default`
            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;
          `({EXPORTS_LIST:metadata.exportNameListName}):null})}(metadata,cloneNode(srcNamespace),constantReexports);statement.loc=sourceMetadata.reexportAll.loc,statements.push(statement)}return statements},exports.ensureStatementsHoisted=function(statements){statements.forEach((header=>{header._blockHoist=3}))},Object.defineProperty(exports,"getModuleName",{enumerable:!0,get:function(){return _getModuleName.default}}),Object.defineProperty(exports,"hasExports",{enumerable:!0,get:function(){return _normalizeAndLoadMetadata.hasExports}}),Object.defineProperty(exports,"isModule",{enumerable:!0,get:function(){return _helperModuleImports.isModule}}),Object.defineProperty(exports,"isSideEffectImport",{enumerable:!0,get:function(){return _normalizeAndLoadMetadata.isSideEffectImport}}),exports.rewriteModuleStatementsAndPrepareHeader=function(path,{exportName,strict,allowTopLevelThis,strictMode,noInterop,importInterop=noInterop?"none":"babel",lazy,esNamespaceOnly,filename,constantReexports=arguments[1].loose,enumerableModuleMeta=arguments[1].loose,noIncompleteNsImportDetection}){(0,_normalizeAndLoadMetadata.validateImportInteropOption)(importInterop),_assert((0,_helperModuleImports.isModule)(path),"Cannot process module statements in a script"),path.node.sourceType="script";const meta=(0,_normalizeAndLoadMetadata.default)(path,exportName,{importInterop,initializeReexports:constantReexports,lazy,esNamespaceOnly,filename});allowTopLevelThis||(0,_rewriteThis.default)(path);if((0,_rewriteLiveReferences.default)(path,meta),!1!==strictMode){const hasStrict=path.node.directives.some((directive=>"use strict"===directive.value.value));hasStrict||path.unshiftContainer("directives",directive(directiveLiteral("use strict")))}const headers=[];(0,_normalizeAndLoadMetadata.hasExports)(meta)&&!strict&&headers.push(function(metadata,enumerableModuleMeta=!1){return(enumerableModuleMeta?_template.default.statement`
        EXPORTS.__esModule = true;
      `:_template.default.statement`
        Object.defineProperty(EXPORTS, "__esModule", {
          value: true,
        });
      `)({EXPORTS:metadata.exportName})}(meta,enumerableModuleMeta));const nameList=function(programPath,metadata){const exportedVars=Object.create(null);for(const data of metadata.local.values())for(const name of data.names)exportedVars[name]=!0;let hasReexport=!1;for(const data of metadata.source.values()){for(const exportName of data.reexports.keys())exportedVars[exportName]=!0;for(const exportName of data.reexportNamespace)exportedVars[exportName]=!0;hasReexport=hasReexport||!!data.reexportAll}if(!hasReexport||0===Object.keys(exportedVars).length)return null;const name=programPath.scope.generateUidIdentifier("exportNames");return delete exportedVars.default,{name:name.name,statement:variableDeclaration("var",[variableDeclarator(name,valueToNode(exportedVars))])}}(path,meta);nameList&&(meta.exportNameListName=nameList.name,headers.push(nameList.statement));return headers.push(...function(programPath,metadata,constantReexports=!1,noIncompleteNsImportDetection=!1){const initStatements=[];for(const[localName,data]of metadata.local)if("import"===data.kind);else if("hoisted"===data.kind)initStatements.push([data.names[0],buildInitStatement(metadata,data.names,identifier(localName))]);else if(!noIncompleteNsImportDetection)for(const exportName of data.names)initStatements.push([exportName,null]);for(const data of metadata.source.values()){if(!constantReexports){const reexportsStatements=buildReexportsFromMeta(metadata,data,!1),reexports=[...data.reexports.keys()];for(let i=0;i<reexportsStatements.length;i++)initStatements.push([reexports[i],reexportsStatements[i]])}if(!noIncompleteNsImportDetection)for(const exportName of data.reexportNamespace)initStatements.push([exportName,null])}initStatements.sort((([a],[b])=>a<b?-1:b<a?1:0));const results=[];if(noIncompleteNsImportDetection)for(const[,initStatement]of initStatements)results.push(initStatement);else{const chunkSize=100;for(let i=0;i<initStatements.length;i+=chunkSize){let uninitializedExportNames=[];for(let j=0;j<chunkSize&&i+j<initStatements.length;j++){const[exportName,initStatement]=initStatements[i+j];null!==initStatement?(uninitializedExportNames.length>0&&(results.push(buildInitStatement(metadata,uninitializedExportNames,programPath.scope.buildUndefinedNode())),uninitializedExportNames=[]),results.push(initStatement)):uninitializedExportNames.push(exportName)}uninitializedExportNames.length>0&&results.push(buildInitStatement(metadata,uninitializedExportNames,programPath.scope.buildUndefinedNode()))}}return results}(path,meta,constantReexports,noIncompleteNsImportDetection)),{meta,headers}},Object.defineProperty(exports,"rewriteThis",{enumerable:!0,get:function(){return _rewriteThis.default}}),exports.wrapInterop=function(programPath,expr,type){if("none"===type)return null;if("node-namespace"===type)return callExpression(programPath.hub.addHelper("interopRequireWildcard"),[expr,booleanLiteral(!0)]);if("node-default"===type)return null;let helper;if("default"===type)helper="interopRequireDefault";else{if("namespace"!==type)throw new Error(`Unknown interop: ${type}`);helper="interopRequireWildcard"}return callExpression(programPath.hub.addHelper(helper),[expr])};var _assert=__nested_webpack_require_478109__("assert"),_t=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_template=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js"),_helperModuleImports=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+helper-module-imports@7.22.5/node_modules/@babel/helper-module-imports/lib/index.js"),_rewriteThis=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/rewrite-this.js"),_rewriteLiveReferences=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/rewrite-live-references.js"),_normalizeAndLoadMetadata=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/normalize-and-load-metadata.js"),_dynamicImport=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/dynamic-import.js"),_getModuleName=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/get-module-name.js");const{booleanLiteral,callExpression,cloneNode,directive,directiveLiteral,expressionStatement,identifier,isIdentifier,memberExpression,stringLiteral,valueToNode,variableDeclaration,variableDeclarator}=_t;exports.getDynamicImportSource=__nested_webpack_require_478109__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/dynamic-import.js").getDynamicImportSource;const ReexportTemplate={constant:_template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,constantComputed:_template.default.statement`EXPORTS["EXPORT_NAME"] = NAMESPACE_IMPORT;`,spec:_template.default.statement`
    Object.defineProperty(EXPORTS, "EXPORT_NAME", {
      enumerable: true,
      get: function() {
        return NAMESPACE_IMPORT;
      },
    });
    `};function buildReexportsFromMeta(meta,metadata,constantReexports){const namespace=metadata.lazy?callExpression(identifier(metadata.name),[]):identifier(metadata.name),{stringSpecifiers}=meta;return Array.from(metadata.reexports,(([exportName,importName])=>{let NAMESPACE_IMPORT=cloneNode(namespace);"default"===importName&&"node-default"===metadata.interop||(NAMESPACE_IMPORT=stringSpecifiers.has(importName)?memberExpression(NAMESPACE_IMPORT,stringLiteral(importName),!0):memberExpression(NAMESPACE_IMPORT,identifier(importName)));const astNodes={EXPORTS:meta.exportName,EXPORT_NAME:exportName,NAMESPACE_IMPORT};return constantReexports||isIdentifier(NAMESPACE_IMPORT)?stringSpecifiers.has(exportName)?ReexportTemplate.constantComputed(astNodes):ReexportTemplate.constant(astNodes):ReexportTemplate.spec(astNodes)}))}const InitTemplate={computed:_template.default.expression`EXPORTS["NAME"] = VALUE`,default:_template.default.expression`EXPORTS.NAME = VALUE`};function buildInitStatement(metadata,exportNames,initExpr){const{stringSpecifiers,exportName:EXPORTS}=metadata;return expressionStatement(exportNames.reduce(((acc,exportName)=>{const params={EXPORTS,NAME:exportName,VALUE:acc};return stringSpecifiers.has(exportName)?InitTemplate.computed(params):InitTemplate.default(params)}),initExpr))}},"./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/normalize-and-load-metadata.js":(__unused_webpack_module,exports,__nested_webpack_require_489180__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(programPath,exportName,{importInterop,initializeReexports=!1,lazy=!1,esNamespaceOnly=!1,filename}){exportName||(exportName=programPath.scope.generateUidIdentifier("exports").name);const stringSpecifiers=new Set;!function(programPath){programPath.get("body").forEach((child=>{child.isExportDefaultDeclaration()&&(0,_helperSplitExportDeclaration.default)(child)}))}(programPath);const{local,sources,hasExports}=function(programPath,{lazy,initializeReexports},stringSpecifiers){const localData=function(programPath,initializeReexports,stringSpecifiers){const bindingKindLookup=new Map;programPath.get("body").forEach((child=>{let kind;if(child.isImportDeclaration())kind="import";else{if(child.isExportDefaultDeclaration()&&(child=child.get("declaration")),child.isExportNamedDeclaration())if(child.node.declaration)child=child.get("declaration");else if(initializeReexports&&child.node.source&&child.get("source").isStringLiteral())return void child.get("specifiers").forEach((spec=>{assertExportSpecifier(spec),bindingKindLookup.set(spec.get("local").node.name,"block")}));if(child.isFunctionDeclaration())kind="hoisted";else if(child.isClassDeclaration())kind="block";else if(child.isVariableDeclaration({kind:"var"}))kind="var";else{if(!child.isVariableDeclaration())return;kind="block"}}Object.keys(child.getOuterBindingIdentifiers()).forEach((name=>{bindingKindLookup.set(name,kind)}))}));const localMetadata=new Map,getLocalMetadata=idPath=>{const localName=idPath.node.name;let metadata=localMetadata.get(localName);if(!metadata){const kind=bindingKindLookup.get(localName);if(void 0===kind)throw idPath.buildCodeFrameError(`Exporting local "${localName}", which is not declared.`);metadata={names:[],kind},localMetadata.set(localName,metadata)}return metadata};return programPath.get("body").forEach((child=>{if(!child.isExportNamedDeclaration()||!initializeReexports&&child.node.source){if(child.isExportDefaultDeclaration()){const declaration=child.get("declaration");if(!declaration.isFunctionDeclaration()&&!declaration.isClassDeclaration())throw declaration.buildCodeFrameError("Unexpected default expression export.");getLocalMetadata(declaration.get("id")).names.push("default")}}else if(child.node.declaration){const declaration=child.get("declaration"),ids=declaration.getOuterBindingIdentifierPaths();Object.keys(ids).forEach((name=>{if("__esModule"===name)throw declaration.buildCodeFrameError('Illegal export "__esModule".');getLocalMetadata(ids[name]).names.push(name)}))}else child.get("specifiers").forEach((spec=>{const local=spec.get("local"),exported=spec.get("exported"),localMetadata=getLocalMetadata(local),exportName=getExportSpecifierName(exported,stringSpecifiers);if("__esModule"===exportName)throw exported.buildCodeFrameError('Illegal export "__esModule".');localMetadata.names.push(exportName)}))})),localMetadata}(programPath,initializeReexports,stringSpecifiers),sourceData=new Map,getData=sourceNode=>{const source=sourceNode.value;let data=sourceData.get(source);return data||(data={name:programPath.scope.generateUidIdentifier((0,_path.basename)(source,(0,_path.extname)(source))).name,interop:"none",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,lazy:!1,referenced:!1},sourceData.set(source,data)),data};let hasExports=!1;programPath.get("body").forEach((child=>{if(child.isImportDeclaration()){const data=getData(child.node.source);data.loc||(data.loc=child.node.loc),child.get("specifiers").forEach((spec=>{if(spec.isImportDefaultSpecifier()){const localName=spec.get("local").node.name;data.imports.set(localName,"default");const reexport=localData.get(localName);reexport&&(localData.delete(localName),reexport.names.forEach((name=>{data.reexports.set(name,"default")})),data.referenced=!0)}else if(spec.isImportNamespaceSpecifier()){const localName=spec.get("local").node.name;data.importsNamespace.add(localName);const reexport=localData.get(localName);reexport&&(localData.delete(localName),reexport.names.forEach((name=>{data.reexportNamespace.add(name)})),data.referenced=!0)}else if(spec.isImportSpecifier()){const importName=getExportSpecifierName(spec.get("imported"),stringSpecifiers),localName=spec.get("local").node.name;data.imports.set(localName,importName);const reexport=localData.get(localName);reexport&&(localData.delete(localName),reexport.names.forEach((name=>{data.reexports.set(name,importName)})),data.referenced=!0)}}))}else if(child.isExportAllDeclaration()){hasExports=!0;const data=getData(child.node.source);data.loc||(data.loc=child.node.loc),data.reexportAll={loc:child.node.loc},data.referenced=!0}else if(child.isExportNamedDeclaration()&&child.node.source){hasExports=!0;const data=getData(child.node.source);data.loc||(data.loc=child.node.loc),child.get("specifiers").forEach((spec=>{assertExportSpecifier(spec);const importName=getExportSpecifierName(spec.get("local"),stringSpecifiers),exportName=getExportSpecifierName(spec.get("exported"),stringSpecifiers);if(data.reexports.set(exportName,importName),data.referenced=!0,"__esModule"===exportName)throw spec.get("exported").buildCodeFrameError('Illegal export "__esModule".')}))}else(child.isExportNamedDeclaration()||child.isExportDefaultDeclaration())&&(hasExports=!0)}));for(const metadata of sourceData.values()){let needsDefault=!1,needsNamed=!1;metadata.importsNamespace.size>0&&(needsDefault=!0,needsNamed=!0),metadata.reexportAll&&(needsNamed=!0);for(const importName of metadata.imports.values())"default"===importName?needsDefault=!0:needsNamed=!0;for(const importName of metadata.reexports.values())"default"===importName?needsDefault=!0:needsNamed=!0;needsDefault&&needsNamed?metadata.interop="namespace":needsDefault&&(metadata.interop="default")}for(const[source,metadata]of sourceData)if(!1!==lazy&&!isSideEffectImport(metadata)&&!metadata.reexportAll)if(!0===lazy)metadata.lazy=!/\./.test(source);else if(Array.isArray(lazy))metadata.lazy=-1!==lazy.indexOf(source);else{if("function"!=typeof lazy)throw new Error(".lazy must be a boolean, string array, or function");metadata.lazy=lazy(source)}return{hasExports,local:localData,sources:sourceData}}(programPath,{initializeReexports,lazy},stringSpecifiers);!function(programPath){programPath.get("body").forEach((child=>{if(child.isImportDeclaration())child.remove();else if(child.isExportNamedDeclaration())child.node.declaration?(child.node.declaration._blockHoist=child.node._blockHoist,child.replaceWith(child.node.declaration)):child.remove();else if(child.isExportDefaultDeclaration()){const declaration=child.get("declaration");if(!declaration.isFunctionDeclaration()&&!declaration.isClassDeclaration())throw declaration.buildCodeFrameError("Unexpected default expression export.");declaration._blockHoist=child.node._blockHoist,child.replaceWith(declaration)}else child.isExportAllDeclaration()&&child.remove()}))}(programPath);for(const[source,metadata]of sources){metadata.importsNamespace.size>0&&(metadata.name=metadata.importsNamespace.values().next().value);const resolvedInterop=resolveImportInterop(importInterop,source,filename);"none"===resolvedInterop?metadata.interop="none":"node"===resolvedInterop&&"namespace"===metadata.interop?metadata.interop="node-namespace":"node"===resolvedInterop&&"default"===metadata.interop?metadata.interop="node-default":esNamespaceOnly&&"namespace"===metadata.interop&&(metadata.interop="default")}return{exportName,exportNameListName:null,hasExports,local,source:sources,stringSpecifiers}},exports.hasExports=function(metadata){return metadata.hasExports},exports.isSideEffectImport=isSideEffectImport,exports.validateImportInteropOption=validateImportInteropOption;var _path=__nested_webpack_require_489180__("path"),_helperValidatorIdentifier=__nested_webpack_require_489180__("./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/index.js"),_helperSplitExportDeclaration=__nested_webpack_require_489180__("./node_modules/.pnpm/@babel+helper-split-export-declaration@7.22.6/node_modules/@babel/helper-split-export-declaration/lib/index.js");function isSideEffectImport(source){return 0===source.imports.size&&0===source.importsNamespace.size&&0===source.reexports.size&&0===source.reexportNamespace.size&&!source.reexportAll}function validateImportInteropOption(importInterop){if("function"!=typeof importInterop&&"none"!==importInterop&&"babel"!==importInterop&&"node"!==importInterop)throw new Error(`.importInterop must be one of "none", "babel", "node", or a function returning one of those values (received ${importInterop}).`);return importInterop}function resolveImportInterop(importInterop,source,filename){return"function"==typeof importInterop?validateImportInteropOption(importInterop(source,filename)):importInterop}function getExportSpecifierName(path,stringSpecifiers){if(path.isIdentifier())return path.node.name;if(path.isStringLiteral()){const stringValue=path.node.value;return(0,_helperValidatorIdentifier.isIdentifierName)(stringValue)||stringSpecifiers.add(stringValue),stringValue}throw new Error(`Expected export specifier to be either Identifier or StringLiteral, got ${path.node.type}`)}function assertExportSpecifier(path){if(!path.isExportSpecifier())throw path.isExportNamespaceSpecifier()?path.buildCodeFrameError("Export namespace should be first transformed by `@babel/plugin-transform-export-namespace-from`."):path.buildCodeFrameError("Unexpected export specifier type")}},"./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/rewrite-live-references.js":(__unused_webpack_module,exports,__nested_webpack_require_498911__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(programPath,metadata){const imported=new Map,exported=new Map,requeueInParent=path=>{programPath.requeue(path)};for(const[source,data]of metadata.source){for(const[localName,importName]of data.imports)imported.set(localName,[source,importName,null]);for(const localName of data.importsNamespace)imported.set(localName,[source,null,localName])}for(const[local,data]of metadata.local){let exportMeta=exported.get(local);exportMeta||(exportMeta=[],exported.set(local,exportMeta)),exportMeta.push(...data.names)}const rewriteBindingInitVisitorState={metadata,requeueInParent,scope:programPath.scope,exported};programPath.traverse(rewriteBindingInitVisitor,rewriteBindingInitVisitorState);const bindingNames=new Set([...Array.from(imported.keys()),...Array.from(exported.keys())]);(0,_helperSimpleAccess.default)(programPath,bindingNames,!1);const rewriteReferencesVisitorState={seen:new WeakSet,metadata,requeueInParent,scope:programPath.scope,imported,exported,buildImportReference:([source,importName,localName],identNode)=>{const meta=metadata.source.get(source);if(meta.referenced=!0,localName)return meta.lazy&&(identNode=callExpression(identNode,[])),identNode;let namespace=identifier(meta.name);if(meta.lazy&&(namespace=callExpression(namespace,[])),"default"===importName&&"node-default"===meta.interop)return namespace;const computed=metadata.stringSpecifiers.has(importName);return memberExpression(namespace,computed?stringLiteral(importName):identifier(importName),computed)}};programPath.traverse(rewriteReferencesVisitor,rewriteReferencesVisitorState)};var _assert=__nested_webpack_require_498911__("assert"),_t=__nested_webpack_require_498911__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_template=__nested_webpack_require_498911__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js"),_helperSimpleAccess=__nested_webpack_require_498911__("./node_modules/.pnpm/@babel+helper-simple-access@7.22.5/node_modules/@babel/helper-simple-access/lib/index.js");const{assignmentExpression,callExpression,cloneNode,expressionStatement,getOuterBindingIdentifiers,identifier,isMemberExpression,isVariableDeclaration,jsxIdentifier,jsxMemberExpression,memberExpression,numericLiteral,sequenceExpression,stringLiteral,variableDeclaration,variableDeclarator}=_t;const rewriteBindingInitVisitor={Scope(path){path.skip()},ClassDeclaration(path){const{requeueInParent,exported,metadata}=this,{id}=path.node;if(!id)throw new Error("Expected class to have a name");const localName=id.name,exportNames=exported.get(localName)||[];if(exportNames.length>0){const statement=expressionStatement(buildBindingExportAssignmentExpression(metadata,exportNames,identifier(localName),path.scope));statement._blockHoist=path.node._blockHoist,requeueInParent(path.insertAfter(statement)[0])}},VariableDeclaration(path){const{requeueInParent,exported,metadata}=this;Object.keys(path.getOuterBindingIdentifiers()).forEach((localName=>{const exportNames=exported.get(localName)||[];if(exportNames.length>0){const statement=expressionStatement(buildBindingExportAssignmentExpression(metadata,exportNames,identifier(localName),path.scope));statement._blockHoist=path.node._blockHoist,requeueInParent(path.insertAfter(statement)[0])}}))}},buildBindingExportAssignmentExpression=(metadata,exportNames,localExpr,scope)=>{const exportsObjectName=metadata.exportName;for(let currentScope=scope;null!=currentScope;currentScope=currentScope.parent)currentScope.hasOwnBinding(exportsObjectName)&&currentScope.rename(exportsObjectName);return(exportNames||[]).reduce(((expr,exportName)=>{const{stringSpecifiers}=metadata,computed=stringSpecifiers.has(exportName);return assignmentExpression("=",memberExpression(identifier(exportsObjectName),computed?stringLiteral(exportName):identifier(exportName),computed),expr)}),localExpr)},buildImportThrow=localName=>_template.default.expression.ast`
    (function() {
      throw new Error('"' + '${localName}' + '" is read-only.');
    })()
  `,rewriteReferencesVisitor={ReferencedIdentifier(path){const{seen,buildImportReference,scope,imported,requeueInParent}=this;if(seen.has(path.node))return;seen.add(path.node);const localName=path.node.name,importData=imported.get(localName);if(importData){if(function(path){do{switch(path.parent.type){case"TSTypeAnnotation":case"TSTypeAliasDeclaration":case"TSTypeReference":case"TypeAnnotation":case"TypeAlias":return!0;case"ExportSpecifier":return"type"===path.parentPath.parent.exportKind;default:if(path.parentPath.isStatement()||path.parentPath.isExpression())return!1}}while(path=path.parentPath)}(path))throw path.buildCodeFrameError(`Cannot transform the imported binding "${localName}" since it's also used in a type annotation. Please strip type annotations using @babel/preset-typescript or @babel/preset-flow.`);const localBinding=path.scope.getBinding(localName);if(scope.getBinding(localName)!==localBinding)return;const ref=buildImportReference(importData,path.node);if(ref.loc=path.node.loc,(path.parentPath.isCallExpression({callee:path.node})||path.parentPath.isOptionalCallExpression({callee:path.node})||path.parentPath.isTaggedTemplateExpression({tag:path.node}))&&isMemberExpression(ref))path.replaceWith(sequenceExpression([numericLiteral(0),ref]));else if(path.isJSXIdentifier()&&isMemberExpression(ref)){const{object,property}=ref;path.replaceWith(jsxMemberExpression(jsxIdentifier(object.name),jsxIdentifier(property.name)))}else path.replaceWith(ref);requeueInParent(path),path.skip()}},UpdateExpression(path){const{scope,seen,imported,exported,requeueInParent,buildImportReference}=this;if(seen.has(path.node))return;seen.add(path.node);const arg=path.get("argument");if(arg.isMemberExpression())return;const update=path.node;if(arg.isIdentifier()){const localName=arg.node.name;if(scope.getBinding(localName)!==path.scope.getBinding(localName))return;const exportedNames=exported.get(localName),importData=imported.get(localName);if((null==exportedNames?void 0:exportedNames.length)>0||importData)if(importData)path.replaceWith(assignmentExpression(update.operator[0]+"=",buildImportReference(importData,arg.node),buildImportThrow(localName)));else if(update.prefix)path.replaceWith(buildBindingExportAssignmentExpression(this.metadata,exportedNames,cloneNode(update),path.scope));else{const ref=scope.generateDeclaredUidIdentifier(localName);path.replaceWith(sequenceExpression([assignmentExpression("=",cloneNode(ref),cloneNode(update)),buildBindingExportAssignmentExpression(this.metadata,exportedNames,identifier(localName),path.scope),cloneNode(ref)]))}}requeueInParent(path),path.skip()},AssignmentExpression:{exit(path){const{scope,seen,imported,exported,requeueInParent,buildImportReference}=this;if(seen.has(path.node))return;seen.add(path.node);const left=path.get("left");if(!left.isMemberExpression())if(left.isIdentifier()){const localName=left.node.name;if(scope.getBinding(localName)!==path.scope.getBinding(localName))return;const exportedNames=exported.get(localName),importData=imported.get(localName);if((null==exportedNames?void 0:exportedNames.length)>0||importData){_assert("="===path.node.operator,"Path was not simplified");const assignment=path.node;importData&&(assignment.left=buildImportReference(importData,left.node),assignment.right=sequenceExpression([assignment.right,buildImportThrow(localName)])),path.replaceWith(buildBindingExportAssignmentExpression(this.metadata,exportedNames,assignment,path.scope)),requeueInParent(path)}}else{const ids=left.getOuterBindingIdentifiers(),programScopeIds=Object.keys(ids).filter((localName=>scope.getBinding(localName)===path.scope.getBinding(localName))),id=programScopeIds.find((localName=>imported.has(localName)));id&&(path.node.right=sequenceExpression([path.node.right,buildImportThrow(id)]));const items=[];if(programScopeIds.forEach((localName=>{const exportedNames=exported.get(localName)||[];exportedNames.length>0&&items.push(buildBindingExportAssignmentExpression(this.metadata,exportedNames,identifier(localName),path.scope))})),items.length>0){let node=sequenceExpression(items);path.parentPath.isExpressionStatement()&&(node=expressionStatement(node),node._blockHoist=path.parentPath.node._blockHoist);requeueInParent(path.insertAfter(node)[0])}}}},"ForOfStatement|ForInStatement"(path){const{scope,node}=path,{left}=node,{exported,imported,scope:programScope}=this;if(!isVariableDeclaration(left)){let importConstViolationName,didTransformExport=!1;const loopBodyScope=path.get("body").scope;for(const name of Object.keys(getOuterBindingIdentifiers(left)))programScope.getBinding(name)===scope.getBinding(name)&&(exported.has(name)&&(didTransformExport=!0,loopBodyScope.hasOwnBinding(name)&&loopBodyScope.rename(name)),imported.has(name)&&!importConstViolationName&&(importConstViolationName=name));if(!didTransformExport&&!importConstViolationName)return;path.ensureBlock();const bodyPath=path.get("body"),newLoopId=scope.generateUidIdentifierBasedOnNode(left);path.get("left").replaceWith(variableDeclaration("let",[variableDeclarator(cloneNode(newLoopId))])),scope.registerDeclaration(path.get("left")),didTransformExport&&bodyPath.unshiftContainer("body",expressionStatement(assignmentExpression("=",left,newLoopId))),importConstViolationName&&bodyPath.unshiftContainer("body",expressionStatement(buildImportThrow(importConstViolationName)))}}}},"./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/rewrite-this.js":(__unused_webpack_module,exports,__nested_webpack_require_508523__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(programPath){(0,_traverse.default)(programPath.node,Object.assign({},rewriteThisVisitor,{noScope:!0}))};var _helperEnvironmentVisitor=__nested_webpack_require_508523__("./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js"),_traverse=__nested_webpack_require_508523__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js"),_t=__nested_webpack_require_508523__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{numericLiteral,unaryExpression}=_t,rewriteThisVisitor=_traverse.default.visitors.merge([_helperEnvironmentVisitor.default,{ThisExpression(path){path.replaceWith(unaryExpression("void",numericLiteral(0),!0))}}])},"./node_modules/.pnpm/@babel+helper-optimise-call-expression@7.22.5/node_modules/@babel/helper-optimise-call-expression/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_509528__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(callee,thisNode,args,optional){return 1===args.length&&isSpreadElement(args[0])&&isIdentifier(args[0].argument,{name:"arguments"})?optional?optionalCallExpression(optionalMemberExpression(callee,identifier("apply"),!1,!0),[thisNode,args[0].argument],!1):callExpression(memberExpression(callee,identifier("apply")),[thisNode,args[0].argument]):optional?optionalCallExpression(optionalMemberExpression(callee,identifier("call"),!1,!0),[thisNode,...args],!1):callExpression(memberExpression(callee,identifier("call")),[thisNode,...args])};var _t=__nested_webpack_require_509528__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{callExpression,identifier,isIdentifier,isSpreadElement,memberExpression,optionalCallExpression,optionalMemberExpression}=_t},"./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.declare=declare,exports.declarePreset=void 0;const apiPolyfills={assertVersion:api=>range=>{!function(range,version){if("number"==typeof range){if(!Number.isInteger(range))throw new Error("Expected string or integer value.");range=`^${range}.0.0-0`}if("string"!=typeof range)throw new Error("Expected string or integer value.");const limit=Error.stackTraceLimit;"number"==typeof limit&&limit<25&&(Error.stackTraceLimit=25);let err;err="7."===version.slice(0,2)?new Error(`Requires Babel "^7.0.0-beta.41", but was loaded with "${version}". You'll need to update your @babel/core version.`):new Error(`Requires Babel "${range}", but was loaded with "${version}". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn't mention "@babel/core" or "babel-core" to see what is calling Babel.`);"number"==typeof limit&&(Error.stackTraceLimit=limit);throw Object.assign(err,{code:"BABEL_VERSION_UNSUPPORTED",version,range})}(range,api.version)}};function declare(builder){return(api,options,dirname)=>{var _clonedApi2;let clonedApi;for(const name of Object.keys(apiPolyfills)){api[name]||(null!=clonedApi||(clonedApi=copyApiObject(api)),clonedApi[name]=apiPolyfills[name](clonedApi))}return builder(null!=(_clonedApi2=clonedApi)?_clonedApi2:api,options||{},dirname)}}Object.assign(apiPolyfills,{targets:()=>()=>({}),assumption:()=>()=>{}});const declarePreset=declare;function copyApiObject(api){let proto=null;return"string"==typeof api.version&&/^7\./.test(api.version)&&(proto=Object.getPrototypeOf(api),!proto||has(proto,"version")&&has(proto,"transform")&&has(proto,"template")&&has(proto,"types")||(proto=null)),Object.assign({},proto,api)}function has(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}exports.declarePreset=declarePreset},"./node_modules/.pnpm/@babel+helper-replace-supers@7.22.5/node_modules/@babel/helper-replace-supers/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_512704__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperEnvironmentVisitor=__nested_webpack_require_512704__("./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js"),_helperMemberExpressionToFunctions=__nested_webpack_require_512704__("./node_modules/.pnpm/@babel+helper-member-expression-to-functions@7.22.5/node_modules/@babel/helper-member-expression-to-functions/lib/index.js"),_helperOptimiseCallExpression=__nested_webpack_require_512704__("./node_modules/.pnpm/@babel+helper-optimise-call-expression@7.22.5/node_modules/@babel/helper-optimise-call-expression/lib/index.js"),_template=__nested_webpack_require_512704__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js"),_traverse=__nested_webpack_require_512704__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js"),_t=__nested_webpack_require_512704__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{assignmentExpression,booleanLiteral,callExpression,cloneNode,identifier,memberExpression,sequenceExpression,stringLiteral,thisExpression}=_t;{const ns=__nested_webpack_require_512704__("./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js");exports.environmentVisitor=ns.default,exports.skipAllButComputedKey=ns.skipAllButComputedKey}function getPrototypeOfExpression(objectRef,isStatic,file,isPrivateMethod){objectRef=cloneNode(objectRef);const targetRef=isStatic||isPrivateMethod?objectRef:memberExpression(objectRef,identifier("prototype"));return callExpression(file.addHelper("getPrototypeOf"),[targetRef])}const visitor=_traverse.default.visitors.merge([_helperEnvironmentVisitor.default,{Super(path,state){const{node,parentPath}=path;parentPath.isMemberExpression({object:node})&&state.handle(parentPath)}}]),unshadowSuperBindingVisitor=_traverse.default.visitors.merge([_helperEnvironmentVisitor.default,{Scopable(path,{refName}){const binding=path.scope.getOwnBinding(refName);binding&&binding.identifier.name===refName&&path.scope.rename(refName)}}]),specHandlers={memoise(superMember,count){const{scope,node}=superMember,{computed,property}=node;if(!computed)return;const memo=scope.maybeGenerateMemoised(property);memo&&this.memoiser.set(property,memo,count)},prop(superMember){const{computed,property}=superMember.node;return this.memoiser.has(property)?cloneNode(this.memoiser.get(property)):computed?cloneNode(property):stringLiteral(property.name)},get(superMember){return this._get(superMember,this._getThisRefs())},_get(superMember,thisRefs){const proto=getPrototypeOfExpression(this.getObjectRef(),this.isStatic,this.file,this.isPrivateMethod);return callExpression(this.file.addHelper("get"),[thisRefs.memo?sequenceExpression([thisRefs.memo,proto]):proto,this.prop(superMember),thisRefs.this])},_getThisRefs(){if(!this.isDerivedConstructor)return{this:thisExpression()};const thisRef=this.scope.generateDeclaredUidIdentifier("thisSuper");return{memo:assignmentExpression("=",thisRef,thisExpression()),this:cloneNode(thisRef)}},set(superMember,value){const thisRefs=this._getThisRefs(),proto=getPrototypeOfExpression(this.getObjectRef(),this.isStatic,this.file,this.isPrivateMethod);return callExpression(this.file.addHelper("set"),[thisRefs.memo?sequenceExpression([thisRefs.memo,proto]):proto,this.prop(superMember),value,thisRefs.this,booleanLiteral(superMember.isInStrictMode())])},destructureSet(superMember){throw superMember.buildCodeFrameError("Destructuring to a super field is not supported yet.")},call(superMember,args){const thisRefs=this._getThisRefs();return(0,_helperOptimiseCallExpression.default)(this._get(superMember,thisRefs),cloneNode(thisRefs.this),args,!1)},optionalCall(superMember,args){const thisRefs=this._getThisRefs();return(0,_helperOptimiseCallExpression.default)(this._get(superMember,thisRefs),cloneNode(thisRefs.this),args,!0)},delete(superMember){return superMember.node.computed?sequenceExpression([callExpression(this.file.addHelper("toPropertyKey"),[cloneNode(superMember.node.property)]),_template.default.expression.ast`
          function () { throw new ReferenceError("'delete super[expr]' is invalid"); }()
        `]):_template.default.expression.ast`
        function () { throw new ReferenceError("'delete super.prop' is invalid"); }()
      `}},looseHandlers=Object.assign({},specHandlers,{prop(superMember){const{property}=superMember.node;return this.memoiser.has(property)?cloneNode(this.memoiser.get(property)):cloneNode(property)},get(superMember){const{isStatic,getSuperRef}=this,{computed}=superMember.node,prop=this.prop(superMember);let object;var _getSuperRef,_getSuperRef2;isStatic?object=null!=(_getSuperRef=getSuperRef())?_getSuperRef:memberExpression(identifier("Function"),identifier("prototype")):object=memberExpression(null!=(_getSuperRef2=getSuperRef())?_getSuperRef2:identifier("Object"),identifier("prototype"));return memberExpression(object,prop,computed)},set(superMember,value){const{computed}=superMember.node,prop=this.prop(superMember);return assignmentExpression("=",memberExpression(thisExpression(),prop,computed),value)},destructureSet(superMember){const{computed}=superMember.node,prop=this.prop(superMember);return memberExpression(thisExpression(),prop,computed)},call(superMember,args){return(0,_helperOptimiseCallExpression.default)(this.get(superMember),thisExpression(),args,!1)},optionalCall(superMember,args){return(0,_helperOptimiseCallExpression.default)(this.get(superMember),thisExpression(),args,!0)}});exports.default=class{constructor(opts){var _opts$constantSuper;const path=opts.methodPath;this.methodPath=path,this.isDerivedConstructor=path.isClassMethod({kind:"constructor"})&&!!opts.superRef,this.isStatic=path.isObjectMethod()||path.node.static||(null==path.isStaticBlock?void 0:path.isStaticBlock()),this.isPrivateMethod=path.isPrivate()&&path.isMethod(),this.file=opts.file,this.constantSuper=null!=(_opts$constantSuper=opts.constantSuper)?_opts$constantSuper:opts.isLoose,this.opts=opts}getObjectRef(){return cloneNode(this.opts.objectRef||this.opts.getObjectRef())}getSuperRef(){return this.opts.superRef?cloneNode(this.opts.superRef):this.opts.getSuperRef?cloneNode(this.opts.getSuperRef()):void 0}replace(){this.opts.refToPreserve&&this.methodPath.traverse(unshadowSuperBindingVisitor,{refName:this.opts.refToPreserve.name});const handler=this.constantSuper?looseHandlers:specHandlers;(0,_helperMemberExpressionToFunctions.default)(this.methodPath,visitor,Object.assign({file:this.file,scope:this.methodPath.scope,isDerivedConstructor:this.isDerivedConstructor,isStatic:this.isStatic,isPrivateMethod:this.isPrivateMethod,getObjectRef:this.getObjectRef.bind(this),getSuperRef:this.getSuperRef.bind(this),boundGet:handler.get},handler))}}},"./node_modules/.pnpm/@babel+helper-simple-access@7.22.5/node_modules/@babel/helper-simple-access/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_519695__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(path,bindingNames){var _arguments$;path.traverse(simpleAssignmentVisitor,{scope:path.scope,bindingNames,seen:new WeakSet,includeUpdateExpression:null==(_arguments$=arguments[2])||_arguments$})};var _t=__nested_webpack_require_519695__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{LOGICAL_OPERATORS,assignmentExpression,binaryExpression,cloneNode,identifier,logicalExpression,numericLiteral,sequenceExpression,unaryExpression}=_t,simpleAssignmentVisitor={AssignmentExpression:{exit(path){const{scope,seen,bindingNames}=this;if("="===path.node.operator)return;if(seen.has(path.node))return;seen.add(path.node);const left=path.get("left");if(!left.isIdentifier())return;const localName=left.node.name;if(!bindingNames.has(localName))return;if(scope.getBinding(localName)!==path.scope.getBinding(localName))return;const operator=path.node.operator.slice(0,-1);LOGICAL_OPERATORS.includes(operator)?path.replaceWith(logicalExpression(operator,path.node.left,assignmentExpression("=",cloneNode(path.node.left),path.node.right))):(path.node.right=binaryExpression(operator,cloneNode(path.node.left),path.node.right),path.node.operator="=")}}};simpleAssignmentVisitor.UpdateExpression={exit(path){if(!this.includeUpdateExpression)return;const{scope,bindingNames}=this,arg=path.get("argument");if(!arg.isIdentifier())return;const localName=arg.node.name;if(bindingNames.has(localName)&&scope.getBinding(localName)===path.scope.getBinding(localName))if(path.parentPath.isExpressionStatement()&&!path.isCompletionRecord()){const operator="++"==path.node.operator?"+=":"-=";path.replaceWith(assignmentExpression(operator,arg.node,numericLiteral(1)))}else if(path.node.prefix)path.replaceWith(assignmentExpression("=",identifier(localName),binaryExpression(path.node.operator[0],unaryExpression("+",arg.node),numericLiteral(1))));else{const old=path.scope.generateUidIdentifierBasedOnNode(arg.node,"old"),varName=old.name;path.scope.push({id:old});const binary=binaryExpression(path.node.operator[0],identifier(varName),numericLiteral(1));path.replaceWith(sequenceExpression([assignmentExpression("=",identifier(varName),unaryExpression("+",arg.node)),assignmentExpression("=",cloneNode(arg.node),binary),identifier(varName)]))}}}},"./node_modules/.pnpm/@babel+helper-skip-transparent-expression-wrappers@7.22.5/node_modules/@babel/helper-skip-transparent-expression-wrappers/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_522250__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isTransparentExprWrapper=isTransparentExprWrapper,exports.skipTransparentExprWrapperNodes=function(node){for(;isTransparentExprWrapper(node);)node=node.expression;return node},exports.skipTransparentExprWrappers=function(path){for(;isTransparentExprWrapper(path.node);)path=path.get("expression");return path};var _t=__nested_webpack_require_522250__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{isParenthesizedExpression,isTSAsExpression,isTSNonNullExpression,isTSSatisfiesExpression,isTSTypeAssertion,isTypeCastExpression}=_t;function isTransparentExprWrapper(node){return isTSAsExpression(node)||isTSSatisfiesExpression(node)||isTSTypeAssertion(node)||isTSNonNullExpression(node)||isTypeCastExpression(node)||isParenthesizedExpression(node)}},"./node_modules/.pnpm/@babel+helper-split-export-declaration@7.22.6/node_modules/@babel/helper-split-export-declaration/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_523292__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(exportDeclaration){if(!exportDeclaration.isExportDeclaration()||exportDeclaration.isExportAllDeclaration())throw new Error("Only default and named export declarations can be split.");if(exportDeclaration.isExportDefaultDeclaration()){const declaration=exportDeclaration.get("declaration"),standaloneDeclaration=declaration.isFunctionDeclaration()||declaration.isClassDeclaration(),exportExpr=declaration.isFunctionExpression()||declaration.isClassExpression(),scope=declaration.isScope()?declaration.scope.parent:declaration.scope;let id=declaration.node.id,needBindingRegistration=!1;id?exportExpr&&scope.hasBinding(id.name)&&(needBindingRegistration=!0,id=scope.generateUidIdentifier(id.name)):(needBindingRegistration=!0,id=scope.generateUidIdentifier("default"),(standaloneDeclaration||exportExpr)&&(declaration.node.id=cloneNode(id)));const updatedDeclaration=standaloneDeclaration?declaration.node:variableDeclaration("var",[variableDeclarator(cloneNode(id),declaration.node)]),updatedExportDeclaration=exportNamedDeclaration(null,[exportSpecifier(cloneNode(id),identifier("default"))]);return exportDeclaration.insertAfter(updatedExportDeclaration),exportDeclaration.replaceWith(updatedDeclaration),needBindingRegistration&&scope.registerDeclaration(exportDeclaration),exportDeclaration}if(exportDeclaration.get("specifiers").length>0)throw new Error("It doesn't make sense to split exported specifiers.");const declaration=exportDeclaration.get("declaration"),bindingIdentifiers=declaration.getOuterBindingIdentifiers(),specifiers=Object.keys(bindingIdentifiers).map((name=>exportSpecifier(identifier(name),identifier(name)))),aliasDeclar=exportNamedDeclaration(null,specifiers);return exportDeclaration.insertAfter(aliasDeclar),exportDeclaration.replaceWith(declaration.node),exportDeclaration};var _t=__nested_webpack_require_523292__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{cloneNode,exportNamedDeclaration,exportSpecifier,identifier,variableDeclaration,variableDeclarator}=_t},"./node_modules/.pnpm/@babel+helper-string-parser@7.22.5/node_modules/@babel/helper-string-parser/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.readCodePoint=readCodePoint,exports.readInt=readInt,exports.readStringContents=function(type,input,pos,lineStart,curLine,errors){const initialPos=pos,initialLineStart=lineStart,initialCurLine=curLine;let out="",firstInvalidLoc=null,chunkStart=pos;const{length}=input;for(;;){if(pos>=length){errors.unterminated(initialPos,initialLineStart,initialCurLine),out+=input.slice(chunkStart,pos);break}const ch=input.charCodeAt(pos);if(isStringEnd(type,ch,input,pos)){out+=input.slice(chunkStart,pos);break}if(92===ch){out+=input.slice(chunkStart,pos);const res=readEscapedChar(input,pos,lineStart,curLine,"template"===type,errors);null!==res.ch||firstInvalidLoc?out+=res.ch:firstInvalidLoc={pos,lineStart,curLine},({pos,lineStart,curLine}=res),chunkStart=pos}else 8232===ch||8233===ch?(++curLine,lineStart=++pos):10===ch||13===ch?"template"===type?(out+=input.slice(chunkStart,pos)+"\n",++pos,13===ch&&10===input.charCodeAt(pos)&&++pos,++curLine,chunkStart=lineStart=pos):errors.unterminated(initialPos,initialLineStart,initialCurLine):++pos}return{pos,str:out,firstInvalidLoc,lineStart,curLine,containsInvalid:!!firstInvalidLoc}};var _isDigit=function(code){return code>=48&&code<=57};const forbiddenNumericSeparatorSiblings={decBinOct:new Set([46,66,69,79,95,98,101,111]),hex:new Set([46,88,95,120])},isAllowedNumericSeparatorSibling={bin:ch=>48===ch||49===ch,oct:ch=>ch>=48&&ch<=55,dec:ch=>ch>=48&&ch<=57,hex:ch=>ch>=48&&ch<=57||ch>=65&&ch<=70||ch>=97&&ch<=102};function isStringEnd(type,ch,input,pos){return"template"===type?96===ch||36===ch&&123===input.charCodeAt(pos+1):ch===("double"===type?34:39)}function readEscapedChar(input,pos,lineStart,curLine,inTemplate,errors){const throwOnInvalid=!inTemplate;pos++;const res=ch=>({pos,ch,lineStart,curLine}),ch=input.charCodeAt(pos++);switch(ch){case 110:return res("\n");case 114:return res("\r");case 120:{let code;return({code,pos}=readHexChar(input,pos,lineStart,curLine,2,!1,throwOnInvalid,errors)),res(null===code?null:String.fromCharCode(code))}case 117:{let code;return({code,pos}=readCodePoint(input,pos,lineStart,curLine,throwOnInvalid,errors)),res(null===code?null:String.fromCodePoint(code))}case 116:return res("\t");case 98:return res("\b");case 118:return res("\v");case 102:return res("\f");case 13:10===input.charCodeAt(pos)&&++pos;case 10:lineStart=pos,++curLine;case 8232:case 8233:return res("");case 56:case 57:if(inTemplate)return res(null);errors.strictNumericEscape(pos-1,lineStart,curLine);default:if(ch>=48&&ch<=55){const startPos=pos-1;let octalStr=input.slice(startPos,pos+2).match(/^[0-7]+/)[0],octal=parseInt(octalStr,8);octal>255&&(octalStr=octalStr.slice(0,-1),octal=parseInt(octalStr,8)),pos+=octalStr.length-1;const next=input.charCodeAt(pos);if("0"!==octalStr||56===next||57===next){if(inTemplate)return res(null);errors.strictNumericEscape(startPos,lineStart,curLine)}return res(String.fromCharCode(octal))}return res(String.fromCharCode(ch))}}function readHexChar(input,pos,lineStart,curLine,len,forceLen,throwOnInvalid,errors){const initialPos=pos;let n;return({n,pos}=readInt(input,pos,lineStart,curLine,16,len,forceLen,!1,errors,!throwOnInvalid)),null===n&&(throwOnInvalid?errors.invalidEscapeSequence(initialPos,lineStart,curLine):pos=initialPos-1),{code:n,pos}}function readInt(input,pos,lineStart,curLine,radix,len,forceLen,allowNumSeparator,errors,bailOnError){const start=pos,forbiddenSiblings=16===radix?forbiddenNumericSeparatorSiblings.hex:forbiddenNumericSeparatorSiblings.decBinOct,isAllowedSibling=16===radix?isAllowedNumericSeparatorSibling.hex:10===radix?isAllowedNumericSeparatorSibling.dec:8===radix?isAllowedNumericSeparatorSibling.oct:isAllowedNumericSeparatorSibling.bin;let invalid=!1,total=0;for(let i=0,e=null==len?1/0:len;i<e;++i){const code=input.charCodeAt(pos);let val;if(95!==code||"bail"===allowNumSeparator){if(val=code>=97?code-97+10:code>=65?code-65+10:_isDigit(code)?code-48:1/0,val>=radix){if(val<=9&&bailOnError)return{n:null,pos};if(val<=9&&errors.invalidDigit(pos,lineStart,curLine,radix))val=0;else{if(!forceLen)break;val=0,invalid=!0}}++pos,total=total*radix+val}else{const prev=input.charCodeAt(pos-1),next=input.charCodeAt(pos+1);if(allowNumSeparator){if(Number.isNaN(next)||!isAllowedSibling(next)||forbiddenSiblings.has(prev)||forbiddenSiblings.has(next)){if(bailOnError)return{n:null,pos};errors.unexpectedNumericSeparator(pos,lineStart,curLine)}}else{if(bailOnError)return{n:null,pos};errors.numericSeparatorInEscapeSequence(pos,lineStart,curLine)}++pos}}return pos===start||null!=len&&pos-start!==len||invalid?{n:null,pos}:{n:total,pos}}function readCodePoint(input,pos,lineStart,curLine,throwOnInvalid,errors){let code;if(123===input.charCodeAt(pos)){if(++pos,({code,pos}=readHexChar(input,pos,lineStart,curLine,input.indexOf("}",pos)-pos,!0,throwOnInvalid,errors)),++pos,null!==code&&code>1114111){if(!throwOnInvalid)return{code:null,pos};errors.invalidCodePoint(pos,lineStart,curLine)}}else({code,pos}=readHexChar(input,pos,lineStart,curLine,4,!1,throwOnInvalid,errors));return{code,pos}}},"./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/identifier.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isIdentifierChar=isIdentifierChar,exports.isIdentifierName=function(name){let isFirst=!0;for(let i=0;i<name.length;i++){let cp=name.charCodeAt(i);if(55296==(64512&cp)&&i+1<name.length){const trail=name.charCodeAt(++i);56320==(64512&trail)&&(cp=65536+((1023&cp)<<10)+(1023&trail))}if(isFirst){if(isFirst=!1,!isIdentifierStart(cp))return!1}else if(!isIdentifierChar(cp))return!1}return!isFirst},exports.isIdentifierStart=isIdentifierStart;let nonASCIIidentifierStartChars="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",nonASCIIidentifierChars="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";const nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]"),nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+nonASCIIidentifierChars+"]");nonASCIIidentifierStartChars=nonASCIIidentifierChars=null;const astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191],astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];function isInAstralSet(code,set){let pos=65536;for(let i=0,length=set.length;i<length;i+=2){if(pos+=set[i],pos>code)return!1;if(pos+=set[i+1],pos>=code)return!0}return!1}function isIdentifierStart(code){return code<65?36===code:code<=90||(code<97?95===code:code<=122||(code<=65535?code>=170&&nonASCIIidentifierStart.test(String.fromCharCode(code)):isInAstralSet(code,astralIdentifierStartCodes)))}function isIdentifierChar(code){return code<48?36===code:code<58||!(code<65)&&(code<=90||(code<97?95===code:code<=122||(code<=65535?code>=170&&nonASCIIidentifier.test(String.fromCharCode(code)):isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes))))}},"./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_536252__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"isIdentifierChar",{enumerable:!0,get:function(){return _identifier.isIdentifierChar}}),Object.defineProperty(exports,"isIdentifierName",{enumerable:!0,get:function(){return _identifier.isIdentifierName}}),Object.defineProperty(exports,"isIdentifierStart",{enumerable:!0,get:function(){return _identifier.isIdentifierStart}}),Object.defineProperty(exports,"isKeyword",{enumerable:!0,get:function(){return _keyword.isKeyword}}),Object.defineProperty(exports,"isReservedWord",{enumerable:!0,get:function(){return _keyword.isReservedWord}}),Object.defineProperty(exports,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return _keyword.isStrictBindOnlyReservedWord}}),Object.defineProperty(exports,"isStrictBindReservedWord",{enumerable:!0,get:function(){return _keyword.isStrictBindReservedWord}}),Object.defineProperty(exports,"isStrictReservedWord",{enumerable:!0,get:function(){return _keyword.isStrictReservedWord}});var _identifier=__nested_webpack_require_536252__("./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/identifier.js"),_keyword=__nested_webpack_require_536252__("./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/keyword.js")},"./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/keyword.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isKeyword=function(word){return keywords.has(word)},exports.isReservedWord=isReservedWord,exports.isStrictBindOnlyReservedWord=isStrictBindOnlyReservedWord,exports.isStrictBindReservedWord=function(word,inModule){return isStrictReservedWord(word,inModule)||isStrictBindOnlyReservedWord(word)},exports.isStrictReservedWord=isStrictReservedWord;const reservedWords_strict=["implements","interface","let","package","private","protected","public","static","yield"],reservedWords_strictBind=["eval","arguments"],keywords=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),reservedWordsStrictSet=new Set(reservedWords_strict),reservedWordsStrictBindSet=new Set(reservedWords_strictBind);function isReservedWord(word,inModule){return inModule&&"await"===word||"enum"===word}function isStrictReservedWord(word,inModule){return isReservedWord(word,inModule)||reservedWordsStrictSet.has(word)}function isStrictBindOnlyReservedWord(word){return reservedWordsStrictBindSet.has(word)}},"./node_modules/.pnpm/@babel+helper-validator-option@7.22.5/node_modules/@babel/helper-validator-option/lib/find-suggestion.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.findSuggestion=function(str,arr){const distances=arr.map((el=>function(a,b){let i,j,t=[],u=[];const m=a.length,n=b.length;if(!m)return n;if(!n)return m;for(j=0;j<=n;j++)t[j]=j;for(i=1;i<=m;i++){for(u=[i],j=1;j<=n;j++)u[j]=a[i-1]===b[j-1]?t[j-1]:min(t[j-1],t[j],u[j-1])+1;t=u}return u[n]}(el,str)));return arr[distances.indexOf(min(...distances))]};const{min}=Math},"./node_modules/.pnpm/@babel+helper-validator-option@7.22.5/node_modules/@babel/helper-validator-option/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_539842__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"OptionValidator",{enumerable:!0,get:function(){return _validator.OptionValidator}}),Object.defineProperty(exports,"findSuggestion",{enumerable:!0,get:function(){return _findSuggestion.findSuggestion}});var _validator=__nested_webpack_require_539842__("./node_modules/.pnpm/@babel+helper-validator-option@7.22.5/node_modules/@babel/helper-validator-option/lib/validator.js"),_findSuggestion=__nested_webpack_require_539842__("./node_modules/.pnpm/@babel+helper-validator-option@7.22.5/node_modules/@babel/helper-validator-option/lib/find-suggestion.js")},"./node_modules/.pnpm/@babel+helper-validator-option@7.22.5/node_modules/@babel/helper-validator-option/lib/validator.js":(__unused_webpack_module,exports,__nested_webpack_require_540645__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.OptionValidator=void 0;var _findSuggestion=__nested_webpack_require_540645__("./node_modules/.pnpm/@babel+helper-validator-option@7.22.5/node_modules/@babel/helper-validator-option/lib/find-suggestion.js");exports.OptionValidator=class{constructor(descriptor){this.descriptor=descriptor}validateTopLevelOptions(options,TopLevelOptionShape){const validOptionNames=Object.keys(TopLevelOptionShape);for(const option of Object.keys(options))if(!validOptionNames.includes(option))throw new Error(this.formatMessage(`'${option}' is not a valid top-level option.\n- Did you mean '${(0,_findSuggestion.findSuggestion)(option,validOptionNames)}'?`))}validateBooleanOption(name,value,defaultValue){return void 0===value?defaultValue:(this.invariant("boolean"==typeof value,`'${name}' option must be a boolean.`),value)}validateStringOption(name,value,defaultValue){return void 0===value?defaultValue:(this.invariant("string"==typeof value,`'${name}' option must be a string.`),value)}invariant(condition,message){if(!condition)throw new Error(this.formatMessage(message))}formatMessage(message){return`${this.descriptor}: ${message}`}}},"./node_modules/.pnpm/@babel+helpers@7.22.6/node_modules/@babel/helpers/lib/helpers-generated.js":(__unused_webpack_module,exports,__nested_webpack_require_541988__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _template=__nested_webpack_require_541988__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js");function helper(minVersion,source){return Object.freeze({minVersion,ast:()=>_template.default.program.ast(source,{preserveComments:!0})})}var _default=Object.freeze({AsyncGenerator:helper("7.0.0-beta.0",'import OverloadYield from"OverloadYield";export default function AsyncGenerator(gen){var front,back;function resume(key,arg){try{var result=gen[key](arg),value=result.value,overloaded=value instanceof OverloadYield;Promise.resolve(overloaded?value.v:value).then((function(arg){if(overloaded){var nextKey="return"===key?"return":"next";if(!value.k||arg.done)return resume(nextKey,arg);arg=gen[nextKey](arg).value}settle(result.done?"return":"normal",arg)}),(function(err){resume("throw",err)}))}catch(err){settle("throw",err)}}function settle(type,value){switch(type){case"return":front.resolve({value:value,done:!0});break;case"throw":front.reject(value);break;default:front.resolve({value:value,done:!1})}(front=front.next)?resume(front.key,front.arg):back=null}this._invoke=function(key,arg){return new Promise((function(resolve,reject){var request={key:key,arg:arg,resolve:resolve,reject:reject,next:null};back?back=back.next=request:(front=back=request,resume(key,arg))}))},"function"!=typeof gen.return&&(this.return=void 0)}AsyncGenerator.prototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this},AsyncGenerator.prototype.next=function(arg){return this._invoke("next",arg)},AsyncGenerator.prototype.throw=function(arg){return this._invoke("throw",arg)},AsyncGenerator.prototype.return=function(arg){return this._invoke("return",arg)};'),OverloadYield:helper("7.18.14","export default function _OverloadYield(value,kind){this.v=value,this.k=kind}"),applyDecs:helper("7.17.8",'function old_createMetadataMethodsForProperty(metadataMap,kind,property,decoratorFinishedRef){return{getMetadata:function(key){old_assertNotFinished(decoratorFinishedRef,"getMetadata"),old_assertMetadataKey(key);var metadataForKey=metadataMap[key];if(void 0!==metadataForKey)if(1===kind){var pub=metadataForKey.public;if(void 0!==pub)return pub[property]}else if(2===kind){var priv=metadataForKey.private;if(void 0!==priv)return priv.get(property)}else if(Object.hasOwnProperty.call(metadataForKey,"constructor"))return metadataForKey.constructor},setMetadata:function(key,value){old_assertNotFinished(decoratorFinishedRef,"setMetadata"),old_assertMetadataKey(key);var metadataForKey=metadataMap[key];if(void 0===metadataForKey&&(metadataForKey=metadataMap[key]={}),1===kind){var pub=metadataForKey.public;void 0===pub&&(pub=metadataForKey.public={}),pub[property]=value}else if(2===kind){var priv=metadataForKey.priv;void 0===priv&&(priv=metadataForKey.private=new Map),priv.set(property,value)}else metadataForKey.constructor=value}}}function old_convertMetadataMapToFinal(obj,metadataMap){var parentMetadataMap=obj[Symbol.metadata||Symbol.for("Symbol.metadata")],metadataKeys=Object.getOwnPropertySymbols(metadataMap);if(0!==metadataKeys.length){for(var i=0;i<metadataKeys.length;i++){var key=metadataKeys[i],metaForKey=metadataMap[key],parentMetaForKey=parentMetadataMap?parentMetadataMap[key]:null,pub=metaForKey.public,parentPub=parentMetaForKey?parentMetaForKey.public:null;pub&&parentPub&&Object.setPrototypeOf(pub,parentPub);var priv=metaForKey.private;if(priv){var privArr=Array.from(priv.values()),parentPriv=parentMetaForKey?parentMetaForKey.private:null;parentPriv&&(privArr=privArr.concat(parentPriv)),metaForKey.private=privArr}parentMetaForKey&&Object.setPrototypeOf(metaForKey,parentMetaForKey)}parentMetadataMap&&Object.setPrototypeOf(metadataMap,parentMetadataMap),obj[Symbol.metadata||Symbol.for("Symbol.metadata")]=metadataMap}}function old_createAddInitializerMethod(initializers,decoratorFinishedRef){return function(initializer){old_assertNotFinished(decoratorFinishedRef,"addInitializer"),old_assertCallable(initializer,"An initializer"),initializers.push(initializer)}}function old_memberDec(dec,name,desc,metadataMap,initializers,kind,isStatic,isPrivate,value){var kindStr;switch(kind){case 1:kindStr="accessor";break;case 2:kindStr="method";break;case 3:kindStr="getter";break;case 4:kindStr="setter";break;default:kindStr="field"}var metadataKind,metadataName,ctx={kind:kindStr,name:isPrivate?"#"+name:name,isStatic:isStatic,isPrivate:isPrivate},decoratorFinishedRef={v:!1};if(0!==kind&&(ctx.addInitializer=old_createAddInitializerMethod(initializers,decoratorFinishedRef)),isPrivate){metadataKind=2,metadataName=Symbol(name);var access={};0===kind?(access.get=desc.get,access.set=desc.set):2===kind?access.get=function(){return desc.value}:(1!==kind&&3!==kind||(access.get=function(){return desc.get.call(this)}),1!==kind&&4!==kind||(access.set=function(v){desc.set.call(this,v)})),ctx.access=access}else metadataKind=1,metadataName=name;try{return dec(value,Object.assign(ctx,old_createMetadataMethodsForProperty(metadataMap,metadataKind,metadataName,decoratorFinishedRef)))}finally{decoratorFinishedRef.v=!0}}function old_assertNotFinished(decoratorFinishedRef,fnName){if(decoratorFinishedRef.v)throw new Error("attempted to call "+fnName+" after decoration was finished")}function old_assertMetadataKey(key){if("symbol"!=typeof key)throw new TypeError("Metadata keys must be symbols, received: "+key)}function old_assertCallable(fn,hint){if("function"!=typeof fn)throw new TypeError(hint+" must be a function")}function old_assertValidReturnValue(kind,value){var type=typeof value;if(1===kind){if("object"!==type||null===value)throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");void 0!==value.get&&old_assertCallable(value.get,"accessor.get"),void 0!==value.set&&old_assertCallable(value.set,"accessor.set"),void 0!==value.init&&old_assertCallable(value.init,"accessor.init"),void 0!==value.initializer&&old_assertCallable(value.initializer,"accessor.initializer")}else if("function"!==type){var hint;throw hint=0===kind?"field":10===kind?"class":"method",new TypeError(hint+" decorators must return a function or void 0")}}function old_getInit(desc){var initializer;return null==(initializer=desc.init)&&(initializer=desc.initializer)&&"undefined"!=typeof console&&console.warn(".initializer has been renamed to .init as of March 2022"),initializer}function old_applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,metadataMap,initializers){var desc,initializer,value,newValue,get,set,decs=decInfo[0];if(isPrivate?desc=0===kind||1===kind?{get:decInfo[3],set:decInfo[4]}:3===kind?{get:decInfo[3]}:4===kind?{set:decInfo[3]}:{value:decInfo[3]}:0!==kind&&(desc=Object.getOwnPropertyDescriptor(base,name)),1===kind?value={get:desc.get,set:desc.set}:2===kind?value=desc.value:3===kind?value=desc.get:4===kind&&(value=desc.set),"function"==typeof decs)void 0!==(newValue=old_memberDec(decs,name,desc,metadataMap,initializers,kind,isStatic,isPrivate,value))&&(old_assertValidReturnValue(kind,newValue),0===kind?initializer=newValue:1===kind?(initializer=old_getInit(newValue),get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue);else for(var i=decs.length-1;i>=0;i--){var newInit;if(void 0!==(newValue=old_memberDec(decs[i],name,desc,metadataMap,initializers,kind,isStatic,isPrivate,value)))old_assertValidReturnValue(kind,newValue),0===kind?newInit=newValue:1===kind?(newInit=old_getInit(newValue),get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue,void 0!==newInit&&(void 0===initializer?initializer=newInit:"function"==typeof initializer?initializer=[initializer,newInit]:initializer.push(newInit))}if(0===kind||1===kind){if(void 0===initializer)initializer=function(instance,init){return init};else if("function"!=typeof initializer){var ownInitializers=initializer;initializer=function(instance,init){for(var value=init,i=0;i<ownInitializers.length;i++)value=ownInitializers[i].call(instance,value);return value}}else{var originalInitializer=initializer;initializer=function(instance,init){return originalInitializer.call(instance,init)}}ret.push(initializer)}0!==kind&&(1===kind?(desc.get=value.get,desc.set=value.set):2===kind?desc.value=value:3===kind?desc.get=value:4===kind&&(desc.set=value),isPrivate?1===kind?(ret.push((function(instance,args){return value.get.call(instance,args)})),ret.push((function(instance,args){return value.set.call(instance,args)}))):2===kind?ret.push(value):ret.push((function(instance,args){return value.call(instance,args)})):Object.defineProperty(base,name,desc))}function old_applyMemberDecs(ret,Class,protoMetadataMap,staticMetadataMap,decInfos){for(var protoInitializers,staticInitializers,existingProtoNonFields=new Map,existingStaticNonFields=new Map,i=0;i<decInfos.length;i++){var decInfo=decInfos[i];if(Array.isArray(decInfo)){var base,metadataMap,initializers,kind=decInfo[1],name=decInfo[2],isPrivate=decInfo.length>3,isStatic=kind>=5;if(isStatic?(base=Class,metadataMap=staticMetadataMap,0!==(kind-=5)&&(initializers=staticInitializers=staticInitializers||[])):(base=Class.prototype,metadataMap=protoMetadataMap,0!==kind&&(initializers=protoInitializers=protoInitializers||[])),0!==kind&&!isPrivate){var existingNonFields=isStatic?existingStaticNonFields:existingProtoNonFields,existingKind=existingNonFields.get(name)||0;if(!0===existingKind||3===existingKind&&4!==kind||4===existingKind&&3!==kind)throw new Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: "+name);!existingKind&&kind>2?existingNonFields.set(name,kind):existingNonFields.set(name,!0)}old_applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,metadataMap,initializers)}}old_pushInitializers(ret,protoInitializers),old_pushInitializers(ret,staticInitializers)}function old_pushInitializers(ret,initializers){initializers&&ret.push((function(instance){for(var i=0;i<initializers.length;i++)initializers[i].call(instance);return instance}))}function old_applyClassDecs(ret,targetClass,metadataMap,classDecs){if(classDecs.length>0){for(var initializers=[],newClass=targetClass,name=targetClass.name,i=classDecs.length-1;i>=0;i--){var decoratorFinishedRef={v:!1};try{var ctx=Object.assign({kind:"class",name:name,addInitializer:old_createAddInitializerMethod(initializers,decoratorFinishedRef)},old_createMetadataMethodsForProperty(metadataMap,0,name,decoratorFinishedRef)),nextNewClass=classDecs[i](newClass,ctx)}finally{decoratorFinishedRef.v=!0}void 0!==nextNewClass&&(old_assertValidReturnValue(10,nextNewClass),newClass=nextNewClass)}ret.push(newClass,(function(){for(var i=0;i<initializers.length;i++)initializers[i].call(newClass)}))}}export default function applyDecs(targetClass,memberDecs,classDecs){var ret=[],staticMetadataMap={},protoMetadataMap={};return old_applyMemberDecs(ret,targetClass,protoMetadataMap,staticMetadataMap,memberDecs),old_convertMetadataMapToFinal(targetClass.prototype,protoMetadataMap),old_applyClassDecs(ret,targetClass,staticMetadataMap,classDecs),old_convertMetadataMapToFinal(targetClass,staticMetadataMap),ret}'),applyDecs2203:helper("7.19.0",'function applyDecs2203Factory(){function createAddInitializerMethod(initializers,decoratorFinishedRef){return function(initializer){!function(decoratorFinishedRef,fnName){if(decoratorFinishedRef.v)throw new Error("attempted to call "+fnName+" after decoration was finished")}(decoratorFinishedRef,"addInitializer"),assertCallable(initializer,"An initializer"),initializers.push(initializer)}}function memberDec(dec,name,desc,initializers,kind,isStatic,isPrivate,value){var kindStr;switch(kind){case 1:kindStr="accessor";break;case 2:kindStr="method";break;case 3:kindStr="getter";break;case 4:kindStr="setter";break;default:kindStr="field"}var get,set,ctx={kind:kindStr,name:isPrivate?"#"+name:name,static:isStatic,private:isPrivate},decoratorFinishedRef={v:!1};0!==kind&&(ctx.addInitializer=createAddInitializerMethod(initializers,decoratorFinishedRef)),0===kind?isPrivate?(get=desc.get,set=desc.set):(get=function(){return this[name]},set=function(v){this[name]=v}):2===kind?get=function(){return desc.value}:(1!==kind&&3!==kind||(get=function(){return desc.get.call(this)}),1!==kind&&4!==kind||(set=function(v){desc.set.call(this,v)})),ctx.access=get&&set?{get:get,set:set}:get?{get:get}:{set:set};try{return dec(value,ctx)}finally{decoratorFinishedRef.v=!0}}function assertCallable(fn,hint){if("function"!=typeof fn)throw new TypeError(hint+" must be a function")}function assertValidReturnValue(kind,value){var type=typeof value;if(1===kind){if("object"!==type||null===value)throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");void 0!==value.get&&assertCallable(value.get,"accessor.get"),void 0!==value.set&&assertCallable(value.set,"accessor.set"),void 0!==value.init&&assertCallable(value.init,"accessor.init")}else if("function"!==type){var hint;throw hint=0===kind?"field":10===kind?"class":"method",new TypeError(hint+" decorators must return a function or void 0")}}function applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,initializers){var desc,init,value,newValue,get,set,decs=decInfo[0];if(isPrivate?desc=0===kind||1===kind?{get:decInfo[3],set:decInfo[4]}:3===kind?{get:decInfo[3]}:4===kind?{set:decInfo[3]}:{value:decInfo[3]}:0!==kind&&(desc=Object.getOwnPropertyDescriptor(base,name)),1===kind?value={get:desc.get,set:desc.set}:2===kind?value=desc.value:3===kind?value=desc.get:4===kind&&(value=desc.set),"function"==typeof decs)void 0!==(newValue=memberDec(decs,name,desc,initializers,kind,isStatic,isPrivate,value))&&(assertValidReturnValue(kind,newValue),0===kind?init=newValue:1===kind?(init=newValue.init,get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue);else for(var i=decs.length-1;i>=0;i--){var newInit;if(void 0!==(newValue=memberDec(decs[i],name,desc,initializers,kind,isStatic,isPrivate,value)))assertValidReturnValue(kind,newValue),0===kind?newInit=newValue:1===kind?(newInit=newValue.init,get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue,void 0!==newInit&&(void 0===init?init=newInit:"function"==typeof init?init=[init,newInit]:init.push(newInit))}if(0===kind||1===kind){if(void 0===init)init=function(instance,init){return init};else if("function"!=typeof init){var ownInitializers=init;init=function(instance,init){for(var value=init,i=0;i<ownInitializers.length;i++)value=ownInitializers[i].call(instance,value);return value}}else{var originalInitializer=init;init=function(instance,init){return originalInitializer.call(instance,init)}}ret.push(init)}0!==kind&&(1===kind?(desc.get=value.get,desc.set=value.set):2===kind?desc.value=value:3===kind?desc.get=value:4===kind&&(desc.set=value),isPrivate?1===kind?(ret.push((function(instance,args){return value.get.call(instance,args)})),ret.push((function(instance,args){return value.set.call(instance,args)}))):2===kind?ret.push(value):ret.push((function(instance,args){return value.call(instance,args)})):Object.defineProperty(base,name,desc))}function pushInitializers(ret,initializers){initializers&&ret.push((function(instance){for(var i=0;i<initializers.length;i++)initializers[i].call(instance);return instance}))}return function(targetClass,memberDecs,classDecs){var ret=[];return function(ret,Class,decInfos){for(var protoInitializers,staticInitializers,existingProtoNonFields=new Map,existingStaticNonFields=new Map,i=0;i<decInfos.length;i++){var decInfo=decInfos[i];if(Array.isArray(decInfo)){var base,initializers,kind=decInfo[1],name=decInfo[2],isPrivate=decInfo.length>3,isStatic=kind>=5;if(isStatic?(base=Class,0!=(kind-=5)&&(initializers=staticInitializers=staticInitializers||[])):(base=Class.prototype,0!==kind&&(initializers=protoInitializers=protoInitializers||[])),0!==kind&&!isPrivate){var existingNonFields=isStatic?existingStaticNonFields:existingProtoNonFields,existingKind=existingNonFields.get(name)||0;if(!0===existingKind||3===existingKind&&4!==kind||4===existingKind&&3!==kind)throw new Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: "+name);!existingKind&&kind>2?existingNonFields.set(name,kind):existingNonFields.set(name,!0)}applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,initializers)}}pushInitializers(ret,protoInitializers),pushInitializers(ret,staticInitializers)}(ret,targetClass,memberDecs),function(ret,targetClass,classDecs){if(classDecs.length>0){for(var initializers=[],newClass=targetClass,name=targetClass.name,i=classDecs.length-1;i>=0;i--){var decoratorFinishedRef={v:!1};try{var nextNewClass=classDecs[i](newClass,{kind:"class",name:name,addInitializer:createAddInitializerMethod(initializers,decoratorFinishedRef)})}finally{decoratorFinishedRef.v=!0}void 0!==nextNewClass&&(assertValidReturnValue(10,nextNewClass),newClass=nextNewClass)}ret.push(newClass,(function(){for(var i=0;i<initializers.length;i++)initializers[i].call(newClass)}))}}(ret,targetClass,classDecs),ret}}var applyDecs2203Impl;export default function applyDecs2203(targetClass,memberDecs,classDecs){return(applyDecs2203Impl=applyDecs2203Impl||applyDecs2203Factory())(targetClass,memberDecs,classDecs)}'),applyDecs2203R:helper("7.20.0",'function applyDecs2203RFactory(){function createAddInitializerMethod(initializers,decoratorFinishedRef){return function(initializer){!function(decoratorFinishedRef,fnName){if(decoratorFinishedRef.v)throw new Error("attempted to call "+fnName+" after decoration was finished")}(decoratorFinishedRef,"addInitializer"),assertCallable(initializer,"An initializer"),initializers.push(initializer)}}function memberDec(dec,name,desc,initializers,kind,isStatic,isPrivate,value){var kindStr;switch(kind){case 1:kindStr="accessor";break;case 2:kindStr="method";break;case 3:kindStr="getter";break;case 4:kindStr="setter";break;default:kindStr="field"}var get,set,ctx={kind:kindStr,name:isPrivate?"#"+name:name,static:isStatic,private:isPrivate},decoratorFinishedRef={v:!1};0!==kind&&(ctx.addInitializer=createAddInitializerMethod(initializers,decoratorFinishedRef)),0===kind?isPrivate?(get=desc.get,set=desc.set):(get=function(){return this[name]},set=function(v){this[name]=v}):2===kind?get=function(){return desc.value}:(1!==kind&&3!==kind||(get=function(){return desc.get.call(this)}),1!==kind&&4!==kind||(set=function(v){desc.set.call(this,v)})),ctx.access=get&&set?{get:get,set:set}:get?{get:get}:{set:set};try{return dec(value,ctx)}finally{decoratorFinishedRef.v=!0}}function assertCallable(fn,hint){if("function"!=typeof fn)throw new TypeError(hint+" must be a function")}function assertValidReturnValue(kind,value){var type=typeof value;if(1===kind){if("object"!==type||null===value)throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");void 0!==value.get&&assertCallable(value.get,"accessor.get"),void 0!==value.set&&assertCallable(value.set,"accessor.set"),void 0!==value.init&&assertCallable(value.init,"accessor.init")}else if("function"!==type){var hint;throw hint=0===kind?"field":10===kind?"class":"method",new TypeError(hint+" decorators must return a function or void 0")}}function applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,initializers){var desc,init,value,newValue,get,set,decs=decInfo[0];if(isPrivate?desc=0===kind||1===kind?{get:decInfo[3],set:decInfo[4]}:3===kind?{get:decInfo[3]}:4===kind?{set:decInfo[3]}:{value:decInfo[3]}:0!==kind&&(desc=Object.getOwnPropertyDescriptor(base,name)),1===kind?value={get:desc.get,set:desc.set}:2===kind?value=desc.value:3===kind?value=desc.get:4===kind&&(value=desc.set),"function"==typeof decs)void 0!==(newValue=memberDec(decs,name,desc,initializers,kind,isStatic,isPrivate,value))&&(assertValidReturnValue(kind,newValue),0===kind?init=newValue:1===kind?(init=newValue.init,get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue);else for(var i=decs.length-1;i>=0;i--){var newInit;if(void 0!==(newValue=memberDec(decs[i],name,desc,initializers,kind,isStatic,isPrivate,value)))assertValidReturnValue(kind,newValue),0===kind?newInit=newValue:1===kind?(newInit=newValue.init,get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue,void 0!==newInit&&(void 0===init?init=newInit:"function"==typeof init?init=[init,newInit]:init.push(newInit))}if(0===kind||1===kind){if(void 0===init)init=function(instance,init){return init};else if("function"!=typeof init){var ownInitializers=init;init=function(instance,init){for(var value=init,i=0;i<ownInitializers.length;i++)value=ownInitializers[i].call(instance,value);return value}}else{var originalInitializer=init;init=function(instance,init){return originalInitializer.call(instance,init)}}ret.push(init)}0!==kind&&(1===kind?(desc.get=value.get,desc.set=value.set):2===kind?desc.value=value:3===kind?desc.get=value:4===kind&&(desc.set=value),isPrivate?1===kind?(ret.push((function(instance,args){return value.get.call(instance,args)})),ret.push((function(instance,args){return value.set.call(instance,args)}))):2===kind?ret.push(value):ret.push((function(instance,args){return value.call(instance,args)})):Object.defineProperty(base,name,desc))}function applyMemberDecs(Class,decInfos){for(var protoInitializers,staticInitializers,ret=[],existingProtoNonFields=new Map,existingStaticNonFields=new Map,i=0;i<decInfos.length;i++){var decInfo=decInfos[i];if(Array.isArray(decInfo)){var base,initializers,kind=decInfo[1],name=decInfo[2],isPrivate=decInfo.length>3,isStatic=kind>=5;if(isStatic?(base=Class,0!==(kind-=5)&&(initializers=staticInitializers=staticInitializers||[])):(base=Class.prototype,0!==kind&&(initializers=protoInitializers=protoInitializers||[])),0!==kind&&!isPrivate){var existingNonFields=isStatic?existingStaticNonFields:existingProtoNonFields,existingKind=existingNonFields.get(name)||0;if(!0===existingKind||3===existingKind&&4!==kind||4===existingKind&&3!==kind)throw new Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: "+name);!existingKind&&kind>2?existingNonFields.set(name,kind):existingNonFields.set(name,!0)}applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,initializers)}}return pushInitializers(ret,protoInitializers),pushInitializers(ret,staticInitializers),ret}function pushInitializers(ret,initializers){initializers&&ret.push((function(instance){for(var i=0;i<initializers.length;i++)initializers[i].call(instance);return instance}))}return function(targetClass,memberDecs,classDecs){return{e:applyMemberDecs(targetClass,memberDecs),get c(){return function(targetClass,classDecs){if(classDecs.length>0){for(var initializers=[],newClass=targetClass,name=targetClass.name,i=classDecs.length-1;i>=0;i--){var decoratorFinishedRef={v:!1};try{var nextNewClass=classDecs[i](newClass,{kind:"class",name:name,addInitializer:createAddInitializerMethod(initializers,decoratorFinishedRef)})}finally{decoratorFinishedRef.v=!0}void 0!==nextNewClass&&(assertValidReturnValue(10,nextNewClass),newClass=nextNewClass)}return[newClass,function(){for(var i=0;i<initializers.length;i++)initializers[i].call(newClass)}]}}(targetClass,classDecs)}}}}export default function applyDecs2203R(targetClass,memberDecs,classDecs){return(applyDecs2203R=applyDecs2203RFactory())(targetClass,memberDecs,classDecs)}'),applyDecs2301:helper("7.21.0",'import checkInRHS from"checkInRHS";function applyDecs2301Factory(){function createAddInitializerMethod(initializers,decoratorFinishedRef){return function(initializer){!function(decoratorFinishedRef,fnName){if(decoratorFinishedRef.v)throw new Error("attempted to call "+fnName+" after decoration was finished")}(decoratorFinishedRef,"addInitializer"),assertCallable(initializer,"An initializer"),initializers.push(initializer)}}function assertInstanceIfPrivate(has,target){if(!has(target))throw new TypeError("Attempted to access private element on non-instance")}function memberDec(dec,name,desc,initializers,kind,isStatic,isPrivate,value,hasPrivateBrand){var kindStr;switch(kind){case 1:kindStr="accessor";break;case 2:kindStr="method";break;case 3:kindStr="getter";break;case 4:kindStr="setter";break;default:kindStr="field"}var get,set,ctx={kind:kindStr,name:isPrivate?"#"+name:name,static:isStatic,private:isPrivate},decoratorFinishedRef={v:!1};if(0!==kind&&(ctx.addInitializer=createAddInitializerMethod(initializers,decoratorFinishedRef)),isPrivate||0!==kind&&2!==kind)if(2===kind)get=function(target){return assertInstanceIfPrivate(hasPrivateBrand,target),desc.value};else{var t=0===kind||1===kind;(t||3===kind)&&(get=isPrivate?function(target){return assertInstanceIfPrivate(hasPrivateBrand,target),desc.get.call(target)}:function(target){return desc.get.call(target)}),(t||4===kind)&&(set=isPrivate?function(target,value){assertInstanceIfPrivate(hasPrivateBrand,target),desc.set.call(target,value)}:function(target,value){desc.set.call(target,value)})}else get=function(target){return target[name]},0===kind&&(set=function(target,v){target[name]=v});var has=isPrivate?hasPrivateBrand.bind():function(target){return name in target};ctx.access=get&&set?{get:get,set:set,has:has}:get?{get:get,has:has}:{set:set,has:has};try{return dec(value,ctx)}finally{decoratorFinishedRef.v=!0}}function assertCallable(fn,hint){if("function"!=typeof fn)throw new TypeError(hint+" must be a function")}function assertValidReturnValue(kind,value){var type=typeof value;if(1===kind){if("object"!==type||null===value)throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");void 0!==value.get&&assertCallable(value.get,"accessor.get"),void 0!==value.set&&assertCallable(value.set,"accessor.set"),void 0!==value.init&&assertCallable(value.init,"accessor.init")}else if("function"!==type){var hint;throw hint=0===kind?"field":10===kind?"class":"method",new TypeError(hint+" decorators must return a function or void 0")}}function curryThis2(fn){return function(value){fn(this,value)}}function applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,initializers,hasPrivateBrand){var desc,init,value,fn,newValue,get,set,decs=decInfo[0];if(isPrivate?desc=0===kind||1===kind?{get:(fn=decInfo[3],function(){return fn(this)}),set:curryThis2(decInfo[4])}:3===kind?{get:decInfo[3]}:4===kind?{set:decInfo[3]}:{value:decInfo[3]}:0!==kind&&(desc=Object.getOwnPropertyDescriptor(base,name)),1===kind?value={get:desc.get,set:desc.set}:2===kind?value=desc.value:3===kind?value=desc.get:4===kind&&(value=desc.set),"function"==typeof decs)void 0!==(newValue=memberDec(decs,name,desc,initializers,kind,isStatic,isPrivate,value,hasPrivateBrand))&&(assertValidReturnValue(kind,newValue),0===kind?init=newValue:1===kind?(init=newValue.init,get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue);else for(var i=decs.length-1;i>=0;i--){var newInit;if(void 0!==(newValue=memberDec(decs[i],name,desc,initializers,kind,isStatic,isPrivate,value,hasPrivateBrand)))assertValidReturnValue(kind,newValue),0===kind?newInit=newValue:1===kind?(newInit=newValue.init,get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue,void 0!==newInit&&(void 0===init?init=newInit:"function"==typeof init?init=[init,newInit]:init.push(newInit))}if(0===kind||1===kind){if(void 0===init)init=function(instance,init){return init};else if("function"!=typeof init){var ownInitializers=init;init=function(instance,init){for(var value=init,i=0;i<ownInitializers.length;i++)value=ownInitializers[i].call(instance,value);return value}}else{var originalInitializer=init;init=function(instance,init){return originalInitializer.call(instance,init)}}ret.push(init)}0!==kind&&(1===kind?(desc.get=value.get,desc.set=value.set):2===kind?desc.value=value:3===kind?desc.get=value:4===kind&&(desc.set=value),isPrivate?1===kind?(ret.push((function(instance,args){return value.get.call(instance,args)})),ret.push((function(instance,args){return value.set.call(instance,args)}))):2===kind?ret.push(value):ret.push((function(instance,args){return value.call(instance,args)})):Object.defineProperty(base,name,desc))}function applyMemberDecs(Class,decInfos,instanceBrand){for(var protoInitializers,staticInitializers,staticBrand,ret=[],existingProtoNonFields=new Map,existingStaticNonFields=new Map,i=0;i<decInfos.length;i++){var decInfo=decInfos[i];if(Array.isArray(decInfo)){var base,initializers,kind=decInfo[1],name=decInfo[2],isPrivate=decInfo.length>3,isStatic=kind>=5,hasPrivateBrand=instanceBrand;if(isStatic?(base=Class,0!==(kind-=5)&&(initializers=staticInitializers=staticInitializers||[]),isPrivate&&!staticBrand&&(staticBrand=function(_){return checkInRHS(_)===Class}),hasPrivateBrand=staticBrand):(base=Class.prototype,0!==kind&&(initializers=protoInitializers=protoInitializers||[])),0!==kind&&!isPrivate){var existingNonFields=isStatic?existingStaticNonFields:existingProtoNonFields,existingKind=existingNonFields.get(name)||0;if(!0===existingKind||3===existingKind&&4!==kind||4===existingKind&&3!==kind)throw new Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: "+name);!existingKind&&kind>2?existingNonFields.set(name,kind):existingNonFields.set(name,!0)}applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,initializers,hasPrivateBrand)}}return pushInitializers(ret,protoInitializers),pushInitializers(ret,staticInitializers),ret}function pushInitializers(ret,initializers){initializers&&ret.push((function(instance){for(var i=0;i<initializers.length;i++)initializers[i].call(instance);return instance}))}return function(targetClass,memberDecs,classDecs,instanceBrand){return{e:applyMemberDecs(targetClass,memberDecs,instanceBrand),get c(){return function(targetClass,classDecs){if(classDecs.length>0){for(var initializers=[],newClass=targetClass,name=targetClass.name,i=classDecs.length-1;i>=0;i--){var decoratorFinishedRef={v:!1};try{var nextNewClass=classDecs[i](newClass,{kind:"class",name:name,addInitializer:createAddInitializerMethod(initializers,decoratorFinishedRef)})}finally{decoratorFinishedRef.v=!0}void 0!==nextNewClass&&(assertValidReturnValue(10,nextNewClass),newClass=nextNewClass)}return[newClass,function(){for(var i=0;i<initializers.length;i++)initializers[i].call(newClass)}]}}(targetClass,classDecs)}}}}export default function applyDecs2301(targetClass,memberDecs,classDecs,instanceBrand){return(applyDecs2301=applyDecs2301Factory())(targetClass,memberDecs,classDecs,instanceBrand)}'),applyDecs2305:helper("7.21.0",'import checkInRHS from"checkInRHS";function createAddInitializerMethod(initializers,decoratorFinishedRef){return function(initializer){assertNotFinished(decoratorFinishedRef,"addInitializer"),assertCallable(initializer,"An initializer"),initializers.push(initializer)}}function assertInstanceIfPrivate(has,target){if(!has(target))throw new TypeError("Attempted to access private element on non-instance")}function memberDec(dec,thisArg,name,desc,initializers,kind,isStatic,isPrivate,value,hasPrivateBrand){var kindStr;switch(kind){case 1:kindStr="accessor";break;case 2:kindStr="method";break;case 3:kindStr="getter";break;case 4:kindStr="setter";break;default:kindStr="field"}var get,set,ctx={kind:kindStr,name:isPrivate?"#"+name:name,static:isStatic,private:isPrivate},decoratorFinishedRef={v:!1};if(0!==kind&&(ctx.addInitializer=createAddInitializerMethod(initializers,decoratorFinishedRef)),isPrivate||0!==kind&&2!==kind)if(2===kind)get=function(target){return assertInstanceIfPrivate(hasPrivateBrand,target),desc.value};else{var t=0===kind||1===kind;(t||3===kind)&&(get=isPrivate?function(target){return assertInstanceIfPrivate(hasPrivateBrand,target),desc.get.call(target)}:function(target){return desc.get.call(target)}),(t||4===kind)&&(set=isPrivate?function(target,value){assertInstanceIfPrivate(hasPrivateBrand,target),desc.set.call(target,value)}:function(target,value){desc.set.call(target,value)})}else get=function(target){return target[name]},0===kind&&(set=function(target,v){target[name]=v});var has=isPrivate?hasPrivateBrand.bind():function(target){return name in target};ctx.access=get&&set?{get:get,set:set,has:has}:get?{get:get,has:has}:{set:set,has:has};try{return dec.call(thisArg,value,ctx)}finally{decoratorFinishedRef.v=!0}}function assertNotFinished(decoratorFinishedRef,fnName){if(decoratorFinishedRef.v)throw new Error("attempted to call "+fnName+" after decoration was finished")}function assertCallable(fn,hint){if("function"!=typeof fn)throw new TypeError(hint+" must be a function")}function assertValidReturnValue(kind,value){var type=typeof value;if(1===kind){if("object"!==type||null===value)throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");void 0!==value.get&&assertCallable(value.get,"accessor.get"),void 0!==value.set&&assertCallable(value.set,"accessor.set"),void 0!==value.init&&assertCallable(value.init,"accessor.init")}else if("function"!==type){var hint;throw hint=0===kind?"field":5===kind?"class":"method",new TypeError(hint+" decorators must return a function or void 0")}}function curryThis1(fn){return function(){return fn(this)}}function curryThis2(fn){return function(value){fn(this,value)}}function applyMemberDec(ret,base,decInfo,decoratorsHaveThis,name,kind,isStatic,isPrivate,initializers,hasPrivateBrand){var desc,init,value,newValue,get,set,decs=decInfo[0];decoratorsHaveThis||Array.isArray(decs)||(decs=[decs]),isPrivate?desc=0===kind||1===kind?{get:curryThis1(decInfo[3]),set:curryThis2(decInfo[4])}:3===kind?{get:decInfo[3]}:4===kind?{set:decInfo[3]}:{value:decInfo[3]}:0!==kind&&(desc=Object.getOwnPropertyDescriptor(base,name)),1===kind?value={get:desc.get,set:desc.set}:2===kind?value=desc.value:3===kind?value=desc.get:4===kind&&(value=desc.set);for(var inc=decoratorsHaveThis?2:1,i=decs.length-1;i>=0;i-=inc){var newInit;if(void 0!==(newValue=memberDec(decs[i],decoratorsHaveThis?decs[i-1]:void 0,name,desc,initializers,kind,isStatic,isPrivate,value,hasPrivateBrand)))assertValidReturnValue(kind,newValue),0===kind?newInit=newValue:1===kind?(newInit=newValue.init,get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue,void 0!==newInit&&(void 0===init?init=newInit:"function"==typeof init?init=[init,newInit]:init.push(newInit))}if(0===kind||1===kind){if(void 0===init)init=function(instance,init){return init};else if("function"!=typeof init){var ownInitializers=init;init=function(instance,init){for(var value=init,i=ownInitializers.length-1;i>=0;i--)value=ownInitializers[i].call(instance,value);return value}}else{var originalInitializer=init;init=function(instance,init){return originalInitializer.call(instance,init)}}ret.push(init)}0!==kind&&(1===kind?(desc.get=value.get,desc.set=value.set):2===kind?desc.value=value:3===kind?desc.get=value:4===kind&&(desc.set=value),isPrivate?1===kind?(ret.push((function(instance,args){return value.get.call(instance,args)})),ret.push((function(instance,args){return value.set.call(instance,args)}))):2===kind?ret.push(value):ret.push((function(instance,args){return value.call(instance,args)})):Object.defineProperty(base,name,desc))}function applyMemberDecs(Class,decInfos,instanceBrand){for(var protoInitializers,staticInitializers,staticBrand,ret=[],existingProtoNonFields=new Map,existingStaticNonFields=new Map,i=0;i<decInfos.length;i++){var decInfo=decInfos[i];if(Array.isArray(decInfo)){var base,initializers,kind=decInfo[1],name=decInfo[2],isPrivate=decInfo.length>3,decoratorsHaveThis=16&kind,isStatic=!!(8&kind),hasPrivateBrand=instanceBrand;if(kind&=7,isStatic?(base=Class,0!==kind&&(initializers=staticInitializers=staticInitializers||[]),isPrivate&&!staticBrand&&(staticBrand=function(_){return checkInRHS(_)===Class}),hasPrivateBrand=staticBrand):(base=Class.prototype,0!==kind&&(initializers=protoInitializers=protoInitializers||[])),0!==kind&&!isPrivate){var existingNonFields=isStatic?existingStaticNonFields:existingProtoNonFields,existingKind=existingNonFields.get(name)||0;if(!0===existingKind||3===existingKind&&4!==kind||4===existingKind&&3!==kind)throw new Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: "+name);existingNonFields.set(name,!(!existingKind&&kind>2)||kind)}applyMemberDec(ret,base,decInfo,decoratorsHaveThis,name,kind,isStatic,isPrivate,initializers,hasPrivateBrand)}}return pushInitializers(ret,protoInitializers),pushInitializers(ret,staticInitializers),ret}function pushInitializers(ret,initializers){initializers&&ret.push((function(instance){for(var i=0;i<initializers.length;i++)initializers[i].call(instance);return instance}))}function applyClassDecs(targetClass,classDecs,decoratorsHaveThis){if(classDecs.length){for(var initializers=[],newClass=targetClass,name=targetClass.name,inc=decoratorsHaveThis?2:1,i=classDecs.length-1;i>=0;i-=inc){var decoratorFinishedRef={v:!1};try{var nextNewClass=classDecs[i].call(decoratorsHaveThis?classDecs[i-1]:void 0,newClass,{kind:"class",name:name,addInitializer:createAddInitializerMethod(initializers,decoratorFinishedRef)})}finally{decoratorFinishedRef.v=!0}void 0!==nextNewClass&&(assertValidReturnValue(5,nextNewClass),newClass=nextNewClass)}return[newClass,function(){for(var i=0;i<initializers.length;i++)initializers[i].call(newClass)}]}}export default function applyDecs2305(targetClass,memberDecs,classDecs,classDecsHaveThis,instanceBrand){return{e:applyMemberDecs(targetClass,memberDecs,instanceBrand),get c(){return applyClassDecs(targetClass,classDecs,classDecsHaveThis)}}}'),asyncGeneratorDelegate:helper("7.0.0-beta.0",'import OverloadYield from"OverloadYield";export default function _asyncGeneratorDelegate(inner){var iter={},waiting=!1;function pump(key,value){return waiting=!0,value=new Promise((function(resolve){resolve(inner[key](value))})),{done:!1,value:new OverloadYield(value,1)}}return iter["undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator"]=function(){return this},iter.next=function(value){return waiting?(waiting=!1,value):pump("next",value)},"function"==typeof inner.throw&&(iter.throw=function(value){if(waiting)throw waiting=!1,value;return pump("throw",value)}),"function"==typeof inner.return&&(iter.return=function(value){return waiting?(waiting=!1,value):pump("return",value)}),iter}'),asyncIterator:helper("7.15.9",'export default function _asyncIterator(iterable){var method,async,sync,retry=2;for("undefined"!=typeof Symbol&&(async=Symbol.asyncIterator,sync=Symbol.iterator);retry--;){if(async&&null!=(method=iterable[async]))return method.call(iterable);if(sync&&null!=(method=iterable[sync]))return new AsyncFromSyncIterator(method.call(iterable));async="@@asyncIterator",sync="@@iterator"}throw new TypeError("Object is not async iterable")}function AsyncFromSyncIterator(s){function AsyncFromSyncIteratorContinuation(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+" is not an object."));var done=r.done;return Promise.resolve(r.value).then((function(value){return{value:value,done:done}}))}return AsyncFromSyncIterator=function(s){this.s=s,this.n=s.next},AsyncFromSyncIterator.prototype={s:null,n:null,next:function(){return AsyncFromSyncIteratorContinuation(this.n.apply(this.s,arguments))},return:function(value){var ret=this.s.return;return void 0===ret?Promise.resolve({value:value,done:!0}):AsyncFromSyncIteratorContinuation(ret.apply(this.s,arguments))},throw:function(value){var thr=this.s.return;return void 0===thr?Promise.reject(value):AsyncFromSyncIteratorContinuation(thr.apply(this.s,arguments))}},new AsyncFromSyncIterator(s)}'),awaitAsyncGenerator:helper("7.0.0-beta.0",'import OverloadYield from"OverloadYield";export default function _awaitAsyncGenerator(value){return new OverloadYield(value,0)}'),checkInRHS:helper("7.20.5",'export default function _checkInRHS(value){if(Object(value)!==value)throw TypeError("right-hand side of \'in\' should be an object, got "+(null!==value?typeof value:"null"));return value}'),defineAccessor:helper("7.20.7","export default function _defineAccessor(type,obj,key,fn){var desc={configurable:!0,enumerable:!0};return desc[type]=fn,Object.defineProperty(obj,key,desc)}"),dispose:helper("7.22.0",'function dispose_SuppressedError(suppressed,error){return"undefined"!=typeof SuppressedError?dispose_SuppressedError=SuppressedError:(dispose_SuppressedError=function(suppressed,error){this.suppressed=suppressed,this.error=error,this.stack=(new Error).stack},dispose_SuppressedError.prototype=Object.create(Error.prototype,{constructor:{value:dispose_SuppressedError,writable:!0,configurable:!0}})),new dispose_SuppressedError(suppressed,error)}export default function _dispose(stack,error,hasError){function next(){for(;stack.length>0;)try{var r=stack.pop(),p=r.d.call(r.v);if(r.a)return Promise.resolve(p).then(next,err)}catch(e){return err(e)}if(hasError)throw error}function err(e){return error=hasError?new dispose_SuppressedError(e,error):e,hasError=!0,next()}return next()}'),iterableToArrayLimit:helper("7.0.0-beta.0",'export default function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i.return&&(_r=_i.return(),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}'),iterableToArrayLimitLoose:helper("7.0.0-beta.0",'export default function _iterableToArrayLimitLoose(arr,i){var _i=arr&&("undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"]);if(null!=_i){var _s,_arr=[];for(_i=_i.call(arr);arr.length<i&&!(_s=_i.next()).done;)_arr.push(_s.value);return _arr}}'),jsx:helper("7.0.0-beta.0",'var REACT_ELEMENT_TYPE;export default function _createRawReactElement(type,props,key,children){REACT_ELEMENT_TYPE||(REACT_ELEMENT_TYPE="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var defaultProps=type&&type.defaultProps,childrenLength=arguments.length-3;if(props||0===childrenLength||(props={children:void 0}),1===childrenLength)props.children=children;else if(childrenLength>1){for(var childArray=new Array(childrenLength),i=0;i<childrenLength;i++)childArray[i]=arguments[i+3];props.children=childArray}if(props&&defaultProps)for(var propName in defaultProps)void 0===props[propName]&&(props[propName]=defaultProps[propName]);else props||(props=defaultProps||{});return{$$typeof:REACT_ELEMENT_TYPE,type:type,key:void 0===key?null:""+key,ref:null,props:props,_owner:null}}'),objectSpread2:helper("7.5.0",'import defineProperty from"defineProperty";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}export default function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}'),regeneratorRuntime:helper("7.18.0",'export default function _regeneratorRuntime(){"use strict";\n/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime=function(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(undefined===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=undefined,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a \'"+methodName+"\' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=undefined),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=undefined,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:undefined,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=undefined,this.done=!1,this.delegate=null,this.method="next",this.arg=undefined,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=undefined)},stop:function(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=undefined),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=undefined),ContinueSentinel}},exports}'),typeof:helper("7.0.0-beta.0",'export default function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}'),using:helper("7.22.0",'export default function _using(stack,value,isAwait){if(null==value)return value;if("object"!=typeof value)throw new TypeError("using declarations can only be used with objects, null, or undefined.");if(isAwait)var dispose=value[Symbol.asyncDispose||Symbol.for("Symbol.asyncDispose")];if(null==dispose&&(dispose=value[Symbol.dispose||Symbol.for("Symbol.dispose")]),"function"!=typeof dispose)throw new TypeError("Property [Symbol.dispose] is not a function.");return stack.push({v:value,d:dispose,a:isAwait}),value}'),wrapRegExp:helper("7.19.0",'import setPrototypeOf from"setPrototypeOf";import inherits from"inherits";export default function _wrapRegExp(){_wrapRegExp=function(re,groups){return new BabelRegExp(re,void 0,groups)};var _super=RegExp.prototype,_groups=new WeakMap;function BabelRegExp(re,flags,groups){var _this=new RegExp(re,flags);return _groups.set(_this,groups||_groups.get(re)),setPrototypeOf(_this,BabelRegExp.prototype)}function buildGroups(result,re){var g=_groups.get(re);return Object.keys(g).reduce((function(groups,name){var i=g[name];if("number"==typeof i)groups[name]=result[i];else{for(var k=0;void 0===result[i[k]]&&k+1<i.length;)k++;groups[name]=result[i[k]]}return groups}),Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(str){var result=_super.exec.call(this,str);if(result){result.groups=buildGroups(result,this);var indices=result.indices;indices&&(indices.groups=buildGroups(indices,this))}return result},BabelRegExp.prototype[Symbol.replace]=function(str,substitution){if("string"==typeof substitution){var groups=_groups.get(this);return _super[Symbol.replace].call(this,str,substitution.replace(/\\$<([^>]+)>/g,(function(_,name){var group=groups[name];return"$"+(Array.isArray(group)?group.join("$"):group)})))}if("function"==typeof substitution){var _this=this;return _super[Symbol.replace].call(this,str,(function(){var args=arguments;return"object"!=typeof args[args.length-1]&&(args=[].slice.call(args)).push(buildGroups(args,_this)),substitution.apply(this,args)}))}return _super[Symbol.replace].call(this,str,substitution)},_wrapRegExp.apply(this,arguments)}')});exports.default=_default},"./node_modules/.pnpm/@babel+helpers@7.22.6/node_modules/@babel/helpers/lib/helpers.js":(__unused_webpack_module,exports,__nested_webpack_require_599678__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _template=__nested_webpack_require_599678__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js"),_helpersGenerated=__nested_webpack_require_599678__("./node_modules/.pnpm/@babel+helpers@7.22.6/node_modules/@babel/helpers/lib/helpers-generated.js");const helpers=Object.assign({__proto__:null},_helpersGenerated.default);var _default=helpers;exports.default=_default;const helper=minVersion=>tpl=>({minVersion,ast:()=>_template.default.program.ast(tpl)});helpers.AwaitValue=helper("7.0.0-beta.0")`
    export default function _AwaitValue(value) {
      this.wrapped = value;
    }
  `,helpers.wrapAsyncGenerator=helper("7.0.0-beta.0")`
  import AsyncGenerator from "AsyncGenerator";

  export default function _wrapAsyncGenerator(fn) {
    return function () {
      return new AsyncGenerator(fn.apply(this, arguments));
    };
  }
`,helpers.asyncToGenerator=helper("7.0.0-beta.0")`
  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  export default function _asyncToGenerator(fn) {
    return function () {
      var self = this, args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);
        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }
        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }
`,helpers.classCallCheck=helper("7.0.0-beta.0")`
  export default function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
`,helpers.createClass=helper("7.0.0-beta.0")`
  import toPropertyKey from "toPropertyKey";
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i ++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
    }
  }

  export default function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  }
`,helpers.defineEnumerableProperties=helper("7.0.0-beta.0")`
  export default function _defineEnumerableProperties(obj, descs) {
    for (var key in descs) {
      var desc = descs[key];
      desc.configurable = desc.enumerable = true;
      if ("value" in desc) desc.writable = true;
      Object.defineProperty(obj, key, desc);
    }

    // Symbols are not enumerated over by for-in loops. If native
    // Symbols are available, fetch all of the descs object's own
    // symbol properties and define them on our target object too.
    if (Object.getOwnPropertySymbols) {
      var objectSymbols = Object.getOwnPropertySymbols(descs);
      for (var i = 0; i < objectSymbols.length; i++) {
        var sym = objectSymbols[i];
        var desc = descs[sym];
        desc.configurable = desc.enumerable = true;
        if ("value" in desc) desc.writable = true;
        Object.defineProperty(obj, sym, desc);
      }
    }
    return obj;
  }
`,helpers.defaults=helper("7.0.0-beta.0")`
  export default function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
`,helpers.defineProperty=helper("7.0.0-beta.0")`
  import toPropertyKey from "toPropertyKey";
  export default function _defineProperty(obj, key, value) {
    key = toPropertyKey(key);
    // Shortcircuit the slow defineProperty path when possible.
    // We are trying to avoid issues where setters defined on the
    // prototype cause side effects under the fast path of simple
    // assignment. By checking for existence of the property with
    // the in operator, we can optimize most of this overhead away.
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
`,helpers.extends=helper("7.0.0-beta.0")`
  export default function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };

    return _extends.apply(this, arguments);
  }
`,helpers.objectSpread=helper("7.0.0-beta.0")`
    import defineProperty from "defineProperty";

    export default function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = (arguments[i] != null) ? Object(arguments[i]) : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === 'function') {
          ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys.forEach(function(key) {
          defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
  `,helpers.inherits=helper("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";

  export default function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    // We can't use defineProperty to set the prototype in a single step because it
    // doesn't work in Chrome <= 36. https://github.com/babel/babel/issues/14056
    // V8 bug: https://bugs.chromium.org/p/v8/issues/detail?id=3334
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    Object.defineProperty(subClass, "prototype", { writable: false });
    if (superClass) setPrototypeOf(subClass, superClass);
  }
`,helpers.inheritsLoose=helper("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";

  export default function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    setPrototypeOf(subClass, superClass);
  }
`,helpers.getPrototypeOf=helper("7.0.0-beta.0")`
  export default function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function _getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
        };
    return _getPrototypeOf(o);
  }
`,helpers.setPrototypeOf=helper("7.0.0-beta.0")`
  export default function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function _setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
        };
    return _setPrototypeOf(o, p);
  }
`,helpers.isNativeReflectConstruct=helper("7.9.0")`
  export default function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;

    // core-js@3
    if (Reflect.construct.sham) return false;

    // Proxy can't be polyfilled. Every browser implemented
    // proxies before or at the same time as Reflect.construct,
    // so if they support Proxy they also support Reflect.construct.
    if (typeof Proxy === "function") return true;

    // Since Reflect.construct can't be properly polyfilled, some
    // implementations (e.g. core-js@2) don't set the correct internal slots.
    // Those polyfills don't allow us to subclass built-ins, so we need to
    // use our fallback implementation.
    try {
      // If the internal slots aren't set, this throws an error similar to
      //   TypeError: this is not a Boolean object.

      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
      return true;
    } catch (e) {
      return false;
    }
  }
`,helpers.construct=helper("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";
  import isNativeReflectConstruct from "isNativeReflectConstruct";

  export default function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      _construct = Reflect.construct.bind();
    } else {
      // NOTE: If Parent !== Class, the correct __proto__ is set *after*
      //       calling the constructor.
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }
    // Avoid issues with Class being present but undefined when it wasn't
    // present in the original call.
    return _construct.apply(null, arguments);
  }
`,helpers.isNativeFunction=helper("7.0.0-beta.0")`
  export default function _isNativeFunction(fn) {
    // Note: This function returns "true" for core-js functions.
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }
`,helpers.wrapNativeSuper=helper("7.0.0-beta.0")`
  import getPrototypeOf from "getPrototypeOf";
  import setPrototypeOf from "setPrototypeOf";
  import isNativeFunction from "isNativeFunction";
  import construct from "construct";

  export default function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;
      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }
      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);
        _cache.set(Class, Wrapper);
      }
      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor)
      }
      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true,
        }
      });

      return setPrototypeOf(Wrapper, Class);
    }

    return _wrapNativeSuper(Class)
  }
`,helpers.instanceof=helper("7.0.0-beta.0")`
  export default function _instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
      return !!right[Symbol.hasInstance](left);
    } else {
      return left instanceof right;
    }
  }
`,helpers.interopRequireDefault=helper("7.0.0-beta.0")`
  export default function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
`,helpers.interopRequireWildcard=helper("7.14.0")`
  function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;

    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function (nodeInterop) {
      return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
  }

  export default function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || (typeof obj !== "object" && typeof obj !== "function")) {
      return { default: obj }
    }

    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor
          ? Object.getOwnPropertyDescriptor(obj, key)
          : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj.default = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
`,helpers.newArrowCheck=helper("7.0.0-beta.0")`
  export default function _newArrowCheck(innerThis, boundThis) {
    if (innerThis !== boundThis) {
      throw new TypeError("Cannot instantiate an arrow function");
    }
  }
`,helpers.objectDestructuringEmpty=helper("7.0.0-beta.0")`
  export default function _objectDestructuringEmpty(obj) {
    if (obj == null) throw new TypeError("Cannot destructure " + obj);
  }
`,helpers.objectWithoutPropertiesLoose=helper("7.0.0-beta.0")`
  export default function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};

    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }
`,helpers.objectWithoutProperties=helper("7.0.0-beta.0")`
  import objectWithoutPropertiesLoose from "objectWithoutPropertiesLoose";

  export default function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }
`,helpers.assertThisInitialized=helper("7.0.0-beta.0")`
  export default function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
`,helpers.possibleConstructorReturn=helper("7.0.0-beta.0")`
  import assertThisInitialized from "assertThisInitialized";

  export default function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    } else if (call !== void 0) {
      throw new TypeError("Derived constructors may only return object or undefined");
    }

    return assertThisInitialized(self);
  }
`,helpers.createSuper=helper("7.9.0")`
  import getPrototypeOf from "getPrototypeOf";
  import isNativeReflectConstruct from "isNativeReflectConstruct";
  import possibleConstructorReturn from "possibleConstructorReturn";

  export default function _createSuper(Derived) {
    var hasNativeReflectConstruct = isNativeReflectConstruct();

    return function _createSuperInternal() {
      var Super = getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        // NOTE: This doesn't work if this.__proto__.constructor has been modified.
        var NewTarget = getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return possibleConstructorReturn(this, result);
    }
  }
 `,helpers.superPropBase=helper("7.0.0-beta.0")`
  import getPrototypeOf from "getPrototypeOf";

  export default function _superPropBase(object, property) {
    // Yes, this throws if object is null to being with, that's on purpose.
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }
    return object;
  }
`,helpers.get=helper("7.0.0-beta.0")`
  import superPropBase from "superPropBase";

  export default function _get() {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get.bind();
    } else {
      _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);

        if (!base) return;

        var desc = Object.getOwnPropertyDescriptor(base, property);
        if (desc.get) {
          // STEP 3. If receiver is not present, then set receiver to target.
          return desc.get.call(arguments.length < 3 ? target : receiver);
        }

        return desc.value;
      };
    }
    return _get.apply(this, arguments);
  }
`,helpers.set=helper("7.0.0-beta.0")`
  import superPropBase from "superPropBase";
  import defineProperty from "defineProperty";

  function set(target, property, value, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.set) {
      set = Reflect.set;
    } else {
      set = function set(target, property, value, receiver) {
        var base = superPropBase(target, property);
        var desc;

        if (base) {
          desc = Object.getOwnPropertyDescriptor(base, property);
          if (desc.set) {
            desc.set.call(receiver, value);
            return true;
          } else if (!desc.writable) {
            // Both getter and non-writable fall into this.
            return false;
          }
        }

        // Without a super that defines the property, spec boils down to
        // "define on receiver" for some reason.
        desc = Object.getOwnPropertyDescriptor(receiver, property);
        if (desc) {
          if (!desc.writable) {
            // Setter, getter, and non-writable fall into this.
            return false;
          }

          desc.value = value;
          Object.defineProperty(receiver, property, desc);
        } else {
          // Avoid setters that may be defined on Sub's prototype, but not on
          // the instance.
          defineProperty(receiver, property, value);
        }

        return true;
      };
    }

    return set(target, property, value, receiver);
  }

  export default function _set(target, property, value, receiver, isStrict) {
    var s = set(target, property, value, receiver || target);
    if (!s && isStrict) {
      throw new TypeError('failed to set property');
    }

    return value;
  }
`,helpers.taggedTemplateLiteral=helper("7.0.0-beta.0")`
  export default function _taggedTemplateLiteral(strings, raw) {
    if (!raw) { raw = strings.slice(0); }
    return Object.freeze(Object.defineProperties(strings, {
        raw: { value: Object.freeze(raw) }
    }));
  }
`,helpers.taggedTemplateLiteralLoose=helper("7.0.0-beta.0")`
  export default function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) { raw = strings.slice(0); }
    strings.raw = raw;
    return strings;
  }
`,helpers.readOnlyError=helper("7.0.0-beta.0")`
  export default function _readOnlyError(name) {
    throw new TypeError("\\"" + name + "\\" is read-only");
  }
`,helpers.writeOnlyError=helper("7.12.13")`
  export default function _writeOnlyError(name) {
    throw new TypeError("\\"" + name + "\\" is write-only");
  }
`,helpers.classNameTDZError=helper("7.0.0-beta.0")`
  export default function _classNameTDZError(name) {
    throw new ReferenceError("Class \\"" + name + "\\" cannot be referenced in computed property keys.");
  }
`,helpers.temporalUndefined=helper("7.0.0-beta.0")`
  // This function isn't mean to be called, but to be used as a reference.
  // We can't use a normal object because it isn't hoisted.
  export default function _temporalUndefined() {}
`,helpers.tdz=helper("7.5.5")`
  export default function _tdzError(name) {
    throw new ReferenceError(name + " is not defined - temporal dead zone");
  }
`,helpers.temporalRef=helper("7.0.0-beta.0")`
  import undef from "temporalUndefined";
  import err from "tdz";

  export default function _temporalRef(val, name) {
    return val === undef ? err(name) : val;
  }
`,helpers.slicedToArray=helper("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArrayLimit from "iterableToArrayLimit";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _slicedToArray(arr, i) {
    return (
      arrayWithHoles(arr) ||
      iterableToArrayLimit(arr, i) ||
      unsupportedIterableToArray(arr, i) ||
      nonIterableRest()
    );
  }
`,helpers.slicedToArrayLoose=helper("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArrayLimitLoose from "iterableToArrayLimitLoose";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _slicedToArrayLoose(arr, i) {
    return (
      arrayWithHoles(arr) ||
      iterableToArrayLimitLoose(arr, i) ||
      unsupportedIterableToArray(arr, i) ||
      nonIterableRest()
    );
  }
`,helpers.toArray=helper("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArray from "iterableToArray";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _toArray(arr) {
    return (
      arrayWithHoles(arr) ||
      iterableToArray(arr) ||
      unsupportedIterableToArray(arr) ||
      nonIterableRest()
    );
  }
`,helpers.toConsumableArray=helper("7.0.0-beta.0")`
  import arrayWithoutHoles from "arrayWithoutHoles";
  import iterableToArray from "iterableToArray";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableSpread from "nonIterableSpread";

  export default function _toConsumableArray(arr) {
    return (
      arrayWithoutHoles(arr) ||
      iterableToArray(arr) ||
      unsupportedIterableToArray(arr) ||
      nonIterableSpread()
    );
  }
`,helpers.arrayWithoutHoles=helper("7.0.0-beta.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return arrayLikeToArray(arr);
  }
`,helpers.arrayWithHoles=helper("7.0.0-beta.0")`
  export default function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
`,helpers.maybeArrayLike=helper("7.9.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _maybeArrayLike(next, arr, i) {
    if (arr && !Array.isArray(arr) && typeof arr.length === "number") {
      var len = arr.length;
      return arrayLikeToArray(arr, i !== void 0 && i < len ? i : len);
    }
    return next(arr, i);
  }
`,helpers.iterableToArray=helper("7.0.0-beta.0")`
  export default function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
`,helpers.unsupportedIterableToArray=helper("7.9.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return arrayLikeToArray(o, minLen);
  }
`,helpers.arrayLikeToArray=helper("7.9.0")`
  export default function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
`,helpers.nonIterableSpread=helper("7.0.0-beta.0")`
  export default function _nonIterableSpread() {
    throw new TypeError(
      "Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
`,helpers.nonIterableRest=helper("7.0.0-beta.0")`
  export default function _nonIterableRest() {
    throw new TypeError(
      "Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
`,helpers.createForOfIteratorHelper=helper("7.9.0")`
  import unsupportedIterableToArray from "unsupportedIterableToArray";

  // s: start (create the iterator)
  // n: next
  // e: error (called whenever something throws)
  // f: finish (always called at the end)

  export default function _createForOfIteratorHelper(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

    if (!it) {
      // Fallback for engines without symbol support
      if (
        Array.isArray(o) ||
        (it = unsupportedIterableToArray(o)) ||
        (allowArrayLike && o && typeof o.length === "number")
      ) {
        if (it) o = it;
        var i = 0;
        var F = function(){};
        return {
          s: F,
          n: function() {
            if (i >= o.length) return { done: true };
            return { done: false, value: o[i++] };
          },
          e: function(e) { throw e; },
          f: F,
        };
      }

      throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    var normalCompletion = true, didErr = false, err;

    return {
      s: function() {
        it = it.call(o);
      },
      n: function() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function(e) {
        didErr = true;
        err = e;
      },
      f: function() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
`,helpers.createForOfIteratorHelperLoose=helper("7.9.0")`
  import unsupportedIterableToArray from "unsupportedIterableToArray";

  export default function _createForOfIteratorHelperLoose(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

    if (it) return (it = it.call(o)).next.bind(it);

    // Fallback for engines without symbol support
    if (
      Array.isArray(o) ||
      (it = unsupportedIterableToArray(o)) ||
      (allowArrayLike && o && typeof o.length === "number")
    ) {
      if (it) o = it;
      var i = 0;
      return function() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
`,helpers.skipFirstGeneratorNext=helper("7.0.0-beta.0")`
  export default function _skipFirstGeneratorNext(fn) {
    return function () {
      var it = fn.apply(this, arguments);
      it.next();
      return it;
    }
  }
`,helpers.toPrimitive=helper("7.1.5")`
  export default function _toPrimitive(
    input,
    hint /*: "default" | "string" | "number" | void */
  ) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
`,helpers.toPropertyKey=helper("7.1.5")`
  import toPrimitive from "toPrimitive";

  export default function _toPropertyKey(arg) {
    var key = toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
`,helpers.initializerWarningHelper=helper("7.0.0-beta.0")`
    export default function _initializerWarningHelper(descriptor, context){
        throw new Error(
          'Decorating class property failed. Please ensure that ' +
          'transform-class-properties is enabled and runs after the decorators transform.'
        );
    }
`,helpers.initializerDefineProperty=helper("7.0.0-beta.0")`
    export default function _initializerDefineProperty(target, property, descriptor, context){
        if (!descriptor) return;

        Object.defineProperty(target, property, {
            enumerable: descriptor.enumerable,
            configurable: descriptor.configurable,
            writable: descriptor.writable,
            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,
        });
    }
`,helpers.applyDecoratedDescriptor=helper("7.0.0-beta.0")`
    export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context){
        var desc = {};
        Object.keys(descriptor).forEach(function(key){
            desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;
        if ('value' in desc || desc.initializer){
            desc.writable = true;
        }

        desc = decorators.slice().reverse().reduce(function(desc, decorator){
            return decorator(target, property, desc) || desc;
        }, desc);

        if (context && desc.initializer !== void 0){
            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
            desc.initializer = undefined;
        }

        if (desc.initializer === void 0){
            Object.defineProperty(target, property, desc);
            desc = null;
        }

        return desc;
    }
`,helpers.classPrivateFieldLooseKey=helper("7.0.0-beta.0")`
  var id = 0;
  export default function _classPrivateFieldKey(name) {
    return "__private_" + (id++) + "_" + name;
  }
`,helpers.classPrivateFieldLooseBase=helper("7.0.0-beta.0")`
  export default function _classPrivateFieldBase(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
      throw new TypeError("attempted to use private field on non-instance");
    }
    return receiver;
  }
`,helpers.classPrivateFieldGet=helper("7.0.0-beta.0")`
  import classApplyDescriptorGet from "classApplyDescriptorGet";
  import classExtractFieldDescriptor from "classExtractFieldDescriptor";
  export default function _classPrivateFieldGet(receiver, privateMap) {
    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "get");
    return classApplyDescriptorGet(receiver, descriptor);
  }
`,helpers.classPrivateFieldSet=helper("7.0.0-beta.0")`
  import classApplyDescriptorSet from "classApplyDescriptorSet";
  import classExtractFieldDescriptor from "classExtractFieldDescriptor";
  export default function _classPrivateFieldSet(receiver, privateMap, value) {
    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "set");
    classApplyDescriptorSet(receiver, descriptor, value);
    return value;
  }
`,helpers.classPrivateFieldDestructureSet=helper("7.4.4")`
  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";
  import classExtractFieldDescriptor from "classExtractFieldDescriptor";
  export default function _classPrivateFieldDestructureSet(receiver, privateMap) {
    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "set");
    return classApplyDescriptorDestructureSet(receiver, descriptor);
  }
`,helpers.classExtractFieldDescriptor=helper("7.13.10")`
  export default function _classExtractFieldDescriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
      throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
  }
`,helpers.classStaticPrivateFieldSpecGet=helper("7.0.2")`
  import classApplyDescriptorGet from "classApplyDescriptorGet";
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    classCheckPrivateStaticFieldDescriptor(descriptor, "get");
    return classApplyDescriptorGet(receiver, descriptor);
  }
`,helpers.classStaticPrivateFieldSpecSet=helper("7.0.2")`
  import classApplyDescriptorSet from "classApplyDescriptorSet";
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    classCheckPrivateStaticFieldDescriptor(descriptor, "set");
    classApplyDescriptorSet(receiver, descriptor, value);
    return value;
  }
`,helpers.classStaticPrivateMethodGet=helper("7.3.2")`
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  export default function _classStaticPrivateMethodGet(receiver, classConstructor, method) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    return method;
  }
`,helpers.classStaticPrivateMethodSet=helper("7.3.2")`
  export default function _classStaticPrivateMethodSet() {
    throw new TypeError("attempted to set read only static private field");
  }
`,helpers.classApplyDescriptorGet=helper("7.13.10")`
  export default function _classApplyDescriptorGet(receiver, descriptor) {
    if (descriptor.get) {
      return descriptor.get.call(receiver);
    }
    return descriptor.value;
  }
`,helpers.classApplyDescriptorSet=helper("7.13.10")`
  export default function _classApplyDescriptorSet(receiver, descriptor, value) {
    if (descriptor.set) {
      descriptor.set.call(receiver, value);
    } else {
      if (!descriptor.writable) {
        // This should only throw in strict mode, but class bodies are
        // always strict and private fields can only be used inside
        // class bodies.
        throw new TypeError("attempted to set read only private field");
      }
      descriptor.value = value;
    }
  }
`,helpers.classApplyDescriptorDestructureSet=helper("7.13.10")`
  export default function _classApplyDescriptorDestructureSet(receiver, descriptor) {
    if (descriptor.set) {
      if (!("__destrObj" in descriptor)) {
        descriptor.__destrObj = {
          set value(v) {
            descriptor.set.call(receiver, v)
          },
        };
      }
      return descriptor.__destrObj;
    } else {
      if (!descriptor.writable) {
        // This should only throw in strict mode, but class bodies are
        // always strict and private fields can only be used inside
        // class bodies.
        throw new TypeError("attempted to set read only private field");
      }

      return descriptor;
    }
  }
`,helpers.classStaticPrivateFieldDestructureSet=helper("7.13.10")`
  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldDestructureSet(receiver, classConstructor, descriptor) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    classCheckPrivateStaticFieldDescriptor(descriptor, "set");
    return classApplyDescriptorDestructureSet(receiver, descriptor);
  }
`,helpers.classCheckPrivateStaticAccess=helper("7.13.10")`
  export default function _classCheckPrivateStaticAccess(receiver, classConstructor) {
    if (receiver !== classConstructor) {
      throw new TypeError("Private static access of wrong provenance");
    }
  }
`,helpers.classCheckPrivateStaticFieldDescriptor=helper("7.13.10")`
  export default function _classCheckPrivateStaticFieldDescriptor(descriptor, action) {
    if (descriptor === undefined) {
      throw new TypeError("attempted to " + action + " private static field before its declaration");
    }
  }
`,helpers.decorate=helper("7.1.5")`
  import toArray from "toArray";
  import toPropertyKey from "toPropertyKey";

  // These comments are stripped by @babel/template
  /*::
  type PropertyDescriptor =
    | {
        value: any,
        writable: boolean,
        configurable: boolean,
        enumerable: boolean,
      }
    | {
        get?: () => any,
        set?: (v: any) => void,
        configurable: boolean,
        enumerable: boolean,
      };

  type FieldDescriptor ={
    writable: boolean,
    configurable: boolean,
    enumerable: boolean,
  };

  type Placement = "static" | "prototype" | "own";
  type Key = string | symbol; // PrivateName is not supported yet.

  type ElementDescriptor =
    | {
        kind: "method",
        key: Key,
        placement: Placement,
        descriptor: PropertyDescriptor
      }
    | {
        kind: "field",
        key: Key,
        placement: Placement,
        descriptor: FieldDescriptor,
        initializer?: () => any,
      };

  // This is exposed to the user code
  type ElementObjectInput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
  };

  // This is exposed to the user code
  type ElementObjectOutput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
    extras?: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  // This is exposed to the user code
  type ClassObject = {
    [@@toStringTag]?: "Descriptor",
    kind: "class",
    elements: ElementDescriptor[],
  };

  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;
  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;
  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;

  // Only used by Babel in the transform output, not part of the spec.
  type ElementDefinition =
    | {
        kind: "method",
        value: any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
      }
    | {
        kind: "field",
        value: () => any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
    };

  declare function ClassFactory<C>(initialize: (instance: C) => void): {
    F: Class<C>,
    d: ElementDefinition[]
  }

  */

  /*::
  // Various combinations with/without extras and with one or many finishers

  type ElementFinisherExtras = {
    element: ElementDescriptor,
    finisher?: ClassFinisher,
    extras?: ElementDescriptor[],
  };

  type ElementFinishersExtras = {
    element: ElementDescriptor,
    finishers: ClassFinisher[],
    extras: ElementDescriptor[],
  };

  type ElementsFinisher = {
    elements: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  type ElementsFinishers = {
    elements: ElementDescriptor[],
    finishers: ClassFinisher[],
  };

  */

  /*::

  type Placements = {
    static: Key[],
    prototype: Key[],
    own: Key[],
  };

  */

  // ClassDefinitionEvaluation (Steps 26-*)
  export default function _decorate(
    decorators /*: ClassDecorator[] */,
    factory /*: ClassFactory */,
    superClass /*: ?Class<*> */,
    mixins /*: ?Array<Function> */,
  ) /*: Class<*> */ {
    var api = _getDecoratorsApi();
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        api = mixins[i](api);
      }
    }

    var r = factory(function initialize(O) {
      api.initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = api.decorateClass(
      _coalesceClassElements(r.d.map(_createElementDescriptor)),
      decorators,
    );

    api.initializeClassElements(r.F, decorated.elements);

    return api.runClassFinishers(r.F, decorated.finishers);
  }

  function _getDecoratorsApi() {
    _getDecoratorsApi = function() {
      return api;
    };

    var api = {
      elementsDefinitionOrder: [["method"], ["field"]],

      // InitializeInstanceElements
      initializeInstanceElements: function(
        /*::<C>*/ O /*: C */,
        elements /*: ElementDescriptor[] */,
      ) {
        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            if (element.kind === kind && element.placement === "own") {
              this.defineClassElement(O, element);
            }
          }, this);
        }, this);
      },

      // InitializeClassElements
      initializeClassElements: function(
        /*::<C>*/ F /*: Class<C> */,
        elements /*: ElementDescriptor[] */,
      ) {
        var proto = F.prototype;

        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            var placement = element.placement;
            if (
              element.kind === kind &&
              (placement === "static" || placement === "prototype")
            ) {
              var receiver = placement === "static" ? F : proto;
              this.defineClassElement(receiver, element);
            }
          }, this);
        }, this);
      },

      // DefineClassElement
      defineClassElement: function(
        /*::<C>*/ receiver /*: C | Class<C> */,
        element /*: ElementDescriptor */,
      ) {
        var descriptor /*: PropertyDescriptor */ = element.descriptor;
        if (element.kind === "field") {
          var initializer = element.initializer;
          descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver),
          };
        }
        Object.defineProperty(receiver, element.key, descriptor);
      },

      // DecorateClass
      decorateClass: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var newElements /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];
        var placements /*: Placements */ = {
          static: [],
          prototype: [],
          own: [],
        };

        elements.forEach(function(element /*: ElementDescriptor */) {
          this.addElementPlacement(element, placements);
        }, this);

        elements.forEach(function(element /*: ElementDescriptor */) {
          if (!_hasDecorators(element)) return newElements.push(element);

          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(
            element,
            placements,
          );
          newElements.push(elementFinishersExtras.element);
          newElements.push.apply(newElements, elementFinishersExtras.extras);
          finishers.push.apply(finishers, elementFinishersExtras.finishers);
        }, this);

        if (!decorators) {
          return { elements: newElements, finishers: finishers };
        }

        var result /*: ElementsFinishers */ = this.decorateConstructor(
          newElements,
          decorators,
        );
        finishers.push.apply(finishers, result.finishers);
        result.finishers = finishers;

        return result;
      },

      // AddElementPlacement
      addElementPlacement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
        silent /*: boolean */,
      ) {
        var keys = placements[element.placement];
        if (!silent && keys.indexOf(element.key) !== -1) {
          throw new TypeError("Duplicated element (" + element.key + ")");
        }
        keys.push(element.key);
      },

      // DecorateElement
      decorateElement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
      ) /*: ElementFinishersExtras */ {
        var extras /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];

        for (
          var decorators = element.decorators, i = decorators.length - 1;
          i >= 0;
          i--
        ) {
          // (inlined) RemoveElementPlacement
          var keys = placements[element.placement];
          keys.splice(keys.indexOf(element.key), 1);

          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(
            element,
          );
          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(
            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||
              elementObject,
          );

          element = elementFinisherExtras.element;
          this.addElementPlacement(element, placements);

          if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
          }

          var newExtras /*: ElementDescriptor[] | void */ =
            elementFinisherExtras.extras;
          if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
              this.addElementPlacement(newExtras[j], placements);
            }
            extras.push.apply(extras, newExtras);
          }
        }

        return { element: element, finishers: finishers, extras: extras };
      },

      // DecorateConstructor
      decorateConstructor: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var finishers /*: ClassFinisher[] */ = [];

        for (var i = decorators.length - 1; i >= 0; i--) {
          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);
          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(
            (0, decorators[i])(obj) /*: ClassObject */ || obj,
          );

          if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
          }

          if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;

            for (var j = 0; j < elements.length - 1; j++) {
              for (var k = j + 1; k < elements.length; k++) {
                if (
                  elements[j].key === elements[k].key &&
                  elements[j].placement === elements[k].placement
                ) {
                  throw new TypeError(
                    "Duplicated element (" + elements[j].key + ")",
                  );
                }
              }
            }
          }
        }

        return { elements: elements, finishers: finishers };
      },

      // FromElementDescriptor
      fromElementDescriptor: function(
        element /*: ElementDescriptor */,
      ) /*: ElementObject */ {
        var obj /*: ElementObject */ = {
          kind: element.kind,
          key: element.key,
          placement: element.placement,
          descriptor: element.descriptor,
        };

        var desc = {
          value: "Descriptor",
          configurable: true,
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        if (element.kind === "field") obj.initializer = element.initializer;

        return obj;
      },

      // ToElementDescriptors
      toElementDescriptors: function(
        elementObjects /*: ElementObject[] */,
      ) /*: ElementDescriptor[] */ {
        if (elementObjects === undefined) return;
        return toArray(elementObjects).map(function(elementObject) {
          var element = this.toElementDescriptor(elementObject);
          this.disallowProperty(elementObject, "finisher", "An element descriptor");
          this.disallowProperty(elementObject, "extras", "An element descriptor");
          return element;
        }, this);
      },

      // ToElementDescriptor
      toElementDescriptor: function(
        elementObject /*: ElementObject */,
      ) /*: ElementDescriptor */ {
        var kind = String(elementObject.kind);
        if (kind !== "method" && kind !== "field") {
          throw new TypeError(
            'An element descriptor\\'s .kind property must be either "method" or' +
              ' "field", but a decorator created an element descriptor with' +
              ' .kind "' +
              kind +
              '"',
          );
        }

        var key = toPropertyKey(elementObject.key);

        var placement = String(elementObject.placement);
        if (
          placement !== "static" &&
          placement !== "prototype" &&
          placement !== "own"
        ) {
          throw new TypeError(
            'An element descriptor\\'s .placement property must be one of "static",' +
              ' "prototype" or "own", but a decorator created an element descriptor' +
              ' with .placement "' +
              placement +
              '"',
          );
        }

        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;

        this.disallowProperty(elementObject, "elements", "An element descriptor");

        var element /*: ElementDescriptor */ = {
          kind: kind,
          key: key,
          placement: placement,
          descriptor: Object.assign({}, descriptor),
        };

        if (kind !== "field") {
          this.disallowProperty(elementObject, "initializer", "A method descriptor");
        } else {
          this.disallowProperty(
            descriptor,
            "get",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "set",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "value",
            "The property descriptor of a field descriptor",
          );

          element.initializer = elementObject.initializer;
        }

        return element;
      },

      toElementFinisherExtras: function(
        elementObject /*: ElementObject */,
      ) /*: ElementFinisherExtras */ {
        var element /*: ElementDescriptor */ = this.toElementDescriptor(
          elementObject,
        );
        var finisher /*: ClassFinisher */ = _optionalCallableProperty(
          elementObject,
          "finisher",
        );
        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(
          elementObject.extras,
        );

        return { element: element, finisher: finisher, extras: extras };
      },

      // FromClassDescriptor
      fromClassDescriptor: function(
        elements /*: ElementDescriptor[] */,
      ) /*: ClassObject */ {
        var obj = {
          kind: "class",
          elements: elements.map(this.fromElementDescriptor, this),
        };

        var desc = { value: "Descriptor", configurable: true };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        return obj;
      },

      // ToClassDescriptor
      toClassDescriptor: function(
        obj /*: ClassObject */,
      ) /*: ElementsFinisher */ {
        var kind = String(obj.kind);
        if (kind !== "class") {
          throw new TypeError(
            'A class descriptor\\'s .kind property must be "class", but a decorator' +
              ' created a class descriptor with .kind "' +
              kind +
              '"',
          );
        }

        this.disallowProperty(obj, "key", "A class descriptor");
        this.disallowProperty(obj, "placement", "A class descriptor");
        this.disallowProperty(obj, "descriptor", "A class descriptor");
        this.disallowProperty(obj, "initializer", "A class descriptor");
        this.disallowProperty(obj, "extras", "A class descriptor");

        var finisher = _optionalCallableProperty(obj, "finisher");
        var elements = this.toElementDescriptors(obj.elements);

        return { elements: elements, finisher: finisher };
      },

      // RunClassFinishers
      runClassFinishers: function(
        constructor /*: Class<*> */,
        finishers /*: ClassFinisher[] */,
      ) /*: Class<*> */ {
        for (var i = 0; i < finishers.length; i++) {
          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);
          if (newConstructor !== undefined) {
            // NOTE: This should check if IsConstructor(newConstructor) is false.
            if (typeof newConstructor !== "function") {
              throw new TypeError("Finishers must return a constructor.");
            }
            constructor = newConstructor;
          }
        }
        return constructor;
      },

      disallowProperty: function(obj, name, objectType) {
        if (obj[name] !== undefined) {
          throw new TypeError(objectType + " can't have a ." + name + " property.");
        }
      }
    };

    return api;
  }

  // ClassElementEvaluation
  function _createElementDescriptor(
    def /*: ElementDefinition */,
  ) /*: ElementDescriptor */ {
    var key = toPropertyKey(def.key);

    var descriptor /*: PropertyDescriptor */;
    if (def.kind === "method") {
      descriptor = {
        value: def.value,
        writable: true,
        configurable: true,
        enumerable: false,
      };
    } else if (def.kind === "get") {
      descriptor = { get: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "set") {
      descriptor = { set: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "field") {
      descriptor = { configurable: true, writable: true, enumerable: true };
    }

    var element /*: ElementDescriptor */ = {
      kind: def.kind === "field" ? "field" : "method",
      key: key,
      placement: def.static
        ? "static"
        : def.kind === "field"
        ? "own"
        : "prototype",
      descriptor: descriptor,
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === "field") element.initializer = def.value;

    return element;
  }

  // CoalesceGetterSetter
  function _coalesceGetterSetter(
    element /*: ElementDescriptor */,
    other /*: ElementDescriptor */,
  ) {
    if (element.descriptor.get !== undefined) {
      other.descriptor.get = element.descriptor.get;
    } else {
      other.descriptor.set = element.descriptor.set;
    }
  }

  // CoalesceClassElements
  function _coalesceClassElements(
    elements /*: ElementDescriptor[] */,
  ) /*: ElementDescriptor[] */ {
    var newElements /*: ElementDescriptor[] */ = [];

    var isSameElement = function(
      other /*: ElementDescriptor */,
    ) /*: boolean */ {
      return (
        other.kind === "method" &&
        other.key === element.key &&
        other.placement === element.placement
      );
    };

    for (var i = 0; i < elements.length; i++) {
      var element /*: ElementDescriptor */ = elements[i];
      var other /*: ElementDescriptor */;

      if (
        element.kind === "method" &&
        (other = newElements.find(isSameElement))
      ) {
        if (
          _isDataDescriptor(element.descriptor) ||
          _isDataDescriptor(other.descriptor)
        ) {
          if (_hasDecorators(element) || _hasDecorators(other)) {
            throw new ReferenceError(
              "Duplicated methods (" + element.key + ") can't be decorated.",
            );
          }
          other.descriptor = element.descriptor;
        } else {
          if (_hasDecorators(element)) {
            if (_hasDecorators(other)) {
              throw new ReferenceError(
                "Decorators can't be placed on different accessors with for " +
                  "the same property (" +
                  element.key +
                  ").",
              );
            }
            other.decorators = element.decorators;
          }
          _coalesceGetterSetter(element, other);
        }
      } else {
        newElements.push(element);
      }
    }

    return newElements;
  }

  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {
    return element.decorators && element.decorators.length;
  }

  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {
    return (
      desc !== undefined &&
      !(desc.value === undefined && desc.writable === undefined)
    );
  }

  function _optionalCallableProperty /*::<T>*/(
    obj /*: T */,
    name /*: $Keys<T> */,
  ) /*: ?Function */ {
    var value = obj[name];
    if (value !== undefined && typeof value !== "function") {
      throw new TypeError("Expected '" + name + "' to be a function");
    }
    return value;
  }

`,helpers.classPrivateMethodGet=helper("7.1.6")`
  export default function _classPrivateMethodGet(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) {
      throw new TypeError("attempted to get private field on non-instance");
    }
    return fn;
  }
`,helpers.checkPrivateRedeclaration=helper("7.14.1")`
  export default function _checkPrivateRedeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
      throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
  }
`,helpers.classPrivateFieldInitSpec=helper("7.14.1")`
  import checkPrivateRedeclaration from "checkPrivateRedeclaration";

  export default function _classPrivateFieldInitSpec(obj, privateMap, value) {
    checkPrivateRedeclaration(obj, privateMap);
    privateMap.set(obj, value);
  }
`,helpers.classPrivateMethodInitSpec=helper("7.14.1")`
  import checkPrivateRedeclaration from "checkPrivateRedeclaration";

  export default function _classPrivateMethodInitSpec(obj, privateSet) {
    checkPrivateRedeclaration(obj, privateSet);
    privateSet.add(obj);
  }
`,helpers.classPrivateMethodSet=helper("7.1.6")`
    export default function _classPrivateMethodSet() {
      throw new TypeError("attempted to reassign private method");
    }
  `,helpers.identity=helper("7.17.0")`
  export default function _identity(x) {
    return x;
  }
`},"./node_modules/.pnpm/@babel+helpers@7.22.6/node_modules/@babel/helpers/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_658418__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,exports.ensure=function(name,newFileClass){FileClass||(FileClass=newFileClass),loadHelper(name)},exports.get=get,exports.getDependencies=function(name){return loadHelper(name).getDependencies()},exports.list=void 0,exports.minVersion=function(name){return loadHelper(name).minVersion};var _traverse=__nested_webpack_require_658418__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js"),_t=__nested_webpack_require_658418__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_helpers=__nested_webpack_require_658418__("./node_modules/.pnpm/@babel+helpers@7.22.6/node_modules/@babel/helpers/lib/helpers.js");const{assignmentExpression,cloneNode,expressionStatement,file,identifier}=_t;function makePath(path){const parts=[];for(;path.parentPath;path=path.parentPath)parts.push(path.key),path.inList&&parts.push(path.listKey);return parts.reverse().join(".")}let FileClass;function getHelperMetadata(file){const globals=new Set,localBindingNames=new Set,dependencies=new Map;let exportName,exportPath;const exportBindingAssignments=[],importPaths=[],importBindingsReferences=[],dependencyVisitor={ImportDeclaration(child){const name=child.node.source.value;if(!_helpers.default[name])throw child.buildCodeFrameError(`Unknown helper ${name}`);if(1!==child.get("specifiers").length||!child.get("specifiers.0").isImportDefaultSpecifier())throw child.buildCodeFrameError("Helpers can only import a default value");const bindingIdentifier=child.node.specifiers[0].local;dependencies.set(bindingIdentifier,name),importPaths.push(makePath(child))},ExportDefaultDeclaration(child){const decl=child.get("declaration");if(!decl.isFunctionDeclaration()||!decl.node.id)throw decl.buildCodeFrameError("Helpers can only export named function declarations");exportName=decl.node.id.name,exportPath=makePath(child)},ExportAllDeclaration(child){throw child.buildCodeFrameError("Helpers can only export default")},ExportNamedDeclaration(child){throw child.buildCodeFrameError("Helpers can only export default")},Statement(child){child.isImportDeclaration()||child.isExportDeclaration()||child.skip()}},referenceVisitor={Program(path){const bindings=path.scope.getAllBindings();Object.keys(bindings).forEach((name=>{name!==exportName&&(dependencies.has(bindings[name].identifier)||localBindingNames.add(name))}))},ReferencedIdentifier(child){const name=child.node.name,binding=child.scope.getBinding(name);binding?dependencies.has(binding.identifier)&&importBindingsReferences.push(makePath(child)):globals.add(name)},AssignmentExpression(child){const left=child.get("left");if(!(exportName in left.getBindingIdentifiers()))return;if(!left.isIdentifier())throw left.buildCodeFrameError("Only simple assignments to exports are allowed in helpers");const binding=child.scope.getBinding(exportName);null!=binding&&binding.scope.path.isProgram()&&exportBindingAssignments.push(makePath(child))}};if((0,_traverse.default)(file.ast,dependencyVisitor,file.scope),(0,_traverse.default)(file.ast,referenceVisitor,file.scope),!exportPath)throw new Error("Helpers must have a default export.");return exportBindingAssignments.reverse(),{globals:Array.from(globals),localBindingNames:Array.from(localBindingNames),dependencies,exportBindingAssignments,exportPath,exportName,importBindingsReferences,importPaths}}const helperData=Object.create(null);function loadHelper(name){if(!helperData[name]){const helper=_helpers.default[name];if(!helper)throw Object.assign(new ReferenceError(`Unknown helper ${name}`),{code:"BABEL_HELPER_UNKNOWN",helper:name});const fn=()=>{if(!FileClass){const fakeFile={ast:file(helper.ast()),path:null};return(0,_traverse.default)(fakeFile.ast,{Program:path=>(fakeFile.path=path).stop()}),fakeFile}return new FileClass({filename:`babel-helper://${name}`},{ast:file(helper.ast()),code:"[internal Babel helper code]",inputMap:null})};let metadata=null;helperData[name]={minVersion:helper.minVersion,build(getDependency,id,localBindings){const file=fn();return metadata||(metadata=getHelperMetadata(file)),function(file,metadata,id,localBindings,getDependency){if(localBindings&&!id)throw new Error("Unexpected local bindings for module-based helpers.");if(!id)return;const{localBindingNames,dependencies,exportBindingAssignments,exportPath,exportName,importBindingsReferences,importPaths}=metadata,dependenciesRefs={};dependencies.forEach(((name,id)=>{dependenciesRefs[id.name]="function"==typeof getDependency&&getDependency(name)||id}));const toRename={},bindings=new Set(localBindings||[]);localBindingNames.forEach((name=>{let newName=name;for(;bindings.has(newName);)newName="_"+newName;newName!==name&&(toRename[name]=newName)})),"Identifier"===id.type&&exportName!==id.name&&(toRename[exportName]=id.name);const{path}=file,exp=path.get(exportPath),imps=importPaths.map((p=>path.get(p))),impsBindingRefs=importBindingsReferences.map((p=>path.get(p))),decl=exp.get("declaration");if("Identifier"===id.type)exp.replaceWith(decl);else{if("MemberExpression"!==id.type)throw new Error("Unexpected helper format.");exportBindingAssignments.forEach((assignPath=>{const assign=path.get(assignPath);assign.replaceWith(assignmentExpression("=",id,assign.node))})),exp.replaceWith(decl),path.pushContainer("body",expressionStatement(assignmentExpression("=",id,identifier(exportName))))}Object.keys(toRename).forEach((name=>{path.scope.rename(name,toRename[name])}));for(const path of imps)path.remove();for(const path of impsBindingRefs){const node=cloneNode(dependenciesRefs[path.node.name]);path.replaceWith(node)}}(file,metadata,id,localBindings,getDependency),{nodes:file.ast.program.body,globals:metadata.globals}},getDependencies:()=>(metadata||(metadata=getHelperMetadata(fn())),Array.from(metadata.dependencies.values()))}}return helperData[name]}function get(name,getDependency,id,localBindings){return loadHelper(name).build(getDependency,id,localBindings)}const list=Object.keys(_helpers.default).map((name=>name.replace(/^_/,"")));exports.list=list;var _default=get;exports.default=_default},"./node_modules/.pnpm/@babel+parser@7.22.6/node_modules/@babel/parser/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}Object.defineProperty(exports,"__esModule",{value:!0});class Position{constructor(line,col,index){this.line=void 0,this.column=void 0,this.index=void 0,this.line=line,this.column=col,this.index=index}}class SourceLocation{constructor(start,end){this.start=void 0,this.end=void 0,this.filename=void 0,this.identifierName=void 0,this.start=start,this.end=end}}function createPositionWithColumnOffset(position,columnOffset){const{line,column,index}=position;return new Position(line,column+columnOffset,index+columnOffset)}var ParseErrorCode_SyntaxError="BABEL_PARSER_SYNTAX_ERROR",ParseErrorCode_SourceTypeModuleError="BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED";const reflect=(keys,last=keys.length-1)=>({get(){return keys.reduce(((object,key)=>object[key]),this)},set(value){keys.reduce(((item,key,i)=>i===last?item[key]=value:item[key]),this)}}),instantiate=(constructor,properties,descriptors)=>Object.keys(descriptors).map((key=>[key,descriptors[key]])).filter((([,descriptor])=>!!descriptor)).map((([key,descriptor])=>[key,"function"==typeof descriptor?{value:descriptor,enumerable:!1}:"string"==typeof descriptor.reflect?Object.assign({},descriptor,reflect(descriptor.reflect.split("."))):descriptor])).reduce(((instance,[key,descriptor])=>Object.defineProperty(instance,key,Object.assign({configurable:!0},descriptor))),Object.assign(new constructor,properties));var ModuleErrors={ImportMetaOutsideModule:{message:"import.meta may appear only with 'sourceType: \"module\"'",code:ParseErrorCode_SourceTypeModuleError},ImportOutsideModule:{message:"'import' and 'export' may appear only with 'sourceType: \"module\"'",code:ParseErrorCode_SourceTypeModuleError}};const NodeDescriptions={ArrayPattern:"array destructuring pattern",AssignmentExpression:"assignment expression",AssignmentPattern:"assignment expression",ArrowFunctionExpression:"arrow function expression",ConditionalExpression:"conditional expression",CatchClause:"catch clause",ForOfStatement:"for-of statement",ForInStatement:"for-in statement",ForStatement:"for-loop",FormalParameters:"function parameter list",Identifier:"identifier",ImportSpecifier:"import specifier",ImportDefaultSpecifier:"import default specifier",ImportNamespaceSpecifier:"import namespace specifier",ObjectPattern:"object destructuring pattern",ParenthesizedExpression:"parenthesized expression",RestElement:"rest element",UpdateExpression:{true:"prefix operation",false:"postfix operation"},VariableDeclarator:"variable declaration",YieldExpression:"yield expression"},toNodeDescription=({type,prefix})=>"UpdateExpression"===type?NodeDescriptions.UpdateExpression[String(prefix)]:NodeDescriptions[type];var StandardErrors={AccessorIsGenerator:({kind})=>`A ${kind}ter cannot be a generator.`,ArgumentsInClass:"'arguments' is only allowed in functions and class methods.",AsyncFunctionInSingleStatementContext:"Async functions can only be declared at the top level or inside a block.",AwaitBindingIdentifier:"Can not use 'await' as identifier inside an async function.",AwaitBindingIdentifierInStaticBlock:"Can not use 'await' as identifier inside a static block.",AwaitExpressionFormalParameter:"'await' is not allowed in async function parameters.",AwaitUsingNotInAsyncContext:"'await using' is only allowed within async functions and at the top levels of modules.",AwaitNotInAsyncContext:"'await' is only allowed within async functions and at the top levels of modules.",AwaitNotInAsyncFunction:"'await' is only allowed within async functions.",BadGetterArity:"A 'get' accessor must not have any formal parameters.",BadSetterArity:"A 'set' accessor must have exactly one formal parameter.",BadSetterRestParameter:"A 'set' accessor function argument must not be a rest parameter.",ConstructorClassField:"Classes may not have a field named 'constructor'.",ConstructorClassPrivateField:"Classes may not have a private field named '#constructor'.",ConstructorIsAccessor:"Class constructor may not be an accessor.",ConstructorIsAsync:"Constructor can't be an async function.",ConstructorIsGenerator:"Constructor can't be a generator.",DeclarationMissingInitializer:({kind})=>`Missing initializer in ${kind} declaration.`,DecoratorArgumentsOutsideParentheses:"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.",DecoratorBeforeExport:"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.",DecoratorsBeforeAfterExport:"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.",DecoratorConstructor:"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?",DecoratorExportClass:"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.",DecoratorSemicolon:"Decorators must not be followed by a semicolon.",DecoratorStaticBlock:"Decorators can't be used with a static block.",DeletePrivateField:"Deleting a private field is not allowed.",DestructureNamedImport:"ES2015 named imports do not destructure. Use another statement for destructuring after the import.",DuplicateConstructor:"Duplicate constructor in the same class.",DuplicateDefaultExport:"Only one default export allowed per module.",DuplicateExport:({exportName})=>`\`${exportName}\` has already been exported. Exported identifiers must be unique.`,DuplicateProto:"Redefinition of __proto__ property.",DuplicateRegExpFlags:"Duplicate regular expression flag.",ElementAfterRest:"Rest element must be last element.",EscapedCharNotAnIdentifier:"Invalid Unicode escape.",ExportBindingIsString:({localName,exportName})=>`A string literal cannot be used as an exported binding without \`from\`.\n- Did you mean \`export { '${localName}' as '${exportName}' } from 'some-module'\`?`,ExportDefaultFromAsIdentifier:"'from' is not allowed as an identifier after 'export default'.",ForInOfLoopInitializer:({type})=>`'${"ForInStatement"===type?"for-in":"for-of"}' loop variable declaration may not have an initializer.`,ForInUsing:"For-in loop may not start with 'using' declaration.",ForOfAsync:"The left-hand side of a for-of loop may not be 'async'.",ForOfLet:"The left-hand side of a for-of loop may not start with 'let'.",GeneratorInSingleStatementContext:"Generators can only be declared at the top level or inside a block.",IllegalBreakContinue:({type})=>`Unsyntactic ${"BreakStatement"===type?"break":"continue"}.`,IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list.",IllegalReturn:"'return' outside of function.",ImportAttributesUseAssert:"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.",ImportBindingIsString:({importName})=>`A string literal cannot be used as an imported binding.\n- Did you mean \`import { "${importName}" as foo }\`?`,ImportCallArgumentTrailingComma:"Trailing comma is disallowed inside import(...) arguments.",ImportCallArity:({maxArgumentCount})=>`\`import()\` requires exactly ${1===maxArgumentCount?"one argument":"one or two arguments"}.`,ImportCallNotNewExpression:"Cannot use new with import(...).",ImportCallSpreadArgument:"`...` is not allowed in `import()`.",ImportJSONBindingNotDefault:"A JSON module can only be imported with `default`.",ImportReflectionHasAssertion:"`import module x` cannot have assertions.",ImportReflectionNotBinding:'Only `import module x from "./module"` is valid.',IncompatibleRegExpUVFlags:"The 'u' and 'v' regular expression flags cannot be enabled at the same time.",InvalidBigIntLiteral:"Invalid BigIntLiteral.",InvalidCodePoint:"Code point out of bounds.",InvalidCoverInitializedName:"Invalid shorthand property initializer.",InvalidDecimal:"Invalid decimal.",InvalidDigit:({radix})=>`Expected number in radix ${radix}.`,InvalidEscapeSequence:"Bad character escape sequence.",InvalidEscapeSequenceTemplate:"Invalid escape sequence in template.",InvalidEscapedReservedWord:({reservedWord})=>`Escape sequence in keyword ${reservedWord}.`,InvalidIdentifier:({identifierName})=>`Invalid identifier ${identifierName}.`,InvalidLhs:({ancestor})=>`Invalid left-hand side in ${toNodeDescription(ancestor)}.`,InvalidLhsBinding:({ancestor})=>`Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,InvalidNumber:"Invalid number.",InvalidOrMissingExponent:"Floating-point numbers require a valid exponent after the 'e'.",InvalidOrUnexpectedToken:({unexpected})=>`Unexpected character '${unexpected}'.`,InvalidParenthesizedAssignment:"Invalid parenthesized assignment pattern.",InvalidPrivateFieldResolution:({identifierName})=>`Private name #${identifierName} is not defined.`,InvalidPropertyBindingPattern:"Binding member expression.",InvalidRecordProperty:"Only properties and spread elements are allowed in record definitions.",InvalidRestAssignmentPattern:"Invalid rest operator's argument.",LabelRedeclaration:({labelName})=>`Label '${labelName}' is already declared.`,LetInLexicalBinding:"'let' is not allowed to be used as a name in 'let' or 'const' declarations.",LineTerminatorBeforeArrow:"No line break is allowed before '=>'.",MalformedRegExpFlags:"Invalid regular expression flag.",MissingClassName:"A class name is required.",MissingEqInAssignment:"Only '=' operator can be used for specifying default value.",MissingSemicolon:"Missing semicolon.",MissingPlugin:({missingPlugin})=>`This experimental syntax requires enabling the parser plugin: ${missingPlugin.map((name=>JSON.stringify(name))).join(", ")}.`,MissingOneOfPlugins:({missingPlugin})=>`This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map((name=>JSON.stringify(name))).join(", ")}.`,MissingUnicodeEscape:"Expecting Unicode escape sequence \\uXXXX.",MixingCoalesceWithLogical:"Nullish coalescing operator(??) requires parens when mixing with logical operators.",ModuleAttributeDifferentFromType:"The only accepted module attribute is `type`.",ModuleAttributeInvalidValue:"Only string literals are allowed as module attribute values.",ModuleAttributesWithDuplicateKeys:({key})=>`Duplicate key "${key}" is not allowed in module attributes.`,ModuleExportNameHasLoneSurrogate:({surrogateCharCode})=>`An export name cannot include a lone surrogate, found '\\u${surrogateCharCode.toString(16)}'.`,ModuleExportUndefined:({localName})=>`Export '${localName}' is not defined.`,MultipleDefaultsInSwitch:"Multiple default clauses.",NewlineAfterThrow:"Illegal newline after throw.",NoCatchOrFinally:"Missing catch or finally clause.",NumberIdentifier:"Identifier directly after number.",NumericSeparatorInEscapeSequence:"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.",ObsoleteAwaitStar:"'await*' has been removed from the async functions proposal. Use Promise.all() instead.",OptionalChainingNoNew:"Constructors in/after an Optional Chain are not allowed.",OptionalChainingNoTemplate:"Tagged Template Literals are not allowed in optionalChain.",OverrideOnConstructor:"'override' modifier cannot appear on a constructor declaration.",ParamDupe:"Argument name clash.",PatternHasAccessor:"Object pattern can't contain getter or setter.",PatternHasMethod:"Object pattern can't contain methods.",PrivateInExpectedIn:({identifierName})=>`Private names are only allowed in property accesses (\`obj.#${identifierName}\`) or in \`in\` expressions (\`#${identifierName} in obj\`).`,PrivateNameRedeclaration:({identifierName})=>`Duplicate private name #${identifierName}.`,RecordExpressionBarIncorrectEndSyntaxType:"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",RecordExpressionBarIncorrectStartSyntaxType:"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",RecordExpressionHashIncorrectStartSyntaxType:"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",RecordNoProto:"'__proto__' is not allowed in Record expressions.",RestTrailingComma:"Unexpected trailing comma after rest element.",SloppyFunction:"In non-strict mode code, functions can only be declared at top level or inside a block.",SloppyFunctionAnnexB:"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.",StaticPrototype:"Classes may not have static property named prototype.",SuperNotAllowed:"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?",SuperPrivateField:"Private fields can't be accessed on super.",TrailingDecorator:"Decorators must be attached to a class element.",TupleExpressionBarIncorrectEndSyntaxType:"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",TupleExpressionBarIncorrectStartSyntaxType:"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",TupleExpressionHashIncorrectStartSyntaxType:"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",UnexpectedArgumentPlaceholder:"Unexpected argument placeholder.",UnexpectedAwaitAfterPipelineBody:'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:"Unexpected digit after hash token.",UnexpectedImportExport:"'import' and 'export' may only appear at the top level.",UnexpectedKeyword:({keyword})=>`Unexpected keyword '${keyword}'.`,UnexpectedLeadingDecorator:"Leading decorators must be attached to a class declaration.",UnexpectedLexicalDeclaration:"Lexical declaration cannot appear in a single-statement context.",UnexpectedNewTarget:"`new.target` can only be used in functions or class properties.",UnexpectedNumericSeparator:"A numeric separator is only allowed between two digits.",UnexpectedPrivateField:"Unexpected private name.",UnexpectedReservedWord:({reservedWord})=>`Unexpected reserved word '${reservedWord}'.`,UnexpectedSuper:"'super' is only allowed in object methods and classes.",UnexpectedToken:({expected,unexpected})=>`Unexpected token${unexpected?` '${unexpected}'.`:""}${expected?`, expected "${expected}"`:""}`,UnexpectedTokenUnaryExponentiation:"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",UnexpectedUsingDeclaration:"Using declaration cannot appear in the top level when source type is `script`.",UnsupportedBind:"Binding should be performed on object property.",UnsupportedDecoratorExport:"A decorated export must export a class declaration.",UnsupportedDefaultExport:"Only expressions, functions or classes are allowed as the `default` export.",UnsupportedImport:"`import` can only be used in `import()` or `import.meta`.",UnsupportedMetaProperty:({target,onlyValidPropertyName})=>`The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,UnsupportedParameterDecorator:"Decorators cannot be used to decorate parameters.",UnsupportedPropertyDecorator:"Decorators cannot be used to decorate object literal properties.",UnsupportedSuper:"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).",UnterminatedComment:"Unterminated comment.",UnterminatedRegExp:"Unterminated regular expression.",UnterminatedString:"Unterminated string constant.",UnterminatedTemplate:"Unterminated template.",UsingDeclarationHasBindingPattern:"Using declaration cannot have destructuring patterns.",VarRedeclaration:({identifierName})=>`Identifier '${identifierName}' has already been declared.`,YieldBindingIdentifier:"Can not use 'yield' as identifier inside a generator.",YieldInParameter:"Yield expression is not allowed in formal parameters.",ZeroDigitNumericSeparator:"Numeric separator can not be used after leading 0."};const UnparenthesizedPipeBodyDescriptions=new Set(["ArrowFunctionExpression","AssignmentExpression","ConditionalExpression","YieldExpression"]);var PipelineOperatorErrors={PipeBodyIsTighter:"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.",PipeTopicRequiresHackPipes:'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "smart" option.',PipeTopicUnbound:"Topic reference is unbound; it must be inside a pipe body.",PipeTopicUnconfiguredToken:({token})=>`Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { "proposal": "hack", "topicToken": "${token}" }.`,PipeTopicUnused:"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.",PipeUnparenthesizedBody:({type})=>`Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({type})}; please wrap it in parentheses.`,PipelineBodyNoArrow:'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:"Pipeline body may not be a comma-separated sequence expression.",PipelineHeadSequenceExpression:"Pipeline head should not be a comma-separated sequence expression.",PipelineTopicUnused:"Pipeline is in topic style but does not use topic reference.",PrimaryTopicNotAllowed:"Topic reference was used in a lexical context without topic binding.",PrimaryTopicRequiresSmartPipeline:'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "smart" option.'};const _excluded$1=["toMessage"],_excluded2$1=["message"];function toParseErrorConstructor(_ref){let{toMessage}=_ref,properties=_objectWithoutPropertiesLoose(_ref,_excluded$1);return function constructor({loc,details}){return instantiate(SyntaxError,Object.assign({},properties,{loc}),{clone(overrides={}){const loc=overrides.loc||{};return constructor({loc:new Position("line"in loc?loc.line:this.loc.line,"column"in loc?loc.column:this.loc.column,"index"in loc?loc.index:this.loc.index),details:Object.assign({},this.details,overrides.details)})},details:{value:details,enumerable:!1},message:{get(){return`${toMessage(this.details)} (${this.loc.line}:${this.loc.column})`},set(value){Object.defineProperty(this,"message",{value})}},pos:{reflect:"loc.index",enumerable:!0},missingPlugin:"missingPlugin"in details&&{reflect:"details.missingPlugin",enumerable:!0}})}}function ParseErrorEnum(argument,syntaxPlugin){if(Array.isArray(argument))return parseErrorTemplates=>ParseErrorEnum(parseErrorTemplates,argument[0]);const ParseErrorConstructors={};for(const reasonCode of Object.keys(argument)){const template=argument[reasonCode],_ref2="string"==typeof template?{message:()=>template}:"function"==typeof template?{message:template}:template,{message}=_ref2,rest=_objectWithoutPropertiesLoose(_ref2,_excluded2$1),toMessage="string"==typeof message?()=>message:message;ParseErrorConstructors[reasonCode]=toParseErrorConstructor(Object.assign({code:ParseErrorCode_SyntaxError,reasonCode,toMessage},syntaxPlugin?{syntaxPlugin}:{},rest))}return ParseErrorConstructors}const Errors=Object.assign({},ParseErrorEnum(ModuleErrors),ParseErrorEnum(StandardErrors),ParseErrorEnum({StrictDelete:"Deleting local variable in strict mode.",StrictEvalArguments:({referenceName})=>`Assigning to '${referenceName}' in strict mode.`,StrictEvalArgumentsBinding:({bindingName})=>`Binding '${bindingName}' in strict mode.`,StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block.",StrictNumericEscape:"The only valid numeric escape in strict mode is '\\0'.",StrictOctalLiteral:"Legacy octal literals are not allowed in strict mode.",StrictWith:"'with' in strict mode."}),ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors)),{defineProperty}=Object,toUnenumerable=(object,key)=>defineProperty(object,key,{enumerable:!1,value:object[key]});function toESTreeLocation(node){return node.loc.start&&toUnenumerable(node.loc.start,"index"),node.loc.end&&toUnenumerable(node.loc.end,"index"),node}class TokContext{constructor(token,preserveSpace){this.token=void 0,this.preserveSpace=void 0,this.token=token,this.preserveSpace=!!preserveSpace}}const types={brace:new TokContext("{"),j_oTag:new TokContext("<tag"),j_cTag:new TokContext("</tag"),j_expr:new TokContext("<tag>...</tag>",!0)};types.template=new TokContext("`",!0);class ExportedTokenType{constructor(label,conf={}){this.label=void 0,this.keyword=void 0,this.beforeExpr=void 0,this.startsExpr=void 0,this.rightAssociative=void 0,this.isLoop=void 0,this.isAssign=void 0,this.prefix=void 0,this.postfix=void 0,this.binop=void 0,this.label=label,this.keyword=conf.keyword,this.beforeExpr=!!conf.beforeExpr,this.startsExpr=!!conf.startsExpr,this.rightAssociative=!!conf.rightAssociative,this.isLoop=!!conf.isLoop,this.isAssign=!!conf.isAssign,this.prefix=!!conf.prefix,this.postfix=!!conf.postfix,this.binop=null!=conf.binop?conf.binop:null,this.updateContext=null}}const keywords$1=new Map;function createKeyword(name,options={}){options.keyword=name;const token=createToken(name,options);return keywords$1.set(name,token),token}function createBinop(name,binop){return createToken(name,{beforeExpr:true,binop})}let tokenTypeCounter=-1;const tokenTypes=[],tokenLabels=[],tokenBinops=[],tokenBeforeExprs=[],tokenStartsExprs=[],tokenPrefixes=[];function createToken(name,options={}){var _options$binop,_options$beforeExpr,_options$startsExpr,_options$prefix;return++tokenTypeCounter,tokenLabels.push(name),tokenBinops.push(null!=(_options$binop=options.binop)?_options$binop:-1),tokenBeforeExprs.push(null!=(_options$beforeExpr=options.beforeExpr)&&_options$beforeExpr),tokenStartsExprs.push(null!=(_options$startsExpr=options.startsExpr)&&_options$startsExpr),tokenPrefixes.push(null!=(_options$prefix=options.prefix)&&_options$prefix),tokenTypes.push(new ExportedTokenType(name,options)),tokenTypeCounter}function createKeywordLike(name,options={}){var _options$binop2,_options$beforeExpr2,_options$startsExpr2,_options$prefix2;return++tokenTypeCounter,keywords$1.set(name,tokenTypeCounter),tokenLabels.push(name),tokenBinops.push(null!=(_options$binop2=options.binop)?_options$binop2:-1),tokenBeforeExprs.push(null!=(_options$beforeExpr2=options.beforeExpr)&&_options$beforeExpr2),tokenStartsExprs.push(null!=(_options$startsExpr2=options.startsExpr)&&_options$startsExpr2),tokenPrefixes.push(null!=(_options$prefix2=options.prefix)&&_options$prefix2),tokenTypes.push(new ExportedTokenType("name",options)),tokenTypeCounter}const tt={bracketL:createToken("[",{beforeExpr:true,startsExpr:true}),bracketHashL:createToken("#[",{beforeExpr:true,startsExpr:true}),bracketBarL:createToken("[|",{beforeExpr:true,startsExpr:true}),bracketR:createToken("]"),bracketBarR:createToken("|]"),braceL:createToken("{",{beforeExpr:true,startsExpr:true}),braceBarL:createToken("{|",{beforeExpr:true,startsExpr:true}),braceHashL:createToken("#{",{beforeExpr:true,startsExpr:true}),braceR:createToken("}"),braceBarR:createToken("|}"),parenL:createToken("(",{beforeExpr:true,startsExpr:true}),parenR:createToken(")"),comma:createToken(",",{beforeExpr:true}),semi:createToken(";",{beforeExpr:true}),colon:createToken(":",{beforeExpr:true}),doubleColon:createToken("::",{beforeExpr:true}),dot:createToken("."),question:createToken("?",{beforeExpr:true}),questionDot:createToken("?."),arrow:createToken("=>",{beforeExpr:true}),template:createToken("template"),ellipsis:createToken("...",{beforeExpr:true}),backQuote:createToken("`",{startsExpr:true}),dollarBraceL:createToken("${",{beforeExpr:true,startsExpr:true}),templateTail:createToken("...`",{startsExpr:true}),templateNonTail:createToken("...${",{beforeExpr:true,startsExpr:true}),at:createToken("@"),hash:createToken("#",{startsExpr:true}),interpreterDirective:createToken("#!..."),eq:createToken("=",{beforeExpr:true,isAssign:true}),assign:createToken("_=",{beforeExpr:true,isAssign:true}),slashAssign:createToken("_=",{beforeExpr:true,isAssign:true}),xorAssign:createToken("_=",{beforeExpr:true,isAssign:true}),moduloAssign:createToken("_=",{beforeExpr:true,isAssign:true}),incDec:createToken("++/--",{prefix:true,postfix:!0,startsExpr:true}),bang:createToken("!",{beforeExpr:true,prefix:true,startsExpr:true}),tilde:createToken("~",{beforeExpr:true,prefix:true,startsExpr:true}),doubleCaret:createToken("^^",{startsExpr:true}),doubleAt:createToken("@@",{startsExpr:true}),pipeline:createBinop("|>",0),nullishCoalescing:createBinop("??",1),logicalOR:createBinop("||",1),logicalAND:createBinop("&&",2),bitwiseOR:createBinop("|",3),bitwiseXOR:createBinop("^",4),bitwiseAND:createBinop("&",5),equality:createBinop("==/!=/===/!==",6),lt:createBinop("</>/<=/>=",7),gt:createBinop("</>/<=/>=",7),relational:createBinop("</>/<=/>=",7),bitShift:createBinop("<</>>/>>>",8),bitShiftL:createBinop("<</>>/>>>",8),bitShiftR:createBinop("<</>>/>>>",8),plusMin:createToken("+/-",{beforeExpr:true,binop:9,prefix:true,startsExpr:true}),modulo:createToken("%",{binop:10,startsExpr:true}),star:createToken("*",{binop:10}),slash:createBinop("/",10),exponent:createToken("**",{beforeExpr:true,binop:11,rightAssociative:!0}),_in:createKeyword("in",{beforeExpr:true,binop:7}),_instanceof:createKeyword("instanceof",{beforeExpr:true,binop:7}),_break:createKeyword("break"),_case:createKeyword("case",{beforeExpr:true}),_catch:createKeyword("catch"),_continue:createKeyword("continue"),_debugger:createKeyword("debugger"),_default:createKeyword("default",{beforeExpr:true}),_else:createKeyword("else",{beforeExpr:true}),_finally:createKeyword("finally"),_function:createKeyword("function",{startsExpr:true}),_if:createKeyword("if"),_return:createKeyword("return",{beforeExpr:true}),_switch:createKeyword("switch"),_throw:createKeyword("throw",{beforeExpr:true,prefix:true,startsExpr:true}),_try:createKeyword("try"),_var:createKeyword("var"),_const:createKeyword("const"),_with:createKeyword("with"),_new:createKeyword("new",{beforeExpr:true,startsExpr:true}),_this:createKeyword("this",{startsExpr:true}),_super:createKeyword("super",{startsExpr:true}),_class:createKeyword("class",{startsExpr:true}),_extends:createKeyword("extends",{beforeExpr:true}),_export:createKeyword("export"),_import:createKeyword("import",{startsExpr:true}),_null:createKeyword("null",{startsExpr:true}),_true:createKeyword("true",{startsExpr:true}),_false:createKeyword("false",{startsExpr:true}),_typeof:createKeyword("typeof",{beforeExpr:true,prefix:true,startsExpr:true}),_void:createKeyword("void",{beforeExpr:true,prefix:true,startsExpr:true}),_delete:createKeyword("delete",{beforeExpr:true,prefix:true,startsExpr:true}),_do:createKeyword("do",{isLoop:true,beforeExpr:true}),_for:createKeyword("for",{isLoop:true}),_while:createKeyword("while",{isLoop:true}),_as:createKeywordLike("as",{startsExpr:true}),_assert:createKeywordLike("assert",{startsExpr:true}),_async:createKeywordLike("async",{startsExpr:true}),_await:createKeywordLike("await",{startsExpr:true}),_from:createKeywordLike("from",{startsExpr:true}),_get:createKeywordLike("get",{startsExpr:true}),_let:createKeywordLike("let",{startsExpr:true}),_meta:createKeywordLike("meta",{startsExpr:true}),_of:createKeywordLike("of",{startsExpr:true}),_sent:createKeywordLike("sent",{startsExpr:true}),_set:createKeywordLike("set",{startsExpr:true}),_static:createKeywordLike("static",{startsExpr:true}),_using:createKeywordLike("using",{startsExpr:true}),_yield:createKeywordLike("yield",{startsExpr:true}),_asserts:createKeywordLike("asserts",{startsExpr:true}),_checks:createKeywordLike("checks",{startsExpr:true}),_exports:createKeywordLike("exports",{startsExpr:true}),_global:createKeywordLike("global",{startsExpr:true}),_implements:createKeywordLike("implements",{startsExpr:true}),_intrinsic:createKeywordLike("intrinsic",{startsExpr:true}),_infer:createKeywordLike("infer",{startsExpr:true}),_is:createKeywordLike("is",{startsExpr:true}),_mixins:createKeywordLike("mixins",{startsExpr:true}),_proto:createKeywordLike("proto",{startsExpr:true}),_require:createKeywordLike("require",{startsExpr:true}),_satisfies:createKeywordLike("satisfies",{startsExpr:true}),_keyof:createKeywordLike("keyof",{startsExpr:true}),_readonly:createKeywordLike("readonly",{startsExpr:true}),_unique:createKeywordLike("unique",{startsExpr:true}),_abstract:createKeywordLike("abstract",{startsExpr:true}),_declare:createKeywordLike("declare",{startsExpr:true}),_enum:createKeywordLike("enum",{startsExpr:true}),_module:createKeywordLike("module",{startsExpr:true}),_namespace:createKeywordLike("namespace",{startsExpr:true}),_interface:createKeywordLike("interface",{startsExpr:true}),_type:createKeywordLike("type",{startsExpr:true}),_opaque:createKeywordLike("opaque",{startsExpr:true}),name:createToken("name",{startsExpr:true}),string:createToken("string",{startsExpr:true}),num:createToken("num",{startsExpr:true}),bigint:createToken("bigint",{startsExpr:true}),decimal:createToken("decimal",{startsExpr:true}),regexp:createToken("regexp",{startsExpr:true}),privateName:createToken("#name",{startsExpr:true}),eof:createToken("eof"),jsxName:createToken("jsxName"),jsxText:createToken("jsxText",{beforeExpr:!0}),jsxTagStart:createToken("jsxTagStart",{startsExpr:!0}),jsxTagEnd:createToken("jsxTagEnd"),placeholder:createToken("%%",{startsExpr:!0})};function tokenIsIdentifier(token){return token>=93&&token<=130}function tokenIsKeywordOrIdentifier(token){return token>=58&&token<=130}function tokenIsLiteralPropertyName(token){return token>=58&&token<=134}function tokenCanStartExpression(token){return tokenStartsExprs[token]}function tokenIsFlowInterfaceOrTypeOrOpaque(token){return token>=127&&token<=129}function tokenIsKeyword(token){return token>=58&&token<=92}function tokenLabelName(token){return tokenLabels[token]}function tokenOperatorPrecedence(token){return tokenBinops[token]}function tokenIsTemplate(token){return token>=24&&token<=25}function getExportedToken(token){return tokenTypes[token]}tokenTypes[8].updateContext=context=>{context.pop()},tokenTypes[5].updateContext=tokenTypes[7].updateContext=tokenTypes[23].updateContext=context=>{context.push(types.brace)},tokenTypes[22].updateContext=context=>{context[context.length-1]===types.template?context.pop():context.push(types.template)},tokenTypes[140].updateContext=context=>{context.push(types.j_expr,types.j_oTag)};let nonASCIIidentifierStartChars="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",nonASCIIidentifierChars="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";const nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]"),nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+nonASCIIidentifierChars+"]");nonASCIIidentifierStartChars=nonASCIIidentifierChars=null;const astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191],astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];function isInAstralSet(code,set){let pos=65536;for(let i=0,length=set.length;i<length;i+=2){if(pos+=set[i],pos>code)return!1;if(pos+=set[i+1],pos>=code)return!0}return!1}function isIdentifierStart(code){return code<65?36===code:code<=90||(code<97?95===code:code<=122||(code<=65535?code>=170&&nonASCIIidentifierStart.test(String.fromCharCode(code)):isInAstralSet(code,astralIdentifierStartCodes)))}function isIdentifierChar(code){return code<48?36===code:code<58||!(code<65)&&(code<=90||(code<97?95===code:code<=122||(code<=65535?code>=170&&nonASCIIidentifier.test(String.fromCharCode(code)):isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes))))}const reservedWords_strict=["implements","interface","let","package","private","protected","public","static","yield"],reservedWords_strictBind=["eval","arguments"],keywords=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),reservedWordsStrictSet=new Set(reservedWords_strict),reservedWordsStrictBindSet=new Set(reservedWords_strictBind);function isReservedWord(word,inModule){return inModule&&"await"===word||"enum"===word}function isStrictReservedWord(word,inModule){return isReservedWord(word,inModule)||reservedWordsStrictSet.has(word)}function isStrictBindOnlyReservedWord(word){return reservedWordsStrictBindSet.has(word)}function isStrictBindReservedWord(word,inModule){return isStrictReservedWord(word,inModule)||isStrictBindOnlyReservedWord(word)}const reservedWordLikeSet=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete","implements","interface","let","package","private","protected","public","static","yield","eval","arguments","enum","await"]);class Scope{constructor(flags){this.var=new Set,this.lexical=new Set,this.functions=new Set,this.flags=flags}}class ScopeHandler{constructor(parser,inModule){this.parser=void 0,this.scopeStack=[],this.inModule=void 0,this.undefinedExports=new Map,this.parser=parser,this.inModule=inModule}get inTopLevel(){return(1&this.currentScope().flags)>0}get inFunction(){return(2&this.currentVarScopeFlags())>0}get allowSuper(){return(16&this.currentThisScopeFlags())>0}get allowDirectSuper(){return(32&this.currentThisScopeFlags())>0}get inClass(){return(64&this.currentThisScopeFlags())>0}get inClassAndNotInNonArrowFunction(){const flags=this.currentThisScopeFlags();return(64&flags)>0&&0==(2&flags)}get inStaticBlock(){for(let i=this.scopeStack.length-1;;i--){const{flags}=this.scopeStack[i];if(128&flags)return!0;if(451&flags)return!1}}get inNonArrowFunction(){return(2&this.currentThisScopeFlags())>0}get treatFunctionsAsVar(){return this.treatFunctionsAsVarInScope(this.currentScope())}createScope(flags){return new Scope(flags)}enter(flags){this.scopeStack.push(this.createScope(flags))}exit(){return this.scopeStack.pop().flags}treatFunctionsAsVarInScope(scope){return!!(130&scope.flags||!this.parser.inModule&&1&scope.flags)}declareName(name,bindingType,loc){let scope=this.currentScope();if(8&bindingType||16&bindingType)this.checkRedeclarationInScope(scope,name,bindingType,loc),16&bindingType?scope.functions.add(name):scope.lexical.add(name),8&bindingType&&this.maybeExportDefined(scope,name);else if(4&bindingType)for(let i=this.scopeStack.length-1;i>=0&&(scope=this.scopeStack[i],this.checkRedeclarationInScope(scope,name,bindingType,loc),scope.var.add(name),this.maybeExportDefined(scope,name),!(387&scope.flags));--i);this.parser.inModule&&1&scope.flags&&this.undefinedExports.delete(name)}maybeExportDefined(scope,name){this.parser.inModule&&1&scope.flags&&this.undefinedExports.delete(name)}checkRedeclarationInScope(scope,name,bindingType,loc){this.isRedeclaredInScope(scope,name,bindingType)&&this.parser.raise(Errors.VarRedeclaration,{at:loc,identifierName:name})}isRedeclaredInScope(scope,name,bindingType){return!!(1&bindingType)&&(8&bindingType?scope.lexical.has(name)||scope.functions.has(name)||scope.var.has(name):16&bindingType?scope.lexical.has(name)||!this.treatFunctionsAsVarInScope(scope)&&scope.var.has(name):scope.lexical.has(name)&&!(8&scope.flags&&scope.lexical.values().next().value===name)||!this.treatFunctionsAsVarInScope(scope)&&scope.functions.has(name))}checkLocalExport(id){const{name}=id,topLevelScope=this.scopeStack[0];topLevelScope.lexical.has(name)||topLevelScope.var.has(name)||topLevelScope.functions.has(name)||this.undefinedExports.set(name,id.loc.start)}currentScope(){return this.scopeStack[this.scopeStack.length-1]}currentVarScopeFlags(){for(let i=this.scopeStack.length-1;;i--){const{flags}=this.scopeStack[i];if(387&flags)return flags}}currentThisScopeFlags(){for(let i=this.scopeStack.length-1;;i--){const{flags}=this.scopeStack[i];if(451&flags&&!(4&flags))return flags}}}class FlowScope extends Scope{constructor(...args){super(...args),this.declareFunctions=new Set}}class FlowScopeHandler extends ScopeHandler{createScope(flags){return new FlowScope(flags)}declareName(name,bindingType,loc){const scope=this.currentScope();if(2048&bindingType)return this.checkRedeclarationInScope(scope,name,bindingType,loc),this.maybeExportDefined(scope,name),void scope.declareFunctions.add(name);super.declareName(name,bindingType,loc)}isRedeclaredInScope(scope,name,bindingType){return!!super.isRedeclaredInScope(scope,name,bindingType)||!!(2048&bindingType)&&(!scope.declareFunctions.has(name)&&(scope.lexical.has(name)||scope.functions.has(name)))}checkLocalExport(id){this.scopeStack[0].declareFunctions.has(id.name)||super.checkLocalExport(id)}}class BaseParser{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(pluginConfig){if("string"==typeof pluginConfig)return this.plugins.has(pluginConfig);{const[pluginName,pluginOptions]=pluginConfig;if(!this.hasPlugin(pluginName))return!1;const actualOptions=this.plugins.get(pluginName);for(const key of Object.keys(pluginOptions))if((null==actualOptions?void 0:actualOptions[key])!==pluginOptions[key])return!1;return!0}}getPluginOption(plugin,name){var _this$plugins$get;return null==(_this$plugins$get=this.plugins.get(plugin))?void 0:_this$plugins$get[name]}}function setTrailingComments(node,comments){void 0===node.trailingComments?node.trailingComments=comments:node.trailingComments.unshift(...comments)}function setInnerComments(node,comments){void 0===node.innerComments?node.innerComments=comments:node.innerComments.unshift(...comments)}function adjustInnerComments(node,elements,commentWS){let lastElement=null,i=elements.length;for(;null===lastElement&&i>0;)lastElement=elements[--i];null===lastElement||lastElement.start>commentWS.start?setInnerComments(node,commentWS.comments):setTrailingComments(lastElement,commentWS.comments)}class CommentsParser extends BaseParser{addComment(comment){this.filename&&(comment.loc.filename=this.filename),this.state.comments.push(comment)}processComment(node){const{commentStack}=this.state,commentStackLength=commentStack.length;if(0===commentStackLength)return;let i=commentStackLength-1;const lastCommentWS=commentStack[i];lastCommentWS.start===node.end&&(lastCommentWS.leadingNode=node,i--);const{start:nodeStart}=node;for(;i>=0;i--){const commentWS=commentStack[i],commentEnd=commentWS.end;if(!(commentEnd>nodeStart)){commentEnd===nodeStart&&(commentWS.trailingNode=node);break}commentWS.containingNode=node,this.finalizeComment(commentWS),commentStack.splice(i,1)}}finalizeComment(commentWS){const{comments}=commentWS;if(null!==commentWS.leadingNode||null!==commentWS.trailingNode)null!==commentWS.leadingNode&&setTrailingComments(commentWS.leadingNode,comments),null!==commentWS.trailingNode&&function(node,comments){void 0===node.leadingComments?node.leadingComments=comments:node.leadingComments.unshift(...comments)}(commentWS.trailingNode,comments);else{const{containingNode:node,start:commentStart}=commentWS;if(44===this.input.charCodeAt(commentStart-1))switch(node.type){case"ObjectExpression":case"ObjectPattern":case"RecordExpression":adjustInnerComments(node,node.properties,commentWS);break;case"CallExpression":case"OptionalCallExpression":adjustInnerComments(node,node.arguments,commentWS);break;case"FunctionDeclaration":case"FunctionExpression":case"ArrowFunctionExpression":case"ObjectMethod":case"ClassMethod":case"ClassPrivateMethod":adjustInnerComments(node,node.params,commentWS);break;case"ArrayExpression":case"ArrayPattern":case"TupleExpression":adjustInnerComments(node,node.elements,commentWS);break;case"ExportNamedDeclaration":case"ImportDeclaration":adjustInnerComments(node,node.specifiers,commentWS);break;default:setInnerComments(node,comments)}else setInnerComments(node,comments)}}finalizeRemainingComments(){const{commentStack}=this.state;for(let i=commentStack.length-1;i>=0;i--)this.finalizeComment(commentStack[i]);this.state.commentStack=[]}resetPreviousNodeTrailingComments(node){const{commentStack}=this.state,{length}=commentStack;if(0===length)return;const commentWS=commentStack[length-1];commentWS.leadingNode===node&&(commentWS.leadingNode=null)}resetPreviousIdentifierLeadingComments(node){const{commentStack}=this.state,{length}=commentStack;0!==length&&(commentStack[length-1].trailingNode===node?commentStack[length-1].trailingNode=null:length>=2&&commentStack[length-2].trailingNode===node&&(commentStack[length-2].trailingNode=null))}takeSurroundingComments(node,start,end){const{commentStack}=this.state,commentStackLength=commentStack.length;if(0===commentStackLength)return;let i=commentStackLength-1;for(;i>=0;i--){const commentWS=commentStack[i],commentEnd=commentWS.end;if(commentWS.start===end)commentWS.leadingNode=node;else if(commentEnd===start)commentWS.trailingNode=node;else if(commentEnd<start)break}}}const lineBreak=/\r\n?|[\n\u2028\u2029]/,lineBreakG=new RegExp(lineBreak.source,"g");function isNewLine(code){switch(code){case 10:case 13:case 8232:case 8233:return!0;default:return!1}}const skipWhiteSpace=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,skipWhiteSpaceInLine=/(?:[^\S\n\r\u2028\u2029]|\/\/.*|\/\*.*?\*\/)*/g,skipWhiteSpaceToLineBreak=new RegExp("(?=("+skipWhiteSpaceInLine.source+"))\\1"+/(?=[\n\r\u2028\u2029]|\/\*(?!.*?\*\/)|$)/.source,"y");function isWhitespace(code){switch(code){case 9:case 11:case 12:case 32:case 160:case 5760:case 8192:case 8193:case 8194:case 8195:case 8196:case 8197:case 8198:case 8199:case 8200:case 8201:case 8202:case 8239:case 8287:case 12288:case 65279:return!0;default:return!1}}class State{constructor(){this.strict=void 0,this.curLine=void 0,this.lineStart=void 0,this.startLoc=void 0,this.endLoc=void 0,this.errors=[],this.potentialArrowAt=-1,this.noArrowAt=[],this.noArrowParamsConversionAt=[],this.maybeInArrowParameters=!1,this.inType=!1,this.noAnonFunctionType=!1,this.hasFlowComment=!1,this.isAmbientContext=!1,this.inAbstractClass=!1,this.inDisallowConditionalTypesContext=!1,this.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null},this.soloAwait=!1,this.inFSharpPipelineDirectBody=!1,this.labels=[],this.comments=[],this.commentStack=[],this.pos=0,this.type=137,this.value=null,this.start=0,this.end=0,this.lastTokEndLoc=null,this.lastTokStartLoc=null,this.lastTokStart=0,this.context=[types.brace],this.canStartJSXElement=!0,this.containsEsc=!1,this.firstInvalidTemplateEscapePos=null,this.strictErrors=new Map,this.tokensLength=0}init({strictMode,sourceType,startLine,startColumn}){this.strict=!1!==strictMode&&(!0===strictMode||"module"===sourceType),this.curLine=startLine,this.lineStart=-startColumn,this.startLoc=this.endLoc=new Position(startLine,startColumn,0)}curPosition(){return new Position(this.curLine,this.pos-this.lineStart,this.pos)}clone(skipArrays){const state=new State,keys=Object.keys(this);for(let i=0,length=keys.length;i<length;i++){const key=keys[i];let val=this[key];!skipArrays&&Array.isArray(val)&&(val=val.slice()),state[key]=val}return state}}var _isDigit=function(code){return code>=48&&code<=57};const forbiddenNumericSeparatorSiblings={decBinOct:new Set([46,66,69,79,95,98,101,111]),hex:new Set([46,88,95,120])},isAllowedNumericSeparatorSibling={bin:ch=>48===ch||49===ch,oct:ch=>ch>=48&&ch<=55,dec:ch=>ch>=48&&ch<=57,hex:ch=>ch>=48&&ch<=57||ch>=65&&ch<=70||ch>=97&&ch<=102};function readStringContents(type,input,pos,lineStart,curLine,errors){const initialPos=pos,initialLineStart=lineStart,initialCurLine=curLine;let out="",firstInvalidLoc=null,chunkStart=pos;const{length}=input;for(;;){if(pos>=length){errors.unterminated(initialPos,initialLineStart,initialCurLine),out+=input.slice(chunkStart,pos);break}const ch=input.charCodeAt(pos);if(isStringEnd(type,ch,input,pos)){out+=input.slice(chunkStart,pos);break}if(92===ch){out+=input.slice(chunkStart,pos);const res=readEscapedChar(input,pos,lineStart,curLine,"template"===type,errors);null!==res.ch||firstInvalidLoc?out+=res.ch:firstInvalidLoc={pos,lineStart,curLine},({pos,lineStart,curLine}=res),chunkStart=pos}else 8232===ch||8233===ch?(++curLine,lineStart=++pos):10===ch||13===ch?"template"===type?(out+=input.slice(chunkStart,pos)+"\n",++pos,13===ch&&10===input.charCodeAt(pos)&&++pos,++curLine,chunkStart=lineStart=pos):errors.unterminated(initialPos,initialLineStart,initialCurLine):++pos}return{pos,str:out,firstInvalidLoc,lineStart,curLine,containsInvalid:!!firstInvalidLoc}}function isStringEnd(type,ch,input,pos){return"template"===type?96===ch||36===ch&&123===input.charCodeAt(pos+1):ch===("double"===type?34:39)}function readEscapedChar(input,pos,lineStart,curLine,inTemplate,errors){const throwOnInvalid=!inTemplate;pos++;const res=ch=>({pos,ch,lineStart,curLine}),ch=input.charCodeAt(pos++);switch(ch){case 110:return res("\n");case 114:return res("\r");case 120:{let code;return({code,pos}=readHexChar(input,pos,lineStart,curLine,2,!1,throwOnInvalid,errors)),res(null===code?null:String.fromCharCode(code))}case 117:{let code;return({code,pos}=readCodePoint(input,pos,lineStart,curLine,throwOnInvalid,errors)),res(null===code?null:String.fromCodePoint(code))}case 116:return res("\t");case 98:return res("\b");case 118:return res("\v");case 102:return res("\f");case 13:10===input.charCodeAt(pos)&&++pos;case 10:lineStart=pos,++curLine;case 8232:case 8233:return res("");case 56:case 57:if(inTemplate)return res(null);errors.strictNumericEscape(pos-1,lineStart,curLine);default:if(ch>=48&&ch<=55){const startPos=pos-1;let octalStr=input.slice(startPos,pos+2).match(/^[0-7]+/)[0],octal=parseInt(octalStr,8);octal>255&&(octalStr=octalStr.slice(0,-1),octal=parseInt(octalStr,8)),pos+=octalStr.length-1;const next=input.charCodeAt(pos);if("0"!==octalStr||56===next||57===next){if(inTemplate)return res(null);errors.strictNumericEscape(startPos,lineStart,curLine)}return res(String.fromCharCode(octal))}return res(String.fromCharCode(ch))}}function readHexChar(input,pos,lineStart,curLine,len,forceLen,throwOnInvalid,errors){const initialPos=pos;let n;return({n,pos}=readInt(input,pos,lineStart,curLine,16,len,forceLen,!1,errors,!throwOnInvalid)),null===n&&(throwOnInvalid?errors.invalidEscapeSequence(initialPos,lineStart,curLine):pos=initialPos-1),{code:n,pos}}function readInt(input,pos,lineStart,curLine,radix,len,forceLen,allowNumSeparator,errors,bailOnError){const start=pos,forbiddenSiblings=16===radix?forbiddenNumericSeparatorSiblings.hex:forbiddenNumericSeparatorSiblings.decBinOct,isAllowedSibling=16===radix?isAllowedNumericSeparatorSibling.hex:10===radix?isAllowedNumericSeparatorSibling.dec:8===radix?isAllowedNumericSeparatorSibling.oct:isAllowedNumericSeparatorSibling.bin;let invalid=!1,total=0;for(let i=0,e=null==len?1/0:len;i<e;++i){const code=input.charCodeAt(pos);let val;if(95!==code||"bail"===allowNumSeparator){if(val=code>=97?code-97+10:code>=65?code-65+10:_isDigit(code)?code-48:1/0,val>=radix){if(val<=9&&bailOnError)return{n:null,pos};if(val<=9&&errors.invalidDigit(pos,lineStart,curLine,radix))val=0;else{if(!forceLen)break;val=0,invalid=!0}}++pos,total=total*radix+val}else{const prev=input.charCodeAt(pos-1),next=input.charCodeAt(pos+1);if(allowNumSeparator){if(Number.isNaN(next)||!isAllowedSibling(next)||forbiddenSiblings.has(prev)||forbiddenSiblings.has(next)){if(bailOnError)return{n:null,pos};errors.unexpectedNumericSeparator(pos,lineStart,curLine)}}else{if(bailOnError)return{n:null,pos};errors.numericSeparatorInEscapeSequence(pos,lineStart,curLine)}++pos}}return pos===start||null!=len&&pos-start!==len||invalid?{n:null,pos}:{n:total,pos}}function readCodePoint(input,pos,lineStart,curLine,throwOnInvalid,errors){let code;if(123===input.charCodeAt(pos)){if(++pos,({code,pos}=readHexChar(input,pos,lineStart,curLine,input.indexOf("}",pos)-pos,!0,throwOnInvalid,errors)),++pos,null!==code&&code>1114111){if(!throwOnInvalid)return{code:null,pos};errors.invalidCodePoint(pos,lineStart,curLine)}}else({code,pos}=readHexChar(input,pos,lineStart,curLine,4,!1,throwOnInvalid,errors));return{code,pos}}const _excluded=["at"],_excluded2=["at"];function buildPosition(pos,lineStart,curLine){return new Position(curLine,pos-lineStart,pos)}const VALID_REGEX_FLAGS=new Set([103,109,115,105,121,117,100,118]);class Token{constructor(state){this.type=state.type,this.value=state.value,this.start=state.start,this.end=state.end,this.loc=new SourceLocation(state.startLoc,state.endLoc)}}class Tokenizer extends CommentsParser{constructor(options,input){super(),this.isLookahead=void 0,this.tokens=[],this.errorHandlers_readInt={invalidDigit:(pos,lineStart,curLine,radix)=>!!this.options.errorRecovery&&(this.raise(Errors.InvalidDigit,{at:buildPosition(pos,lineStart,curLine),radix}),!0),numericSeparatorInEscapeSequence:this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),unexpectedNumericSeparator:this.errorBuilder(Errors.UnexpectedNumericSeparator)},this.errorHandlers_readCodePoint=Object.assign({},this.errorHandlers_readInt,{invalidEscapeSequence:this.errorBuilder(Errors.InvalidEscapeSequence),invalidCodePoint:this.errorBuilder(Errors.InvalidCodePoint)}),this.errorHandlers_readStringContents_string=Object.assign({},this.errorHandlers_readCodePoint,{strictNumericEscape:(pos,lineStart,curLine)=>{this.recordStrictModeErrors(Errors.StrictNumericEscape,{at:buildPosition(pos,lineStart,curLine)})},unterminated:(pos,lineStart,curLine)=>{throw this.raise(Errors.UnterminatedString,{at:buildPosition(pos-1,lineStart,curLine)})}}),this.errorHandlers_readStringContents_template=Object.assign({},this.errorHandlers_readCodePoint,{strictNumericEscape:this.errorBuilder(Errors.StrictNumericEscape),unterminated:(pos,lineStart,curLine)=>{throw this.raise(Errors.UnterminatedTemplate,{at:buildPosition(pos,lineStart,curLine)})}}),this.state=new State,this.state.init(options),this.input=input,this.length=input.length,this.isLookahead=!1}pushToken(token){this.tokens.length=this.state.tokensLength,this.tokens.push(token),++this.state.tokensLength}next(){this.checkKeywordEscapes(),this.options.tokens&&this.pushToken(new Token(this.state)),this.state.lastTokStart=this.state.start,this.state.lastTokEndLoc=this.state.endLoc,this.state.lastTokStartLoc=this.state.startLoc,this.nextToken()}eat(type){return!!this.match(type)&&(this.next(),!0)}match(type){return this.state.type===type}createLookaheadState(state){return{pos:state.pos,value:null,type:state.type,start:state.start,end:state.end,context:[this.curContext()],inType:state.inType,startLoc:state.startLoc,lastTokEndLoc:state.lastTokEndLoc,curLine:state.curLine,lineStart:state.lineStart,curPosition:state.curPosition}}lookahead(){const old=this.state;this.state=this.createLookaheadState(old),this.isLookahead=!0,this.nextToken(),this.isLookahead=!1;const curr=this.state;return this.state=old,curr}nextTokenStart(){return this.nextTokenStartSince(this.state.pos)}nextTokenStartSince(pos){return skipWhiteSpace.lastIndex=pos,skipWhiteSpace.test(this.input)?skipWhiteSpace.lastIndex:pos}lookaheadCharCode(){return this.input.charCodeAt(this.nextTokenStart())}nextTokenInLineStart(){return this.nextTokenInLineStartSince(this.state.pos)}nextTokenInLineStartSince(pos){return skipWhiteSpaceInLine.lastIndex=pos,skipWhiteSpaceInLine.test(this.input)?skipWhiteSpaceInLine.lastIndex:pos}lookaheadInLineCharCode(){return this.input.charCodeAt(this.nextTokenInLineStart())}codePointAtPos(pos){let cp=this.input.charCodeAt(pos);if(55296==(64512&cp)&&++pos<this.input.length){const trail=this.input.charCodeAt(pos);56320==(64512&trail)&&(cp=65536+((1023&cp)<<10)+(1023&trail))}return cp}setStrict(strict){this.state.strict=strict,strict&&(this.state.strictErrors.forEach((([toParseError,at])=>this.raise(toParseError,{at}))),this.state.strictErrors.clear())}curContext(){return this.state.context[this.state.context.length-1]}nextToken(){this.skipSpace(),this.state.start=this.state.pos,this.isLookahead||(this.state.startLoc=this.state.curPosition()),this.state.pos>=this.length?this.finishToken(137):this.getTokenFromCode(this.codePointAtPos(this.state.pos))}skipBlockComment(commentEnd){let startLoc;this.isLookahead||(startLoc=this.state.curPosition());const start=this.state.pos,end=this.input.indexOf(commentEnd,start+2);if(-1===end)throw this.raise(Errors.UnterminatedComment,{at:this.state.curPosition()});for(this.state.pos=end+commentEnd.length,lineBreakG.lastIndex=start+2;lineBreakG.test(this.input)&&lineBreakG.lastIndex<=end;)++this.state.curLine,this.state.lineStart=lineBreakG.lastIndex;if(this.isLookahead)return;const comment={type:"CommentBlock",value:this.input.slice(start+2,end),start,end:end+commentEnd.length,loc:new SourceLocation(startLoc,this.state.curPosition())};return this.options.tokens&&this.pushToken(comment),comment}skipLineComment(startSkip){const start=this.state.pos;let startLoc;this.isLookahead||(startLoc=this.state.curPosition());let ch=this.input.charCodeAt(this.state.pos+=startSkip);if(this.state.pos<this.length)for(;!isNewLine(ch)&&++this.state.pos<this.length;)ch=this.input.charCodeAt(this.state.pos);if(this.isLookahead)return;const end=this.state.pos,comment={type:"CommentLine",value:this.input.slice(start+startSkip,end),start,end,loc:new SourceLocation(startLoc,this.state.curPosition())};return this.options.tokens&&this.pushToken(comment),comment}skipSpace(){const spaceStart=this.state.pos,comments=[];loop:for(;this.state.pos<this.length;){const ch=this.input.charCodeAt(this.state.pos);switch(ch){case 32:case 160:case 9:++this.state.pos;break;case 13:10===this.input.charCodeAt(this.state.pos+1)&&++this.state.pos;case 10:case 8232:case 8233:++this.state.pos,++this.state.curLine,this.state.lineStart=this.state.pos;break;case 47:switch(this.input.charCodeAt(this.state.pos+1)){case 42:{const comment=this.skipBlockComment("*/");void 0!==comment&&(this.addComment(comment),this.options.attachComment&&comments.push(comment));break}case 47:{const comment=this.skipLineComment(2);void 0!==comment&&(this.addComment(comment),this.options.attachComment&&comments.push(comment));break}default:break loop}break;default:if(isWhitespace(ch))++this.state.pos;else if(45===ch&&!this.inModule&&this.options.annexB){const pos=this.state.pos;if(45!==this.input.charCodeAt(pos+1)||62!==this.input.charCodeAt(pos+2)||!(0===spaceStart||this.state.lineStart>spaceStart))break loop;{const comment=this.skipLineComment(3);void 0!==comment&&(this.addComment(comment),this.options.attachComment&&comments.push(comment))}}else{if(60!==ch||this.inModule||!this.options.annexB)break loop;{const pos=this.state.pos;if(33!==this.input.charCodeAt(pos+1)||45!==this.input.charCodeAt(pos+2)||45!==this.input.charCodeAt(pos+3))break loop;{const comment=this.skipLineComment(4);void 0!==comment&&(this.addComment(comment),this.options.attachComment&&comments.push(comment))}}}}}if(comments.length>0){const commentWhitespace={start:spaceStart,end:this.state.pos,comments,leadingNode:null,trailingNode:null,containingNode:null};this.state.commentStack.push(commentWhitespace)}}finishToken(type,val){this.state.end=this.state.pos,this.state.endLoc=this.state.curPosition();const prevType=this.state.type;this.state.type=type,this.state.value=val,this.isLookahead||this.updateContext(prevType)}replaceToken(type){this.state.type=type,this.updateContext()}readToken_numberSign(){if(0===this.state.pos&&this.readToken_interpreter())return;const nextPos=this.state.pos+1,next=this.codePointAtPos(nextPos);if(next>=48&&next<=57)throw this.raise(Errors.UnexpectedDigitAfterHash,{at:this.state.curPosition()});if(123===next||91===next&&this.hasPlugin("recordAndTuple")){if(this.expectPlugin("recordAndTuple"),"bar"===this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(123===next?Errors.RecordExpressionHashIncorrectStartSyntaxType:Errors.TupleExpressionHashIncorrectStartSyntaxType,{at:this.state.curPosition()});this.state.pos+=2,123===next?this.finishToken(7):this.finishToken(1)}else isIdentifierStart(next)?(++this.state.pos,this.finishToken(136,this.readWord1(next))):92===next?(++this.state.pos,this.finishToken(136,this.readWord1())):this.finishOp(27,1)}readToken_dot(){const next=this.input.charCodeAt(this.state.pos+1);next>=48&&next<=57?this.readNumber(!0):46===next&&46===this.input.charCodeAt(this.state.pos+2)?(this.state.pos+=3,this.finishToken(21)):(++this.state.pos,this.finishToken(16))}readToken_slash(){61===this.input.charCodeAt(this.state.pos+1)?this.finishOp(31,2):this.finishOp(56,1)}readToken_interpreter(){if(0!==this.state.pos||this.length<2)return!1;let ch=this.input.charCodeAt(this.state.pos+1);if(33!==ch)return!1;const start=this.state.pos;for(this.state.pos+=1;!isNewLine(ch)&&++this.state.pos<this.length;)ch=this.input.charCodeAt(this.state.pos);const value=this.input.slice(start+2,this.state.pos);return this.finishToken(28,value),!0}readToken_mult_modulo(code){let type=42===code?55:54,width=1,next=this.input.charCodeAt(this.state.pos+1);42===code&&42===next&&(width++,next=this.input.charCodeAt(this.state.pos+2),type=57),61!==next||this.state.inType||(width++,type=37===code?33:30),this.finishOp(type,width)}readToken_pipe_amp(code){const next=this.input.charCodeAt(this.state.pos+1);if(next!==code){if(124===code){if(62===next)return void this.finishOp(39,2);if(this.hasPlugin("recordAndTuple")&&125===next){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType,{at:this.state.curPosition()});return this.state.pos+=2,void this.finishToken(9)}if(this.hasPlugin("recordAndTuple")&&93===next){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType,{at:this.state.curPosition()});return this.state.pos+=2,void this.finishToken(4)}}61!==next?this.finishOp(124===code?43:45,1):this.finishOp(30,2)}else 61===this.input.charCodeAt(this.state.pos+2)?this.finishOp(30,3):this.finishOp(124===code?41:42,2)}readToken_caret(){const next=this.input.charCodeAt(this.state.pos+1);if(61!==next||this.state.inType)if(94===next&&this.hasPlugin(["pipelineOperator",{proposal:"hack",topicToken:"^^"}])){this.finishOp(37,2);94===this.input.codePointAt(this.state.pos)&&this.unexpected()}else this.finishOp(44,1);else this.finishOp(32,2)}readToken_atSign(){64===this.input.charCodeAt(this.state.pos+1)&&this.hasPlugin(["pipelineOperator",{proposal:"hack",topicToken:"@@"}])?this.finishOp(38,2):this.finishOp(26,1)}readToken_plus_min(code){const next=this.input.charCodeAt(this.state.pos+1);next!==code?61===next?this.finishOp(30,2):this.finishOp(53,1):this.finishOp(34,2)}readToken_lt(){const{pos}=this.state,next=this.input.charCodeAt(pos+1);if(60===next)return 61===this.input.charCodeAt(pos+2)?void this.finishOp(30,3):void this.finishOp(51,2);61!==next?this.finishOp(47,1):this.finishOp(49,2)}readToken_gt(){const{pos}=this.state,next=this.input.charCodeAt(pos+1);if(62===next){const size=62===this.input.charCodeAt(pos+2)?3:2;return 61===this.input.charCodeAt(pos+size)?void this.finishOp(30,size+1):void this.finishOp(52,size)}61!==next?this.finishOp(48,1):this.finishOp(49,2)}readToken_eq_excl(code){const next=this.input.charCodeAt(this.state.pos+1);if(61!==next)return 61===code&&62===next?(this.state.pos+=2,void this.finishToken(19)):void this.finishOp(61===code?29:35,1);this.finishOp(46,61===this.input.charCodeAt(this.state.pos+2)?3:2)}readToken_question(){const next=this.input.charCodeAt(this.state.pos+1),next2=this.input.charCodeAt(this.state.pos+2);63===next?61===next2?this.finishOp(30,3):this.finishOp(40,2):46!==next||next2>=48&&next2<=57?(++this.state.pos,this.finishToken(17)):(this.state.pos+=2,this.finishToken(18))}getTokenFromCode(code){switch(code){case 46:return void this.readToken_dot();case 40:return++this.state.pos,void this.finishToken(10);case 41:return++this.state.pos,void this.finishToken(11);case 59:return++this.state.pos,void this.finishToken(13);case 44:return++this.state.pos,void this.finishToken(12);case 91:if(this.hasPlugin("recordAndTuple")&&124===this.input.charCodeAt(this.state.pos+1)){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType,{at:this.state.curPosition()});this.state.pos+=2,this.finishToken(2)}else++this.state.pos,this.finishToken(0);return;case 93:return++this.state.pos,void this.finishToken(3);case 123:if(this.hasPlugin("recordAndTuple")&&124===this.input.charCodeAt(this.state.pos+1)){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType,{at:this.state.curPosition()});this.state.pos+=2,this.finishToken(6)}else++this.state.pos,this.finishToken(5);return;case 125:return++this.state.pos,void this.finishToken(8);case 58:return void(this.hasPlugin("functionBind")&&58===this.input.charCodeAt(this.state.pos+1)?this.finishOp(15,2):(++this.state.pos,this.finishToken(14)));case 63:return void this.readToken_question();case 96:return void this.readTemplateToken();case 48:{const next=this.input.charCodeAt(this.state.pos+1);if(120===next||88===next)return void this.readRadixNumber(16);if(111===next||79===next)return void this.readRadixNumber(8);if(98===next||66===next)return void this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return void this.readNumber(!1);case 34:case 39:return void this.readString(code);case 47:return void this.readToken_slash();case 37:case 42:return void this.readToken_mult_modulo(code);case 124:case 38:return void this.readToken_pipe_amp(code);case 94:return void this.readToken_caret();case 43:case 45:return void this.readToken_plus_min(code);case 60:return void this.readToken_lt();case 62:return void this.readToken_gt();case 61:case 33:return void this.readToken_eq_excl(code);case 126:return void this.finishOp(36,1);case 64:return void this.readToken_atSign();case 35:return void this.readToken_numberSign();case 92:return void this.readWord();default:if(isIdentifierStart(code))return void this.readWord(code)}throw this.raise(Errors.InvalidOrUnexpectedToken,{at:this.state.curPosition(),unexpected:String.fromCodePoint(code)})}finishOp(type,size){const str=this.input.slice(this.state.pos,this.state.pos+size);this.state.pos+=size,this.finishToken(type,str)}readRegexp(){const startLoc=this.state.startLoc,start=this.state.start+1;let escaped,inClass,{pos}=this.state;for(;;++pos){if(pos>=this.length)throw this.raise(Errors.UnterminatedRegExp,{at:createPositionWithColumnOffset(startLoc,1)});const ch=this.input.charCodeAt(pos);if(isNewLine(ch))throw this.raise(Errors.UnterminatedRegExp,{at:createPositionWithColumnOffset(startLoc,1)});if(escaped)escaped=!1;else{if(91===ch)inClass=!0;else if(93===ch&&inClass)inClass=!1;else if(47===ch&&!inClass)break;escaped=92===ch}}const content=this.input.slice(start,pos);++pos;let mods="";const nextPos=()=>createPositionWithColumnOffset(startLoc,pos+2-start);for(;pos<this.length;){const cp=this.codePointAtPos(pos),char=String.fromCharCode(cp);if(VALID_REGEX_FLAGS.has(cp))118===cp?mods.includes("u")&&this.raise(Errors.IncompatibleRegExpUVFlags,{at:nextPos()}):117===cp&&mods.includes("v")&&this.raise(Errors.IncompatibleRegExpUVFlags,{at:nextPos()}),mods.includes(char)&&this.raise(Errors.DuplicateRegExpFlags,{at:nextPos()});else{if(!isIdentifierChar(cp)&&92!==cp)break;this.raise(Errors.MalformedRegExpFlags,{at:nextPos()})}++pos,mods+=char}this.state.pos=pos,this.finishToken(135,{pattern:content,flags:mods})}readInt(radix,len,forceLen=!1,allowNumSeparator=!0){const{n,pos}=readInt(this.input,this.state.pos,this.state.lineStart,this.state.curLine,radix,len,forceLen,allowNumSeparator,this.errorHandlers_readInt,!1);return this.state.pos=pos,n}readRadixNumber(radix){const startLoc=this.state.curPosition();let isBigInt=!1;this.state.pos+=2;const val=this.readInt(radix);null==val&&this.raise(Errors.InvalidDigit,{at:createPositionWithColumnOffset(startLoc,2),radix});const next=this.input.charCodeAt(this.state.pos);if(110===next)++this.state.pos,isBigInt=!0;else if(109===next)throw this.raise(Errors.InvalidDecimal,{at:startLoc});if(isIdentifierStart(this.codePointAtPos(this.state.pos)))throw this.raise(Errors.NumberIdentifier,{at:this.state.curPosition()});if(isBigInt){const str=this.input.slice(startLoc.index,this.state.pos).replace(/[_n]/g,"");this.finishToken(133,str)}else this.finishToken(132,val)}readNumber(startsWithDot){const start=this.state.pos,startLoc=this.state.curPosition();let isFloat=!1,isBigInt=!1,isDecimal=!1,hasExponent=!1,isOctal=!1;startsWithDot||null!==this.readInt(10)||this.raise(Errors.InvalidNumber,{at:this.state.curPosition()});const hasLeadingZero=this.state.pos-start>=2&&48===this.input.charCodeAt(start);if(hasLeadingZero){const integer=this.input.slice(start,this.state.pos);if(this.recordStrictModeErrors(Errors.StrictOctalLiteral,{at:startLoc}),!this.state.strict){const underscorePos=integer.indexOf("_");underscorePos>0&&this.raise(Errors.ZeroDigitNumericSeparator,{at:createPositionWithColumnOffset(startLoc,underscorePos)})}isOctal=hasLeadingZero&&!/[89]/.test(integer)}let next=this.input.charCodeAt(this.state.pos);if(46!==next||isOctal||(++this.state.pos,this.readInt(10),isFloat=!0,next=this.input.charCodeAt(this.state.pos)),69!==next&&101!==next||isOctal||(next=this.input.charCodeAt(++this.state.pos),43!==next&&45!==next||++this.state.pos,null===this.readInt(10)&&this.raise(Errors.InvalidOrMissingExponent,{at:startLoc}),isFloat=!0,hasExponent=!0,next=this.input.charCodeAt(this.state.pos)),110===next&&((isFloat||hasLeadingZero)&&this.raise(Errors.InvalidBigIntLiteral,{at:startLoc}),++this.state.pos,isBigInt=!0),109===next&&(this.expectPlugin("decimal",this.state.curPosition()),(hasExponent||hasLeadingZero)&&this.raise(Errors.InvalidDecimal,{at:startLoc}),++this.state.pos,isDecimal=!0),isIdentifierStart(this.codePointAtPos(this.state.pos)))throw this.raise(Errors.NumberIdentifier,{at:this.state.curPosition()});const str=this.input.slice(start,this.state.pos).replace(/[_mn]/g,"");if(isBigInt)return void this.finishToken(133,str);if(isDecimal)return void this.finishToken(134,str);const val=isOctal?parseInt(str,8):parseFloat(str);this.finishToken(132,val)}readCodePoint(throwOnInvalid){const{code,pos}=readCodePoint(this.input,this.state.pos,this.state.lineStart,this.state.curLine,throwOnInvalid,this.errorHandlers_readCodePoint);return this.state.pos=pos,code}readString(quote){const{str,pos,curLine,lineStart}=readStringContents(34===quote?"double":"single",this.input,this.state.pos+1,this.state.lineStart,this.state.curLine,this.errorHandlers_readStringContents_string);this.state.pos=pos+1,this.state.lineStart=lineStart,this.state.curLine=curLine,this.finishToken(131,str)}readTemplateContinuation(){this.match(8)||this.unexpected(null,8),this.state.pos--,this.readTemplateToken()}readTemplateToken(){const opening=this.input[this.state.pos],{str,firstInvalidLoc,pos,curLine,lineStart}=readStringContents("template",this.input,this.state.pos+1,this.state.lineStart,this.state.curLine,this.errorHandlers_readStringContents_template);this.state.pos=pos+1,this.state.lineStart=lineStart,this.state.curLine=curLine,firstInvalidLoc&&(this.state.firstInvalidTemplateEscapePos=new Position(firstInvalidLoc.curLine,firstInvalidLoc.pos-firstInvalidLoc.lineStart,firstInvalidLoc.pos)),96===this.input.codePointAt(pos)?this.finishToken(24,firstInvalidLoc?null:opening+str+"`"):(this.state.pos++,this.finishToken(25,firstInvalidLoc?null:opening+str+"${"))}recordStrictModeErrors(toParseError,{at}){const index=at.index;this.state.strict&&!this.state.strictErrors.has(index)?this.raise(toParseError,{at}):this.state.strictErrors.set(index,[toParseError,at])}readWord1(firstCode){this.state.containsEsc=!1;let word="";const start=this.state.pos;let chunkStart=this.state.pos;for(void 0!==firstCode&&(this.state.pos+=firstCode<=65535?1:2);this.state.pos<this.length;){const ch=this.codePointAtPos(this.state.pos);if(isIdentifierChar(ch))this.state.pos+=ch<=65535?1:2;else{if(92!==ch)break;{this.state.containsEsc=!0,word+=this.input.slice(chunkStart,this.state.pos);const escStart=this.state.curPosition(),identifierCheck=this.state.pos===start?isIdentifierStart:isIdentifierChar;if(117!==this.input.charCodeAt(++this.state.pos)){this.raise(Errors.MissingUnicodeEscape,{at:this.state.curPosition()}),chunkStart=this.state.pos-1;continue}++this.state.pos;const esc=this.readCodePoint(!0);null!==esc&&(identifierCheck(esc)||this.raise(Errors.EscapedCharNotAnIdentifier,{at:escStart}),word+=String.fromCodePoint(esc)),chunkStart=this.state.pos}}}return word+this.input.slice(chunkStart,this.state.pos)}readWord(firstCode){const word=this.readWord1(firstCode),type=keywords$1.get(word);void 0!==type?this.finishToken(type,tokenLabelName(type)):this.finishToken(130,word)}checkKeywordEscapes(){const{type}=this.state;tokenIsKeyword(type)&&this.state.containsEsc&&this.raise(Errors.InvalidEscapedReservedWord,{at:this.state.startLoc,reservedWord:tokenLabelName(type)})}raise(toParseError,raiseProperties){const{at}=raiseProperties,details=_objectWithoutPropertiesLoose(raiseProperties,_excluded),error=toParseError({loc:at instanceof Position?at:at.loc.start,details});if(!this.options.errorRecovery)throw error;return this.isLookahead||this.state.errors.push(error),error}raiseOverwrite(toParseError,raiseProperties){const{at}=raiseProperties,details=_objectWithoutPropertiesLoose(raiseProperties,_excluded2),loc=at instanceof Position?at:at.loc.start,pos=loc.index,errors=this.state.errors;for(let i=errors.length-1;i>=0;i--){const error=errors[i];if(error.loc.index===pos)return errors[i]=toParseError({loc,details});if(error.loc.index<pos)break}return this.raise(toParseError,raiseProperties)}updateContext(prevType){}unexpected(loc,type){throw this.raise(Errors.UnexpectedToken,{expected:type?tokenLabelName(type):null,at:null!=loc?loc:this.state.startLoc})}expectPlugin(pluginName,loc){if(this.hasPlugin(pluginName))return!0;throw this.raise(Errors.MissingPlugin,{at:null!=loc?loc:this.state.startLoc,missingPlugin:[pluginName]})}expectOnePlugin(pluginNames){if(!pluginNames.some((name=>this.hasPlugin(name))))throw this.raise(Errors.MissingOneOfPlugins,{at:this.state.startLoc,missingPlugin:pluginNames})}errorBuilder(error){return(pos,lineStart,curLine)=>{this.raise(error,{at:buildPosition(pos,lineStart,curLine)})}}}class ClassScope{constructor(){this.privateNames=new Set,this.loneAccessors=new Map,this.undefinedPrivateNames=new Map}}class ClassScopeHandler{constructor(parser){this.parser=void 0,this.stack=[],this.undefinedPrivateNames=new Map,this.parser=parser}current(){return this.stack[this.stack.length-1]}enter(){this.stack.push(new ClassScope)}exit(){const oldClassScope=this.stack.pop(),current=this.current();for(const[name,loc]of Array.from(oldClassScope.undefinedPrivateNames))current?current.undefinedPrivateNames.has(name)||current.undefinedPrivateNames.set(name,loc):this.parser.raise(Errors.InvalidPrivateFieldResolution,{at:loc,identifierName:name})}declarePrivateName(name,elementType,loc){const{privateNames,loneAccessors,undefinedPrivateNames}=this.current();let redefined=privateNames.has(name);if(3&elementType){const accessor=redefined&&loneAccessors.get(name);if(accessor){redefined=(3&accessor)===(3&elementType)||(4&accessor)!==(4&elementType),redefined||loneAccessors.delete(name)}else redefined||loneAccessors.set(name,elementType)}redefined&&this.parser.raise(Errors.PrivateNameRedeclaration,{at:loc,identifierName:name}),privateNames.add(name),undefinedPrivateNames.delete(name)}usePrivateName(name,loc){let classScope;for(classScope of this.stack)if(classScope.privateNames.has(name))return;classScope?classScope.undefinedPrivateNames.set(name,loc):this.parser.raise(Errors.InvalidPrivateFieldResolution,{at:loc,identifierName:name})}}class ExpressionScope{constructor(type=0){this.type=void 0,this.type=type}canBeArrowParameterDeclaration(){return 2===this.type||1===this.type}isCertainlyParameterDeclaration(){return 3===this.type}}class ArrowHeadParsingScope extends ExpressionScope{constructor(type){super(type),this.declarationErrors=new Map}recordDeclarationError(ParsingErrorClass,{at}){const index=at.index;this.declarationErrors.set(index,[ParsingErrorClass,at])}clearDeclarationError(index){this.declarationErrors.delete(index)}iterateErrors(iterator){this.declarationErrors.forEach(iterator)}}class ExpressionScopeHandler{constructor(parser){this.parser=void 0,this.stack=[new ExpressionScope],this.parser=parser}enter(scope){this.stack.push(scope)}exit(){this.stack.pop()}recordParameterInitializerError(toParseError,{at:node}){const origin={at:node.loc.start},{stack}=this;let i=stack.length-1,scope=stack[i];for(;!scope.isCertainlyParameterDeclaration();){if(!scope.canBeArrowParameterDeclaration())return;scope.recordDeclarationError(toParseError,origin),scope=stack[--i]}this.parser.raise(toParseError,origin)}recordArrowParameterBindingError(error,{at:node}){const{stack}=this,scope=stack[stack.length-1],origin={at:node.loc.start};if(scope.isCertainlyParameterDeclaration())this.parser.raise(error,origin);else{if(!scope.canBeArrowParameterDeclaration())return;scope.recordDeclarationError(error,origin)}}recordAsyncArrowParametersError({at}){const{stack}=this;let i=stack.length-1,scope=stack[i];for(;scope.canBeArrowParameterDeclaration();)2===scope.type&&scope.recordDeclarationError(Errors.AwaitBindingIdentifier,{at}),scope=stack[--i]}validateAsPattern(){const{stack}=this,currentScope=stack[stack.length-1];currentScope.canBeArrowParameterDeclaration()&&currentScope.iterateErrors((([toParseError,loc])=>{this.parser.raise(toParseError,{at:loc});let i=stack.length-2,scope=stack[i];for(;scope.canBeArrowParameterDeclaration();)scope.clearDeclarationError(loc.index),scope=stack[--i]}))}}function newExpressionScope(){return new ExpressionScope}class ProductionParameterHandler{constructor(){this.stacks=[]}enter(flags){this.stacks.push(flags)}exit(){this.stacks.pop()}currentFlags(){return this.stacks[this.stacks.length-1]}get hasAwait(){return(2&this.currentFlags())>0}get hasYield(){return(1&this.currentFlags())>0}get hasReturn(){return(4&this.currentFlags())>0}get hasIn(){return(8&this.currentFlags())>0}}function functionFlags(isAsync,isGenerator){return(isAsync?2:0)|(isGenerator?1:0)}class UtilParser extends Tokenizer{addExtra(node,key,value,enumerable=!0){if(!node)return;const extra=node.extra=node.extra||{};enumerable?extra[key]=value:Object.defineProperty(extra,key,{enumerable,value})}isContextual(token){return this.state.type===token&&!this.state.containsEsc}isUnparsedContextual(nameStart,name){const nameEnd=nameStart+name.length;if(this.input.slice(nameStart,nameEnd)===name){const nextCh=this.input.charCodeAt(nameEnd);return!(isIdentifierChar(nextCh)||55296==(64512&nextCh))}return!1}isLookaheadContextual(name){const next=this.nextTokenStart();return this.isUnparsedContextual(next,name)}eatContextual(token){return!!this.isContextual(token)&&(this.next(),!0)}expectContextual(token,toParseError){if(!this.eatContextual(token)){if(null!=toParseError)throw this.raise(toParseError,{at:this.state.startLoc});this.unexpected(null,token)}}canInsertSemicolon(){return this.match(137)||this.match(8)||this.hasPrecedingLineBreak()}hasPrecedingLineBreak(){return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index,this.state.start))}hasFollowingLineBreak(){return skipWhiteSpaceToLineBreak.lastIndex=this.state.end,skipWhiteSpaceToLineBreak.test(this.input)}isLineTerminator(){return this.eat(13)||this.canInsertSemicolon()}semicolon(allowAsi=!0){(allowAsi?this.isLineTerminator():this.eat(13))||this.raise(Errors.MissingSemicolon,{at:this.state.lastTokEndLoc})}expect(type,loc){this.eat(type)||this.unexpected(loc,type)}tryParse(fn,oldState=this.state.clone()){const abortSignal={node:null};try{const node=fn(((node=null)=>{throw abortSignal.node=node,abortSignal}));if(this.state.errors.length>oldState.errors.length){const failState=this.state;return this.state=oldState,this.state.tokensLength=failState.tokensLength,{node,error:failState.errors[oldState.errors.length],thrown:!1,aborted:!1,failState}}return{node,error:null,thrown:!1,aborted:!1,failState:null}}catch(error){const failState=this.state;if(this.state=oldState,error instanceof SyntaxError)return{node:null,error,thrown:!0,aborted:!1,failState};if(error===abortSignal)return{node:abortSignal.node,error:null,thrown:!1,aborted:!0,failState};throw error}}checkExpressionErrors(refExpressionErrors,andThrow){if(!refExpressionErrors)return!1;const{shorthandAssignLoc,doubleProtoLoc,privateKeyLoc,optionalParametersLoc}=refExpressionErrors;if(!andThrow)return!!(shorthandAssignLoc||doubleProtoLoc||optionalParametersLoc||privateKeyLoc);null!=shorthandAssignLoc&&this.raise(Errors.InvalidCoverInitializedName,{at:shorthandAssignLoc}),null!=doubleProtoLoc&&this.raise(Errors.DuplicateProto,{at:doubleProtoLoc}),null!=privateKeyLoc&&this.raise(Errors.UnexpectedPrivateField,{at:privateKeyLoc}),null!=optionalParametersLoc&&this.unexpected(optionalParametersLoc)}isLiteralPropertyName(){return tokenIsLiteralPropertyName(this.state.type)}isPrivateName(node){return"PrivateName"===node.type}getPrivateNameSV(node){return node.id.name}hasPropertyAsPrivateName(node){return("MemberExpression"===node.type||"OptionalMemberExpression"===node.type)&&this.isPrivateName(node.property)}isObjectProperty(node){return"ObjectProperty"===node.type}isObjectMethod(node){return"ObjectMethod"===node.type}initializeScopes(inModule="module"===this.options.sourceType){const oldLabels=this.state.labels;this.state.labels=[];const oldExportedIdentifiers=this.exportedIdentifiers;this.exportedIdentifiers=new Set;const oldInModule=this.inModule;this.inModule=inModule;const oldScope=this.scope,ScopeHandler=this.getScopeHandler();this.scope=new ScopeHandler(this,inModule);const oldProdParam=this.prodParam;this.prodParam=new ProductionParameterHandler;const oldClassScope=this.classScope;this.classScope=new ClassScopeHandler(this);const oldExpressionScope=this.expressionScope;return this.expressionScope=new ExpressionScopeHandler(this),()=>{this.state.labels=oldLabels,this.exportedIdentifiers=oldExportedIdentifiers,this.inModule=oldInModule,this.scope=oldScope,this.prodParam=oldProdParam,this.classScope=oldClassScope,this.expressionScope=oldExpressionScope}}enterInitialScopes(){let paramFlags=0;this.inModule&&(paramFlags|=2),this.scope.enter(1),this.prodParam.enter(paramFlags)}checkDestructuringPrivate(refExpressionErrors){const{privateKeyLoc}=refExpressionErrors;null!==privateKeyLoc&&this.expectPlugin("destructuringPrivate",privateKeyLoc)}}class ExpressionErrors{constructor(){this.shorthandAssignLoc=null,this.doubleProtoLoc=null,this.privateKeyLoc=null,this.optionalParametersLoc=null}}class Node{constructor(parser,pos,loc){this.type="",this.start=pos,this.end=0,this.loc=new SourceLocation(loc),null!=parser&&parser.options.ranges&&(this.range=[pos,0]),null!=parser&&parser.filename&&(this.loc.filename=parser.filename)}}const NodePrototype=Node.prototype;function cloneIdentifier(node){const{type,start,end,loc,range,extra,name}=node,cloned=Object.create(NodePrototype);return cloned.type=type,cloned.start=start,cloned.end=end,cloned.loc=loc,cloned.range=range,cloned.extra=extra,cloned.name=name,"Placeholder"===type&&(cloned.expectedNode=node.expectedNode),cloned}function cloneStringLiteral(node){const{type,start,end,loc,range,extra}=node;if("Placeholder"===type)return function(node){return cloneIdentifier(node)}(node);const cloned=Object.create(NodePrototype);return cloned.type=type,cloned.start=start,cloned.end=end,cloned.loc=loc,cloned.range=range,void 0!==node.raw?cloned.raw=node.raw:cloned.extra=extra,cloned.value=node.value,cloned}NodePrototype.__clone=function(){const newNode=new Node(void 0,this.start,this.loc.start),keys=Object.keys(this);for(let i=0,length=keys.length;i<length;i++){const key=keys[i];"leadingComments"!==key&&"trailingComments"!==key&&"innerComments"!==key&&(newNode[key]=this[key])}return newNode};class NodeUtils extends UtilParser{startNode(){return new Node(this,this.state.start,this.state.startLoc)}startNodeAt(loc){return new Node(this,loc.index,loc)}startNodeAtNode(type){return this.startNodeAt(type.loc.start)}finishNode(node,type){return this.finishNodeAt(node,type,this.state.lastTokEndLoc)}finishNodeAt(node,type,endLoc){return node.type=type,node.end=endLoc.index,node.loc.end=endLoc,this.options.ranges&&(node.range[1]=endLoc.index),this.options.attachComment&&this.processComment(node),node}resetStartLocation(node,startLoc){node.start=startLoc.index,node.loc.start=startLoc,this.options.ranges&&(node.range[0]=startLoc.index)}resetEndLocation(node,endLoc=this.state.lastTokEndLoc){node.end=endLoc.index,node.loc.end=endLoc,this.options.ranges&&(node.range[1]=endLoc.index)}resetStartLocationFromNode(node,locationNode){this.resetStartLocation(node,locationNode.loc.start)}}const reservedTypes=new Set(["_","any","bool","boolean","empty","extends","false","interface","mixed","null","number","static","string","true","typeof","void"]),FlowErrors=ParseErrorEnum`flow`({AmbiguousConditionalArrow:"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",AmbiguousDeclareModuleKind:"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.",AssignReservedType:({reservedType})=>`Cannot overwrite reserved type ${reservedType}.`,DeclareClassElement:"The `declare` modifier can only appear on class fields.",DeclareClassFieldInitializer:"Initializers are not allowed in fields with the `declare` modifier.",DuplicateDeclareModuleExports:"Duplicate `declare module.exports` statement.",EnumBooleanMemberNotInitialized:({memberName,enumName})=>`Boolean enum members need to be initialized. Use either \`${memberName} = true,\` or \`${memberName} = false,\` in enum \`${enumName}\`.`,EnumDuplicateMemberName:({memberName,enumName})=>`Enum member names need to be unique, but the name \`${memberName}\` has already been used before in enum \`${enumName}\`.`,EnumInconsistentMemberValues:({enumName})=>`Enum \`${enumName}\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,EnumInvalidExplicitType:({invalidEnumType,enumName})=>`Enum type \`${invalidEnumType}\` is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${enumName}\`.`,EnumInvalidExplicitTypeUnknownSupplied:({enumName})=>`Supplied enum type is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${enumName}\`.`,EnumInvalidMemberInitializerPrimaryType:({enumName,memberName,explicitType})=>`Enum \`${enumName}\` has type \`${explicitType}\`, so the initializer of \`${memberName}\` needs to be a ${explicitType} literal.`,EnumInvalidMemberInitializerSymbolType:({enumName,memberName})=>`Symbol enum members cannot be initialized. Use \`${memberName},\` in enum \`${enumName}\`.`,EnumInvalidMemberInitializerUnknownType:({enumName,memberName})=>`The enum member initializer for \`${memberName}\` needs to be a literal (either a boolean, number, or string) in enum \`${enumName}\`.`,EnumInvalidMemberName:({enumName,memberName,suggestion})=>`Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \`${memberName}\`, consider using \`${suggestion}\`, in enum \`${enumName}\`.`,EnumNumberMemberNotInitialized:({enumName,memberName})=>`Number enum members need to be initialized, e.g. \`${memberName} = 1\` in enum \`${enumName}\`.`,EnumStringMemberInconsistentlyInitailized:({enumName})=>`String enum members need to consistently either all use initializers, or use no initializers, in enum \`${enumName}\`.`,GetterMayNotHaveThisParam:"A getter cannot have a `this` parameter.",ImportReflectionHasImportType:"An `import module` declaration can not use `type` or `typeof` keyword.",ImportTypeShorthandOnlyInPureImport:"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.",InexactInsideExact:"Explicit inexact syntax cannot appear inside an explicit exact object type.",InexactInsideNonObject:"Explicit inexact syntax cannot appear in class or interface definitions.",InexactVariance:"Explicit inexact syntax cannot have variance.",InvalidNonTypeImportInDeclareModule:"Imports within a `declare module` body must always be `import type` or `import typeof`.",MissingTypeParamDefault:"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",NestedDeclareModule:"`declare module` cannot be used inside another `declare module`.",NestedFlowComment:"Cannot have a flow comment inside another flow comment.",PatternIsOptional:Object.assign({message:"A binding pattern parameter cannot be optional in an implementation signature."},{reasonCode:"OptionalBindingPattern"}),SetterMayNotHaveThisParam:"A setter cannot have a `this` parameter.",SpreadVariance:"Spread properties cannot have variance.",ThisParamAnnotationRequired:"A type annotation is required for the `this` parameter.",ThisParamBannedInConstructor:"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.",ThisParamMayNotBeOptional:"The `this` parameter cannot be optional.",ThisParamMustBeFirst:"The `this` parameter must be the first function parameter.",ThisParamNoDefault:"The `this` parameter may not have a default value.",TypeBeforeInitializer:"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",TypeCastInPattern:"The type cast expression is expected to be wrapped with parenthesis.",UnexpectedExplicitInexactInObject:"Explicit inexact syntax must appear at the end of an inexact object.",UnexpectedReservedType:({reservedType})=>`Unexpected reserved type ${reservedType}.`,UnexpectedReservedUnderscore:"`_` is only allowed as a type argument to call or new.",UnexpectedSpaceBetweenModuloChecks:"Spaces between `%` and `checks` are not allowed here.",UnexpectedSpreadType:"Spread operator cannot appear in class or interface definitions.",UnexpectedSubtractionOperand:'Unexpected token, expected "number" or "bigint".',UnexpectedTokenAfterTypeParameter:"Expected an arrow function after this type parameter declaration.",UnexpectedTypeParameterBeforeAsyncArrowFunction:"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.",UnsupportedDeclareExportKind:({unsupportedExportKind,suggestion})=>`\`declare export ${unsupportedExportKind}\` is not supported. Use \`${suggestion}\` instead.`,UnsupportedStatementInDeclareModule:"Only declares and type imports are allowed inside declare module.",UnterminatedFlowComment:"Unterminated flow-comment."});function hasTypeImportKind(node){return"type"===node.importKind||"typeof"===node.importKind}const exportSuggestions={const:"declare export var",let:"declare export var",type:"export type",interface:"export interface"};const FLOW_PRAGMA_REGEX=/\*?\s*@((?:no)?flow)\b/;const entities={__proto__:null,quot:'"',amp:"&",apos:"'",lt:"<",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",lang:"〈",rang:"〉",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦"},JsxErrors=ParseErrorEnum`jsx`({AttributeIsEmpty:"JSX attributes must only be assigned a non-empty expression.",MissingClosingTagElement:({openingTagName})=>`Expected corresponding JSX closing tag for <${openingTagName}>.`,MissingClosingTagFragment:"Expected corresponding JSX closing tag for <>.",UnexpectedSequenceExpression:"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?",UnexpectedToken:({unexpected,HTMLEntity})=>`Unexpected token \`${unexpected}\`. Did you mean \`${HTMLEntity}\` or \`{'${unexpected}'}\`?`,UnsupportedJsxValue:"JSX value should be either an expression or a quoted JSX text.",UnterminatedJsxContent:"Unterminated JSX contents.",UnwrappedAdjacentJSXElements:"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"});function isFragment(object){return!!object&&("JSXOpeningFragment"===object.type||"JSXClosingFragment"===object.type)}function getQualifiedJSXName(object){if("JSXIdentifier"===object.type)return object.name;if("JSXNamespacedName"===object.type)return object.namespace.name+":"+object.name.name;if("JSXMemberExpression"===object.type)return getQualifiedJSXName(object.object)+"."+getQualifiedJSXName(object.property);throw new Error("Node had unexpected type: "+object.type)}class TypeScriptScope extends Scope{constructor(...args){super(...args),this.types=new Set,this.enums=new Set,this.constEnums=new Set,this.classes=new Set,this.exportOnlyBindings=new Set}}class TypeScriptScopeHandler extends ScopeHandler{constructor(...args){super(...args),this.importsStack=[]}createScope(flags){return this.importsStack.push(new Set),new TypeScriptScope(flags)}enter(flags){256==flags&&this.importsStack.push(new Set),super.enter(flags)}exit(){const flags=super.exit();return 256==flags&&this.importsStack.pop(),flags}hasImport(name,allowShadow){const len=this.importsStack.length;if(this.importsStack[len-1].has(name))return!0;if(!allowShadow&&len>1)for(let i=0;i<len-1;i++)if(this.importsStack[i].has(name))return!0;return!1}declareName(name,bindingType,loc){if(4096&bindingType)return this.hasImport(name,!0)&&this.parser.raise(Errors.VarRedeclaration,{at:loc,identifierName:name}),void this.importsStack[this.importsStack.length-1].add(name);const scope=this.currentScope();if(1024&bindingType)return this.maybeExportDefined(scope,name),void scope.exportOnlyBindings.add(name);super.declareName(name,bindingType,loc),2&bindingType&&(1&bindingType||(this.checkRedeclarationInScope(scope,name,bindingType,loc),this.maybeExportDefined(scope,name)),scope.types.add(name)),256&bindingType&&scope.enums.add(name),512&bindingType&&scope.constEnums.add(name),128&bindingType&&scope.classes.add(name)}isRedeclaredInScope(scope,name,bindingType){if(scope.enums.has(name)){if(256&bindingType){return!!(512&bindingType)!==scope.constEnums.has(name)}return!0}return 128&bindingType&&scope.classes.has(name)?!!scope.lexical.has(name)&&!!(1&bindingType):!!(2&bindingType&&scope.types.has(name))||super.isRedeclaredInScope(scope,name,bindingType)}checkLocalExport(id){const{name}=id;if(this.hasImport(name))return;for(let i=this.scopeStack.length-1;i>=0;i--){const scope=this.scopeStack[i];if(scope.types.has(name)||scope.exportOnlyBindings.has(name))return}super.checkLocalExport(id)}}const unwrapParenthesizedExpression=node=>"ParenthesizedExpression"===node.type?unwrapParenthesizedExpression(node.expression):node;class LValParser extends NodeUtils{toAssignable(node,isLHS=!1){var _node$extra,_node$extra3;let parenthesized;switch(("ParenthesizedExpression"===node.type||null!=(_node$extra=node.extra)&&_node$extra.parenthesized)&&(parenthesized=unwrapParenthesizedExpression(node),isLHS?"Identifier"===parenthesized.type?this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment,{at:node}):"MemberExpression"!==parenthesized.type&&this.raise(Errors.InvalidParenthesizedAssignment,{at:node}):this.raise(Errors.InvalidParenthesizedAssignment,{at:node})),node.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":case"RestElement":break;case"ObjectExpression":node.type="ObjectPattern";for(let i=0,length=node.properties.length,last=length-1;i<length;i++){var _node$extra2;const prop=node.properties[i],isLast=i===last;this.toAssignableObjectExpressionProp(prop,isLast,isLHS),isLast&&"RestElement"===prop.type&&null!=(_node$extra2=node.extra)&&_node$extra2.trailingCommaLoc&&this.raise(Errors.RestTrailingComma,{at:node.extra.trailingCommaLoc})}break;case"ObjectProperty":{const{key,value}=node;this.isPrivateName(key)&&this.classScope.usePrivateName(this.getPrivateNameSV(key),key.loc.start),this.toAssignable(value,isLHS);break}case"SpreadElement":throw new Error("Internal @babel/parser error (this is a bug, please report it). SpreadElement should be converted by .toAssignable's caller.");case"ArrayExpression":node.type="ArrayPattern",this.toAssignableList(node.elements,null==(_node$extra3=node.extra)?void 0:_node$extra3.trailingCommaLoc,isLHS);break;case"AssignmentExpression":"="!==node.operator&&this.raise(Errors.MissingEqInAssignment,{at:node.left.loc.end}),node.type="AssignmentPattern",delete node.operator,this.toAssignable(node.left,isLHS);break;case"ParenthesizedExpression":this.toAssignable(parenthesized,isLHS)}}toAssignableObjectExpressionProp(prop,isLast,isLHS){if("ObjectMethod"===prop.type)this.raise("get"===prop.kind||"set"===prop.kind?Errors.PatternHasAccessor:Errors.PatternHasMethod,{at:prop.key});else if("SpreadElement"===prop.type){prop.type="RestElement";const arg=prop.argument;this.checkToRestConversion(arg,!1),this.toAssignable(arg,isLHS),isLast||this.raise(Errors.RestTrailingComma,{at:prop})}else this.toAssignable(prop,isLHS)}toAssignableList(exprList,trailingCommaLoc,isLHS){const end=exprList.length-1;for(let i=0;i<=end;i++){const elt=exprList[i];if(elt){if("SpreadElement"===elt.type){elt.type="RestElement";const arg=elt.argument;this.checkToRestConversion(arg,!0),this.toAssignable(arg,isLHS)}else this.toAssignable(elt,isLHS);"RestElement"===elt.type&&(i<end?this.raise(Errors.RestTrailingComma,{at:elt}):trailingCommaLoc&&this.raise(Errors.RestTrailingComma,{at:trailingCommaLoc}))}}}isAssignable(node,isBinding){switch(node.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":case"RestElement":return!0;case"ObjectExpression":{const last=node.properties.length-1;return node.properties.every(((prop,i)=>"ObjectMethod"!==prop.type&&(i===last||"SpreadElement"!==prop.type)&&this.isAssignable(prop)))}case"ObjectProperty":return this.isAssignable(node.value);case"SpreadElement":return this.isAssignable(node.argument);case"ArrayExpression":return node.elements.every((element=>null===element||this.isAssignable(element)));case"AssignmentExpression":return"="===node.operator;case"ParenthesizedExpression":return this.isAssignable(node.expression);case"MemberExpression":case"OptionalMemberExpression":return!isBinding;default:return!1}}toReferencedList(exprList,isParenthesizedExpr){return exprList}toReferencedListDeep(exprList,isParenthesizedExpr){this.toReferencedList(exprList,isParenthesizedExpr);for(const expr of exprList)"ArrayExpression"===(null==expr?void 0:expr.type)&&this.toReferencedListDeep(expr.elements)}parseSpread(refExpressionErrors){const node=this.startNode();return this.next(),node.argument=this.parseMaybeAssignAllowIn(refExpressionErrors,void 0),this.finishNode(node,"SpreadElement")}parseRestBinding(){const node=this.startNode();return this.next(),node.argument=this.parseBindingAtom(),this.finishNode(node,"RestElement")}parseBindingAtom(){switch(this.state.type){case 0:{const node=this.startNode();return this.next(),node.elements=this.parseBindingList(3,93,1),this.finishNode(node,"ArrayPattern")}case 5:return this.parseObjectLike(8,!0)}return this.parseIdentifier()}parseBindingList(close,closeCharCode,flags){const allowEmpty=1&flags,elts=[];let first=!0;for(;!this.eat(close);)if(first?first=!1:this.expect(12),allowEmpty&&this.match(12))elts.push(null);else{if(this.eat(close))break;if(this.match(21)){if(elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(),flags)),!this.checkCommaAfterRest(closeCharCode)){this.expect(close);break}}else{const decorators=[];for(this.match(26)&&this.hasPlugin("decorators")&&this.raise(Errors.UnsupportedParameterDecorator,{at:this.state.startLoc});this.match(26);)decorators.push(this.parseDecorator());elts.push(this.parseAssignableListItem(flags,decorators))}}return elts}parseBindingRestProperty(prop){return this.next(),prop.argument=this.parseIdentifier(),this.checkCommaAfterRest(125),this.finishNode(prop,"RestElement")}parseBindingProperty(){const prop=this.startNode(),{type,startLoc}=this.state;return 21===type?this.parseBindingRestProperty(prop):(136===type?(this.expectPlugin("destructuringPrivate",startLoc),this.classScope.usePrivateName(this.state.value,startLoc),prop.key=this.parsePrivateName()):this.parsePropertyName(prop),prop.method=!1,this.parseObjPropValue(prop,startLoc,!1,!1,!0,!1))}parseAssignableListItem(flags,decorators){const left=this.parseMaybeDefault();this.parseAssignableListItemTypes(left,flags);const elt=this.parseMaybeDefault(left.loc.start,left);return decorators.length&&(left.decorators=decorators),elt}parseAssignableListItemTypes(param,flags){return param}parseMaybeDefault(startLoc,left){var _left;if(null!=startLoc||(startLoc=this.state.startLoc),left=null!=(_left=left)?_left:this.parseBindingAtom(),!this.eat(29))return left;const node=this.startNodeAt(startLoc);return node.left=left,node.right=this.parseMaybeAssignAllowIn(),this.finishNode(node,"AssignmentPattern")}isValidLVal(type,isUnparenthesizedInAssign,binding){return object={AssignmentPattern:"left",RestElement:"argument",ObjectProperty:"value",ParenthesizedExpression:"expression",ArrayPattern:"elements",ObjectPattern:"properties"},key=type,Object.hasOwnProperty.call(object,key)&&object[key];var object,key}checkLVal(expression,{in:ancestor,binding=64,checkClashes=!1,strictModeChanged=!1,hasParenthesizedAncestor=!1}){var _expression$extra;const type=expression.type;if(this.isObjectMethod(expression))return;if("MemberExpression"===type)return void(64!==binding&&this.raise(Errors.InvalidPropertyBindingPattern,{at:expression}));if("Identifier"===type){this.checkIdentifier(expression,binding,strictModeChanged);const{name}=expression;return void(checkClashes&&(checkClashes.has(name)?this.raise(Errors.ParamDupe,{at:expression}):checkClashes.add(name)))}const validity=this.isValidLVal(type,!(hasParenthesizedAncestor||null!=(_expression$extra=expression.extra)&&_expression$extra.parenthesized)&&"AssignmentExpression"===ancestor.type,binding);if(!0===validity)return;if(!1===validity){const ParseErrorClass=64===binding?Errors.InvalidLhs:Errors.InvalidLhsBinding;return void this.raise(ParseErrorClass,{at:expression,ancestor})}const[key,isParenthesizedExpression]=Array.isArray(validity)?validity:[validity,"ParenthesizedExpression"===type],nextAncestor="ArrayPattern"===type||"ObjectPattern"===type||"ParenthesizedExpression"===type?{type}:ancestor;for(const child of[].concat(expression[key]))child&&this.checkLVal(child,{in:nextAncestor,binding,checkClashes,strictModeChanged,hasParenthesizedAncestor:isParenthesizedExpression})}checkIdentifier(at,bindingType,strictModeChanged=!1){this.state.strict&&(strictModeChanged?isStrictBindReservedWord(at.name,this.inModule):isStrictBindOnlyReservedWord(at.name))&&(64===bindingType?this.raise(Errors.StrictEvalArguments,{at,referenceName:at.name}):this.raise(Errors.StrictEvalArgumentsBinding,{at,bindingName:at.name})),8192&bindingType&&"let"===at.name&&this.raise(Errors.LetInLexicalBinding,{at}),64&bindingType||this.declareNameFromIdentifier(at,bindingType)}declareNameFromIdentifier(identifier,binding){this.scope.declareName(identifier.name,binding,identifier.loc.start)}checkToRestConversion(node,allowPattern){switch(node.type){case"ParenthesizedExpression":this.checkToRestConversion(node.expression,allowPattern);break;case"Identifier":case"MemberExpression":break;case"ArrayExpression":case"ObjectExpression":if(allowPattern)break;default:this.raise(Errors.InvalidRestAssignmentPattern,{at:node})}}checkCommaAfterRest(close){return!!this.match(12)&&(this.raise(this.lookaheadCharCode()===close?Errors.RestTrailingComma:Errors.ElementAfterRest,{at:this.state.startLoc}),!0)}}function assert(x){if(!x)throw new Error("Assert fail")}const TSErrors=ParseErrorEnum`typescript`({AbstractMethodHasImplementation:({methodName})=>`Method '${methodName}' cannot have an implementation because it is marked abstract.`,AbstractPropertyHasInitializer:({propertyName})=>`Property '${propertyName}' cannot have an initializer because it is marked abstract.`,AccesorCannotDeclareThisParameter:"'get' and 'set' accessors cannot declare 'this' parameters.",AccesorCannotHaveTypeParameters:"An accessor cannot have type parameters.",AccessorCannotBeOptional:"An 'accessor' property cannot be declared optional.",ClassMethodHasDeclare:"Class methods cannot have the 'declare' modifier.",ClassMethodHasReadonly:"Class methods cannot have the 'readonly' modifier.",ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.",ConstructorHasTypeParameters:"Type parameters cannot appear on a constructor declaration.",DeclareAccessor:({kind})=>`'declare' is not allowed in ${kind}ters.`,DeclareClassFieldHasInitializer:"Initializers are not allowed in ambient contexts.",DeclareFunctionHasImplementation:"An implementation cannot be declared in ambient contexts.",DuplicateAccessibilityModifier:({modifier})=>"Accessibility modifier already seen.",DuplicateModifier:({modifier})=>`Duplicate modifier: '${modifier}'.`,EmptyHeritageClauseType:({token})=>`'${token}' list cannot be empty.`,EmptyTypeArguments:"Type argument list cannot be empty.",EmptyTypeParameters:"Type parameter list cannot be empty.",ExpectedAmbientAfterExportDeclare:"'export declare' must be followed by an ambient declaration.",ImportAliasHasImportType:"An import alias can not use 'import type'.",ImportReflectionHasImportType:"An `import module` declaration can not use `type` modifier",IncompatibleModifiers:({modifiers})=>`'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,IndexSignatureHasAbstract:"Index signatures cannot have the 'abstract' modifier.",IndexSignatureHasAccessibility:({modifier})=>`Index signatures cannot have an accessibility modifier ('${modifier}').`,IndexSignatureHasDeclare:"Index signatures cannot have the 'declare' modifier.",IndexSignatureHasOverride:"'override' modifier cannot appear on an index signature.",IndexSignatureHasStatic:"Index signatures cannot have the 'static' modifier.",InitializerNotAllowedInAmbientContext:"Initializers are not allowed in ambient contexts.",InvalidModifierOnTypeMember:({modifier})=>`'${modifier}' modifier cannot appear on a type member.`,InvalidModifierOnTypeParameter:({modifier})=>`'${modifier}' modifier cannot appear on a type parameter.`,InvalidModifierOnTypeParameterPositions:({modifier})=>`'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,InvalidModifiersOrder:({orderedModifiers})=>`'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,InvalidPropertyAccessAfterInstantiationExpression:"Invalid property access after an instantiation expression. You can either wrap the instantiation expression in parentheses, or delete the type arguments.",InvalidTupleMemberLabel:"Tuple members must be labeled with a simple identifier.",MissingInterfaceName:"'interface' declarations must be followed by an identifier.",MixedLabeledAndUnlabeledElements:"Tuple members must all have names or all not have names.",NonAbstractClassHasAbstractMethod:"Abstract methods can only appear within an abstract class.",NonClassMethodPropertyHasAbstractModifer:"'abstract' modifier can only appear on a class, method, or property declaration.",OptionalTypeBeforeRequired:"A required element cannot follow an optional element.",OverrideNotInSubClass:"This member cannot have an 'override' modifier because its containing class does not extend another class.",PatternIsOptional:"A binding pattern parameter cannot be optional in an implementation signature.",PrivateElementHasAbstract:"Private elements cannot have the 'abstract' modifier.",PrivateElementHasAccessibility:({modifier})=>`Private elements cannot have an accessibility modifier ('${modifier}').`,ReadonlyForMethodSignature:"'readonly' modifier can only appear on a property declaration or index signature.",ReservedArrowTypeParam:"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.",ReservedTypeAssertion:"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.",SetAccesorCannotHaveOptionalParameter:"A 'set' accessor cannot have an optional parameter.",SetAccesorCannotHaveRestParameter:"A 'set' accessor cannot have rest parameter.",SetAccesorCannotHaveReturnType:"A 'set' accessor cannot have a return type annotation.",SingleTypeParameterWithoutTrailingComma:({typeParameterName})=>`Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,StaticBlockCannotHaveModifier:"Static class blocks cannot have any modifier.",TupleOptionalAfterType:"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).",TypeAnnotationAfterAssign:"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",TypeImportCannotSpecifyDefaultAndNamed:"A type-only import can specify a default import or named bindings, but not both.",TypeModifierIsUsedInTypeExports:"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.",TypeModifierIsUsedInTypeImports:"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.",UnexpectedParameterModifier:"A parameter property is only allowed in a constructor implementation.",UnexpectedReadonly:"'readonly' type modifier is only permitted on array and tuple literal types.",UnexpectedTypeAnnotation:"Did not expect a type annotation here.",UnexpectedTypeCastInParameter:"Unexpected type cast in parameter position.",UnsupportedImportTypeArgument:"Argument in a type import must be a string literal.",UnsupportedParameterPropertyKind:"A parameter property may not be declared using a binding pattern.",UnsupportedSignatureParameterKind:({type})=>`Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`});function tsIsAccessModifier(modifier){return"private"===modifier||"public"===modifier||"protected"===modifier}function tsIsVarianceAnnotations(modifier){return"in"===modifier||"out"===modifier}function isPossiblyLiteralEnum(expression){if("MemberExpression"!==expression.type)return!1;const{computed,property}=expression;return(!computed||"StringLiteral"===property.type||!("TemplateLiteral"!==property.type||property.expressions.length>0))&&isUncomputedMemberExpressionChain(expression.object)}function isValidAmbientConstInitializer(expression,estree){var _expression$extra;const{type}=expression;if(null!=(_expression$extra=expression.extra)&&_expression$extra.parenthesized)return!1;if(estree){if("Literal"===type){const{value}=expression;if("string"==typeof value||"boolean"==typeof value)return!0}}else if("StringLiteral"===type||"BooleanLiteral"===type)return!0;return!(!isNumber(expression,estree)&&!function(expression,estree){if("UnaryExpression"===expression.type){const{operator,argument}=expression;if("-"===operator&&isNumber(argument,estree))return!0}return!1}(expression,estree))||("TemplateLiteral"===type&&0===expression.expressions.length||!!isPossiblyLiteralEnum(expression))}function isNumber(expression,estree){return estree?"Literal"===expression.type&&("number"==typeof expression.value||"bigint"in expression):"NumericLiteral"===expression.type||"BigIntLiteral"===expression.type}function isUncomputedMemberExpressionChain(expression){return"Identifier"===expression.type||"MemberExpression"===expression.type&&!expression.computed&&isUncomputedMemberExpressionChain(expression.object)}const PlaceholderErrors=ParseErrorEnum`placeholders`({ClassNameIsRequired:"A class name is required.",UnexpectedSpace:"Unexpected space in placeholder."});function hasPlugin(plugins,expectedConfig){const[expectedName,expectedOptions]="string"==typeof expectedConfig?[expectedConfig,{}]:expectedConfig,expectedKeys=Object.keys(expectedOptions),expectedOptionsIsEmpty=0===expectedKeys.length;return plugins.some((p=>{if("string"==typeof p)return expectedOptionsIsEmpty&&p===expectedName;{const[pluginName,pluginOptions]=p;if(pluginName!==expectedName)return!1;for(const key of expectedKeys)if(pluginOptions[key]!==expectedOptions[key])return!1;return!0}}))}function getPluginOption(plugins,name,option){const plugin=plugins.find((plugin=>Array.isArray(plugin)?plugin[0]===name:plugin===name));return plugin&&Array.isArray(plugin)&&plugin.length>1?plugin[1][option]:null}const PIPELINE_PROPOSALS=["minimal","fsharp","hack","smart"],TOPIC_TOKENS=["^^","@@","^","%","#"],RECORD_AND_TUPLE_SYNTAX_TYPES=["hash","bar"];const mixinPlugins={estree:superClass=>class extends superClass{parse(){const file=toESTreeLocation(super.parse());return this.options.tokens&&(file.tokens=file.tokens.map(toESTreeLocation)),file}parseRegExpLiteral({pattern,flags}){let regex=null;try{regex=new RegExp(pattern,flags)}catch(e){}const node=this.estreeParseLiteral(regex);return node.regex={pattern,flags},node}parseBigIntLiteral(value){let bigInt;try{bigInt=BigInt(value)}catch(_unused){bigInt=null}const node=this.estreeParseLiteral(bigInt);return node.bigint=String(node.value||value),node}parseDecimalLiteral(value){const node=this.estreeParseLiteral(null);return node.decimal=String(node.value||value),node}estreeParseLiteral(value){return this.parseLiteral(value,"Literal")}parseStringLiteral(value){return this.estreeParseLiteral(value)}parseNumericLiteral(value){return this.estreeParseLiteral(value)}parseNullLiteral(){return this.estreeParseLiteral(null)}parseBooleanLiteral(value){return this.estreeParseLiteral(value)}directiveToStmt(directive){const expression=directive.value;delete directive.value,expression.type="Literal",expression.raw=expression.extra.raw,expression.value=expression.extra.expressionValue;const stmt=directive;return stmt.type="ExpressionStatement",stmt.expression=expression,stmt.directive=expression.extra.rawValue,delete expression.extra,stmt}initFunction(node,isAsync){super.initFunction(node,isAsync),node.expression=!1}checkDeclaration(node){null!=node&&this.isObjectProperty(node)?this.checkDeclaration(node.value):super.checkDeclaration(node)}getObjectOrClassMethodParams(method){return method.value.params}isValidDirective(stmt){var _stmt$expression$extr;return"ExpressionStatement"===stmt.type&&"Literal"===stmt.expression.type&&"string"==typeof stmt.expression.value&&!(null!=(_stmt$expression$extr=stmt.expression.extra)&&_stmt$expression$extr.parenthesized)}parseBlockBody(node,allowDirectives,topLevel,end,afterBlockParse){super.parseBlockBody(node,allowDirectives,topLevel,end,afterBlockParse);const directiveStatements=node.directives.map((d=>this.directiveToStmt(d)));node.body=directiveStatements.concat(node.body),delete node.directives}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){this.parseMethod(method,isGenerator,isAsync,isConstructor,allowsDirectSuper,"ClassMethod",!0),method.typeParameters&&(method.value.typeParameters=method.typeParameters,delete method.typeParameters),classBody.body.push(method)}parsePrivateName(){const node=super.parsePrivateName();return this.getPluginOption("estree","classFeatures")?this.convertPrivateNameToPrivateIdentifier(node):node}convertPrivateNameToPrivateIdentifier(node){const name=super.getPrivateNameSV(node);return delete node.id,node.name=name,node.type="PrivateIdentifier",node}isPrivateName(node){return this.getPluginOption("estree","classFeatures")?"PrivateIdentifier"===node.type:super.isPrivateName(node)}getPrivateNameSV(node){return this.getPluginOption("estree","classFeatures")?node.name:super.getPrivateNameSV(node)}parseLiteral(value,type){const node=super.parseLiteral(value,type);return node.raw=node.extra.raw,delete node.extra,node}parseFunctionBody(node,allowExpression,isMethod=!1){super.parseFunctionBody(node,allowExpression,isMethod),node.expression="BlockStatement"!==node.body.type}parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope=!1){let funcNode=this.startNode();return funcNode.kind=node.kind,funcNode=super.parseMethod(funcNode,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope),funcNode.type="FunctionExpression",delete funcNode.kind,node.value=funcNode,"ClassPrivateMethod"===type&&(node.computed=!1),this.finishNode(node,"MethodDefinition")}parseClassProperty(...args){const propertyNode=super.parseClassProperty(...args);return this.getPluginOption("estree","classFeatures")?(propertyNode.type="PropertyDefinition",propertyNode):propertyNode}parseClassPrivateProperty(...args){const propertyNode=super.parseClassPrivateProperty(...args);return this.getPluginOption("estree","classFeatures")?(propertyNode.type="PropertyDefinition",propertyNode.computed=!1,propertyNode):propertyNode}parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor){const node=super.parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor);return node&&(node.type="Property","method"===node.kind&&(node.kind="init"),node.shorthand=!1),node}parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors){const node=super.parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors);return node&&(node.kind="init",node.type="Property"),node}isValidLVal(type,isUnparenthesizedInAssign,binding){return"Property"===type?"value":super.isValidLVal(type,isUnparenthesizedInAssign,binding)}isAssignable(node,isBinding){return null!=node&&this.isObjectProperty(node)?this.isAssignable(node.value,isBinding):super.isAssignable(node,isBinding)}toAssignable(node,isLHS=!1){if(null!=node&&this.isObjectProperty(node)){const{key,value}=node;this.isPrivateName(key)&&this.classScope.usePrivateName(this.getPrivateNameSV(key),key.loc.start),this.toAssignable(value,isLHS)}else super.toAssignable(node,isLHS)}toAssignableObjectExpressionProp(prop,isLast,isLHS){"get"===prop.kind||"set"===prop.kind?this.raise(Errors.PatternHasAccessor,{at:prop.key}):prop.method?this.raise(Errors.PatternHasMethod,{at:prop.key}):super.toAssignableObjectExpressionProp(prop,isLast,isLHS)}finishCallExpression(unfinished,optional){const node=super.finishCallExpression(unfinished,optional);if("Import"===node.callee.type){var _node$arguments$;if(node.type="ImportExpression",node.source=node.arguments[0],this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions"))node.attributes=null!=(_node$arguments$=node.arguments[1])?_node$arguments$:null;delete node.arguments,delete node.callee}return node}toReferencedArguments(node){"ImportExpression"!==node.type&&super.toReferencedArguments(node)}parseExport(unfinished,decorators){const exportStartLoc=this.state.lastTokStartLoc,node=super.parseExport(unfinished,decorators);switch(node.type){case"ExportAllDeclaration":node.exported=null;break;case"ExportNamedDeclaration":1===node.specifiers.length&&"ExportNamespaceSpecifier"===node.specifiers[0].type&&(node.type="ExportAllDeclaration",node.exported=node.specifiers[0].exported,delete node.specifiers);case"ExportDefaultDeclaration":{var _declaration$decorato;const{declaration}=node;"ClassDeclaration"===(null==declaration?void 0:declaration.type)&&(null==(_declaration$decorato=declaration.decorators)?void 0:_declaration$decorato.length)>0&&declaration.start===node.start&&this.resetStartLocation(node,exportStartLoc)}}return node}parseSubscript(base,startLoc,noCalls,state){const node=super.parseSubscript(base,startLoc,noCalls,state);if(state.optionalChainMember){if("OptionalMemberExpression"!==node.type&&"OptionalCallExpression"!==node.type||(node.type=node.type.substring(8)),state.stop){const chain=this.startNodeAtNode(node);return chain.expression=node,this.finishNode(chain,"ChainExpression")}}else"MemberExpression"!==node.type&&"CallExpression"!==node.type||(node.optional=!1);return node}hasPropertyAsPrivateName(node){return"ChainExpression"===node.type&&(node=node.expression),super.hasPropertyAsPrivateName(node)}isObjectProperty(node){return"Property"===node.type&&"init"===node.kind&&!node.method}isObjectMethod(node){return node.method||"get"===node.kind||"set"===node.kind}finishNodeAt(node,type,endLoc){return toESTreeLocation(super.finishNodeAt(node,type,endLoc))}resetStartLocation(node,startLoc){super.resetStartLocation(node,startLoc),toESTreeLocation(node)}resetEndLocation(node,endLoc=this.state.lastTokEndLoc){super.resetEndLocation(node,endLoc),toESTreeLocation(node)}},jsx:superClass=>class extends superClass{jsxReadToken(){let out="",chunkStart=this.state.pos;for(;;){if(this.state.pos>=this.length)throw this.raise(JsxErrors.UnterminatedJsxContent,{at:this.state.startLoc});const ch=this.input.charCodeAt(this.state.pos);switch(ch){case 60:case 123:return this.state.pos===this.state.start?void(60===ch&&this.state.canStartJSXElement?(++this.state.pos,this.finishToken(140)):super.getTokenFromCode(ch)):(out+=this.input.slice(chunkStart,this.state.pos),void this.finishToken(139,out));case 38:out+=this.input.slice(chunkStart,this.state.pos),out+=this.jsxReadEntity(),chunkStart=this.state.pos;break;default:isNewLine(ch)?(out+=this.input.slice(chunkStart,this.state.pos),out+=this.jsxReadNewLine(!0),chunkStart=this.state.pos):++this.state.pos}}}jsxReadNewLine(normalizeCRLF){const ch=this.input.charCodeAt(this.state.pos);let out;return++this.state.pos,13===ch&&10===this.input.charCodeAt(this.state.pos)?(++this.state.pos,out=normalizeCRLF?"\n":"\r\n"):out=String.fromCharCode(ch),++this.state.curLine,this.state.lineStart=this.state.pos,out}jsxReadString(quote){let out="",chunkStart=++this.state.pos;for(;;){if(this.state.pos>=this.length)throw this.raise(Errors.UnterminatedString,{at:this.state.startLoc});const ch=this.input.charCodeAt(this.state.pos);if(ch===quote)break;38===ch?(out+=this.input.slice(chunkStart,this.state.pos),out+=this.jsxReadEntity(),chunkStart=this.state.pos):isNewLine(ch)?(out+=this.input.slice(chunkStart,this.state.pos),out+=this.jsxReadNewLine(!1),chunkStart=this.state.pos):++this.state.pos}out+=this.input.slice(chunkStart,this.state.pos++),this.finishToken(131,out)}jsxReadEntity(){const startPos=++this.state.pos;if(35===this.codePointAtPos(this.state.pos)){++this.state.pos;let radix=10;120===this.codePointAtPos(this.state.pos)&&(radix=16,++this.state.pos);const codePoint=this.readInt(radix,void 0,!1,"bail");if(null!==codePoint&&59===this.codePointAtPos(this.state.pos))return++this.state.pos,String.fromCodePoint(codePoint)}else{let count=0,semi=!1;for(;count++<10&&this.state.pos<this.length&&!(semi=59==this.codePointAtPos(this.state.pos));)++this.state.pos;if(semi){const desc=this.input.slice(startPos,this.state.pos),entity=entities[desc];if(++this.state.pos,entity)return entity}}return this.state.pos=startPos,"&"}jsxReadWord(){let ch;const start=this.state.pos;do{ch=this.input.charCodeAt(++this.state.pos)}while(isIdentifierChar(ch)||45===ch);this.finishToken(138,this.input.slice(start,this.state.pos))}jsxParseIdentifier(){const node=this.startNode();return this.match(138)?node.name=this.state.value:tokenIsKeyword(this.state.type)?node.name=tokenLabelName(this.state.type):this.unexpected(),this.next(),this.finishNode(node,"JSXIdentifier")}jsxParseNamespacedName(){const startLoc=this.state.startLoc,name=this.jsxParseIdentifier();if(!this.eat(14))return name;const node=this.startNodeAt(startLoc);return node.namespace=name,node.name=this.jsxParseIdentifier(),this.finishNode(node,"JSXNamespacedName")}jsxParseElementName(){const startLoc=this.state.startLoc;let node=this.jsxParseNamespacedName();if("JSXNamespacedName"===node.type)return node;for(;this.eat(16);){const newNode=this.startNodeAt(startLoc);newNode.object=node,newNode.property=this.jsxParseIdentifier(),node=this.finishNode(newNode,"JSXMemberExpression")}return node}jsxParseAttributeValue(){let node;switch(this.state.type){case 5:return node=this.startNode(),this.setContext(types.brace),this.next(),node=this.jsxParseExpressionContainer(node,types.j_oTag),"JSXEmptyExpression"===node.expression.type&&this.raise(JsxErrors.AttributeIsEmpty,{at:node}),node;case 140:case 131:return this.parseExprAtom();default:throw this.raise(JsxErrors.UnsupportedJsxValue,{at:this.state.startLoc})}}jsxParseEmptyExpression(){const node=this.startNodeAt(this.state.lastTokEndLoc);return this.finishNodeAt(node,"JSXEmptyExpression",this.state.startLoc)}jsxParseSpreadChild(node){return this.next(),node.expression=this.parseExpression(),this.setContext(types.j_expr),this.state.canStartJSXElement=!0,this.expect(8),this.finishNode(node,"JSXSpreadChild")}jsxParseExpressionContainer(node,previousContext){if(this.match(8))node.expression=this.jsxParseEmptyExpression();else{const expression=this.parseExpression();node.expression=expression}return this.setContext(previousContext),this.state.canStartJSXElement=!0,this.expect(8),this.finishNode(node,"JSXExpressionContainer")}jsxParseAttribute(){const node=this.startNode();return this.match(5)?(this.setContext(types.brace),this.next(),this.expect(21),node.argument=this.parseMaybeAssignAllowIn(),this.setContext(types.j_oTag),this.state.canStartJSXElement=!0,this.expect(8),this.finishNode(node,"JSXSpreadAttribute")):(node.name=this.jsxParseNamespacedName(),node.value=this.eat(29)?this.jsxParseAttributeValue():null,this.finishNode(node,"JSXAttribute"))}jsxParseOpeningElementAt(startLoc){const node=this.startNodeAt(startLoc);return this.eat(141)?this.finishNode(node,"JSXOpeningFragment"):(node.name=this.jsxParseElementName(),this.jsxParseOpeningElementAfterName(node))}jsxParseOpeningElementAfterName(node){const attributes=[];for(;!this.match(56)&&!this.match(141);)attributes.push(this.jsxParseAttribute());return node.attributes=attributes,node.selfClosing=this.eat(56),this.expect(141),this.finishNode(node,"JSXOpeningElement")}jsxParseClosingElementAt(startLoc){const node=this.startNodeAt(startLoc);return this.eat(141)?this.finishNode(node,"JSXClosingFragment"):(node.name=this.jsxParseElementName(),this.expect(141),this.finishNode(node,"JSXClosingElement"))}jsxParseElementAt(startLoc){const node=this.startNodeAt(startLoc),children=[],openingElement=this.jsxParseOpeningElementAt(startLoc);let closingElement=null;if(!openingElement.selfClosing){contents:for(;;)switch(this.state.type){case 140:if(startLoc=this.state.startLoc,this.next(),this.eat(56)){closingElement=this.jsxParseClosingElementAt(startLoc);break contents}children.push(this.jsxParseElementAt(startLoc));break;case 139:children.push(this.parseExprAtom());break;case 5:{const node=this.startNode();this.setContext(types.brace),this.next(),this.match(21)?children.push(this.jsxParseSpreadChild(node)):children.push(this.jsxParseExpressionContainer(node,types.j_expr));break}default:this.unexpected()}isFragment(openingElement)&&!isFragment(closingElement)&&null!==closingElement?this.raise(JsxErrors.MissingClosingTagFragment,{at:closingElement}):!isFragment(openingElement)&&isFragment(closingElement)?this.raise(JsxErrors.MissingClosingTagElement,{at:closingElement,openingTagName:getQualifiedJSXName(openingElement.name)}):isFragment(openingElement)||isFragment(closingElement)||getQualifiedJSXName(closingElement.name)!==getQualifiedJSXName(openingElement.name)&&this.raise(JsxErrors.MissingClosingTagElement,{at:closingElement,openingTagName:getQualifiedJSXName(openingElement.name)})}if(isFragment(openingElement)?(node.openingFragment=openingElement,node.closingFragment=closingElement):(node.openingElement=openingElement,node.closingElement=closingElement),node.children=children,this.match(47))throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements,{at:this.state.startLoc});return isFragment(openingElement)?this.finishNode(node,"JSXFragment"):this.finishNode(node,"JSXElement")}jsxParseElement(){const startLoc=this.state.startLoc;return this.next(),this.jsxParseElementAt(startLoc)}setContext(newContext){const{context}=this.state;context[context.length-1]=newContext}parseExprAtom(refExpressionErrors){return this.match(139)?this.parseLiteral(this.state.value,"JSXText"):this.match(140)?this.jsxParseElement():this.match(47)&&33!==this.input.charCodeAt(this.state.pos)?(this.replaceToken(140),this.jsxParseElement()):super.parseExprAtom(refExpressionErrors)}skipSpace(){this.curContext().preserveSpace||super.skipSpace()}getTokenFromCode(code){const context=this.curContext();if(context!==types.j_expr){if(context===types.j_oTag||context===types.j_cTag){if(isIdentifierStart(code))return void this.jsxReadWord();if(62===code)return++this.state.pos,void this.finishToken(141);if((34===code||39===code)&&context===types.j_oTag)return void this.jsxReadString(code)}if(60===code&&this.state.canStartJSXElement&&33!==this.input.charCodeAt(this.state.pos+1))return++this.state.pos,void this.finishToken(140);super.getTokenFromCode(code)}else this.jsxReadToken()}updateContext(prevType){const{context,type}=this.state;if(56===type&&140===prevType)context.splice(-2,2,types.j_cTag),this.state.canStartJSXElement=!1;else if(140===type)context.push(types.j_oTag);else if(141===type){const out=context[context.length-1];out===types.j_oTag&&56===prevType||out===types.j_cTag?(context.pop(),this.state.canStartJSXElement=context[context.length-1]===types.j_expr):(this.setContext(types.j_expr),this.state.canStartJSXElement=!0)}else this.state.canStartJSXElement=tokenBeforeExprs[type]}},flow:superClass=>class extends superClass{constructor(...args){super(...args),this.flowPragma=void 0}getScopeHandler(){return FlowScopeHandler}shouldParseTypes(){return this.getPluginOption("flow","all")||"flow"===this.flowPragma}shouldParseEnums(){return!!this.getPluginOption("flow","enums")}finishToken(type,val){131!==type&&13!==type&&28!==type&&void 0===this.flowPragma&&(this.flowPragma=null),super.finishToken(type,val)}addComment(comment){if(void 0===this.flowPragma){const matches=FLOW_PRAGMA_REGEX.exec(comment.value);if(matches)if("flow"===matches[1])this.flowPragma="flow";else{if("noflow"!==matches[1])throw new Error("Unexpected flow pragma");this.flowPragma="noflow"}else;}super.addComment(comment)}flowParseTypeInitialiser(tok){const oldInType=this.state.inType;this.state.inType=!0,this.expect(tok||14);const type=this.flowParseType();return this.state.inType=oldInType,type}flowParsePredicate(){const node=this.startNode(),moduloLoc=this.state.startLoc;return this.next(),this.expectContextual(108),this.state.lastTokStart>moduloLoc.index+1&&this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks,{at:moduloLoc}),this.eat(10)?(node.value=super.parseExpression(),this.expect(11),this.finishNode(node,"DeclaredPredicate")):this.finishNode(node,"InferredPredicate")}flowParseTypeAndPredicateInitialiser(){const oldInType=this.state.inType;this.state.inType=!0,this.expect(14);let type=null,predicate=null;return this.match(54)?(this.state.inType=oldInType,predicate=this.flowParsePredicate()):(type=this.flowParseType(),this.state.inType=oldInType,this.match(54)&&(predicate=this.flowParsePredicate())),[type,predicate]}flowParseDeclareClass(node){return this.next(),this.flowParseInterfaceish(node,!0),this.finishNode(node,"DeclareClass")}flowParseDeclareFunction(node){this.next();const id=node.id=this.parseIdentifier(),typeNode=this.startNode(),typeContainer=this.startNode();this.match(47)?typeNode.typeParameters=this.flowParseTypeParameterDeclaration():typeNode.typeParameters=null,this.expect(10);const tmp=this.flowParseFunctionTypeParams();return typeNode.params=tmp.params,typeNode.rest=tmp.rest,typeNode.this=tmp._this,this.expect(11),[typeNode.returnType,node.predicate]=this.flowParseTypeAndPredicateInitialiser(),typeContainer.typeAnnotation=this.finishNode(typeNode,"FunctionTypeAnnotation"),id.typeAnnotation=this.finishNode(typeContainer,"TypeAnnotation"),this.resetEndLocation(id),this.semicolon(),this.scope.declareName(node.id.name,2048,node.id.loc.start),this.finishNode(node,"DeclareFunction")}flowParseDeclare(node,insideModule){return this.match(80)?this.flowParseDeclareClass(node):this.match(68)?this.flowParseDeclareFunction(node):this.match(74)?this.flowParseDeclareVariable(node):this.eatContextual(125)?this.match(16)?this.flowParseDeclareModuleExports(node):(insideModule&&this.raise(FlowErrors.NestedDeclareModule,{at:this.state.lastTokStartLoc}),this.flowParseDeclareModule(node)):this.isContextual(128)?this.flowParseDeclareTypeAlias(node):this.isContextual(129)?this.flowParseDeclareOpaqueType(node):this.isContextual(127)?this.flowParseDeclareInterface(node):this.match(82)?this.flowParseDeclareExportDeclaration(node,insideModule):void this.unexpected()}flowParseDeclareVariable(node){return this.next(),node.id=this.flowParseTypeAnnotatableIdentifier(!0),this.scope.declareName(node.id.name,5,node.id.loc.start),this.semicolon(),this.finishNode(node,"DeclareVariable")}flowParseDeclareModule(node){this.scope.enter(0),this.match(131)?node.id=super.parseExprAtom():node.id=this.parseIdentifier();const bodyNode=node.body=this.startNode(),body=bodyNode.body=[];for(this.expect(5);!this.match(8);){let bodyNode=this.startNode();this.match(83)?(this.next(),this.isContextual(128)||this.match(87)||this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule,{at:this.state.lastTokStartLoc}),super.parseImport(bodyNode)):(this.expectContextual(123,FlowErrors.UnsupportedStatementInDeclareModule),bodyNode=this.flowParseDeclare(bodyNode,!0)),body.push(bodyNode)}this.scope.exit(),this.expect(8),this.finishNode(bodyNode,"BlockStatement");let kind=null,hasModuleExport=!1;return body.forEach((bodyElement=>{!function(bodyElement){return"DeclareExportAllDeclaration"===bodyElement.type||"DeclareExportDeclaration"===bodyElement.type&&(!bodyElement.declaration||"TypeAlias"!==bodyElement.declaration.type&&"InterfaceDeclaration"!==bodyElement.declaration.type)}(bodyElement)?"DeclareModuleExports"===bodyElement.type&&(hasModuleExport&&this.raise(FlowErrors.DuplicateDeclareModuleExports,{at:bodyElement}),"ES"===kind&&this.raise(FlowErrors.AmbiguousDeclareModuleKind,{at:bodyElement}),kind="CommonJS",hasModuleExport=!0):("CommonJS"===kind&&this.raise(FlowErrors.AmbiguousDeclareModuleKind,{at:bodyElement}),kind="ES")})),node.kind=kind||"CommonJS",this.finishNode(node,"DeclareModule")}flowParseDeclareExportDeclaration(node,insideModule){if(this.expect(82),this.eat(65))return this.match(68)||this.match(80)?node.declaration=this.flowParseDeclare(this.startNode()):(node.declaration=this.flowParseType(),this.semicolon()),node.default=!0,this.finishNode(node,"DeclareExportDeclaration");if(this.match(75)||this.isLet()||(this.isContextual(128)||this.isContextual(127))&&!insideModule){const label=this.state.value;throw this.raise(FlowErrors.UnsupportedDeclareExportKind,{at:this.state.startLoc,unsupportedExportKind:label,suggestion:exportSuggestions[label]})}return this.match(74)||this.match(68)||this.match(80)||this.isContextual(129)?(node.declaration=this.flowParseDeclare(this.startNode()),node.default=!1,this.finishNode(node,"DeclareExportDeclaration")):this.match(55)||this.match(5)||this.isContextual(127)||this.isContextual(128)||this.isContextual(129)?("ExportNamedDeclaration"===(node=this.parseExport(node,null)).type&&(node.type="ExportDeclaration",node.default=!1,delete node.exportKind),node.type="Declare"+node.type,node):void this.unexpected()}flowParseDeclareModuleExports(node){return this.next(),this.expectContextual(109),node.typeAnnotation=this.flowParseTypeAnnotation(),this.semicolon(),this.finishNode(node,"DeclareModuleExports")}flowParseDeclareTypeAlias(node){this.next();const finished=this.flowParseTypeAlias(node);return finished.type="DeclareTypeAlias",finished}flowParseDeclareOpaqueType(node){this.next();const finished=this.flowParseOpaqueType(node,!0);return finished.type="DeclareOpaqueType",finished}flowParseDeclareInterface(node){return this.next(),this.flowParseInterfaceish(node,!1),this.finishNode(node,"DeclareInterface")}flowParseInterfaceish(node,isClass){if(node.id=this.flowParseRestrictedIdentifier(!isClass,!0),this.scope.declareName(node.id.name,isClass?17:8201,node.id.loc.start),this.match(47)?node.typeParameters=this.flowParseTypeParameterDeclaration():node.typeParameters=null,node.extends=[],this.eat(81))do{node.extends.push(this.flowParseInterfaceExtends())}while(!isClass&&this.eat(12));if(isClass){if(node.implements=[],node.mixins=[],this.eatContextual(115))do{node.mixins.push(this.flowParseInterfaceExtends())}while(this.eat(12));if(this.eatContextual(111))do{node.implements.push(this.flowParseInterfaceExtends())}while(this.eat(12))}node.body=this.flowParseObjectType({allowStatic:isClass,allowExact:!1,allowSpread:!1,allowProto:isClass,allowInexact:!1})}flowParseInterfaceExtends(){const node=this.startNode();return node.id=this.flowParseQualifiedTypeIdentifier(),this.match(47)?node.typeParameters=this.flowParseTypeParameterInstantiation():node.typeParameters=null,this.finishNode(node,"InterfaceExtends")}flowParseInterface(node){return this.flowParseInterfaceish(node,!1),this.finishNode(node,"InterfaceDeclaration")}checkNotUnderscore(word){"_"===word&&this.raise(FlowErrors.UnexpectedReservedUnderscore,{at:this.state.startLoc})}checkReservedType(word,startLoc,declaration){reservedTypes.has(word)&&this.raise(declaration?FlowErrors.AssignReservedType:FlowErrors.UnexpectedReservedType,{at:startLoc,reservedType:word})}flowParseRestrictedIdentifier(liberal,declaration){return this.checkReservedType(this.state.value,this.state.startLoc,declaration),this.parseIdentifier(liberal)}flowParseTypeAlias(node){return node.id=this.flowParseRestrictedIdentifier(!1,!0),this.scope.declareName(node.id.name,8201,node.id.loc.start),this.match(47)?node.typeParameters=this.flowParseTypeParameterDeclaration():node.typeParameters=null,node.right=this.flowParseTypeInitialiser(29),this.semicolon(),this.finishNode(node,"TypeAlias")}flowParseOpaqueType(node,declare){return this.expectContextual(128),node.id=this.flowParseRestrictedIdentifier(!0,!0),this.scope.declareName(node.id.name,8201,node.id.loc.start),this.match(47)?node.typeParameters=this.flowParseTypeParameterDeclaration():node.typeParameters=null,node.supertype=null,this.match(14)&&(node.supertype=this.flowParseTypeInitialiser(14)),node.impltype=null,declare||(node.impltype=this.flowParseTypeInitialiser(29)),this.semicolon(),this.finishNode(node,"OpaqueType")}flowParseTypeParameter(requireDefault=!1){const nodeStartLoc=this.state.startLoc,node=this.startNode(),variance=this.flowParseVariance(),ident=this.flowParseTypeAnnotatableIdentifier();return node.name=ident.name,node.variance=variance,node.bound=ident.typeAnnotation,this.match(29)?(this.eat(29),node.default=this.flowParseType()):requireDefault&&this.raise(FlowErrors.MissingTypeParamDefault,{at:nodeStartLoc}),this.finishNode(node,"TypeParameter")}flowParseTypeParameterDeclaration(){const oldInType=this.state.inType,node=this.startNode();node.params=[],this.state.inType=!0,this.match(47)||this.match(140)?this.next():this.unexpected();let defaultRequired=!1;do{const typeParameter=this.flowParseTypeParameter(defaultRequired);node.params.push(typeParameter),typeParameter.default&&(defaultRequired=!0),this.match(48)||this.expect(12)}while(!this.match(48));return this.expect(48),this.state.inType=oldInType,this.finishNode(node,"TypeParameterDeclaration")}flowParseTypeParameterInstantiation(){const node=this.startNode(),oldInType=this.state.inType;node.params=[],this.state.inType=!0,this.expect(47);const oldNoAnonFunctionType=this.state.noAnonFunctionType;for(this.state.noAnonFunctionType=!1;!this.match(48);)node.params.push(this.flowParseType()),this.match(48)||this.expect(12);return this.state.noAnonFunctionType=oldNoAnonFunctionType,this.expect(48),this.state.inType=oldInType,this.finishNode(node,"TypeParameterInstantiation")}flowParseTypeParameterInstantiationCallOrNew(){const node=this.startNode(),oldInType=this.state.inType;for(node.params=[],this.state.inType=!0,this.expect(47);!this.match(48);)node.params.push(this.flowParseTypeOrImplicitInstantiation()),this.match(48)||this.expect(12);return this.expect(48),this.state.inType=oldInType,this.finishNode(node,"TypeParameterInstantiation")}flowParseInterfaceType(){const node=this.startNode();if(this.expectContextual(127),node.extends=[],this.eat(81))do{node.extends.push(this.flowParseInterfaceExtends())}while(this.eat(12));return node.body=this.flowParseObjectType({allowStatic:!1,allowExact:!1,allowSpread:!1,allowProto:!1,allowInexact:!1}),this.finishNode(node,"InterfaceTypeAnnotation")}flowParseObjectPropertyKey(){return this.match(132)||this.match(131)?super.parseExprAtom():this.parseIdentifier(!0)}flowParseObjectTypeIndexer(node,isStatic,variance){return node.static=isStatic,14===this.lookahead().type?(node.id=this.flowParseObjectPropertyKey(),node.key=this.flowParseTypeInitialiser()):(node.id=null,node.key=this.flowParseType()),this.expect(3),node.value=this.flowParseTypeInitialiser(),node.variance=variance,this.finishNode(node,"ObjectTypeIndexer")}flowParseObjectTypeInternalSlot(node,isStatic){return node.static=isStatic,node.id=this.flowParseObjectPropertyKey(),this.expect(3),this.expect(3),this.match(47)||this.match(10)?(node.method=!0,node.optional=!1,node.value=this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start))):(node.method=!1,this.eat(17)&&(node.optional=!0),node.value=this.flowParseTypeInitialiser()),this.finishNode(node,"ObjectTypeInternalSlot")}flowParseObjectTypeMethodish(node){for(node.params=[],node.rest=null,node.typeParameters=null,node.this=null,this.match(47)&&(node.typeParameters=this.flowParseTypeParameterDeclaration()),this.expect(10),this.match(78)&&(node.this=this.flowParseFunctionTypeParam(!0),node.this.name=null,this.match(11)||this.expect(12));!this.match(11)&&!this.match(21);)node.params.push(this.flowParseFunctionTypeParam(!1)),this.match(11)||this.expect(12);return this.eat(21)&&(node.rest=this.flowParseFunctionTypeParam(!1)),this.expect(11),node.returnType=this.flowParseTypeInitialiser(),this.finishNode(node,"FunctionTypeAnnotation")}flowParseObjectTypeCallProperty(node,isStatic){const valueNode=this.startNode();return node.static=isStatic,node.value=this.flowParseObjectTypeMethodish(valueNode),this.finishNode(node,"ObjectTypeCallProperty")}flowParseObjectType({allowStatic,allowExact,allowSpread,allowProto,allowInexact}){const oldInType=this.state.inType;this.state.inType=!0;const nodeStart=this.startNode();let endDelim,exact;nodeStart.callProperties=[],nodeStart.properties=[],nodeStart.indexers=[],nodeStart.internalSlots=[];let inexact=!1;for(allowExact&&this.match(6)?(this.expect(6),endDelim=9,exact=!0):(this.expect(5),endDelim=8,exact=!1),nodeStart.exact=exact;!this.match(endDelim);){let isStatic=!1,protoStartLoc=null,inexactStartLoc=null;const node=this.startNode();if(allowProto&&this.isContextual(116)){const lookahead=this.lookahead();14!==lookahead.type&&17!==lookahead.type&&(this.next(),protoStartLoc=this.state.startLoc,allowStatic=!1)}if(allowStatic&&this.isContextual(104)){const lookahead=this.lookahead();14!==lookahead.type&&17!==lookahead.type&&(this.next(),isStatic=!0)}const variance=this.flowParseVariance();if(this.eat(0))null!=protoStartLoc&&this.unexpected(protoStartLoc),this.eat(0)?(variance&&this.unexpected(variance.loc.start),nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node,isStatic))):nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node,isStatic,variance));else if(this.match(10)||this.match(47))null!=protoStartLoc&&this.unexpected(protoStartLoc),variance&&this.unexpected(variance.loc.start),nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node,isStatic));else{let kind="init";if(this.isContextual(98)||this.isContextual(103)){tokenIsLiteralPropertyName(this.lookahead().type)&&(kind=this.state.value,this.next())}const propOrInexact=this.flowParseObjectTypeProperty(node,isStatic,protoStartLoc,variance,kind,allowSpread,null!=allowInexact?allowInexact:!exact);null===propOrInexact?(inexact=!0,inexactStartLoc=this.state.lastTokStartLoc):nodeStart.properties.push(propOrInexact)}this.flowObjectTypeSemicolon(),!inexactStartLoc||this.match(8)||this.match(9)||this.raise(FlowErrors.UnexpectedExplicitInexactInObject,{at:inexactStartLoc})}this.expect(endDelim),allowSpread&&(nodeStart.inexact=inexact);const out=this.finishNode(nodeStart,"ObjectTypeAnnotation");return this.state.inType=oldInType,out}flowParseObjectTypeProperty(node,isStatic,protoStartLoc,variance,kind,allowSpread,allowInexact){if(this.eat(21)){return this.match(12)||this.match(13)||this.match(8)||this.match(9)?(allowSpread?allowInexact||this.raise(FlowErrors.InexactInsideExact,{at:this.state.lastTokStartLoc}):this.raise(FlowErrors.InexactInsideNonObject,{at:this.state.lastTokStartLoc}),variance&&this.raise(FlowErrors.InexactVariance,{at:variance}),null):(allowSpread||this.raise(FlowErrors.UnexpectedSpreadType,{at:this.state.lastTokStartLoc}),null!=protoStartLoc&&this.unexpected(protoStartLoc),variance&&this.raise(FlowErrors.SpreadVariance,{at:variance}),node.argument=this.flowParseType(),this.finishNode(node,"ObjectTypeSpreadProperty"))}{node.key=this.flowParseObjectPropertyKey(),node.static=isStatic,node.proto=null!=protoStartLoc,node.kind=kind;let optional=!1;return this.match(47)||this.match(10)?(node.method=!0,null!=protoStartLoc&&this.unexpected(protoStartLoc),variance&&this.unexpected(variance.loc.start),node.value=this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start)),"get"!==kind&&"set"!==kind||this.flowCheckGetterSetterParams(node),!allowSpread&&"constructor"===node.key.name&&node.value.this&&this.raise(FlowErrors.ThisParamBannedInConstructor,{at:node.value.this})):("init"!==kind&&this.unexpected(),node.method=!1,this.eat(17)&&(optional=!0),node.value=this.flowParseTypeInitialiser(),node.variance=variance),node.optional=optional,this.finishNode(node,"ObjectTypeProperty")}}flowCheckGetterSetterParams(property){const paramCount="get"===property.kind?0:1,length=property.value.params.length+(property.value.rest?1:0);property.value.this&&this.raise("get"===property.kind?FlowErrors.GetterMayNotHaveThisParam:FlowErrors.SetterMayNotHaveThisParam,{at:property.value.this}),length!==paramCount&&this.raise("get"===property.kind?Errors.BadGetterArity:Errors.BadSetterArity,{at:property}),"set"===property.kind&&property.value.rest&&this.raise(Errors.BadSetterRestParameter,{at:property})}flowObjectTypeSemicolon(){this.eat(13)||this.eat(12)||this.match(8)||this.match(9)||this.unexpected()}flowParseQualifiedTypeIdentifier(startLoc,id){null!=startLoc||(startLoc=this.state.startLoc);let node=id||this.flowParseRestrictedIdentifier(!0);for(;this.eat(16);){const node2=this.startNodeAt(startLoc);node2.qualification=node,node2.id=this.flowParseRestrictedIdentifier(!0),node=this.finishNode(node2,"QualifiedTypeIdentifier")}return node}flowParseGenericType(startLoc,id){const node=this.startNodeAt(startLoc);return node.typeParameters=null,node.id=this.flowParseQualifiedTypeIdentifier(startLoc,id),this.match(47)&&(node.typeParameters=this.flowParseTypeParameterInstantiation()),this.finishNode(node,"GenericTypeAnnotation")}flowParseTypeofType(){const node=this.startNode();return this.expect(87),node.argument=this.flowParsePrimaryType(),this.finishNode(node,"TypeofTypeAnnotation")}flowParseTupleType(){const node=this.startNode();for(node.types=[],this.expect(0);this.state.pos<this.length&&!this.match(3)&&(node.types.push(this.flowParseType()),!this.match(3));)this.expect(12);return this.expect(3),this.finishNode(node,"TupleTypeAnnotation")}flowParseFunctionTypeParam(first){let name=null,optional=!1,typeAnnotation=null;const node=this.startNode(),lh=this.lookahead(),isThis=78===this.state.type;return 14===lh.type||17===lh.type?(isThis&&!first&&this.raise(FlowErrors.ThisParamMustBeFirst,{at:node}),name=this.parseIdentifier(isThis),this.eat(17)&&(optional=!0,isThis&&this.raise(FlowErrors.ThisParamMayNotBeOptional,{at:node})),typeAnnotation=this.flowParseTypeInitialiser()):typeAnnotation=this.flowParseType(),node.name=name,node.optional=optional,node.typeAnnotation=typeAnnotation,this.finishNode(node,"FunctionTypeParam")}reinterpretTypeAsFunctionTypeParam(type){const node=this.startNodeAt(type.loc.start);return node.name=null,node.optional=!1,node.typeAnnotation=type,this.finishNode(node,"FunctionTypeParam")}flowParseFunctionTypeParams(params=[]){let rest=null,_this=null;for(this.match(78)&&(_this=this.flowParseFunctionTypeParam(!0),_this.name=null,this.match(11)||this.expect(12));!this.match(11)&&!this.match(21);)params.push(this.flowParseFunctionTypeParam(!1)),this.match(11)||this.expect(12);return this.eat(21)&&(rest=this.flowParseFunctionTypeParam(!1)),{params,rest,_this}}flowIdentToTypeAnnotation(startLoc,node,id){switch(id.name){case"any":return this.finishNode(node,"AnyTypeAnnotation");case"bool":case"boolean":return this.finishNode(node,"BooleanTypeAnnotation");case"mixed":return this.finishNode(node,"MixedTypeAnnotation");case"empty":return this.finishNode(node,"EmptyTypeAnnotation");case"number":return this.finishNode(node,"NumberTypeAnnotation");case"string":return this.finishNode(node,"StringTypeAnnotation");case"symbol":return this.finishNode(node,"SymbolTypeAnnotation");default:return this.checkNotUnderscore(id.name),this.flowParseGenericType(startLoc,id)}}flowParsePrimaryType(){const startLoc=this.state.startLoc,node=this.startNode();let tmp,type,isGroupedType=!1;const oldNoAnonFunctionType=this.state.noAnonFunctionType;switch(this.state.type){case 5:return this.flowParseObjectType({allowStatic:!1,allowExact:!1,allowSpread:!0,allowProto:!1,allowInexact:!0});case 6:return this.flowParseObjectType({allowStatic:!1,allowExact:!0,allowSpread:!0,allowProto:!1,allowInexact:!1});case 0:return this.state.noAnonFunctionType=!1,type=this.flowParseTupleType(),this.state.noAnonFunctionType=oldNoAnonFunctionType,type;case 47:return node.typeParameters=this.flowParseTypeParameterDeclaration(),this.expect(10),tmp=this.flowParseFunctionTypeParams(),node.params=tmp.params,node.rest=tmp.rest,node.this=tmp._this,this.expect(11),this.expect(19),node.returnType=this.flowParseType(),this.finishNode(node,"FunctionTypeAnnotation");case 10:if(this.next(),!this.match(11)&&!this.match(21))if(tokenIsIdentifier(this.state.type)||this.match(78)){const token=this.lookahead().type;isGroupedType=17!==token&&14!==token}else isGroupedType=!0;if(isGroupedType){if(this.state.noAnonFunctionType=!1,type=this.flowParseType(),this.state.noAnonFunctionType=oldNoAnonFunctionType,this.state.noAnonFunctionType||!(this.match(12)||this.match(11)&&19===this.lookahead().type))return this.expect(11),type;this.eat(12)}return tmp=type?this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]):this.flowParseFunctionTypeParams(),node.params=tmp.params,node.rest=tmp.rest,node.this=tmp._this,this.expect(11),this.expect(19),node.returnType=this.flowParseType(),node.typeParameters=null,this.finishNode(node,"FunctionTypeAnnotation");case 131:return this.parseLiteral(this.state.value,"StringLiteralTypeAnnotation");case 85:case 86:return node.value=this.match(85),this.next(),this.finishNode(node,"BooleanLiteralTypeAnnotation");case 53:if("-"===this.state.value){if(this.next(),this.match(132))return this.parseLiteralAtNode(-this.state.value,"NumberLiteralTypeAnnotation",node);if(this.match(133))return this.parseLiteralAtNode(-this.state.value,"BigIntLiteralTypeAnnotation",node);throw this.raise(FlowErrors.UnexpectedSubtractionOperand,{at:this.state.startLoc})}return void this.unexpected();case 132:return this.parseLiteral(this.state.value,"NumberLiteralTypeAnnotation");case 133:return this.parseLiteral(this.state.value,"BigIntLiteralTypeAnnotation");case 88:return this.next(),this.finishNode(node,"VoidTypeAnnotation");case 84:return this.next(),this.finishNode(node,"NullLiteralTypeAnnotation");case 78:return this.next(),this.finishNode(node,"ThisTypeAnnotation");case 55:return this.next(),this.finishNode(node,"ExistsTypeAnnotation");case 87:return this.flowParseTypeofType();default:if(tokenIsKeyword(this.state.type)){const label=tokenLabelName(this.state.type);return this.next(),super.createIdentifier(node,label)}if(tokenIsIdentifier(this.state.type))return this.isContextual(127)?this.flowParseInterfaceType():this.flowIdentToTypeAnnotation(startLoc,node,this.parseIdentifier())}this.unexpected()}flowParsePostfixType(){const startLoc=this.state.startLoc;let type=this.flowParsePrimaryType(),seenOptionalIndexedAccess=!1;for(;(this.match(0)||this.match(18))&&!this.canInsertSemicolon();){const node=this.startNodeAt(startLoc),optional=this.eat(18);seenOptionalIndexedAccess=seenOptionalIndexedAccess||optional,this.expect(0),!optional&&this.match(3)?(node.elementType=type,this.next(),type=this.finishNode(node,"ArrayTypeAnnotation")):(node.objectType=type,node.indexType=this.flowParseType(),this.expect(3),seenOptionalIndexedAccess?(node.optional=optional,type=this.finishNode(node,"OptionalIndexedAccessType")):type=this.finishNode(node,"IndexedAccessType"))}return type}flowParsePrefixType(){const node=this.startNode();return this.eat(17)?(node.typeAnnotation=this.flowParsePrefixType(),this.finishNode(node,"NullableTypeAnnotation")):this.flowParsePostfixType()}flowParseAnonFunctionWithoutParens(){const param=this.flowParsePrefixType();if(!this.state.noAnonFunctionType&&this.eat(19)){const node=this.startNodeAt(param.loc.start);return node.params=[this.reinterpretTypeAsFunctionTypeParam(param)],node.rest=null,node.this=null,node.returnType=this.flowParseType(),node.typeParameters=null,this.finishNode(node,"FunctionTypeAnnotation")}return param}flowParseIntersectionType(){const node=this.startNode();this.eat(45);const type=this.flowParseAnonFunctionWithoutParens();for(node.types=[type];this.eat(45);)node.types.push(this.flowParseAnonFunctionWithoutParens());return 1===node.types.length?type:this.finishNode(node,"IntersectionTypeAnnotation")}flowParseUnionType(){const node=this.startNode();this.eat(43);const type=this.flowParseIntersectionType();for(node.types=[type];this.eat(43);)node.types.push(this.flowParseIntersectionType());return 1===node.types.length?type:this.finishNode(node,"UnionTypeAnnotation")}flowParseType(){const oldInType=this.state.inType;this.state.inType=!0;const type=this.flowParseUnionType();return this.state.inType=oldInType,type}flowParseTypeOrImplicitInstantiation(){if(130===this.state.type&&"_"===this.state.value){const startLoc=this.state.startLoc,node=this.parseIdentifier();return this.flowParseGenericType(startLoc,node)}return this.flowParseType()}flowParseTypeAnnotation(){const node=this.startNode();return node.typeAnnotation=this.flowParseTypeInitialiser(),this.finishNode(node,"TypeAnnotation")}flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride){const ident=allowPrimitiveOverride?this.parseIdentifier():this.flowParseRestrictedIdentifier();return this.match(14)&&(ident.typeAnnotation=this.flowParseTypeAnnotation(),this.resetEndLocation(ident)),ident}typeCastToParameter(node){return node.expression.typeAnnotation=node.typeAnnotation,this.resetEndLocation(node.expression,node.typeAnnotation.loc.end),node.expression}flowParseVariance(){let variance=null;return this.match(53)?(variance=this.startNode(),"+"===this.state.value?variance.kind="plus":variance.kind="minus",this.next(),this.finishNode(variance,"Variance")):variance}parseFunctionBody(node,allowExpressionBody,isMethod=!1){allowExpressionBody?this.forwardNoArrowParamsConversionAt(node,(()=>super.parseFunctionBody(node,!0,isMethod))):super.parseFunctionBody(node,!1,isMethod)}parseFunctionBodyAndFinish(node,type,isMethod=!1){if(this.match(14)){const typeNode=this.startNode();[typeNode.typeAnnotation,node.predicate]=this.flowParseTypeAndPredicateInitialiser(),node.returnType=typeNode.typeAnnotation?this.finishNode(typeNode,"TypeAnnotation"):null}return super.parseFunctionBodyAndFinish(node,type,isMethod)}parseStatementLike(flags){if(this.state.strict&&this.isContextual(127)){if(tokenIsKeywordOrIdentifier(this.lookahead().type)){const node=this.startNode();return this.next(),this.flowParseInterface(node)}}else if(this.shouldParseEnums()&&this.isContextual(124)){const node=this.startNode();return this.next(),this.flowParseEnumDeclaration(node)}const stmt=super.parseStatementLike(flags);return void 0!==this.flowPragma||this.isValidDirective(stmt)||(this.flowPragma=null),stmt}parseExpressionStatement(node,expr,decorators){if("Identifier"===expr.type)if("declare"===expr.name){if(this.match(80)||tokenIsIdentifier(this.state.type)||this.match(68)||this.match(74)||this.match(82))return this.flowParseDeclare(node)}else if(tokenIsIdentifier(this.state.type)){if("interface"===expr.name)return this.flowParseInterface(node);if("type"===expr.name)return this.flowParseTypeAlias(node);if("opaque"===expr.name)return this.flowParseOpaqueType(node,!1)}return super.parseExpressionStatement(node,expr,decorators)}shouldParseExportDeclaration(){const{type}=this.state;return tokenIsFlowInterfaceOrTypeOrOpaque(type)||this.shouldParseEnums()&&124===type?!this.state.containsEsc:super.shouldParseExportDeclaration()}isExportDefaultSpecifier(){const{type}=this.state;return tokenIsFlowInterfaceOrTypeOrOpaque(type)||this.shouldParseEnums()&&124===type?this.state.containsEsc:super.isExportDefaultSpecifier()}parseExportDefaultExpression(){if(this.shouldParseEnums()&&this.isContextual(124)){const node=this.startNode();return this.next(),this.flowParseEnumDeclaration(node)}return super.parseExportDefaultExpression()}parseConditional(expr,startLoc,refExpressionErrors){if(!this.match(17))return expr;if(this.state.maybeInArrowParameters){const nextCh=this.lookaheadCharCode();if(44===nextCh||61===nextCh||58===nextCh||41===nextCh)return this.setOptionalParametersError(refExpressionErrors),expr}this.expect(17);const state=this.state.clone(),originalNoArrowAt=this.state.noArrowAt,node=this.startNodeAt(startLoc);let{consequent,failed}=this.tryParseConditionalConsequent(),[valid,invalid]=this.getArrowLikeExpressions(consequent);if(failed||invalid.length>0){const noArrowAt=[...originalNoArrowAt];if(invalid.length>0){this.state=state,this.state.noArrowAt=noArrowAt;for(let i=0;i<invalid.length;i++)noArrowAt.push(invalid[i].start);({consequent,failed}=this.tryParseConditionalConsequent()),[valid,invalid]=this.getArrowLikeExpressions(consequent)}failed&&valid.length>1&&this.raise(FlowErrors.AmbiguousConditionalArrow,{at:state.startLoc}),failed&&1===valid.length&&(this.state=state,noArrowAt.push(valid[0].start),this.state.noArrowAt=noArrowAt,({consequent,failed}=this.tryParseConditionalConsequent()))}return this.getArrowLikeExpressions(consequent,!0),this.state.noArrowAt=originalNoArrowAt,this.expect(14),node.test=expr,node.consequent=consequent,node.alternate=this.forwardNoArrowParamsConversionAt(node,(()=>this.parseMaybeAssign(void 0,void 0))),this.finishNode(node,"ConditionalExpression")}tryParseConditionalConsequent(){this.state.noArrowParamsConversionAt.push(this.state.start);const consequent=this.parseMaybeAssignAllowIn(),failed=!this.match(14);return this.state.noArrowParamsConversionAt.pop(),{consequent,failed}}getArrowLikeExpressions(node,disallowInvalid){const stack=[node],arrows=[];for(;0!==stack.length;){const node=stack.pop();"ArrowFunctionExpression"===node.type?(node.typeParameters||!node.returnType?this.finishArrowValidation(node):arrows.push(node),stack.push(node.body)):"ConditionalExpression"===node.type&&(stack.push(node.consequent),stack.push(node.alternate))}return disallowInvalid?(arrows.forEach((node=>this.finishArrowValidation(node))),[arrows,[]]):function(list,test){const list1=[],list2=[];for(let i=0;i<list.length;i++)(test(list[i],i,list)?list1:list2).push(list[i]);return[list1,list2]}(arrows,(node=>node.params.every((param=>this.isAssignable(param,!0)))))}finishArrowValidation(node){var _node$extra;this.toAssignableList(node.params,null==(_node$extra=node.extra)?void 0:_node$extra.trailingCommaLoc,!1),this.scope.enter(6),super.checkParams(node,!1,!0),this.scope.exit()}forwardNoArrowParamsConversionAt(node,parse){let result;return-1!==this.state.noArrowParamsConversionAt.indexOf(node.start)?(this.state.noArrowParamsConversionAt.push(this.state.start),result=parse(),this.state.noArrowParamsConversionAt.pop()):result=parse(),result}parseParenItem(node,startLoc){if(node=super.parseParenItem(node,startLoc),this.eat(17)&&(node.optional=!0,this.resetEndLocation(node)),this.match(14)){const typeCastNode=this.startNodeAt(startLoc);return typeCastNode.expression=node,typeCastNode.typeAnnotation=this.flowParseTypeAnnotation(),this.finishNode(typeCastNode,"TypeCastExpression")}return node}assertModuleNodeAllowed(node){"ImportDeclaration"===node.type&&("type"===node.importKind||"typeof"===node.importKind)||"ExportNamedDeclaration"===node.type&&"type"===node.exportKind||"ExportAllDeclaration"===node.type&&"type"===node.exportKind||super.assertModuleNodeAllowed(node)}parseExportDeclaration(node){if(this.isContextual(128)){node.exportKind="type";const declarationNode=this.startNode();return this.next(),this.match(5)?(node.specifiers=this.parseExportSpecifiers(!0),super.parseExportFrom(node),null):this.flowParseTypeAlias(declarationNode)}if(this.isContextual(129)){node.exportKind="type";const declarationNode=this.startNode();return this.next(),this.flowParseOpaqueType(declarationNode,!1)}if(this.isContextual(127)){node.exportKind="type";const declarationNode=this.startNode();return this.next(),this.flowParseInterface(declarationNode)}if(this.shouldParseEnums()&&this.isContextual(124)){node.exportKind="value";const declarationNode=this.startNode();return this.next(),this.flowParseEnumDeclaration(declarationNode)}return super.parseExportDeclaration(node)}eatExportStar(node){return!!super.eatExportStar(node)||!(!this.isContextual(128)||55!==this.lookahead().type)&&(node.exportKind="type",this.next(),this.next(),!0)}maybeParseExportNamespaceSpecifier(node){const{startLoc}=this.state,hasNamespace=super.maybeParseExportNamespaceSpecifier(node);return hasNamespace&&"type"===node.exportKind&&this.unexpected(startLoc),hasNamespace}parseClassId(node,isStatement,optionalId){super.parseClassId(node,isStatement,optionalId),this.match(47)&&(node.typeParameters=this.flowParseTypeParameterDeclaration())}parseClassMember(classBody,member,state){const{startLoc}=this.state;if(this.isContextual(123)){if(super.parseClassMemberFromModifier(classBody,member))return;member.declare=!0}super.parseClassMember(classBody,member,state),member.declare&&("ClassProperty"!==member.type&&"ClassPrivateProperty"!==member.type&&"PropertyDefinition"!==member.type?this.raise(FlowErrors.DeclareClassElement,{at:startLoc}):member.value&&this.raise(FlowErrors.DeclareClassFieldInitializer,{at:member.value}))}isIterator(word){return"iterator"===word||"asyncIterator"===word}readIterator(){const word=super.readWord1(),fullWord="@@"+word;this.isIterator(word)&&this.state.inType||this.raise(Errors.InvalidIdentifier,{at:this.state.curPosition(),identifierName:fullWord}),this.finishToken(130,fullWord)}getTokenFromCode(code){const next=this.input.charCodeAt(this.state.pos+1);123===code&&124===next?this.finishOp(6,2):!this.state.inType||62!==code&&60!==code?this.state.inType&&63===code?46===next?this.finishOp(18,2):this.finishOp(17,1):!function(current,next,next2){return 64===current&&64===next&&isIdentifierStart(next2)}(code,next,this.input.charCodeAt(this.state.pos+2))?super.getTokenFromCode(code):(this.state.pos+=2,this.readIterator()):this.finishOp(62===code?48:47,1)}isAssignable(node,isBinding){return"TypeCastExpression"===node.type?this.isAssignable(node.expression,isBinding):super.isAssignable(node,isBinding)}toAssignable(node,isLHS=!1){isLHS||"AssignmentExpression"!==node.type||"TypeCastExpression"!==node.left.type||(node.left=this.typeCastToParameter(node.left)),super.toAssignable(node,isLHS)}toAssignableList(exprList,trailingCommaLoc,isLHS){for(let i=0;i<exprList.length;i++){const expr=exprList[i];"TypeCastExpression"===(null==expr?void 0:expr.type)&&(exprList[i]=this.typeCastToParameter(expr))}super.toAssignableList(exprList,trailingCommaLoc,isLHS)}toReferencedList(exprList,isParenthesizedExpr){for(let i=0;i<exprList.length;i++){var _expr$extra;const expr=exprList[i];!expr||"TypeCastExpression"!==expr.type||null!=(_expr$extra=expr.extra)&&_expr$extra.parenthesized||!(exprList.length>1)&&isParenthesizedExpr||this.raise(FlowErrors.TypeCastInPattern,{at:expr.typeAnnotation})}return exprList}parseArrayLike(close,canBePattern,isTuple,refExpressionErrors){const node=super.parseArrayLike(close,canBePattern,isTuple,refExpressionErrors);return canBePattern&&!this.state.maybeInArrowParameters&&this.toReferencedList(node.elements),node}isValidLVal(type,isParenthesized,binding){return"TypeCastExpression"===type||super.isValidLVal(type,isParenthesized,binding)}parseClassProperty(node){return this.match(14)&&(node.typeAnnotation=this.flowParseTypeAnnotation()),super.parseClassProperty(node)}parseClassPrivateProperty(node){return this.match(14)&&(node.typeAnnotation=this.flowParseTypeAnnotation()),super.parseClassPrivateProperty(node)}isClassMethod(){return this.match(47)||super.isClassMethod()}isClassProperty(){return this.match(14)||super.isClassProperty()}isNonstaticConstructor(method){return!this.match(14)&&super.isNonstaticConstructor(method)}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){if(method.variance&&this.unexpected(method.variance.loc.start),delete method.variance,this.match(47)&&(method.typeParameters=this.flowParseTypeParameterDeclaration()),super.pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper),method.params&&isConstructor){const params=method.params;params.length>0&&this.isThisParam(params[0])&&this.raise(FlowErrors.ThisParamBannedInConstructor,{at:method})}else if("MethodDefinition"===method.type&&isConstructor&&method.value.params){const params=method.value.params;params.length>0&&this.isThisParam(params[0])&&this.raise(FlowErrors.ThisParamBannedInConstructor,{at:method})}}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){method.variance&&this.unexpected(method.variance.loc.start),delete method.variance,this.match(47)&&(method.typeParameters=this.flowParseTypeParameterDeclaration()),super.pushClassPrivateMethod(classBody,method,isGenerator,isAsync)}parseClassSuper(node){if(super.parseClassSuper(node),node.superClass&&this.match(47)&&(node.superTypeParameters=this.flowParseTypeParameterInstantiation()),this.isContextual(111)){this.next();const implemented=node.implements=[];do{const node=this.startNode();node.id=this.flowParseRestrictedIdentifier(!0),this.match(47)?node.typeParameters=this.flowParseTypeParameterInstantiation():node.typeParameters=null,implemented.push(this.finishNode(node,"ClassImplements"))}while(this.eat(12))}}checkGetterSetterParams(method){super.checkGetterSetterParams(method);const params=this.getObjectOrClassMethodParams(method);if(params.length>0){const param=params[0];this.isThisParam(param)&&"get"===method.kind?this.raise(FlowErrors.GetterMayNotHaveThisParam,{at:param}):this.isThisParam(param)&&this.raise(FlowErrors.SetterMayNotHaveThisParam,{at:param})}}parsePropertyNamePrefixOperator(node){node.variance=this.flowParseVariance()}parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors){let typeParameters;prop.variance&&this.unexpected(prop.variance.loc.start),delete prop.variance,this.match(47)&&!isAccessor&&(typeParameters=this.flowParseTypeParameterDeclaration(),this.match(10)||this.unexpected());const result=super.parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors);return typeParameters&&((result.value||result).typeParameters=typeParameters),result}parseAssignableListItemTypes(param){return this.eat(17)&&("Identifier"!==param.type&&this.raise(FlowErrors.PatternIsOptional,{at:param}),this.isThisParam(param)&&this.raise(FlowErrors.ThisParamMayNotBeOptional,{at:param}),param.optional=!0),this.match(14)?param.typeAnnotation=this.flowParseTypeAnnotation():this.isThisParam(param)&&this.raise(FlowErrors.ThisParamAnnotationRequired,{at:param}),this.match(29)&&this.isThisParam(param)&&this.raise(FlowErrors.ThisParamNoDefault,{at:param}),this.resetEndLocation(param),param}parseMaybeDefault(startLoc,left){const node=super.parseMaybeDefault(startLoc,left);return"AssignmentPattern"===node.type&&node.typeAnnotation&&node.right.start<node.typeAnnotation.start&&this.raise(FlowErrors.TypeBeforeInitializer,{at:node.typeAnnotation}),node}checkImportReflection(node){super.checkImportReflection(node),node.module&&"value"!==node.importKind&&this.raise(FlowErrors.ImportReflectionHasImportType,{at:node.specifiers[0].loc.start})}parseImportSpecifierLocal(node,specifier,type){specifier.local=hasTypeImportKind(node)?this.flowParseRestrictedIdentifier(!0,!0):this.parseIdentifier(),node.specifiers.push(this.finishImportSpecifier(specifier,type))}isPotentialImportPhase(isExport){if(super.isPotentialImportPhase(isExport))return!0;if(this.isContextual(128)){if(!isExport)return!0;const ch=this.lookaheadCharCode();return 123===ch||42===ch}return!isExport&&this.isContextual(87)}applyImportPhase(node,isExport,phase,loc){if(super.applyImportPhase(node,isExport,phase,loc),isExport){if(!phase&&this.match(65))return;node.exportKind="type"===phase?phase:"value"}else"type"===phase&&this.match(55)&&this.unexpected(),node.importKind="type"===phase||"typeof"===phase?phase:"value"}parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,bindingType){const firstIdent=specifier.imported;let specifierTypeKind=null;"Identifier"===firstIdent.type&&("type"===firstIdent.name?specifierTypeKind="type":"typeof"===firstIdent.name&&(specifierTypeKind="typeof"));let isBinding=!1;if(this.isContextual(93)&&!this.isLookaheadContextual("as")){const as_ident=this.parseIdentifier(!0);null===specifierTypeKind||tokenIsKeywordOrIdentifier(this.state.type)?(specifier.imported=firstIdent,specifier.importKind=null,specifier.local=this.parseIdentifier()):(specifier.imported=as_ident,specifier.importKind=specifierTypeKind,specifier.local=cloneIdentifier(as_ident))}else{if(null!==specifierTypeKind&&tokenIsKeywordOrIdentifier(this.state.type))specifier.imported=this.parseIdentifier(!0),specifier.importKind=specifierTypeKind;else{if(importedIsString)throw this.raise(Errors.ImportBindingIsString,{at:specifier,importName:firstIdent.value});specifier.imported=firstIdent,specifier.importKind=null}this.eatContextual(93)?specifier.local=this.parseIdentifier():(isBinding=!0,specifier.local=cloneIdentifier(specifier.imported))}const specifierIsTypeImport=hasTypeImportKind(specifier);return isInTypeOnlyImport&&specifierIsTypeImport&&this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport,{at:specifier}),(isInTypeOnlyImport||specifierIsTypeImport)&&this.checkReservedType(specifier.local.name,specifier.local.loc.start,!0),!isBinding||isInTypeOnlyImport||specifierIsTypeImport||this.checkReservedWord(specifier.local.name,specifier.loc.start,!0,!0),this.finishImportSpecifier(specifier,"ImportSpecifier")}parseBindingAtom(){return 78===this.state.type?this.parseIdentifier(!0):super.parseBindingAtom()}parseFunctionParams(node,isConstructor){const kind=node.kind;"get"!==kind&&"set"!==kind&&this.match(47)&&(node.typeParameters=this.flowParseTypeParameterDeclaration()),super.parseFunctionParams(node,isConstructor)}parseVarId(decl,kind){super.parseVarId(decl,kind),this.match(14)&&(decl.id.typeAnnotation=this.flowParseTypeAnnotation(),this.resetEndLocation(decl.id))}parseAsyncArrowFromCallExpression(node,call){if(this.match(14)){const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=!0,node.returnType=this.flowParseTypeAnnotation(),this.state.noAnonFunctionType=oldNoAnonFunctionType}return super.parseAsyncArrowFromCallExpression(node,call)}shouldParseAsyncArrow(){return this.match(14)||super.shouldParseAsyncArrow()}parseMaybeAssign(refExpressionErrors,afterLeftParse){var _jsx;let jsx,state=null;if(this.hasPlugin("jsx")&&(this.match(140)||this.match(47))){if(state=this.state.clone(),jsx=this.tryParse((()=>super.parseMaybeAssign(refExpressionErrors,afterLeftParse)),state),!jsx.error)return jsx.node;const{context}=this.state,currentContext=context[context.length-1];currentContext!==types.j_oTag&&currentContext!==types.j_expr||context.pop()}if(null!=(_jsx=jsx)&&_jsx.error||this.match(47)){var _jsx2,_jsx3;let typeParameters;state=state||this.state.clone();const arrow=this.tryParse((abort=>{var _arrowExpression$extr;typeParameters=this.flowParseTypeParameterDeclaration();const arrowExpression=this.forwardNoArrowParamsConversionAt(typeParameters,(()=>{const result=super.parseMaybeAssign(refExpressionErrors,afterLeftParse);return this.resetStartLocationFromNode(result,typeParameters),result}));null!=(_arrowExpression$extr=arrowExpression.extra)&&_arrowExpression$extr.parenthesized&&abort();const expr=this.maybeUnwrapTypeCastExpression(arrowExpression);return"ArrowFunctionExpression"!==expr.type&&abort(),expr.typeParameters=typeParameters,this.resetStartLocationFromNode(expr,typeParameters),arrowExpression}),state);let arrowExpression=null;if(arrow.node&&"ArrowFunctionExpression"===this.maybeUnwrapTypeCastExpression(arrow.node).type){if(!arrow.error&&!arrow.aborted)return arrow.node.async&&this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,{at:typeParameters}),arrow.node;arrowExpression=arrow.node}if(null!=(_jsx2=jsx)&&_jsx2.node)return this.state=jsx.failState,jsx.node;if(arrowExpression)return this.state=arrow.failState,arrowExpression;if(null!=(_jsx3=jsx)&&_jsx3.thrown)throw jsx.error;if(arrow.thrown)throw arrow.error;throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter,{at:typeParameters})}return super.parseMaybeAssign(refExpressionErrors,afterLeftParse)}parseArrow(node){if(this.match(14)){const result=this.tryParse((()=>{const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=!0;const typeNode=this.startNode();return[typeNode.typeAnnotation,node.predicate]=this.flowParseTypeAndPredicateInitialiser(),this.state.noAnonFunctionType=oldNoAnonFunctionType,this.canInsertSemicolon()&&this.unexpected(),this.match(19)||this.unexpected(),typeNode}));if(result.thrown)return null;result.error&&(this.state=result.failState),node.returnType=result.node.typeAnnotation?this.finishNode(result.node,"TypeAnnotation"):null}return super.parseArrow(node)}shouldParseArrow(params){return this.match(14)||super.shouldParseArrow(params)}setArrowFunctionParameters(node,params){-1!==this.state.noArrowParamsConversionAt.indexOf(node.start)?node.params=params:super.setArrowFunctionParameters(node,params)}checkParams(node,allowDuplicates,isArrowFunction,strictModeChanged=!0){if(!isArrowFunction||-1===this.state.noArrowParamsConversionAt.indexOf(node.start)){for(let i=0;i<node.params.length;i++)this.isThisParam(node.params[i])&&i>0&&this.raise(FlowErrors.ThisParamMustBeFirst,{at:node.params[i]});super.checkParams(node,allowDuplicates,isArrowFunction,strictModeChanged)}}parseParenAndDistinguishExpression(canBeArrow){return super.parseParenAndDistinguishExpression(canBeArrow&&-1===this.state.noArrowAt.indexOf(this.state.start))}parseSubscripts(base,startLoc,noCalls){if("Identifier"===base.type&&"async"===base.name&&-1!==this.state.noArrowAt.indexOf(startLoc.index)){this.next();const node=this.startNodeAt(startLoc);node.callee=base,node.arguments=super.parseCallExpressionArguments(11,!1),base=this.finishNode(node,"CallExpression")}else if("Identifier"===base.type&&"async"===base.name&&this.match(47)){const state=this.state.clone(),arrow=this.tryParse((abort=>this.parseAsyncArrowWithTypeParameters(startLoc)||abort()),state);if(!arrow.error&&!arrow.aborted)return arrow.node;const result=this.tryParse((()=>super.parseSubscripts(base,startLoc,noCalls)),state);if(result.node&&!result.error)return result.node;if(arrow.node)return this.state=arrow.failState,arrow.node;if(result.node)return this.state=result.failState,result.node;throw arrow.error||result.error}return super.parseSubscripts(base,startLoc,noCalls)}parseSubscript(base,startLoc,noCalls,subscriptState){if(this.match(18)&&this.isLookaheadToken_lt()){if(subscriptState.optionalChainMember=!0,noCalls)return subscriptState.stop=!0,base;this.next();const node=this.startNodeAt(startLoc);return node.callee=base,node.typeArguments=this.flowParseTypeParameterInstantiation(),this.expect(10),node.arguments=this.parseCallExpressionArguments(11,!1),node.optional=!0,this.finishCallExpression(node,!0)}if(!noCalls&&this.shouldParseTypes()&&this.match(47)){const node=this.startNodeAt(startLoc);node.callee=base;const result=this.tryParse((()=>(node.typeArguments=this.flowParseTypeParameterInstantiationCallOrNew(),this.expect(10),node.arguments=super.parseCallExpressionArguments(11,!1),subscriptState.optionalChainMember&&(node.optional=!1),this.finishCallExpression(node,subscriptState.optionalChainMember))));if(result.node)return result.error&&(this.state=result.failState),result.node}return super.parseSubscript(base,startLoc,noCalls,subscriptState)}parseNewCallee(node){super.parseNewCallee(node);let targs=null;this.shouldParseTypes()&&this.match(47)&&(targs=this.tryParse((()=>this.flowParseTypeParameterInstantiationCallOrNew())).node),node.typeArguments=targs}parseAsyncArrowWithTypeParameters(startLoc){const node=this.startNodeAt(startLoc);if(this.parseFunctionParams(node,!1),this.parseArrow(node))return super.parseArrowExpression(node,void 0,!0)}readToken_mult_modulo(code){const next=this.input.charCodeAt(this.state.pos+1);if(42===code&&47===next&&this.state.hasFlowComment)return this.state.hasFlowComment=!1,this.state.pos+=2,void this.nextToken();super.readToken_mult_modulo(code)}readToken_pipe_amp(code){const next=this.input.charCodeAt(this.state.pos+1);124!==code||125!==next?super.readToken_pipe_amp(code):this.finishOp(9,2)}parseTopLevel(file,program){const fileNode=super.parseTopLevel(file,program);return this.state.hasFlowComment&&this.raise(FlowErrors.UnterminatedFlowComment,{at:this.state.curPosition()}),fileNode}skipBlockComment(){if(!this.hasPlugin("flowComments")||!this.skipFlowComment())return super.skipBlockComment(this.state.hasFlowComment?"*-/":"*/");{if(this.state.hasFlowComment)throw this.raise(FlowErrors.NestedFlowComment,{at:this.state.startLoc});this.hasFlowCommentCompletion();const commentSkip=this.skipFlowComment();commentSkip&&(this.state.pos+=commentSkip,this.state.hasFlowComment=!0)}}skipFlowComment(){const{pos}=this.state;let shiftToFirstNonWhiteSpace=2;for(;[32,9].includes(this.input.charCodeAt(pos+shiftToFirstNonWhiteSpace));)shiftToFirstNonWhiteSpace++;const ch2=this.input.charCodeAt(shiftToFirstNonWhiteSpace+pos),ch3=this.input.charCodeAt(shiftToFirstNonWhiteSpace+pos+1);return 58===ch2&&58===ch3?shiftToFirstNonWhiteSpace+2:"flow-include"===this.input.slice(shiftToFirstNonWhiteSpace+pos,shiftToFirstNonWhiteSpace+pos+12)?shiftToFirstNonWhiteSpace+12:58===ch2&&58!==ch3&&shiftToFirstNonWhiteSpace}hasFlowCommentCompletion(){if(-1===this.input.indexOf("*/",this.state.pos))throw this.raise(Errors.UnterminatedComment,{at:this.state.curPosition()})}flowEnumErrorBooleanMemberNotInitialized(loc,{enumName,memberName}){this.raise(FlowErrors.EnumBooleanMemberNotInitialized,{at:loc,memberName,enumName})}flowEnumErrorInvalidMemberInitializer(loc,enumContext){return this.raise(enumContext.explicitType?"symbol"===enumContext.explicitType?FlowErrors.EnumInvalidMemberInitializerSymbolType:FlowErrors.EnumInvalidMemberInitializerPrimaryType:FlowErrors.EnumInvalidMemberInitializerUnknownType,Object.assign({at:loc},enumContext))}flowEnumErrorNumberMemberNotInitialized(loc,{enumName,memberName}){this.raise(FlowErrors.EnumNumberMemberNotInitialized,{at:loc,enumName,memberName})}flowEnumErrorStringMemberInconsistentlyInitailized(node,{enumName}){this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized,{at:node,enumName})}flowEnumMemberInit(){const startLoc=this.state.startLoc,endOfInit=()=>this.match(12)||this.match(8);switch(this.state.type){case 132:{const literal=this.parseNumericLiteral(this.state.value);return endOfInit()?{type:"number",loc:literal.loc.start,value:literal}:{type:"invalid",loc:startLoc}}case 131:{const literal=this.parseStringLiteral(this.state.value);return endOfInit()?{type:"string",loc:literal.loc.start,value:literal}:{type:"invalid",loc:startLoc}}case 85:case 86:{const literal=this.parseBooleanLiteral(this.match(85));return endOfInit()?{type:"boolean",loc:literal.loc.start,value:literal}:{type:"invalid",loc:startLoc}}default:return{type:"invalid",loc:startLoc}}}flowEnumMemberRaw(){const loc=this.state.startLoc;return{id:this.parseIdentifier(!0),init:this.eat(29)?this.flowEnumMemberInit():{type:"none",loc}}}flowEnumCheckExplicitTypeMismatch(loc,context,expectedType){const{explicitType}=context;null!==explicitType&&explicitType!==expectedType&&this.flowEnumErrorInvalidMemberInitializer(loc,context)}flowEnumMembers({enumName,explicitType}){const seenNames=new Set,members={booleanMembers:[],numberMembers:[],stringMembers:[],defaultedMembers:[]};let hasUnknownMembers=!1;for(;!this.match(8);){if(this.eat(21)){hasUnknownMembers=!0;break}const memberNode=this.startNode(),{id,init}=this.flowEnumMemberRaw(),memberName=id.name;if(""===memberName)continue;/^[a-z]/.test(memberName)&&this.raise(FlowErrors.EnumInvalidMemberName,{at:id,memberName,suggestion:memberName[0].toUpperCase()+memberName.slice(1),enumName}),seenNames.has(memberName)&&this.raise(FlowErrors.EnumDuplicateMemberName,{at:id,memberName,enumName}),seenNames.add(memberName);const context={enumName,explicitType,memberName};switch(memberNode.id=id,init.type){case"boolean":this.flowEnumCheckExplicitTypeMismatch(init.loc,context,"boolean"),memberNode.init=init.value,members.booleanMembers.push(this.finishNode(memberNode,"EnumBooleanMember"));break;case"number":this.flowEnumCheckExplicitTypeMismatch(init.loc,context,"number"),memberNode.init=init.value,members.numberMembers.push(this.finishNode(memberNode,"EnumNumberMember"));break;case"string":this.flowEnumCheckExplicitTypeMismatch(init.loc,context,"string"),memberNode.init=init.value,members.stringMembers.push(this.finishNode(memberNode,"EnumStringMember"));break;case"invalid":throw this.flowEnumErrorInvalidMemberInitializer(init.loc,context);case"none":switch(explicitType){case"boolean":this.flowEnumErrorBooleanMemberNotInitialized(init.loc,context);break;case"number":this.flowEnumErrorNumberMemberNotInitialized(init.loc,context);break;default:members.defaultedMembers.push(this.finishNode(memberNode,"EnumDefaultedMember"))}}this.match(8)||this.expect(12)}return{members,hasUnknownMembers}}flowEnumStringMembers(initializedMembers,defaultedMembers,{enumName}){if(0===initializedMembers.length)return defaultedMembers;if(0===defaultedMembers.length)return initializedMembers;if(defaultedMembers.length>initializedMembers.length){for(const member of initializedMembers)this.flowEnumErrorStringMemberInconsistentlyInitailized(member,{enumName});return defaultedMembers}for(const member of defaultedMembers)this.flowEnumErrorStringMemberInconsistentlyInitailized(member,{enumName});return initializedMembers}flowEnumParseExplicitType({enumName}){if(!this.eatContextual(101))return null;if(!tokenIsIdentifier(this.state.type))throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied,{at:this.state.startLoc,enumName});const{value}=this.state;return this.next(),"boolean"!==value&&"number"!==value&&"string"!==value&&"symbol"!==value&&this.raise(FlowErrors.EnumInvalidExplicitType,{at:this.state.startLoc,enumName,invalidEnumType:value}),value}flowEnumBody(node,id){const enumName=id.name,nameLoc=id.loc.start,explicitType=this.flowEnumParseExplicitType({enumName});this.expect(5);const{members,hasUnknownMembers}=this.flowEnumMembers({enumName,explicitType});switch(node.hasUnknownMembers=hasUnknownMembers,explicitType){case"boolean":return node.explicitType=!0,node.members=members.booleanMembers,this.expect(8),this.finishNode(node,"EnumBooleanBody");case"number":return node.explicitType=!0,node.members=members.numberMembers,this.expect(8),this.finishNode(node,"EnumNumberBody");case"string":return node.explicitType=!0,node.members=this.flowEnumStringMembers(members.stringMembers,members.defaultedMembers,{enumName}),this.expect(8),this.finishNode(node,"EnumStringBody");case"symbol":return node.members=members.defaultedMembers,this.expect(8),this.finishNode(node,"EnumSymbolBody");default:{const empty=()=>(node.members=[],this.expect(8),this.finishNode(node,"EnumStringBody"));node.explicitType=!1;const boolsLen=members.booleanMembers.length,numsLen=members.numberMembers.length,strsLen=members.stringMembers.length,defaultedLen=members.defaultedMembers.length;if(boolsLen||numsLen||strsLen||defaultedLen){if(boolsLen||numsLen){if(!numsLen&&!strsLen&&boolsLen>=defaultedLen){for(const member of members.defaultedMembers)this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start,{enumName,memberName:member.id.name});return node.members=members.booleanMembers,this.expect(8),this.finishNode(node,"EnumBooleanBody")}if(!boolsLen&&!strsLen&&numsLen>=defaultedLen){for(const member of members.defaultedMembers)this.flowEnumErrorNumberMemberNotInitialized(member.loc.start,{enumName,memberName:member.id.name});return node.members=members.numberMembers,this.expect(8),this.finishNode(node,"EnumNumberBody")}return this.raise(FlowErrors.EnumInconsistentMemberValues,{at:nameLoc,enumName}),empty()}return node.members=this.flowEnumStringMembers(members.stringMembers,members.defaultedMembers,{enumName}),this.expect(8),this.finishNode(node,"EnumStringBody")}return empty()}}}flowParseEnumDeclaration(node){const id=this.parseIdentifier();return node.id=id,node.body=this.flowEnumBody(this.startNode(),id),this.finishNode(node,"EnumDeclaration")}isLookaheadToken_lt(){const next=this.nextTokenStart();if(60===this.input.charCodeAt(next)){const afterNext=this.input.charCodeAt(next+1);return 60!==afterNext&&61!==afterNext}return!1}maybeUnwrapTypeCastExpression(node){return"TypeCastExpression"===node.type?node.expression:node}},typescript:superClass=>class extends superClass{constructor(...args){super(...args),this.tsParseInOutModifiers=this.tsParseModifiers.bind(this,{allowedModifiers:["in","out"],disallowedModifiers:["const","public","private","protected","readonly","declare","abstract","override"],errorTemplate:TSErrors.InvalidModifierOnTypeParameter}),this.tsParseConstModifier=this.tsParseModifiers.bind(this,{allowedModifiers:["const"],disallowedModifiers:["in","out"],errorTemplate:TSErrors.InvalidModifierOnTypeParameterPositions}),this.tsParseInOutConstModifiers=this.tsParseModifiers.bind(this,{allowedModifiers:["in","out","const"],disallowedModifiers:["public","private","protected","readonly","declare","abstract","override"],errorTemplate:TSErrors.InvalidModifierOnTypeParameter})}getScopeHandler(){return TypeScriptScopeHandler}tsIsIdentifier(){return tokenIsIdentifier(this.state.type)}tsTokenCanFollowModifier(){return(this.match(0)||this.match(5)||this.match(55)||this.match(21)||this.match(136)||this.isLiteralPropertyName())&&!this.hasPrecedingLineBreak()}tsNextTokenCanFollowModifier(){return this.next(),this.tsTokenCanFollowModifier()}tsParseModifier(allowedModifiers,stopOnStartOfClassStaticBlock){if(!tokenIsIdentifier(this.state.type)&&58!==this.state.type&&75!==this.state.type)return;const modifier=this.state.value;if(-1!==allowedModifiers.indexOf(modifier)){if(stopOnStartOfClassStaticBlock&&this.tsIsStartOfStaticBlocks())return;if(this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)))return modifier}}tsParseModifiers({allowedModifiers,disallowedModifiers,stopOnStartOfClassStaticBlock,errorTemplate=TSErrors.InvalidModifierOnTypeMember},modified){const enforceOrder=(loc,modifier,before,after)=>{modifier===before&&modified[after]&&this.raise(TSErrors.InvalidModifiersOrder,{at:loc,orderedModifiers:[before,after]})},incompatible=(loc,modifier,mod1,mod2)=>{(modified[mod1]&&modifier===mod2||modified[mod2]&&modifier===mod1)&&this.raise(TSErrors.IncompatibleModifiers,{at:loc,modifiers:[mod1,mod2]})};for(;;){const{startLoc}=this.state,modifier=this.tsParseModifier(allowedModifiers.concat(null!=disallowedModifiers?disallowedModifiers:[]),stopOnStartOfClassStaticBlock);if(!modifier)break;tsIsAccessModifier(modifier)?modified.accessibility?this.raise(TSErrors.DuplicateAccessibilityModifier,{at:startLoc,modifier}):(enforceOrder(startLoc,modifier,modifier,"override"),enforceOrder(startLoc,modifier,modifier,"static"),enforceOrder(startLoc,modifier,modifier,"readonly"),modified.accessibility=modifier):tsIsVarianceAnnotations(modifier)?(modified[modifier]&&this.raise(TSErrors.DuplicateModifier,{at:startLoc,modifier}),modified[modifier]=!0,enforceOrder(startLoc,modifier,"in","out")):(Object.hasOwnProperty.call(modified,modifier)?this.raise(TSErrors.DuplicateModifier,{at:startLoc,modifier}):(enforceOrder(startLoc,modifier,"static","readonly"),enforceOrder(startLoc,modifier,"static","override"),enforceOrder(startLoc,modifier,"override","readonly"),enforceOrder(startLoc,modifier,"abstract","override"),incompatible(startLoc,modifier,"declare","override"),incompatible(startLoc,modifier,"static","abstract")),modified[modifier]=!0),null!=disallowedModifiers&&disallowedModifiers.includes(modifier)&&this.raise(errorTemplate,{at:startLoc,modifier})}}tsIsListTerminator(kind){switch(kind){case"EnumMembers":case"TypeMembers":return this.match(8);case"HeritageClauseElement":return this.match(5);case"TupleElementTypes":return this.match(3);case"TypeParametersOrArguments":return this.match(48)}}tsParseList(kind,parseElement){const result=[];for(;!this.tsIsListTerminator(kind);)result.push(parseElement());return result}tsParseDelimitedList(kind,parseElement,refTrailingCommaPos){return function(x){if(null==x)throw new Error(`Unexpected ${x} value.`);return x}(this.tsParseDelimitedListWorker(kind,parseElement,!0,refTrailingCommaPos))}tsParseDelimitedListWorker(kind,parseElement,expectSuccess,refTrailingCommaPos){const result=[];let trailingCommaPos=-1;for(;!this.tsIsListTerminator(kind);){trailingCommaPos=-1;const element=parseElement();if(null==element)return;if(result.push(element),!this.eat(12)){if(this.tsIsListTerminator(kind))break;return void(expectSuccess&&this.expect(12))}trailingCommaPos=this.state.lastTokStart}return refTrailingCommaPos&&(refTrailingCommaPos.value=trailingCommaPos),result}tsParseBracketedList(kind,parseElement,bracket,skipFirstToken,refTrailingCommaPos){skipFirstToken||(bracket?this.expect(0):this.expect(47));const result=this.tsParseDelimitedList(kind,parseElement,refTrailingCommaPos);return bracket?this.expect(3):this.expect(48),result}tsParseImportType(){const node=this.startNode();return this.expect(83),this.expect(10),this.match(131)||this.raise(TSErrors.UnsupportedImportTypeArgument,{at:this.state.startLoc}),node.argument=super.parseExprAtom(),this.expect(11),this.eat(16)&&(node.qualifier=this.tsParseEntityName()),this.match(47)&&(node.typeParameters=this.tsParseTypeArguments()),this.finishNode(node,"TSImportType")}tsParseEntityName(allowReservedWords=!0){let entity=this.parseIdentifier(allowReservedWords);for(;this.eat(16);){const node=this.startNodeAtNode(entity);node.left=entity,node.right=this.parseIdentifier(allowReservedWords),entity=this.finishNode(node,"TSQualifiedName")}return entity}tsParseTypeReference(){const node=this.startNode();return node.typeName=this.tsParseEntityName(),!this.hasPrecedingLineBreak()&&this.match(47)&&(node.typeParameters=this.tsParseTypeArguments()),this.finishNode(node,"TSTypeReference")}tsParseThisTypePredicate(lhs){this.next();const node=this.startNodeAtNode(lhs);return node.parameterName=lhs,node.typeAnnotation=this.tsParseTypeAnnotation(!1),node.asserts=!1,this.finishNode(node,"TSTypePredicate")}tsParseThisTypeNode(){const node=this.startNode();return this.next(),this.finishNode(node,"TSThisType")}tsParseTypeQuery(){const node=this.startNode();return this.expect(87),this.match(83)?node.exprName=this.tsParseImportType():node.exprName=this.tsParseEntityName(),!this.hasPrecedingLineBreak()&&this.match(47)&&(node.typeParameters=this.tsParseTypeArguments()),this.finishNode(node,"TSTypeQuery")}tsParseTypeParameter(parseModifiers){const node=this.startNode();return parseModifiers(node),node.name=this.tsParseTypeParameterName(),node.constraint=this.tsEatThenParseType(81),node.default=this.tsEatThenParseType(29),this.finishNode(node,"TSTypeParameter")}tsTryParseTypeParameters(parseModifiers){if(this.match(47))return this.tsParseTypeParameters(parseModifiers)}tsParseTypeParameters(parseModifiers){const node=this.startNode();this.match(47)||this.match(140)?this.next():this.unexpected();const refTrailingCommaPos={value:-1};return node.params=this.tsParseBracketedList("TypeParametersOrArguments",this.tsParseTypeParameter.bind(this,parseModifiers),!1,!0,refTrailingCommaPos),0===node.params.length&&this.raise(TSErrors.EmptyTypeParameters,{at:node}),-1!==refTrailingCommaPos.value&&this.addExtra(node,"trailingComma",refTrailingCommaPos.value),this.finishNode(node,"TSTypeParameterDeclaration")}tsFillSignature(returnToken,signature){const returnTokenRequired=19===returnToken;signature.typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier),this.expect(10),signature.parameters=this.tsParseBindingListForSignature(),(returnTokenRequired||this.match(returnToken))&&(signature.typeAnnotation=this.tsParseTypeOrTypePredicateAnnotation(returnToken))}tsParseBindingListForSignature(){const list=super.parseBindingList(11,41,2);for(const pattern of list){const{type}=pattern;"AssignmentPattern"!==type&&"TSParameterProperty"!==type||this.raise(TSErrors.UnsupportedSignatureParameterKind,{at:pattern,type})}return list}tsParseTypeMemberSemicolon(){this.eat(12)||this.isLineTerminator()||this.expect(13)}tsParseSignatureMember(kind,node){return this.tsFillSignature(14,node),this.tsParseTypeMemberSemicolon(),this.finishNode(node,kind)}tsIsUnambiguouslyIndexSignature(){return this.next(),!!tokenIsIdentifier(this.state.type)&&(this.next(),this.match(14))}tsTryParseIndexSignature(node){if(!this.match(0)||!this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))return;this.expect(0);const id=this.parseIdentifier();id.typeAnnotation=this.tsParseTypeAnnotation(),this.resetEndLocation(id),this.expect(3),node.parameters=[id];const type=this.tsTryParseTypeAnnotation();return type&&(node.typeAnnotation=type),this.tsParseTypeMemberSemicolon(),this.finishNode(node,"TSIndexSignature")}tsParsePropertyOrMethodSignature(node,readonly){this.eat(17)&&(node.optional=!0);const nodeAny=node;if(this.match(10)||this.match(47)){readonly&&this.raise(TSErrors.ReadonlyForMethodSignature,{at:node});const method=nodeAny;method.kind&&this.match(47)&&this.raise(TSErrors.AccesorCannotHaveTypeParameters,{at:this.state.curPosition()}),this.tsFillSignature(14,method),this.tsParseTypeMemberSemicolon();const paramsKey="parameters",returnTypeKey="typeAnnotation";if("get"===method.kind)method[paramsKey].length>0&&(this.raise(Errors.BadGetterArity,{at:this.state.curPosition()}),this.isThisParam(method[paramsKey][0])&&this.raise(TSErrors.AccesorCannotDeclareThisParameter,{at:this.state.curPosition()}));else if("set"===method.kind){if(1!==method[paramsKey].length)this.raise(Errors.BadSetterArity,{at:this.state.curPosition()});else{const firstParameter=method[paramsKey][0];this.isThisParam(firstParameter)&&this.raise(TSErrors.AccesorCannotDeclareThisParameter,{at:this.state.curPosition()}),"Identifier"===firstParameter.type&&firstParameter.optional&&this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter,{at:this.state.curPosition()}),"RestElement"===firstParameter.type&&this.raise(TSErrors.SetAccesorCannotHaveRestParameter,{at:this.state.curPosition()})}method[returnTypeKey]&&this.raise(TSErrors.SetAccesorCannotHaveReturnType,{at:method[returnTypeKey]})}else method.kind="method";return this.finishNode(method,"TSMethodSignature")}{const property=nodeAny;readonly&&(property.readonly=!0);const type=this.tsTryParseTypeAnnotation();return type&&(property.typeAnnotation=type),this.tsParseTypeMemberSemicolon(),this.finishNode(property,"TSPropertySignature")}}tsParseTypeMember(){const node=this.startNode();if(this.match(10)||this.match(47))return this.tsParseSignatureMember("TSCallSignatureDeclaration",node);if(this.match(77)){const id=this.startNode();return this.next(),this.match(10)||this.match(47)?this.tsParseSignatureMember("TSConstructSignatureDeclaration",node):(node.key=this.createIdentifier(id,"new"),this.tsParsePropertyOrMethodSignature(node,!1))}this.tsParseModifiers({allowedModifiers:["readonly"],disallowedModifiers:["declare","abstract","private","protected","public","static","override"]},node);const idx=this.tsTryParseIndexSignature(node);return idx||(super.parsePropertyName(node),node.computed||"Identifier"!==node.key.type||"get"!==node.key.name&&"set"!==node.key.name||!this.tsTokenCanFollowModifier()||(node.kind=node.key.name,super.parsePropertyName(node)),this.tsParsePropertyOrMethodSignature(node,!!node.readonly))}tsParseTypeLiteral(){const node=this.startNode();return node.members=this.tsParseObjectTypeMembers(),this.finishNode(node,"TSTypeLiteral")}tsParseObjectTypeMembers(){this.expect(5);const members=this.tsParseList("TypeMembers",this.tsParseTypeMember.bind(this));return this.expect(8),members}tsIsStartOfMappedType(){return this.next(),this.eat(53)?this.isContextual(120):(this.isContextual(120)&&this.next(),!!this.match(0)&&(this.next(),!!this.tsIsIdentifier()&&(this.next(),this.match(58))))}tsParseMappedTypeParameter(){const node=this.startNode();return node.name=this.tsParseTypeParameterName(),node.constraint=this.tsExpectThenParseType(58),this.finishNode(node,"TSTypeParameter")}tsParseMappedType(){const node=this.startNode();return this.expect(5),this.match(53)?(node.readonly=this.state.value,this.next(),this.expectContextual(120)):this.eatContextual(120)&&(node.readonly=!0),this.expect(0),node.typeParameter=this.tsParseMappedTypeParameter(),node.nameType=this.eatContextual(93)?this.tsParseType():null,this.expect(3),this.match(53)?(node.optional=this.state.value,this.next(),this.expect(17)):this.eat(17)&&(node.optional=!0),node.typeAnnotation=this.tsTryParseType(),this.semicolon(),this.expect(8),this.finishNode(node,"TSMappedType")}tsParseTupleType(){const node=this.startNode();node.elementTypes=this.tsParseBracketedList("TupleElementTypes",this.tsParseTupleElementType.bind(this),!0,!1);let seenOptionalElement=!1,labeledElements=null;return node.elementTypes.forEach((elementNode=>{const{type}=elementNode;!seenOptionalElement||"TSRestType"===type||"TSOptionalType"===type||"TSNamedTupleMember"===type&&elementNode.optional||this.raise(TSErrors.OptionalTypeBeforeRequired,{at:elementNode}),seenOptionalElement||(seenOptionalElement="TSNamedTupleMember"===type&&elementNode.optional||"TSOptionalType"===type);let checkType=type;"TSRestType"===type&&(checkType=(elementNode=elementNode.typeAnnotation).type);const isLabeled="TSNamedTupleMember"===checkType;null!=labeledElements||(labeledElements=isLabeled),labeledElements!==isLabeled&&this.raise(TSErrors.MixedLabeledAndUnlabeledElements,{at:elementNode})})),this.finishNode(node,"TSTupleType")}tsParseTupleElementType(){const{startLoc}=this.state,rest=this.eat(21);let labeled,label,optional,type;const chAfterWord=tokenIsKeywordOrIdentifier(this.state.type)?this.lookaheadCharCode():null;if(58===chAfterWord)labeled=!0,optional=!1,label=this.parseIdentifier(!0),this.expect(14),type=this.tsParseType();else if(63===chAfterWord){optional=!0;const startLoc=this.state.startLoc,wordName=this.state.value,typeOrLabel=this.tsParseNonArrayType();58===this.lookaheadCharCode()?(labeled=!0,label=this.createIdentifier(this.startNodeAt(startLoc),wordName),this.expect(17),this.expect(14),type=this.tsParseType()):(labeled=!1,type=typeOrLabel,this.expect(17))}else type=this.tsParseType(),optional=this.eat(17),labeled=this.eat(14);if(labeled){let labeledNode;label?(labeledNode=this.startNodeAtNode(label),labeledNode.optional=optional,labeledNode.label=label,labeledNode.elementType=type,this.eat(17)&&(labeledNode.optional=!0,this.raise(TSErrors.TupleOptionalAfterType,{at:this.state.lastTokStartLoc}))):(labeledNode=this.startNodeAtNode(type),labeledNode.optional=optional,this.raise(TSErrors.InvalidTupleMemberLabel,{at:type}),labeledNode.label=type,labeledNode.elementType=this.tsParseType()),type=this.finishNode(labeledNode,"TSNamedTupleMember")}else if(optional){const optionalTypeNode=this.startNodeAtNode(type);optionalTypeNode.typeAnnotation=type,type=this.finishNode(optionalTypeNode,"TSOptionalType")}if(rest){const restNode=this.startNodeAt(startLoc);restNode.typeAnnotation=type,type=this.finishNode(restNode,"TSRestType")}return type}tsParseParenthesizedType(){const node=this.startNode();return this.expect(10),node.typeAnnotation=this.tsParseType(),this.expect(11),this.finishNode(node,"TSParenthesizedType")}tsParseFunctionOrConstructorType(type,abstract){const node=this.startNode();return"TSConstructorType"===type&&(node.abstract=!!abstract,abstract&&this.next(),this.next()),this.tsInAllowConditionalTypesContext((()=>this.tsFillSignature(19,node))),this.finishNode(node,type)}tsParseLiteralTypeNode(){const node=this.startNode();switch(this.state.type){case 132:case 133:case 131:case 85:case 86:node.literal=super.parseExprAtom();break;default:this.unexpected()}return this.finishNode(node,"TSLiteralType")}tsParseTemplateLiteralType(){const node=this.startNode();return node.literal=super.parseTemplate(!1),this.finishNode(node,"TSLiteralType")}parseTemplateSubstitution(){return this.state.inType?this.tsParseType():super.parseTemplateSubstitution()}tsParseThisTypeOrThisTypePredicate(){const thisKeyword=this.tsParseThisTypeNode();return this.isContextual(114)&&!this.hasPrecedingLineBreak()?this.tsParseThisTypePredicate(thisKeyword):thisKeyword}tsParseNonArrayType(){switch(this.state.type){case 131:case 132:case 133:case 85:case 86:return this.tsParseLiteralTypeNode();case 53:if("-"===this.state.value){const node=this.startNode(),nextToken=this.lookahead();return 132!==nextToken.type&&133!==nextToken.type&&this.unexpected(),node.literal=this.parseMaybeUnary(),this.finishNode(node,"TSLiteralType")}break;case 78:return this.tsParseThisTypeOrThisTypePredicate();case 87:return this.tsParseTypeQuery();case 83:return this.tsParseImportType();case 5:return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))?this.tsParseMappedType():this.tsParseTypeLiteral();case 0:return this.tsParseTupleType();case 10:return this.tsParseParenthesizedType();case 25:case 24:return this.tsParseTemplateLiteralType();default:{const{type}=this.state;if(tokenIsIdentifier(type)||88===type||84===type){const nodeType=88===type?"TSVoidKeyword":84===type?"TSNullKeyword":function(value){switch(value){case"any":return"TSAnyKeyword";case"boolean":return"TSBooleanKeyword";case"bigint":return"TSBigIntKeyword";case"never":return"TSNeverKeyword";case"number":return"TSNumberKeyword";case"object":return"TSObjectKeyword";case"string":return"TSStringKeyword";case"symbol":return"TSSymbolKeyword";case"undefined":return"TSUndefinedKeyword";case"unknown":return"TSUnknownKeyword";default:return}}(this.state.value);if(void 0!==nodeType&&46!==this.lookaheadCharCode()){const node=this.startNode();return this.next(),this.finishNode(node,nodeType)}return this.tsParseTypeReference()}}}this.unexpected()}tsParseArrayTypeOrHigher(){let type=this.tsParseNonArrayType();for(;!this.hasPrecedingLineBreak()&&this.eat(0);)if(this.match(3)){const node=this.startNodeAtNode(type);node.elementType=type,this.expect(3),type=this.finishNode(node,"TSArrayType")}else{const node=this.startNodeAtNode(type);node.objectType=type,node.indexType=this.tsParseType(),this.expect(3),type=this.finishNode(node,"TSIndexedAccessType")}return type}tsParseTypeOperator(){const node=this.startNode(),operator=this.state.value;return this.next(),node.operator=operator,node.typeAnnotation=this.tsParseTypeOperatorOrHigher(),"readonly"===operator&&this.tsCheckTypeAnnotationForReadOnly(node),this.finishNode(node,"TSTypeOperator")}tsCheckTypeAnnotationForReadOnly(node){switch(node.typeAnnotation.type){case"TSTupleType":case"TSArrayType":return;default:this.raise(TSErrors.UnexpectedReadonly,{at:node})}}tsParseInferType(){const node=this.startNode();this.expectContextual(113);const typeParameter=this.startNode();return typeParameter.name=this.tsParseTypeParameterName(),typeParameter.constraint=this.tsTryParse((()=>this.tsParseConstraintForInferType())),node.typeParameter=this.finishNode(typeParameter,"TSTypeParameter"),this.finishNode(node,"TSInferType")}tsParseConstraintForInferType(){if(this.eat(81)){const constraint=this.tsInDisallowConditionalTypesContext((()=>this.tsParseType()));if(this.state.inDisallowConditionalTypesContext||!this.match(17))return constraint}}tsParseTypeOperatorOrHigher(){var token;return(token=this.state.type)>=119&&token<=121&&!this.state.containsEsc?this.tsParseTypeOperator():this.isContextual(113)?this.tsParseInferType():this.tsInAllowConditionalTypesContext((()=>this.tsParseArrayTypeOrHigher()))}tsParseUnionOrIntersectionType(kind,parseConstituentType,operator){const node=this.startNode(),hasLeadingOperator=this.eat(operator),types=[];do{types.push(parseConstituentType())}while(this.eat(operator));return 1!==types.length||hasLeadingOperator?(node.types=types,this.finishNode(node,kind)):types[0]}tsParseIntersectionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSIntersectionType",this.tsParseTypeOperatorOrHigher.bind(this),45)}tsParseUnionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSUnionType",this.tsParseIntersectionTypeOrHigher.bind(this),43)}tsIsStartOfFunctionType(){return!!this.match(47)||this.match(10)&&this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))}tsSkipParameterStart(){if(tokenIsIdentifier(this.state.type)||this.match(78))return this.next(),!0;if(this.match(5)){const{errors}=this.state,previousErrorCount=errors.length;try{return this.parseObjectLike(8,!0),errors.length===previousErrorCount}catch(_unused){return!1}}if(this.match(0)){this.next();const{errors}=this.state,previousErrorCount=errors.length;try{return super.parseBindingList(3,93,1),errors.length===previousErrorCount}catch(_unused2){return!1}}return!1}tsIsUnambiguouslyStartOfFunctionType(){if(this.next(),this.match(11)||this.match(21))return!0;if(this.tsSkipParameterStart()){if(this.match(14)||this.match(12)||this.match(17)||this.match(29))return!0;if(this.match(11)&&(this.next(),this.match(19)))return!0}return!1}tsParseTypeOrTypePredicateAnnotation(returnToken){return this.tsInType((()=>{const t=this.startNode();this.expect(returnToken);const node=this.startNode(),asserts=!!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));if(asserts&&this.match(78)){let thisTypePredicate=this.tsParseThisTypeOrThisTypePredicate();return"TSThisType"===thisTypePredicate.type?(node.parameterName=thisTypePredicate,node.asserts=!0,node.typeAnnotation=null,thisTypePredicate=this.finishNode(node,"TSTypePredicate")):(this.resetStartLocationFromNode(thisTypePredicate,node),thisTypePredicate.asserts=!0),t.typeAnnotation=thisTypePredicate,this.finishNode(t,"TSTypeAnnotation")}const typePredicateVariable=this.tsIsIdentifier()&&this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));if(!typePredicateVariable)return asserts?(node.parameterName=this.parseIdentifier(),node.asserts=asserts,node.typeAnnotation=null,t.typeAnnotation=this.finishNode(node,"TSTypePredicate"),this.finishNode(t,"TSTypeAnnotation")):this.tsParseTypeAnnotation(!1,t);const type=this.tsParseTypeAnnotation(!1);return node.parameterName=typePredicateVariable,node.typeAnnotation=type,node.asserts=asserts,t.typeAnnotation=this.finishNode(node,"TSTypePredicate"),this.finishNode(t,"TSTypeAnnotation")}))}tsTryParseTypeOrTypePredicateAnnotation(){if(this.match(14))return this.tsParseTypeOrTypePredicateAnnotation(14)}tsTryParseTypeAnnotation(){if(this.match(14))return this.tsParseTypeAnnotation()}tsTryParseType(){return this.tsEatThenParseType(14)}tsParseTypePredicatePrefix(){const id=this.parseIdentifier();if(this.isContextual(114)&&!this.hasPrecedingLineBreak())return this.next(),id}tsParseTypePredicateAsserts(){if(107!==this.state.type)return!1;const containsEsc=this.state.containsEsc;return this.next(),!(!tokenIsIdentifier(this.state.type)&&!this.match(78))&&(containsEsc&&this.raise(Errors.InvalidEscapedReservedWord,{at:this.state.lastTokStartLoc,reservedWord:"asserts"}),!0)}tsParseTypeAnnotation(eatColon=!0,t=this.startNode()){return this.tsInType((()=>{eatColon&&this.expect(14),t.typeAnnotation=this.tsParseType()})),this.finishNode(t,"TSTypeAnnotation")}tsParseType(){assert(this.state.inType);const type=this.tsParseNonConditionalType();if(this.state.inDisallowConditionalTypesContext||this.hasPrecedingLineBreak()||!this.eat(81))return type;const node=this.startNodeAtNode(type);return node.checkType=type,node.extendsType=this.tsInDisallowConditionalTypesContext((()=>this.tsParseNonConditionalType())),this.expect(17),node.trueType=this.tsInAllowConditionalTypesContext((()=>this.tsParseType())),this.expect(14),node.falseType=this.tsInAllowConditionalTypesContext((()=>this.tsParseType())),this.finishNode(node,"TSConditionalType")}isAbstractConstructorSignature(){return this.isContextual(122)&&77===this.lookahead().type}tsParseNonConditionalType(){return this.tsIsStartOfFunctionType()?this.tsParseFunctionOrConstructorType("TSFunctionType"):this.match(77)?this.tsParseFunctionOrConstructorType("TSConstructorType"):this.isAbstractConstructorSignature()?this.tsParseFunctionOrConstructorType("TSConstructorType",!0):this.tsParseUnionTypeOrHigher()}tsParseTypeAssertion(){this.getPluginOption("typescript","disallowAmbiguousJSXLike")&&this.raise(TSErrors.ReservedTypeAssertion,{at:this.state.startLoc});const node=this.startNode();return node.typeAnnotation=this.tsInType((()=>(this.next(),this.match(75)?this.tsParseTypeReference():this.tsParseType()))),this.expect(48),node.expression=this.parseMaybeUnary(),this.finishNode(node,"TSTypeAssertion")}tsParseHeritageClause(token){const originalStartLoc=this.state.startLoc,delimitedList=this.tsParseDelimitedList("HeritageClauseElement",(()=>{const node=this.startNode();return node.expression=this.tsParseEntityName(),this.match(47)&&(node.typeParameters=this.tsParseTypeArguments()),this.finishNode(node,"TSExpressionWithTypeArguments")}));return delimitedList.length||this.raise(TSErrors.EmptyHeritageClauseType,{at:originalStartLoc,token}),delimitedList}tsParseInterfaceDeclaration(node,properties={}){if(this.hasFollowingLineBreak())return null;this.expectContextual(127),properties.declare&&(node.declare=!0),tokenIsIdentifier(this.state.type)?(node.id=this.parseIdentifier(),this.checkIdentifier(node.id,130)):(node.id=null,this.raise(TSErrors.MissingInterfaceName,{at:this.state.startLoc})),node.typeParameters=this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers),this.eat(81)&&(node.extends=this.tsParseHeritageClause("extends"));const body=this.startNode();return body.body=this.tsInType(this.tsParseObjectTypeMembers.bind(this)),node.body=this.finishNode(body,"TSInterfaceBody"),this.finishNode(node,"TSInterfaceDeclaration")}tsParseTypeAliasDeclaration(node){return node.id=this.parseIdentifier(),this.checkIdentifier(node.id,2),node.typeAnnotation=this.tsInType((()=>{if(node.typeParameters=this.tsTryParseTypeParameters(this.tsParseInOutModifiers),this.expect(29),this.isContextual(112)&&16!==this.lookahead().type){const node=this.startNode();return this.next(),this.finishNode(node,"TSIntrinsicKeyword")}return this.tsParseType()})),this.semicolon(),this.finishNode(node,"TSTypeAliasDeclaration")}tsInNoContext(cb){const oldContext=this.state.context;this.state.context=[oldContext[0]];try{return cb()}finally{this.state.context=oldContext}}tsInType(cb){const oldInType=this.state.inType;this.state.inType=!0;try{return cb()}finally{this.state.inType=oldInType}}tsInDisallowConditionalTypesContext(cb){const oldInDisallowConditionalTypesContext=this.state.inDisallowConditionalTypesContext;this.state.inDisallowConditionalTypesContext=!0;try{return cb()}finally{this.state.inDisallowConditionalTypesContext=oldInDisallowConditionalTypesContext}}tsInAllowConditionalTypesContext(cb){const oldInDisallowConditionalTypesContext=this.state.inDisallowConditionalTypesContext;this.state.inDisallowConditionalTypesContext=!1;try{return cb()}finally{this.state.inDisallowConditionalTypesContext=oldInDisallowConditionalTypesContext}}tsEatThenParseType(token){if(this.match(token))return this.tsNextThenParseType()}tsExpectThenParseType(token){return this.tsInType((()=>(this.expect(token),this.tsParseType())))}tsNextThenParseType(){return this.tsInType((()=>(this.next(),this.tsParseType())))}tsParseEnumMember(){const node=this.startNode();return node.id=this.match(131)?super.parseStringLiteral(this.state.value):this.parseIdentifier(!0),this.eat(29)&&(node.initializer=super.parseMaybeAssignAllowIn()),this.finishNode(node,"TSEnumMember")}tsParseEnumDeclaration(node,properties={}){return properties.const&&(node.const=!0),properties.declare&&(node.declare=!0),this.expectContextual(124),node.id=this.parseIdentifier(),this.checkIdentifier(node.id,node.const?8971:8459),this.expect(5),node.members=this.tsParseDelimitedList("EnumMembers",this.tsParseEnumMember.bind(this)),this.expect(8),this.finishNode(node,"TSEnumDeclaration")}tsParseModuleBlock(){const node=this.startNode();return this.scope.enter(0),this.expect(5),super.parseBlockOrModuleBlockBody(node.body=[],void 0,!0,8),this.scope.exit(),this.finishNode(node,"TSModuleBlock")}tsParseModuleOrNamespaceDeclaration(node,nested=!1){if(node.id=this.parseIdentifier(),nested||this.checkIdentifier(node.id,1024),this.eat(16)){const inner=this.startNode();this.tsParseModuleOrNamespaceDeclaration(inner,!0),node.body=inner}else this.scope.enter(256),this.prodParam.enter(0),node.body=this.tsParseModuleBlock(),this.prodParam.exit(),this.scope.exit();return this.finishNode(node,"TSModuleDeclaration")}tsParseAmbientExternalModuleDeclaration(node){return this.isContextual(110)?(node.global=!0,node.id=this.parseIdentifier()):this.match(131)?node.id=super.parseStringLiteral(this.state.value):this.unexpected(),this.match(5)?(this.scope.enter(256),this.prodParam.enter(0),node.body=this.tsParseModuleBlock(),this.prodParam.exit(),this.scope.exit()):this.semicolon(),this.finishNode(node,"TSModuleDeclaration")}tsParseImportEqualsDeclaration(node,maybeDefaultIdentifier,isExport){node.isExport=isExport||!1,node.id=maybeDefaultIdentifier||this.parseIdentifier(),this.checkIdentifier(node.id,4096),this.expect(29);const moduleReference=this.tsParseModuleReference();return"type"===node.importKind&&"TSExternalModuleReference"!==moduleReference.type&&this.raise(TSErrors.ImportAliasHasImportType,{at:moduleReference}),node.moduleReference=moduleReference,this.semicolon(),this.finishNode(node,"TSImportEqualsDeclaration")}tsIsExternalModuleReference(){return this.isContextual(117)&&40===this.lookaheadCharCode()}tsParseModuleReference(){return this.tsIsExternalModuleReference()?this.tsParseExternalModuleReference():this.tsParseEntityName(!1)}tsParseExternalModuleReference(){const node=this.startNode();return this.expectContextual(117),this.expect(10),this.match(131)||this.unexpected(),node.expression=super.parseExprAtom(),this.expect(11),this.sawUnambiguousESM=!0,this.finishNode(node,"TSExternalModuleReference")}tsLookAhead(f){const state=this.state.clone(),res=f();return this.state=state,res}tsTryParseAndCatch(f){const result=this.tryParse((abort=>f()||abort()));if(!result.aborted&&result.node)return result.error&&(this.state=result.failState),result.node}tsTryParse(f){const state=this.state.clone(),result=f();if(void 0!==result&&!1!==result)return result;this.state=state}tsTryParseDeclare(nany){if(this.isLineTerminator())return;let kind,startType=this.state.type;return this.isContextual(99)&&(startType=74,kind="let"),this.tsInAmbientContext((()=>{switch(startType){case 68:return nany.declare=!0,super.parseFunctionStatement(nany,!1,!1);case 80:return nany.declare=!0,this.parseClass(nany,!0,!1);case 124:return this.tsParseEnumDeclaration(nany,{declare:!0});case 110:return this.tsParseAmbientExternalModuleDeclaration(nany);case 75:case 74:return this.match(75)&&this.isLookaheadContextual("enum")?(this.expect(75),this.tsParseEnumDeclaration(nany,{const:!0,declare:!0})):(nany.declare=!0,this.parseVarStatement(nany,kind||this.state.value,!0));case 127:{const result=this.tsParseInterfaceDeclaration(nany,{declare:!0});if(result)return result}default:if(tokenIsIdentifier(startType))return this.tsParseDeclaration(nany,this.state.value,!0,null)}}))}tsTryParseExportDeclaration(){return this.tsParseDeclaration(this.startNode(),this.state.value,!0,null)}tsParseExpressionStatement(node,expr,decorators){switch(expr.name){case"declare":{const declaration=this.tsTryParseDeclare(node);return declaration&&(declaration.declare=!0),declaration}case"global":if(this.match(5)){this.scope.enter(256),this.prodParam.enter(0);const mod=node;return mod.global=!0,mod.id=expr,mod.body=this.tsParseModuleBlock(),this.scope.exit(),this.prodParam.exit(),this.finishNode(mod,"TSModuleDeclaration")}break;default:return this.tsParseDeclaration(node,expr.name,!1,decorators)}}tsParseDeclaration(node,value,next,decorators){switch(value){case"abstract":if(this.tsCheckLineTerminator(next)&&(this.match(80)||tokenIsIdentifier(this.state.type)))return this.tsParseAbstractDeclaration(node,decorators);break;case"module":if(this.tsCheckLineTerminator(next)){if(this.match(131))return this.tsParseAmbientExternalModuleDeclaration(node);if(tokenIsIdentifier(this.state.type))return this.tsParseModuleOrNamespaceDeclaration(node)}break;case"namespace":if(this.tsCheckLineTerminator(next)&&tokenIsIdentifier(this.state.type))return this.tsParseModuleOrNamespaceDeclaration(node);break;case"type":if(this.tsCheckLineTerminator(next)&&tokenIsIdentifier(this.state.type))return this.tsParseTypeAliasDeclaration(node)}}tsCheckLineTerminator(next){return next?!this.hasFollowingLineBreak()&&(this.next(),!0):!this.isLineTerminator()}tsTryParseGenericAsyncArrowFunction(startLoc){if(!this.match(47))return;const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;this.state.maybeInArrowParameters=!0;const res=this.tsTryParseAndCatch((()=>{const node=this.startNodeAt(startLoc);return node.typeParameters=this.tsParseTypeParameters(this.tsParseConstModifier),super.parseFunctionParams(node),node.returnType=this.tsTryParseTypeOrTypePredicateAnnotation(),this.expect(19),node}));return this.state.maybeInArrowParameters=oldMaybeInArrowParameters,res?super.parseArrowExpression(res,null,!0):void 0}tsParseTypeArgumentsInExpression(){if(47===this.reScan_lt())return this.tsParseTypeArguments()}tsParseTypeArguments(){const node=this.startNode();return node.params=this.tsInType((()=>this.tsInNoContext((()=>(this.expect(47),this.tsParseDelimitedList("TypeParametersOrArguments",this.tsParseType.bind(this))))))),0===node.params.length?this.raise(TSErrors.EmptyTypeArguments,{at:node}):this.state.inType||this.curContext()!==types.brace||this.reScan_lt_gt(),this.expect(48),this.finishNode(node,"TSTypeParameterInstantiation")}tsIsDeclarationStart(){return(token=this.state.type)>=122&&token<=128;var token}isExportDefaultSpecifier(){return!this.tsIsDeclarationStart()&&super.isExportDefaultSpecifier()}parseAssignableListItem(flags,decorators){const startLoc=this.state.startLoc,modified={};this.tsParseModifiers({allowedModifiers:["public","private","protected","override","readonly"]},modified);const accessibility=modified.accessibility,override=modified.override,readonly=modified.readonly;4&flags||!(accessibility||readonly||override)||this.raise(TSErrors.UnexpectedParameterModifier,{at:startLoc});const left=this.parseMaybeDefault();this.parseAssignableListItemTypes(left,flags);const elt=this.parseMaybeDefault(left.loc.start,left);if(accessibility||readonly||override){const pp=this.startNodeAt(startLoc);return decorators.length&&(pp.decorators=decorators),accessibility&&(pp.accessibility=accessibility),readonly&&(pp.readonly=readonly),override&&(pp.override=override),"Identifier"!==elt.type&&"AssignmentPattern"!==elt.type&&this.raise(TSErrors.UnsupportedParameterPropertyKind,{at:pp}),pp.parameter=elt,this.finishNode(pp,"TSParameterProperty")}return decorators.length&&(left.decorators=decorators),elt}isSimpleParameter(node){return"TSParameterProperty"===node.type&&super.isSimpleParameter(node.parameter)||super.isSimpleParameter(node)}tsDisallowOptionalPattern(node){for(const param of node.params)"Identifier"!==param.type&&param.optional&&!this.state.isAmbientContext&&this.raise(TSErrors.PatternIsOptional,{at:param})}setArrowFunctionParameters(node,params,trailingCommaLoc){super.setArrowFunctionParameters(node,params,trailingCommaLoc),this.tsDisallowOptionalPattern(node)}parseFunctionBodyAndFinish(node,type,isMethod=!1){this.match(14)&&(node.returnType=this.tsParseTypeOrTypePredicateAnnotation(14));const bodilessType="FunctionDeclaration"===type?"TSDeclareFunction":"ClassMethod"===type||"ClassPrivateMethod"===type?"TSDeclareMethod":void 0;return bodilessType&&!this.match(5)&&this.isLineTerminator()?this.finishNode(node,bodilessType):"TSDeclareFunction"===bodilessType&&this.state.isAmbientContext&&(this.raise(TSErrors.DeclareFunctionHasImplementation,{at:node}),node.declare)?super.parseFunctionBodyAndFinish(node,bodilessType,isMethod):(this.tsDisallowOptionalPattern(node),super.parseFunctionBodyAndFinish(node,type,isMethod))}registerFunctionStatementId(node){!node.body&&node.id?this.checkIdentifier(node.id,1024):super.registerFunctionStatementId(node)}tsCheckForInvalidTypeCasts(items){items.forEach((node=>{"TSTypeCastExpression"===(null==node?void 0:node.type)&&this.raise(TSErrors.UnexpectedTypeAnnotation,{at:node.typeAnnotation})}))}toReferencedList(exprList,isInParens){return this.tsCheckForInvalidTypeCasts(exprList),exprList}parseArrayLike(close,canBePattern,isTuple,refExpressionErrors){const node=super.parseArrayLike(close,canBePattern,isTuple,refExpressionErrors);return"ArrayExpression"===node.type&&this.tsCheckForInvalidTypeCasts(node.elements),node}parseSubscript(base,startLoc,noCalls,state){if(!this.hasPrecedingLineBreak()&&this.match(35)){this.state.canStartJSXElement=!1,this.next();const nonNullExpression=this.startNodeAt(startLoc);return nonNullExpression.expression=base,this.finishNode(nonNullExpression,"TSNonNullExpression")}let isOptionalCall=!1;if(this.match(18)&&60===this.lookaheadCharCode()){if(noCalls)return state.stop=!0,base;state.optionalChainMember=isOptionalCall=!0,this.next()}if(this.match(47)||this.match(51)){let missingParenErrorLoc;const result=this.tsTryParseAndCatch((()=>{if(!noCalls&&this.atPossibleAsyncArrow(base)){const asyncArrowFn=this.tsTryParseGenericAsyncArrowFunction(startLoc);if(asyncArrowFn)return asyncArrowFn}const typeArguments=this.tsParseTypeArgumentsInExpression();if(!typeArguments)return;if(isOptionalCall&&!this.match(10))return void(missingParenErrorLoc=this.state.curPosition());if(tokenIsTemplate(this.state.type)){const result=super.parseTaggedTemplateExpression(base,startLoc,state);return result.typeParameters=typeArguments,result}if(!noCalls&&this.eat(10)){const node=this.startNodeAt(startLoc);return node.callee=base,node.arguments=this.parseCallExpressionArguments(11,!1),this.tsCheckForInvalidTypeCasts(node.arguments),node.typeParameters=typeArguments,state.optionalChainMember&&(node.optional=isOptionalCall),this.finishCallExpression(node,state.optionalChainMember)}const tokenType=this.state.type;if(48===tokenType||52===tokenType||10!==tokenType&&tokenCanStartExpression(tokenType)&&!this.hasPrecedingLineBreak())return;const node=this.startNodeAt(startLoc);return node.expression=base,node.typeParameters=typeArguments,this.finishNode(node,"TSInstantiationExpression")}));if(missingParenErrorLoc&&this.unexpected(missingParenErrorLoc,10),result)return"TSInstantiationExpression"===result.type&&(this.match(16)||this.match(18)&&40!==this.lookaheadCharCode())&&this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression,{at:this.state.startLoc}),result}return super.parseSubscript(base,startLoc,noCalls,state)}parseNewCallee(node){var _callee$extra;super.parseNewCallee(node);const{callee}=node;"TSInstantiationExpression"!==callee.type||null!=(_callee$extra=callee.extra)&&_callee$extra.parenthesized||(node.typeParameters=callee.typeParameters,node.callee=callee.expression)}parseExprOp(left,leftStartLoc,minPrec){let isSatisfies;if(tokenOperatorPrecedence(58)>minPrec&&!this.hasPrecedingLineBreak()&&(this.isContextual(93)||(isSatisfies=this.isContextual(118)))){const node=this.startNodeAt(leftStartLoc);return node.expression=left,node.typeAnnotation=this.tsInType((()=>(this.next(),this.match(75)?(isSatisfies&&this.raise(Errors.UnexpectedKeyword,{at:this.state.startLoc,keyword:"const"}),this.tsParseTypeReference()):this.tsParseType()))),this.finishNode(node,isSatisfies?"TSSatisfiesExpression":"TSAsExpression"),this.reScan_lt_gt(),this.parseExprOp(node,leftStartLoc,minPrec)}return super.parseExprOp(left,leftStartLoc,minPrec)}checkReservedWord(word,startLoc,checkKeywords,isBinding){this.state.isAmbientContext||super.checkReservedWord(word,startLoc,checkKeywords,isBinding)}checkImportReflection(node){super.checkImportReflection(node),node.module&&"value"!==node.importKind&&this.raise(TSErrors.ImportReflectionHasImportType,{at:node.specifiers[0].loc.start})}checkDuplicateExports(){}isPotentialImportPhase(isExport){if(super.isPotentialImportPhase(isExport))return!0;if(this.isContextual(128)){const ch=this.lookaheadCharCode();return isExport?123===ch||42===ch:61!==ch}return!isExport&&this.isContextual(87)}applyImportPhase(node,isExport,phase,loc){super.applyImportPhase(node,isExport,phase,loc),isExport?node.exportKind="type"===phase?"type":"value":node.importKind="type"===phase||"typeof"===phase?phase:"value"}parseImport(node){if(this.match(131))return node.importKind="value",super.parseImport(node);let importNode;if(tokenIsIdentifier(this.state.type)&&61===this.lookaheadCharCode())return node.importKind="value",this.tsParseImportEqualsDeclaration(node);if(this.isContextual(128)){const maybeDefaultIdentifier=this.parseMaybeImportPhase(node,!1);if(61===this.lookaheadCharCode())return this.tsParseImportEqualsDeclaration(node,maybeDefaultIdentifier);importNode=super.parseImportSpecifiersAndAfter(node,maybeDefaultIdentifier)}else importNode=super.parseImport(node);return"type"===importNode.importKind&&importNode.specifiers.length>1&&"ImportDefaultSpecifier"===importNode.specifiers[0].type&&this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed,{at:importNode}),importNode}parseExport(node,decorators){if(this.match(83)){this.next();let maybeDefaultIdentifier=null;return this.isContextual(128)&&this.isPotentialImportPhase(!1)?maybeDefaultIdentifier=this.parseMaybeImportPhase(node,!1):node.importKind="value",this.tsParseImportEqualsDeclaration(node,maybeDefaultIdentifier,!0)}if(this.eat(29)){const assign=node;return assign.expression=super.parseExpression(),this.semicolon(),this.sawUnambiguousESM=!0,this.finishNode(assign,"TSExportAssignment")}if(this.eatContextual(93)){const decl=node;return this.expectContextual(126),decl.id=this.parseIdentifier(),this.semicolon(),this.finishNode(decl,"TSNamespaceExportDeclaration")}return super.parseExport(node,decorators)}isAbstractClass(){return this.isContextual(122)&&80===this.lookahead().type}parseExportDefaultExpression(){if(this.isAbstractClass()){const cls=this.startNode();return this.next(),cls.abstract=!0,this.parseClass(cls,!0,!0)}if(this.match(127)){const result=this.tsParseInterfaceDeclaration(this.startNode());if(result)return result}return super.parseExportDefaultExpression()}parseVarStatement(node,kind,allowMissingInitializer=!1){const{isAmbientContext}=this.state,declaration=super.parseVarStatement(node,kind,allowMissingInitializer||isAmbientContext);if(!isAmbientContext)return declaration;for(const{id,init}of declaration.declarations)init&&("const"!==kind||id.typeAnnotation?this.raise(TSErrors.InitializerNotAllowedInAmbientContext,{at:init}):isValidAmbientConstInitializer(init,this.hasPlugin("estree"))||this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,{at:init}));return declaration}parseStatementContent(flags,decorators){if(this.match(75)&&this.isLookaheadContextual("enum")){const node=this.startNode();return this.expect(75),this.tsParseEnumDeclaration(node,{const:!0})}if(this.isContextual(124))return this.tsParseEnumDeclaration(this.startNode());if(this.isContextual(127)){const result=this.tsParseInterfaceDeclaration(this.startNode());if(result)return result}return super.parseStatementContent(flags,decorators)}parseAccessModifier(){return this.tsParseModifier(["public","protected","private"])}tsHasSomeModifiers(member,modifiers){return modifiers.some((modifier=>tsIsAccessModifier(modifier)?member.accessibility===modifier:!!member[modifier]))}tsIsStartOfStaticBlocks(){return this.isContextual(104)&&123===this.lookaheadCharCode()}parseClassMember(classBody,member,state){const modifiers=["declare","private","public","protected","override","abstract","readonly","static"];this.tsParseModifiers({allowedModifiers:modifiers,disallowedModifiers:["in","out"],stopOnStartOfClassStaticBlock:!0,errorTemplate:TSErrors.InvalidModifierOnTypeParameterPositions},member);const callParseClassMemberWithIsStatic=()=>{this.tsIsStartOfStaticBlocks()?(this.next(),this.next(),this.tsHasSomeModifiers(member,modifiers)&&this.raise(TSErrors.StaticBlockCannotHaveModifier,{at:this.state.curPosition()}),super.parseClassStaticBlock(classBody,member)):this.parseClassMemberWithIsStatic(classBody,member,state,!!member.static)};member.declare?this.tsInAmbientContext(callParseClassMemberWithIsStatic):callParseClassMemberWithIsStatic()}parseClassMemberWithIsStatic(classBody,member,state,isStatic){const idx=this.tsTryParseIndexSignature(member);if(idx)return classBody.body.push(idx),member.abstract&&this.raise(TSErrors.IndexSignatureHasAbstract,{at:member}),member.accessibility&&this.raise(TSErrors.IndexSignatureHasAccessibility,{at:member,modifier:member.accessibility}),member.declare&&this.raise(TSErrors.IndexSignatureHasDeclare,{at:member}),void(member.override&&this.raise(TSErrors.IndexSignatureHasOverride,{at:member}));!this.state.inAbstractClass&&member.abstract&&this.raise(TSErrors.NonAbstractClassHasAbstractMethod,{at:member}),member.override&&(state.hadSuperClass||this.raise(TSErrors.OverrideNotInSubClass,{at:member})),super.parseClassMemberWithIsStatic(classBody,member,state,isStatic)}parsePostMemberNameModifiers(methodOrProp){this.eat(17)&&(methodOrProp.optional=!0),methodOrProp.readonly&&this.match(10)&&this.raise(TSErrors.ClassMethodHasReadonly,{at:methodOrProp}),methodOrProp.declare&&this.match(10)&&this.raise(TSErrors.ClassMethodHasDeclare,{at:methodOrProp})}parseExpressionStatement(node,expr,decorators){return("Identifier"===expr.type?this.tsParseExpressionStatement(node,expr,decorators):void 0)||super.parseExpressionStatement(node,expr,decorators)}shouldParseExportDeclaration(){return!!this.tsIsDeclarationStart()||super.shouldParseExportDeclaration()}parseConditional(expr,startLoc,refExpressionErrors){if(!this.state.maybeInArrowParameters||!this.match(17))return super.parseConditional(expr,startLoc,refExpressionErrors);const result=this.tryParse((()=>super.parseConditional(expr,startLoc)));return result.node?(result.error&&(this.state=result.failState),result.node):(result.error&&super.setOptionalParametersError(refExpressionErrors,result.error),expr)}parseParenItem(node,startLoc){if(node=super.parseParenItem(node,startLoc),this.eat(17)&&(node.optional=!0,this.resetEndLocation(node)),this.match(14)){const typeCastNode=this.startNodeAt(startLoc);return typeCastNode.expression=node,typeCastNode.typeAnnotation=this.tsParseTypeAnnotation(),this.finishNode(typeCastNode,"TSTypeCastExpression")}return node}parseExportDeclaration(node){if(!this.state.isAmbientContext&&this.isContextual(123))return this.tsInAmbientContext((()=>this.parseExportDeclaration(node)));const startLoc=this.state.startLoc,isDeclare=this.eatContextual(123);if(isDeclare&&(this.isContextual(123)||!this.shouldParseExportDeclaration()))throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare,{at:this.state.startLoc});const declaration=tokenIsIdentifier(this.state.type)&&this.tsTryParseExportDeclaration()||super.parseExportDeclaration(node);return declaration?(("TSInterfaceDeclaration"===declaration.type||"TSTypeAliasDeclaration"===declaration.type||isDeclare)&&(node.exportKind="type"),isDeclare&&(this.resetStartLocation(declaration,startLoc),declaration.declare=!0),declaration):null}parseClassId(node,isStatement,optionalId,bindingType){if((!isStatement||optionalId)&&this.isContextual(111))return;super.parseClassId(node,isStatement,optionalId,node.declare?1024:8331);const typeParameters=this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);typeParameters&&(node.typeParameters=typeParameters)}parseClassPropertyAnnotation(node){node.optional||(this.eat(35)?node.definite=!0:this.eat(17)&&(node.optional=!0));const type=this.tsTryParseTypeAnnotation();type&&(node.typeAnnotation=type)}parseClassProperty(node){if(this.parseClassPropertyAnnotation(node),this.state.isAmbientContext&&(!node.readonly||node.typeAnnotation)&&this.match(29)&&this.raise(TSErrors.DeclareClassFieldHasInitializer,{at:this.state.startLoc}),node.abstract&&this.match(29)){const{key}=node;this.raise(TSErrors.AbstractPropertyHasInitializer,{at:this.state.startLoc,propertyName:"Identifier"!==key.type||node.computed?`[${this.input.slice(key.start,key.end)}]`:key.name})}return super.parseClassProperty(node)}parseClassPrivateProperty(node){return node.abstract&&this.raise(TSErrors.PrivateElementHasAbstract,{at:node}),node.accessibility&&this.raise(TSErrors.PrivateElementHasAccessibility,{at:node,modifier:node.accessibility}),this.parseClassPropertyAnnotation(node),super.parseClassPrivateProperty(node)}parseClassAccessorProperty(node){return this.parseClassPropertyAnnotation(node),node.optional&&this.raise(TSErrors.AccessorCannotBeOptional,{at:node}),super.parseClassAccessorProperty(node)}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);typeParameters&&isConstructor&&this.raise(TSErrors.ConstructorHasTypeParameters,{at:typeParameters});const{declare=!1,kind}=method;!declare||"get"!==kind&&"set"!==kind||this.raise(TSErrors.DeclareAccessor,{at:method,kind}),typeParameters&&(method.typeParameters=typeParameters),super.pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper)}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);typeParameters&&(method.typeParameters=typeParameters),super.pushClassPrivateMethod(classBody,method,isGenerator,isAsync)}declareClassPrivateMethodInScope(node,kind){"TSDeclareMethod"!==node.type&&("MethodDefinition"!==node.type||node.value.body)&&super.declareClassPrivateMethodInScope(node,kind)}parseClassSuper(node){super.parseClassSuper(node),node.superClass&&(this.match(47)||this.match(51))&&(node.superTypeParameters=this.tsParseTypeArgumentsInExpression()),this.eatContextual(111)&&(node.implements=this.tsParseHeritageClause("implements"))}parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);return typeParameters&&(prop.typeParameters=typeParameters),super.parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors)}parseFunctionParams(node,isConstructor){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);typeParameters&&(node.typeParameters=typeParameters),super.parseFunctionParams(node,isConstructor)}parseVarId(decl,kind){super.parseVarId(decl,kind),"Identifier"===decl.id.type&&!this.hasPrecedingLineBreak()&&this.eat(35)&&(decl.definite=!0);const type=this.tsTryParseTypeAnnotation();type&&(decl.id.typeAnnotation=type,this.resetEndLocation(decl.id))}parseAsyncArrowFromCallExpression(node,call){return this.match(14)&&(node.returnType=this.tsParseTypeAnnotation()),super.parseAsyncArrowFromCallExpression(node,call)}parseMaybeAssign(refExpressionErrors,afterLeftParse){var _jsx,_jsx2,_typeCast,_jsx3,_typeCast2;let state,jsx,typeCast,typeParameters;if(this.hasPlugin("jsx")&&(this.match(140)||this.match(47))){if(state=this.state.clone(),jsx=this.tryParse((()=>super.parseMaybeAssign(refExpressionErrors,afterLeftParse)),state),!jsx.error)return jsx.node;const{context}=this.state,currentContext=context[context.length-1];currentContext!==types.j_oTag&&currentContext!==types.j_expr||context.pop()}if(!(null!=(_jsx=jsx)&&_jsx.error||this.match(47)))return super.parseMaybeAssign(refExpressionErrors,afterLeftParse);state&&state!==this.state||(state=this.state.clone());const arrow=this.tryParse((abort=>{var _expr$extra,_typeParameters;typeParameters=this.tsParseTypeParameters(this.tsParseConstModifier);const expr=super.parseMaybeAssign(refExpressionErrors,afterLeftParse);return("ArrowFunctionExpression"!==expr.type||null!=(_expr$extra=expr.extra)&&_expr$extra.parenthesized)&&abort(),0!==(null==(_typeParameters=typeParameters)?void 0:_typeParameters.params.length)&&this.resetStartLocationFromNode(expr,typeParameters),expr.typeParameters=typeParameters,expr}),state);if(!arrow.error&&!arrow.aborted)return typeParameters&&this.reportReservedArrowTypeParam(typeParameters),arrow.node;if(!jsx&&(assert(!this.hasPlugin("jsx")),typeCast=this.tryParse((()=>super.parseMaybeAssign(refExpressionErrors,afterLeftParse)),state),!typeCast.error))return typeCast.node;if(null!=(_jsx2=jsx)&&_jsx2.node)return this.state=jsx.failState,jsx.node;if(arrow.node)return this.state=arrow.failState,typeParameters&&this.reportReservedArrowTypeParam(typeParameters),arrow.node;if(null!=(_typeCast=typeCast)&&_typeCast.node)return this.state=typeCast.failState,typeCast.node;throw(null==(_jsx3=jsx)?void 0:_jsx3.error)||arrow.error||(null==(_typeCast2=typeCast)?void 0:_typeCast2.error)}reportReservedArrowTypeParam(node){var _node$extra;1!==node.params.length||node.params[0].constraint||null!=(_node$extra=node.extra)&&_node$extra.trailingComma||!this.getPluginOption("typescript","disallowAmbiguousJSXLike")||this.raise(TSErrors.ReservedArrowTypeParam,{at:node})}parseMaybeUnary(refExpressionErrors,sawUnary){return!this.hasPlugin("jsx")&&this.match(47)?this.tsParseTypeAssertion():super.parseMaybeUnary(refExpressionErrors,sawUnary)}parseArrow(node){if(this.match(14)){const result=this.tryParse((abort=>{const returnType=this.tsParseTypeOrTypePredicateAnnotation(14);return!this.canInsertSemicolon()&&this.match(19)||abort(),returnType}));if(result.aborted)return;result.thrown||(result.error&&(this.state=result.failState),node.returnType=result.node)}return super.parseArrow(node)}parseAssignableListItemTypes(param,flags){if(!(2&flags))return param;this.eat(17)&&(param.optional=!0);const type=this.tsTryParseTypeAnnotation();return type&&(param.typeAnnotation=type),this.resetEndLocation(param),param}isAssignable(node,isBinding){switch(node.type){case"TSTypeCastExpression":return this.isAssignable(node.expression,isBinding);case"TSParameterProperty":return!0;default:return super.isAssignable(node,isBinding)}}toAssignable(node,isLHS=!1){switch(node.type){case"ParenthesizedExpression":this.toAssignableParenthesizedExpression(node,isLHS);break;case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"TSTypeAssertion":isLHS?this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter,{at:node}):this.raise(TSErrors.UnexpectedTypeCastInParameter,{at:node}),this.toAssignable(node.expression,isLHS);break;case"AssignmentExpression":isLHS||"TSTypeCastExpression"!==node.left.type||(node.left=this.typeCastToParameter(node.left));default:super.toAssignable(node,isLHS)}}toAssignableParenthesizedExpression(node,isLHS){switch(node.expression.type){case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"TSTypeAssertion":case"ParenthesizedExpression":this.toAssignable(node.expression,isLHS);break;default:super.toAssignable(node,isLHS)}}checkToRestConversion(node,allowPattern){switch(node.type){case"TSAsExpression":case"TSSatisfiesExpression":case"TSTypeAssertion":case"TSNonNullExpression":this.checkToRestConversion(node.expression,!1);break;default:super.checkToRestConversion(node,allowPattern)}}isValidLVal(type,isUnparenthesizedInAssign,binding){return object={TSTypeCastExpression:!0,TSParameterProperty:"parameter",TSNonNullExpression:"expression",TSAsExpression:(64!==binding||!isUnparenthesizedInAssign)&&["expression",!0],TSSatisfiesExpression:(64!==binding||!isUnparenthesizedInAssign)&&["expression",!0],TSTypeAssertion:(64!==binding||!isUnparenthesizedInAssign)&&["expression",!0]},key=type,Object.hasOwnProperty.call(object,key)&&object[key]||super.isValidLVal(type,isUnparenthesizedInAssign,binding);var object,key}parseBindingAtom(){return 78===this.state.type?this.parseIdentifier(!0):super.parseBindingAtom()}parseMaybeDecoratorArguments(expr){if(this.match(47)||this.match(51)){const typeArguments=this.tsParseTypeArgumentsInExpression();if(this.match(10)){const call=super.parseMaybeDecoratorArguments(expr);return call.typeParameters=typeArguments,call}this.unexpected(null,10)}return super.parseMaybeDecoratorArguments(expr)}checkCommaAfterRest(close){return this.state.isAmbientContext&&this.match(12)&&this.lookaheadCharCode()===close?(this.next(),!1):super.checkCommaAfterRest(close)}isClassMethod(){return this.match(47)||super.isClassMethod()}isClassProperty(){return this.match(35)||this.match(14)||super.isClassProperty()}parseMaybeDefault(startLoc,left){const node=super.parseMaybeDefault(startLoc,left);return"AssignmentPattern"===node.type&&node.typeAnnotation&&node.right.start<node.typeAnnotation.start&&this.raise(TSErrors.TypeAnnotationAfterAssign,{at:node.typeAnnotation}),node}getTokenFromCode(code){if(this.state.inType){if(62===code)return void this.finishOp(48,1);if(60===code)return void this.finishOp(47,1)}super.getTokenFromCode(code)}reScan_lt_gt(){const{type}=this.state;47===type?(this.state.pos-=1,this.readToken_lt()):48===type&&(this.state.pos-=1,this.readToken_gt())}reScan_lt(){const{type}=this.state;return 51===type?(this.state.pos-=2,this.finishOp(47,1),47):type}toAssignableList(exprList,trailingCommaLoc,isLHS){for(let i=0;i<exprList.length;i++){const expr=exprList[i];"TSTypeCastExpression"===(null==expr?void 0:expr.type)&&(exprList[i]=this.typeCastToParameter(expr))}super.toAssignableList(exprList,trailingCommaLoc,isLHS)}typeCastToParameter(node){return node.expression.typeAnnotation=node.typeAnnotation,this.resetEndLocation(node.expression,node.typeAnnotation.loc.end),node.expression}shouldParseArrow(params){return this.match(14)?params.every((expr=>this.isAssignable(expr,!0))):super.shouldParseArrow(params)}shouldParseAsyncArrow(){return this.match(14)||super.shouldParseAsyncArrow()}canHaveLeadingDecorator(){return super.canHaveLeadingDecorator()||this.isAbstractClass()}jsxParseOpeningElementAfterName(node){if(this.match(47)||this.match(51)){const typeArguments=this.tsTryParseAndCatch((()=>this.tsParseTypeArgumentsInExpression()));typeArguments&&(node.typeParameters=typeArguments)}return super.jsxParseOpeningElementAfterName(node)}getGetterSetterExpectedParamCount(method){const baseCount=super.getGetterSetterExpectedParamCount(method),firstParam=this.getObjectOrClassMethodParams(method)[0];return firstParam&&this.isThisParam(firstParam)?baseCount+1:baseCount}parseCatchClauseParam(){const param=super.parseCatchClauseParam(),type=this.tsTryParseTypeAnnotation();return type&&(param.typeAnnotation=type,this.resetEndLocation(param)),param}tsInAmbientContext(cb){const oldIsAmbientContext=this.state.isAmbientContext;this.state.isAmbientContext=!0;try{return cb()}finally{this.state.isAmbientContext=oldIsAmbientContext}}parseClass(node,isStatement,optionalId){const oldInAbstractClass=this.state.inAbstractClass;this.state.inAbstractClass=!!node.abstract;try{return super.parseClass(node,isStatement,optionalId)}finally{this.state.inAbstractClass=oldInAbstractClass}}tsParseAbstractDeclaration(node,decorators){if(this.match(80))return node.abstract=!0,this.maybeTakeDecorators(decorators,this.parseClass(node,!0,!1));if(this.isContextual(127)){if(!this.hasFollowingLineBreak())return node.abstract=!0,this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer,{at:node}),this.tsParseInterfaceDeclaration(node)}else this.unexpected(null,80)}parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope){const method=super.parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope);if(method.abstract){if(this.hasPlugin("estree")?!!method.value.body:!!method.body){const{key}=method;this.raise(TSErrors.AbstractMethodHasImplementation,{at:method,methodName:"Identifier"!==key.type||method.computed?`[${this.input.slice(key.start,key.end)}]`:key.name})}}return method}tsParseTypeParameterName(){return this.parseIdentifier().name}shouldParseAsAmbientContext(){return!!this.getPluginOption("typescript","dts")}parse(){return this.shouldParseAsAmbientContext()&&(this.state.isAmbientContext=!0),super.parse()}getExpression(){return this.shouldParseAsAmbientContext()&&(this.state.isAmbientContext=!0),super.getExpression()}parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly){return!isString&&isMaybeTypeOnly?(this.parseTypeOnlyImportExportSpecifier(node,!1,isInTypeExport),this.finishNode(node,"ExportSpecifier")):(node.exportKind="value",super.parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly))}parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,bindingType){return!importedIsString&&isMaybeTypeOnly?(this.parseTypeOnlyImportExportSpecifier(specifier,!0,isInTypeOnlyImport),this.finishNode(specifier,"ImportSpecifier")):(specifier.importKind="value",super.parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,isInTypeOnlyImport?4098:4096))}parseTypeOnlyImportExportSpecifier(node,isImport,isInTypeOnlyImportExport){const leftOfAsKey=isImport?"imported":"local",rightOfAsKey=isImport?"local":"exported";let rightOfAs,leftOfAs=node[leftOfAsKey],hasTypeSpecifier=!1,canParseAsKeyword=!0;const loc=leftOfAs.loc.start;if(this.isContextual(93)){const firstAs=this.parseIdentifier();if(this.isContextual(93)){const secondAs=this.parseIdentifier();tokenIsKeywordOrIdentifier(this.state.type)?(hasTypeSpecifier=!0,leftOfAs=firstAs,rightOfAs=isImport?this.parseIdentifier():this.parseModuleExportName(),canParseAsKeyword=!1):(rightOfAs=secondAs,canParseAsKeyword=!1)}else tokenIsKeywordOrIdentifier(this.state.type)?(canParseAsKeyword=!1,rightOfAs=isImport?this.parseIdentifier():this.parseModuleExportName()):(hasTypeSpecifier=!0,leftOfAs=firstAs)}else tokenIsKeywordOrIdentifier(this.state.type)&&(hasTypeSpecifier=!0,isImport?(leftOfAs=this.parseIdentifier(!0),this.isContextual(93)||this.checkReservedWord(leftOfAs.name,leftOfAs.loc.start,!0,!0)):leftOfAs=this.parseModuleExportName());hasTypeSpecifier&&isInTypeOnlyImportExport&&this.raise(isImport?TSErrors.TypeModifierIsUsedInTypeImports:TSErrors.TypeModifierIsUsedInTypeExports,{at:loc}),node[leftOfAsKey]=leftOfAs,node[rightOfAsKey]=rightOfAs;node[isImport?"importKind":"exportKind"]=hasTypeSpecifier?"type":"value",canParseAsKeyword&&this.eatContextual(93)&&(node[rightOfAsKey]=isImport?this.parseIdentifier():this.parseModuleExportName()),node[rightOfAsKey]||(node[rightOfAsKey]=cloneIdentifier(node[leftOfAsKey])),isImport&&this.checkIdentifier(node[rightOfAsKey],hasTypeSpecifier?4098:4096)}},v8intrinsic:superClass=>class extends superClass{parseV8Intrinsic(){if(this.match(54)){const v8IntrinsicStartLoc=this.state.startLoc,node=this.startNode();if(this.next(),tokenIsIdentifier(this.state.type)){const name=this.parseIdentifierName(),identifier=this.createIdentifier(node,name);if(identifier.type="V8IntrinsicIdentifier",this.match(10))return identifier}this.unexpected(v8IntrinsicStartLoc)}}parseExprAtom(refExpressionErrors){return this.parseV8Intrinsic()||super.parseExprAtom(refExpressionErrors)}},placeholders:superClass=>class extends superClass{parsePlaceholder(expectedNode){if(this.match(142)){const node=this.startNode();return this.next(),this.assertNoSpace(),node.name=super.parseIdentifier(!0),this.assertNoSpace(),this.expect(142),this.finishPlaceholder(node,expectedNode)}}finishPlaceholder(node,expectedNode){const isFinished=!(!node.expectedNode||"Placeholder"!==node.type);return node.expectedNode=expectedNode,isFinished?node:this.finishNode(node,"Placeholder")}getTokenFromCode(code){37===code&&37===this.input.charCodeAt(this.state.pos+1)?this.finishOp(142,2):super.getTokenFromCode(code)}parseExprAtom(refExpressionErrors){return this.parsePlaceholder("Expression")||super.parseExprAtom(refExpressionErrors)}parseIdentifier(liberal){return this.parsePlaceholder("Identifier")||super.parseIdentifier(liberal)}checkReservedWord(word,startLoc,checkKeywords,isBinding){void 0!==word&&super.checkReservedWord(word,startLoc,checkKeywords,isBinding)}parseBindingAtom(){return this.parsePlaceholder("Pattern")||super.parseBindingAtom()}isValidLVal(type,isParenthesized,binding){return"Placeholder"===type||super.isValidLVal(type,isParenthesized,binding)}toAssignable(node,isLHS){node&&"Placeholder"===node.type&&"Expression"===node.expectedNode?node.expectedNode="Pattern":super.toAssignable(node,isLHS)}chStartsBindingIdentifier(ch,pos){if(super.chStartsBindingIdentifier(ch,pos))return!0;return 142===this.lookahead().type}verifyBreakContinue(node,isBreak){node.label&&"Placeholder"===node.label.type||super.verifyBreakContinue(node,isBreak)}parseExpressionStatement(node,expr){if("Placeholder"!==expr.type||expr.extra&&expr.extra.parenthesized)return super.parseExpressionStatement(node,expr);if(this.match(14)){const stmt=node;return stmt.label=this.finishPlaceholder(expr,"Identifier"),this.next(),stmt.body=super.parseStatementOrSloppyAnnexBFunctionDeclaration(),this.finishNode(stmt,"LabeledStatement")}return this.semicolon(),node.name=expr.name,this.finishPlaceholder(node,"Statement")}parseBlock(allowDirectives,createNewLexicalScope,afterBlockParse){return this.parsePlaceholder("BlockStatement")||super.parseBlock(allowDirectives,createNewLexicalScope,afterBlockParse)}parseFunctionId(requireId){return this.parsePlaceholder("Identifier")||super.parseFunctionId(requireId)}parseClass(node,isStatement,optionalId){const type=isStatement?"ClassDeclaration":"ClassExpression";this.next();const oldStrict=this.state.strict,placeholder=this.parsePlaceholder("Identifier");if(placeholder){if(!(this.match(81)||this.match(142)||this.match(5))){if(optionalId||!isStatement)return node.id=null,node.body=this.finishPlaceholder(placeholder,"ClassBody"),this.finishNode(node,type);throw this.raise(PlaceholderErrors.ClassNameIsRequired,{at:this.state.startLoc})}node.id=placeholder}else this.parseClassId(node,isStatement,optionalId);return super.parseClassSuper(node),node.body=this.parsePlaceholder("ClassBody")||super.parseClassBody(!!node.superClass,oldStrict),this.finishNode(node,type)}parseExport(node,decorators){const placeholder=this.parsePlaceholder("Identifier");if(!placeholder)return super.parseExport(node,decorators);if(!this.isContextual(97)&&!this.match(12))return node.specifiers=[],node.source=null,node.declaration=this.finishPlaceholder(placeholder,"Declaration"),this.finishNode(node,"ExportNamedDeclaration");this.expectPlugin("exportDefaultFrom");const specifier=this.startNode();return specifier.exported=placeholder,node.specifiers=[this.finishNode(specifier,"ExportDefaultSpecifier")],super.parseExport(node,decorators)}isExportDefaultSpecifier(){if(this.match(65)){const next=this.nextTokenStart();if(this.isUnparsedContextual(next,"from")&&this.input.startsWith(tokenLabelName(142),this.nextTokenStartSince(next+4)))return!0}return super.isExportDefaultSpecifier()}maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier){var _specifiers;return!(null==(_specifiers=node.specifiers)||!_specifiers.length)||super.maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier)}checkExport(node){const{specifiers}=node;null!=specifiers&&specifiers.length&&(node.specifiers=specifiers.filter((node=>"Placeholder"===node.exported.type))),super.checkExport(node),node.specifiers=specifiers}parseImport(node){const placeholder=this.parsePlaceholder("Identifier");if(!placeholder)return super.parseImport(node);if(node.specifiers=[],!this.isContextual(97)&&!this.match(12))return node.source=this.finishPlaceholder(placeholder,"StringLiteral"),this.semicolon(),this.finishNode(node,"ImportDeclaration");const specifier=this.startNodeAtNode(placeholder);if(specifier.local=placeholder,node.specifiers.push(this.finishNode(specifier,"ImportDefaultSpecifier")),this.eat(12)){this.maybeParseStarImportSpecifier(node)||this.parseNamedImportSpecifiers(node)}return this.expectContextual(97),node.source=this.parseImportSource(),this.semicolon(),this.finishNode(node,"ImportDeclaration")}parseImportSource(){return this.parsePlaceholder("StringLiteral")||super.parseImportSource()}assertNoSpace(){this.state.start>this.state.lastTokEndLoc.index&&this.raise(PlaceholderErrors.UnexpectedSpace,{at:this.state.lastTokEndLoc})}}},mixinPluginNames=Object.keys(mixinPlugins),defaultOptions={sourceType:"script",sourceFilename:void 0,startColumn:0,startLine:1,allowAwaitOutsideFunction:!1,allowReturnOutsideFunction:!1,allowNewTargetOutsideFunction:!1,allowImportExportEverywhere:!1,allowSuperOutsideMethod:!1,allowUndeclaredExports:!1,plugins:[],strictMode:null,ranges:!1,tokens:!1,createParenthesizedExpressions:!1,errorRecovery:!1,attachComment:!0,annexB:!0};class ExpressionParser extends LValParser{checkProto(prop,isRecord,protoRef,refExpressionErrors){if("SpreadElement"===prop.type||this.isObjectMethod(prop)||prop.computed||prop.shorthand)return;const key=prop.key;if("__proto__"===("Identifier"===key.type?key.name:key.value)){if(isRecord)return void this.raise(Errors.RecordNoProto,{at:key});protoRef.used&&(refExpressionErrors?null===refExpressionErrors.doubleProtoLoc&&(refExpressionErrors.doubleProtoLoc=key.loc.start):this.raise(Errors.DuplicateProto,{at:key})),protoRef.used=!0}}shouldExitDescending(expr,potentialArrowAt){return"ArrowFunctionExpression"===expr.type&&expr.start===potentialArrowAt}getExpression(){this.enterInitialScopes(),this.nextToken();const expr=this.parseExpression();return this.match(137)||this.unexpected(),this.finalizeRemainingComments(),expr.comments=this.state.comments,expr.errors=this.state.errors,this.options.tokens&&(expr.tokens=this.tokens),expr}parseExpression(disallowIn,refExpressionErrors){return disallowIn?this.disallowInAnd((()=>this.parseExpressionBase(refExpressionErrors))):this.allowInAnd((()=>this.parseExpressionBase(refExpressionErrors)))}parseExpressionBase(refExpressionErrors){const startLoc=this.state.startLoc,expr=this.parseMaybeAssign(refExpressionErrors);if(this.match(12)){const node=this.startNodeAt(startLoc);for(node.expressions=[expr];this.eat(12);)node.expressions.push(this.parseMaybeAssign(refExpressionErrors));return this.toReferencedList(node.expressions),this.finishNode(node,"SequenceExpression")}return expr}parseMaybeAssignDisallowIn(refExpressionErrors,afterLeftParse){return this.disallowInAnd((()=>this.parseMaybeAssign(refExpressionErrors,afterLeftParse)))}parseMaybeAssignAllowIn(refExpressionErrors,afterLeftParse){return this.allowInAnd((()=>this.parseMaybeAssign(refExpressionErrors,afterLeftParse)))}setOptionalParametersError(refExpressionErrors,resultError){var _resultError$loc;refExpressionErrors.optionalParametersLoc=null!=(_resultError$loc=null==resultError?void 0:resultError.loc)?_resultError$loc:this.state.startLoc}parseMaybeAssign(refExpressionErrors,afterLeftParse){const startLoc=this.state.startLoc;if(this.isContextual(106)&&this.prodParam.hasYield){let left=this.parseYield();return afterLeftParse&&(left=afterLeftParse.call(this,left,startLoc)),left}let ownExpressionErrors;refExpressionErrors?ownExpressionErrors=!1:(refExpressionErrors=new ExpressionErrors,ownExpressionErrors=!0);const{type}=this.state;(10===type||tokenIsIdentifier(type))&&(this.state.potentialArrowAt=this.state.start);let left=this.parseMaybeConditional(refExpressionErrors);if(afterLeftParse&&(left=afterLeftParse.call(this,left,startLoc)),(token=this.state.type)>=29&&token<=33){const node=this.startNodeAt(startLoc),operator=this.state.value;if(node.operator=operator,this.match(29)){this.toAssignable(left,!0),node.left=left;const startIndex=startLoc.index;null!=refExpressionErrors.doubleProtoLoc&&refExpressionErrors.doubleProtoLoc.index>=startIndex&&(refExpressionErrors.doubleProtoLoc=null),null!=refExpressionErrors.shorthandAssignLoc&&refExpressionErrors.shorthandAssignLoc.index>=startIndex&&(refExpressionErrors.shorthandAssignLoc=null),null!=refExpressionErrors.privateKeyLoc&&refExpressionErrors.privateKeyLoc.index>=startIndex&&(this.checkDestructuringPrivate(refExpressionErrors),refExpressionErrors.privateKeyLoc=null)}else node.left=left;return this.next(),node.right=this.parseMaybeAssign(),this.checkLVal(left,{in:this.finishNode(node,"AssignmentExpression")}),node}var token;return ownExpressionErrors&&this.checkExpressionErrors(refExpressionErrors,!0),left}parseMaybeConditional(refExpressionErrors){const startLoc=this.state.startLoc,potentialArrowAt=this.state.potentialArrowAt,expr=this.parseExprOps(refExpressionErrors);return this.shouldExitDescending(expr,potentialArrowAt)?expr:this.parseConditional(expr,startLoc,refExpressionErrors)}parseConditional(expr,startLoc,refExpressionErrors){if(this.eat(17)){const node=this.startNodeAt(startLoc);return node.test=expr,node.consequent=this.parseMaybeAssignAllowIn(),this.expect(14),node.alternate=this.parseMaybeAssign(),this.finishNode(node,"ConditionalExpression")}return expr}parseMaybeUnaryOrPrivate(refExpressionErrors){return this.match(136)?this.parsePrivateName():this.parseMaybeUnary(refExpressionErrors)}parseExprOps(refExpressionErrors){const startLoc=this.state.startLoc,potentialArrowAt=this.state.potentialArrowAt,expr=this.parseMaybeUnaryOrPrivate(refExpressionErrors);return this.shouldExitDescending(expr,potentialArrowAt)?expr:this.parseExprOp(expr,startLoc,-1)}parseExprOp(left,leftStartLoc,minPrec){if(this.isPrivateName(left)){const value=this.getPrivateNameSV(left);(minPrec>=tokenOperatorPrecedence(58)||!this.prodParam.hasIn||!this.match(58))&&this.raise(Errors.PrivateInExpectedIn,{at:left,identifierName:value}),this.classScope.usePrivateName(value,left.loc.start)}const op=this.state.type;if((token=op)>=39&&token<=59&&(this.prodParam.hasIn||!this.match(58))){let prec=tokenOperatorPrecedence(op);if(prec>minPrec){if(39===op){if(this.expectPlugin("pipelineOperator"),this.state.inFSharpPipelineDirectBody)return left;this.checkPipelineAtInfixOperator(left,leftStartLoc)}const node=this.startNodeAt(leftStartLoc);node.left=left,node.operator=this.state.value;const logical=41===op||42===op,coalesce=40===op;if(coalesce&&(prec=tokenOperatorPrecedence(42)),this.next(),39===op&&this.hasPlugin(["pipelineOperator",{proposal:"minimal"}])&&96===this.state.type&&this.prodParam.hasAwait)throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody,{at:this.state.startLoc});node.right=this.parseExprOpRightExpr(op,prec);const finishedNode=this.finishNode(node,logical||coalesce?"LogicalExpression":"BinaryExpression"),nextOp=this.state.type;if(coalesce&&(41===nextOp||42===nextOp)||logical&&40===nextOp)throw this.raise(Errors.MixingCoalesceWithLogical,{at:this.state.startLoc});return this.parseExprOp(finishedNode,leftStartLoc,minPrec)}}var token;return left}parseExprOpRightExpr(op,prec){const startLoc=this.state.startLoc;if(39===op)switch(this.getPluginOption("pipelineOperator","proposal")){case"hack":return this.withTopicBindingContext((()=>this.parseHackPipeBody()));case"smart":return this.withTopicBindingContext((()=>{if(this.prodParam.hasYield&&this.isContextual(106))throw this.raise(Errors.PipeBodyIsTighter,{at:this.state.startLoc});return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op,prec),startLoc)}));case"fsharp":return this.withSoloAwaitPermittingContext((()=>this.parseFSharpPipelineBody(prec)))}return this.parseExprOpBaseRightExpr(op,prec)}parseExprOpBaseRightExpr(op,prec){const startLoc=this.state.startLoc;return this.parseExprOp(this.parseMaybeUnaryOrPrivate(),startLoc,57===op?prec-1:prec)}parseHackPipeBody(){var _body$extra;const{startLoc}=this.state,body=this.parseMaybeAssign();return!UnparenthesizedPipeBodyDescriptions.has(body.type)||null!=(_body$extra=body.extra)&&_body$extra.parenthesized||this.raise(Errors.PipeUnparenthesizedBody,{at:startLoc,type:body.type}),this.topicReferenceWasUsedInCurrentContext()||this.raise(Errors.PipeTopicUnused,{at:startLoc}),body}checkExponentialAfterUnary(node){this.match(57)&&this.raise(Errors.UnexpectedTokenUnaryExponentiation,{at:node.argument})}parseMaybeUnary(refExpressionErrors,sawUnary){const startLoc=this.state.startLoc,isAwait=this.isContextual(96);if(isAwait&&this.isAwaitAllowed()){this.next();const expr=this.parseAwait(startLoc);return sawUnary||this.checkExponentialAfterUnary(expr),expr}const update=this.match(34),node=this.startNode();if(token=this.state.type,tokenPrefixes[token]){node.operator=this.state.value,node.prefix=!0,this.match(72)&&this.expectPlugin("throwExpressions");const isDelete=this.match(89);if(this.next(),node.argument=this.parseMaybeUnary(null,!0),this.checkExpressionErrors(refExpressionErrors,!0),this.state.strict&&isDelete){const arg=node.argument;"Identifier"===arg.type?this.raise(Errors.StrictDelete,{at:node}):this.hasPropertyAsPrivateName(arg)&&this.raise(Errors.DeletePrivateField,{at:node})}if(!update)return sawUnary||this.checkExponentialAfterUnary(node),this.finishNode(node,"UnaryExpression")}var token;const expr=this.parseUpdate(node,update,refExpressionErrors);if(isAwait){const{type}=this.state;if((this.hasPlugin("v8intrinsic")?tokenCanStartExpression(type):tokenCanStartExpression(type)&&!this.match(54))&&!this.isAmbiguousAwait())return this.raiseOverwrite(Errors.AwaitNotInAsyncContext,{at:startLoc}),this.parseAwait(startLoc)}return expr}parseUpdate(node,update,refExpressionErrors){if(update){const updateExpressionNode=node;return this.checkLVal(updateExpressionNode.argument,{in:this.finishNode(updateExpressionNode,"UpdateExpression")}),node}const startLoc=this.state.startLoc;let expr=this.parseExprSubscripts(refExpressionErrors);if(this.checkExpressionErrors(refExpressionErrors,!1))return expr;for(;34===this.state.type&&!this.canInsertSemicolon();){const node=this.startNodeAt(startLoc);node.operator=this.state.value,node.prefix=!1,node.argument=expr,this.next(),this.checkLVal(expr,{in:expr=this.finishNode(node,"UpdateExpression")})}return expr}parseExprSubscripts(refExpressionErrors){const startLoc=this.state.startLoc,potentialArrowAt=this.state.potentialArrowAt,expr=this.parseExprAtom(refExpressionErrors);return this.shouldExitDescending(expr,potentialArrowAt)?expr:this.parseSubscripts(expr,startLoc)}parseSubscripts(base,startLoc,noCalls){const state={optionalChainMember:!1,maybeAsyncArrow:this.atPossibleAsyncArrow(base),stop:!1};do{base=this.parseSubscript(base,startLoc,noCalls,state),state.maybeAsyncArrow=!1}while(!state.stop);return base}parseSubscript(base,startLoc,noCalls,state){const{type}=this.state;if(!noCalls&&15===type)return this.parseBind(base,startLoc,noCalls,state);if(tokenIsTemplate(type))return this.parseTaggedTemplateExpression(base,startLoc,state);let optional=!1;if(18===type){if(noCalls&&(this.raise(Errors.OptionalChainingNoNew,{at:this.state.startLoc}),40===this.lookaheadCharCode()))return state.stop=!0,base;state.optionalChainMember=optional=!0,this.next()}if(!noCalls&&this.match(10))return this.parseCoverCallAndAsyncArrowHead(base,startLoc,state,optional);{const computed=this.eat(0);return computed||optional||this.eat(16)?this.parseMember(base,startLoc,state,computed,optional):(state.stop=!0,base)}}parseMember(base,startLoc,state,computed,optional){const node=this.startNodeAt(startLoc);return node.object=base,node.computed=computed,computed?(node.property=this.parseExpression(),this.expect(3)):this.match(136)?("Super"===base.type&&this.raise(Errors.SuperPrivateField,{at:startLoc}),this.classScope.usePrivateName(this.state.value,this.state.startLoc),node.property=this.parsePrivateName()):node.property=this.parseIdentifier(!0),state.optionalChainMember?(node.optional=optional,this.finishNode(node,"OptionalMemberExpression")):this.finishNode(node,"MemberExpression")}parseBind(base,startLoc,noCalls,state){const node=this.startNodeAt(startLoc);return node.object=base,this.next(),node.callee=this.parseNoCallExpr(),state.stop=!0,this.parseSubscripts(this.finishNode(node,"BindExpression"),startLoc,noCalls)}parseCoverCallAndAsyncArrowHead(base,startLoc,state,optional){const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;let refExpressionErrors=null;this.state.maybeInArrowParameters=!0,this.next();const node=this.startNodeAt(startLoc);node.callee=base;const{maybeAsyncArrow,optionalChainMember}=state;maybeAsyncArrow&&(this.expressionScope.enter(new ArrowHeadParsingScope(2)),refExpressionErrors=new ExpressionErrors),optionalChainMember&&(node.optional=optional),node.arguments=optional?this.parseCallExpressionArguments(11):this.parseCallExpressionArguments(11,"Import"===base.type,"Super"!==base.type,node,refExpressionErrors);let finishedNode=this.finishCallExpression(node,optionalChainMember);return maybeAsyncArrow&&this.shouldParseAsyncArrow()&&!optional?(state.stop=!0,this.checkDestructuringPrivate(refExpressionErrors),this.expressionScope.validateAsPattern(),this.expressionScope.exit(),finishedNode=this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc),finishedNode)):(maybeAsyncArrow&&(this.checkExpressionErrors(refExpressionErrors,!0),this.expressionScope.exit()),this.toReferencedArguments(finishedNode)),this.state.maybeInArrowParameters=oldMaybeInArrowParameters,finishedNode}toReferencedArguments(node,isParenthesizedExpr){this.toReferencedListDeep(node.arguments,isParenthesizedExpr)}parseTaggedTemplateExpression(base,startLoc,state){const node=this.startNodeAt(startLoc);return node.tag=base,node.quasi=this.parseTemplate(!0),state.optionalChainMember&&this.raise(Errors.OptionalChainingNoTemplate,{at:startLoc}),this.finishNode(node,"TaggedTemplateExpression")}atPossibleAsyncArrow(base){return"Identifier"===base.type&&"async"===base.name&&this.state.lastTokEndLoc.index===base.end&&!this.canInsertSemicolon()&&base.end-base.start==5&&base.start===this.state.potentialArrowAt}expectImportAttributesPlugin(){this.hasPlugin("importAssertions")||this.expectPlugin("importAttributes")}finishCallExpression(node,optional){if("Import"===node.callee.type)if(2===node.arguments.length&&(this.hasPlugin("moduleAttributes")||this.expectImportAttributesPlugin()),0===node.arguments.length||node.arguments.length>2)this.raise(Errors.ImportCallArity,{at:node,maxArgumentCount:this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions")||this.hasPlugin("moduleAttributes")?2:1});else for(const arg of node.arguments)"SpreadElement"===arg.type&&this.raise(Errors.ImportCallSpreadArgument,{at:arg});return this.finishNode(node,optional?"OptionalCallExpression":"CallExpression")}parseCallExpressionArguments(close,dynamicImport,allowPlaceholder,nodeForExtra,refExpressionErrors){const elts=[];let first=!0;const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;for(this.state.inFSharpPipelineDirectBody=!1;!this.eat(close);){if(first)first=!1;else if(this.expect(12),this.match(close)){!dynamicImport||this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions")||this.hasPlugin("moduleAttributes")||this.raise(Errors.ImportCallArgumentTrailingComma,{at:this.state.lastTokStartLoc}),nodeForExtra&&this.addTrailingCommaExtraToNode(nodeForExtra),this.next();break}elts.push(this.parseExprListItem(!1,refExpressionErrors,allowPlaceholder))}return this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody,elts}shouldParseAsyncArrow(){return this.match(19)&&!this.canInsertSemicolon()}parseAsyncArrowFromCallExpression(node,call){var _call$extra;return this.resetPreviousNodeTrailingComments(call),this.expect(19),this.parseArrowExpression(node,call.arguments,!0,null==(_call$extra=call.extra)?void 0:_call$extra.trailingCommaLoc),call.innerComments&&setInnerComments(node,call.innerComments),call.callee.trailingComments&&setInnerComments(node,call.callee.trailingComments),node}parseNoCallExpr(){const startLoc=this.state.startLoc;return this.parseSubscripts(this.parseExprAtom(),startLoc,!0)}parseExprAtom(refExpressionErrors){let node,decorators=null;const{type}=this.state;switch(type){case 79:return this.parseSuper();case 83:return node=this.startNode(),this.next(),this.match(16)?this.parseImportMetaProperty(node):(this.match(10)||this.raise(Errors.UnsupportedImport,{at:this.state.lastTokStartLoc}),this.finishNode(node,"Import"));case 78:return node=this.startNode(),this.next(),this.finishNode(node,"ThisExpression");case 90:return this.parseDo(this.startNode(),!1);case 56:case 31:return this.readRegexp(),this.parseRegExpLiteral(this.state.value);case 132:return this.parseNumericLiteral(this.state.value);case 133:return this.parseBigIntLiteral(this.state.value);case 134:return this.parseDecimalLiteral(this.state.value);case 131:return this.parseStringLiteral(this.state.value);case 84:return this.parseNullLiteral();case 85:return this.parseBooleanLiteral(!0);case 86:return this.parseBooleanLiteral(!1);case 10:{const canBeArrow=this.state.potentialArrowAt===this.state.start;return this.parseParenAndDistinguishExpression(canBeArrow)}case 2:case 1:return this.parseArrayLike(2===this.state.type?4:3,!1,!0);case 0:return this.parseArrayLike(3,!0,!1,refExpressionErrors);case 6:case 7:return this.parseObjectLike(6===this.state.type?9:8,!1,!0);case 5:return this.parseObjectLike(8,!1,!1,refExpressionErrors);case 68:return this.parseFunctionOrFunctionSent();case 26:decorators=this.parseDecorators();case 80:return this.parseClass(this.maybeTakeDecorators(decorators,this.startNode()),!1);case 77:return this.parseNewOrNewTarget();case 25:case 24:return this.parseTemplate(!1);case 15:{node=this.startNode(),this.next(),node.object=null;const callee=node.callee=this.parseNoCallExpr();if("MemberExpression"===callee.type)return this.finishNode(node,"BindExpression");throw this.raise(Errors.UnsupportedBind,{at:callee})}case 136:return this.raise(Errors.PrivateInExpectedIn,{at:this.state.startLoc,identifierName:this.state.value}),this.parsePrivateName();case 33:return this.parseTopicReferenceThenEqualsSign(54,"%");case 32:return this.parseTopicReferenceThenEqualsSign(44,"^");case 37:case 38:return this.parseTopicReference("hack");case 44:case 54:case 27:{const pipeProposal=this.getPluginOption("pipelineOperator","proposal");if(pipeProposal)return this.parseTopicReference(pipeProposal);this.unexpected();break}case 47:{const lookaheadCh=this.input.codePointAt(this.nextTokenStart());isIdentifierStart(lookaheadCh)||62===lookaheadCh?this.expectOnePlugin(["jsx","flow","typescript"]):this.unexpected();break}default:if(tokenIsIdentifier(type)){if(this.isContextual(125)&&123===this.lookaheadInLineCharCode())return this.parseModuleExpression();const canBeArrow=this.state.potentialArrowAt===this.state.start,containsEsc=this.state.containsEsc,id=this.parseIdentifier();if(!containsEsc&&"async"===id.name&&!this.canInsertSemicolon()){const{type}=this.state;if(68===type)return this.resetPreviousNodeTrailingComments(id),this.next(),this.parseAsyncFunctionExpression(this.startNodeAtNode(id));if(tokenIsIdentifier(type))return 61===this.lookaheadCharCode()?this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id)):id;if(90===type)return this.resetPreviousNodeTrailingComments(id),this.parseDo(this.startNodeAtNode(id),!0)}return canBeArrow&&this.match(19)&&!this.canInsertSemicolon()?(this.next(),this.parseArrowExpression(this.startNodeAtNode(id),[id],!1)):id}this.unexpected()}}parseTopicReferenceThenEqualsSign(topicTokenType,topicTokenValue){const pipeProposal=this.getPluginOption("pipelineOperator","proposal");if(pipeProposal)return this.state.type=topicTokenType,this.state.value=topicTokenValue,this.state.pos--,this.state.end--,this.state.endLoc=createPositionWithColumnOffset(this.state.endLoc,-1),this.parseTopicReference(pipeProposal);this.unexpected()}parseTopicReference(pipeProposal){const node=this.startNode(),startLoc=this.state.startLoc,tokenType=this.state.type;return this.next(),this.finishTopicReference(node,startLoc,pipeProposal,tokenType)}finishTopicReference(node,startLoc,pipeProposal,tokenType){if(this.testTopicReferenceConfiguration(pipeProposal,startLoc,tokenType)){const nodeType="smart"===pipeProposal?"PipelinePrimaryTopicReference":"TopicReference";return this.topicReferenceIsAllowedInCurrentContext()||this.raise("smart"===pipeProposal?Errors.PrimaryTopicNotAllowed:Errors.PipeTopicUnbound,{at:startLoc}),this.registerTopicReference(),this.finishNode(node,nodeType)}throw this.raise(Errors.PipeTopicUnconfiguredToken,{at:startLoc,token:tokenLabelName(tokenType)})}testTopicReferenceConfiguration(pipeProposal,startLoc,tokenType){switch(pipeProposal){case"hack":return this.hasPlugin(["pipelineOperator",{topicToken:tokenLabelName(tokenType)}]);case"smart":return 27===tokenType;default:throw this.raise(Errors.PipeTopicRequiresHackPipes,{at:startLoc})}}parseAsyncArrowUnaryFunction(node){this.prodParam.enter(functionFlags(!0,this.prodParam.hasYield));const params=[this.parseIdentifier()];return this.prodParam.exit(),this.hasPrecedingLineBreak()&&this.raise(Errors.LineTerminatorBeforeArrow,{at:this.state.curPosition()}),this.expect(19),this.parseArrowExpression(node,params,!0)}parseDo(node,isAsync){this.expectPlugin("doExpressions"),isAsync&&this.expectPlugin("asyncDoExpressions"),node.async=isAsync,this.next();const oldLabels=this.state.labels;return this.state.labels=[],isAsync?(this.prodParam.enter(2),node.body=this.parseBlock(),this.prodParam.exit()):node.body=this.parseBlock(),this.state.labels=oldLabels,this.finishNode(node,"DoExpression")}parseSuper(){const node=this.startNode();return this.next(),!this.match(10)||this.scope.allowDirectSuper||this.options.allowSuperOutsideMethod?this.scope.allowSuper||this.options.allowSuperOutsideMethod||this.raise(Errors.UnexpectedSuper,{at:node}):this.raise(Errors.SuperNotAllowed,{at:node}),this.match(10)||this.match(0)||this.match(16)||this.raise(Errors.UnsupportedSuper,{at:node}),this.finishNode(node,"Super")}parsePrivateName(){const node=this.startNode(),id=this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc,1)),name=this.state.value;return this.next(),node.id=this.createIdentifier(id,name),this.finishNode(node,"PrivateName")}parseFunctionOrFunctionSent(){const node=this.startNode();if(this.next(),this.prodParam.hasYield&&this.match(16)){const meta=this.createIdentifier(this.startNodeAtNode(node),"function");return this.next(),this.match(102)?this.expectPlugin("functionSent"):this.hasPlugin("functionSent")||this.unexpected(),this.parseMetaProperty(node,meta,"sent")}return this.parseFunction(node)}parseMetaProperty(node,meta,propertyName){node.meta=meta;const containsEsc=this.state.containsEsc;return node.property=this.parseIdentifier(!0),(node.property.name!==propertyName||containsEsc)&&this.raise(Errors.UnsupportedMetaProperty,{at:node.property,target:meta.name,onlyValidPropertyName:propertyName}),this.finishNode(node,"MetaProperty")}parseImportMetaProperty(node){const id=this.createIdentifier(this.startNodeAtNode(node),"import");return this.next(),this.isContextual(100)&&(this.inModule||this.raise(Errors.ImportMetaOutsideModule,{at:id}),this.sawUnambiguousESM=!0),this.parseMetaProperty(node,id,"meta")}parseLiteralAtNode(value,type,node){return this.addExtra(node,"rawValue",value),this.addExtra(node,"raw",this.input.slice(node.start,this.state.end)),node.value=value,this.next(),this.finishNode(node,type)}parseLiteral(value,type){const node=this.startNode();return this.parseLiteralAtNode(value,type,node)}parseStringLiteral(value){return this.parseLiteral(value,"StringLiteral")}parseNumericLiteral(value){return this.parseLiteral(value,"NumericLiteral")}parseBigIntLiteral(value){return this.parseLiteral(value,"BigIntLiteral")}parseDecimalLiteral(value){return this.parseLiteral(value,"DecimalLiteral")}parseRegExpLiteral(value){const node=this.parseLiteral(value.value,"RegExpLiteral");return node.pattern=value.pattern,node.flags=value.flags,node}parseBooleanLiteral(value){const node=this.startNode();return node.value=value,this.next(),this.finishNode(node,"BooleanLiteral")}parseNullLiteral(){const node=this.startNode();return this.next(),this.finishNode(node,"NullLiteral")}parseParenAndDistinguishExpression(canBeArrow){const startLoc=this.state.startLoc;let val;this.next(),this.expressionScope.enter(new ArrowHeadParsingScope(1));const oldMaybeInArrowParameters=this.state.maybeInArrowParameters,oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.maybeInArrowParameters=!0,this.state.inFSharpPipelineDirectBody=!1;const innerStartLoc=this.state.startLoc,exprList=[],refExpressionErrors=new ExpressionErrors;let spreadStartLoc,optionalCommaStartLoc,first=!0;for(;!this.match(11);){if(first)first=!1;else if(this.expect(12,null===refExpressionErrors.optionalParametersLoc?null:refExpressionErrors.optionalParametersLoc),this.match(11)){optionalCommaStartLoc=this.state.startLoc;break}if(this.match(21)){const spreadNodeStartLoc=this.state.startLoc;if(spreadStartLoc=this.state.startLoc,exprList.push(this.parseParenItem(this.parseRestBinding(),spreadNodeStartLoc)),!this.checkCommaAfterRest(41))break}else exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors,this.parseParenItem))}const innerEndLoc=this.state.lastTokEndLoc;this.expect(11),this.state.maybeInArrowParameters=oldMaybeInArrowParameters,this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody;let arrowNode=this.startNodeAt(startLoc);return canBeArrow&&this.shouldParseArrow(exprList)&&(arrowNode=this.parseArrow(arrowNode))?(this.checkDestructuringPrivate(refExpressionErrors),this.expressionScope.validateAsPattern(),this.expressionScope.exit(),this.parseArrowExpression(arrowNode,exprList,!1),arrowNode):(this.expressionScope.exit(),exprList.length||this.unexpected(this.state.lastTokStartLoc),optionalCommaStartLoc&&this.unexpected(optionalCommaStartLoc),spreadStartLoc&&this.unexpected(spreadStartLoc),this.checkExpressionErrors(refExpressionErrors,!0),this.toReferencedListDeep(exprList,!0),exprList.length>1?(val=this.startNodeAt(innerStartLoc),val.expressions=exprList,this.finishNode(val,"SequenceExpression"),this.resetEndLocation(val,innerEndLoc)):val=exprList[0],this.wrapParenthesis(startLoc,val))}wrapParenthesis(startLoc,expression){if(!this.options.createParenthesizedExpressions)return this.addExtra(expression,"parenthesized",!0),this.addExtra(expression,"parenStart",startLoc.index),this.takeSurroundingComments(expression,startLoc.index,this.state.lastTokEndLoc.index),expression;const parenExpression=this.startNodeAt(startLoc);return parenExpression.expression=expression,this.finishNode(parenExpression,"ParenthesizedExpression")}shouldParseArrow(params){return!this.canInsertSemicolon()}parseArrow(node){if(this.eat(19))return node}parseParenItem(node,startLoc){return node}parseNewOrNewTarget(){const node=this.startNode();if(this.next(),this.match(16)){const meta=this.createIdentifier(this.startNodeAtNode(node),"new");this.next();const metaProp=this.parseMetaProperty(node,meta,"target");return this.scope.inNonArrowFunction||this.scope.inClass||this.options.allowNewTargetOutsideFunction||this.raise(Errors.UnexpectedNewTarget,{at:metaProp}),metaProp}return this.parseNew(node)}parseNew(node){if(this.parseNewCallee(node),this.eat(10)){const args=this.parseExprList(11);this.toReferencedList(args),node.arguments=args}else node.arguments=[];return this.finishNode(node,"NewExpression")}parseNewCallee(node){node.callee=this.parseNoCallExpr(),"Import"===node.callee.type&&this.raise(Errors.ImportCallNotNewExpression,{at:node.callee})}parseTemplateElement(isTagged){const{start,startLoc,end,value}=this.state,elemStart=start+1,elem=this.startNodeAt(createPositionWithColumnOffset(startLoc,1));null===value&&(isTagged||this.raise(Errors.InvalidEscapeSequenceTemplate,{at:createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos,1)}));const isTail=this.match(24),endOffset=isTail?-1:-2,elemEnd=end+endOffset;elem.value={raw:this.input.slice(elemStart,elemEnd).replace(/\r\n?/g,"\n"),cooked:null===value?null:value.slice(1,endOffset)},elem.tail=isTail,this.next();const finishedNode=this.finishNode(elem,"TemplateElement");return this.resetEndLocation(finishedNode,createPositionWithColumnOffset(this.state.lastTokEndLoc,endOffset)),finishedNode}parseTemplate(isTagged){const node=this.startNode();node.expressions=[];let curElt=this.parseTemplateElement(isTagged);for(node.quasis=[curElt];!curElt.tail;)node.expressions.push(this.parseTemplateSubstitution()),this.readTemplateContinuation(),node.quasis.push(curElt=this.parseTemplateElement(isTagged));return this.finishNode(node,"TemplateLiteral")}parseTemplateSubstitution(){return this.parseExpression()}parseObjectLike(close,isPattern,isRecord,refExpressionErrors){isRecord&&this.expectPlugin("recordAndTuple");const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!1;const propHash=Object.create(null);let first=!0;const node=this.startNode();for(node.properties=[],this.next();!this.match(close);){if(first)first=!1;else if(this.expect(12),this.match(close)){this.addTrailingCommaExtraToNode(node);break}let prop;isPattern?prop=this.parseBindingProperty():(prop=this.parsePropertyDefinition(refExpressionErrors),this.checkProto(prop,isRecord,propHash,refExpressionErrors)),isRecord&&!this.isObjectProperty(prop)&&"SpreadElement"!==prop.type&&this.raise(Errors.InvalidRecordProperty,{at:prop}),prop.shorthand&&this.addExtra(prop,"shorthand",!0),node.properties.push(prop)}this.next(),this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody;let type="ObjectExpression";return isPattern?type="ObjectPattern":isRecord&&(type="RecordExpression"),this.finishNode(node,type)}addTrailingCommaExtraToNode(node){this.addExtra(node,"trailingComma",this.state.lastTokStart),this.addExtra(node,"trailingCommaLoc",this.state.lastTokStartLoc,!1)}maybeAsyncOrAccessorProp(prop){return!prop.computed&&"Identifier"===prop.key.type&&(this.isLiteralPropertyName()||this.match(0)||this.match(55))}parsePropertyDefinition(refExpressionErrors){let decorators=[];if(this.match(26))for(this.hasPlugin("decorators")&&this.raise(Errors.UnsupportedPropertyDecorator,{at:this.state.startLoc});this.match(26);)decorators.push(this.parseDecorator());const prop=this.startNode();let startLoc,isAsync=!1,isAccessor=!1;if(this.match(21))return decorators.length&&this.unexpected(),this.parseSpread();decorators.length&&(prop.decorators=decorators,decorators=[]),prop.method=!1,refExpressionErrors&&(startLoc=this.state.startLoc);let isGenerator=this.eat(55);this.parsePropertyNamePrefixOperator(prop);const containsEsc=this.state.containsEsc,key=this.parsePropertyName(prop,refExpressionErrors);if(!isGenerator&&!containsEsc&&this.maybeAsyncOrAccessorProp(prop)){const keyName=key.name;"async"!==keyName||this.hasPrecedingLineBreak()||(isAsync=!0,this.resetPreviousNodeTrailingComments(key),isGenerator=this.eat(55),this.parsePropertyName(prop)),"get"!==keyName&&"set"!==keyName||(isAccessor=!0,this.resetPreviousNodeTrailingComments(key),prop.kind=keyName,this.match(55)&&(isGenerator=!0,this.raise(Errors.AccessorIsGenerator,{at:this.state.curPosition(),kind:keyName}),this.next()),this.parsePropertyName(prop))}return this.parseObjPropValue(prop,startLoc,isGenerator,isAsync,!1,isAccessor,refExpressionErrors)}getGetterSetterExpectedParamCount(method){return"get"===method.kind?0:1}getObjectOrClassMethodParams(method){return method.params}checkGetterSetterParams(method){var _params;const paramCount=this.getGetterSetterExpectedParamCount(method),params=this.getObjectOrClassMethodParams(method);params.length!==paramCount&&this.raise("get"===method.kind?Errors.BadGetterArity:Errors.BadSetterArity,{at:method}),"set"===method.kind&&"RestElement"===(null==(_params=params[params.length-1])?void 0:_params.type)&&this.raise(Errors.BadSetterRestParameter,{at:method})}parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor){if(isAccessor){const finishedProp=this.parseMethod(prop,isGenerator,!1,!1,!1,"ObjectMethod");return this.checkGetterSetterParams(finishedProp),finishedProp}if(isAsync||isGenerator||this.match(10))return isPattern&&this.unexpected(),prop.kind="method",prop.method=!0,this.parseMethod(prop,isGenerator,isAsync,!1,!1,"ObjectMethod")}parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors){if(prop.shorthand=!1,this.eat(14))return prop.value=isPattern?this.parseMaybeDefault(this.state.startLoc):this.parseMaybeAssignAllowIn(refExpressionErrors),this.finishNode(prop,"ObjectProperty");if(!prop.computed&&"Identifier"===prop.key.type){if(this.checkReservedWord(prop.key.name,prop.key.loc.start,!0,!1),isPattern)prop.value=this.parseMaybeDefault(startLoc,cloneIdentifier(prop.key));else if(this.match(29)){const shorthandAssignLoc=this.state.startLoc;null!=refExpressionErrors?null===refExpressionErrors.shorthandAssignLoc&&(refExpressionErrors.shorthandAssignLoc=shorthandAssignLoc):this.raise(Errors.InvalidCoverInitializedName,{at:shorthandAssignLoc}),prop.value=this.parseMaybeDefault(startLoc,cloneIdentifier(prop.key))}else prop.value=cloneIdentifier(prop.key);return prop.shorthand=!0,this.finishNode(prop,"ObjectProperty")}}parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors){const node=this.parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor)||this.parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors);return node||this.unexpected(),node}parsePropertyName(prop,refExpressionErrors){if(this.eat(0))prop.computed=!0,prop.key=this.parseMaybeAssignAllowIn(),this.expect(3);else{const{type,value}=this.state;let key;if(tokenIsKeywordOrIdentifier(type))key=this.parseIdentifier(!0);else switch(type){case 132:key=this.parseNumericLiteral(value);break;case 131:key=this.parseStringLiteral(value);break;case 133:key=this.parseBigIntLiteral(value);break;case 134:key=this.parseDecimalLiteral(value);break;case 136:{const privateKeyLoc=this.state.startLoc;null!=refExpressionErrors?null===refExpressionErrors.privateKeyLoc&&(refExpressionErrors.privateKeyLoc=privateKeyLoc):this.raise(Errors.UnexpectedPrivateField,{at:privateKeyLoc}),key=this.parsePrivateName();break}default:this.unexpected()}prop.key=key,136!==type&&(prop.computed=!1)}return prop.key}initFunction(node,isAsync){node.id=null,node.generator=!1,node.async=isAsync}parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope=!1){this.initFunction(node,isAsync),node.generator=isGenerator,this.scope.enter(18|(inClassScope?64:0)|(allowDirectSuper?32:0)),this.prodParam.enter(functionFlags(isAsync,node.generator)),this.parseFunctionParams(node,isConstructor);const finishedNode=this.parseFunctionBodyAndFinish(node,type,!0);return this.prodParam.exit(),this.scope.exit(),finishedNode}parseArrayLike(close,canBePattern,isTuple,refExpressionErrors){isTuple&&this.expectPlugin("recordAndTuple");const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!1;const node=this.startNode();return this.next(),node.elements=this.parseExprList(close,!isTuple,refExpressionErrors,node),this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody,this.finishNode(node,isTuple?"TupleExpression":"ArrayExpression")}parseArrowExpression(node,params,isAsync,trailingCommaLoc){this.scope.enter(6);let flags=functionFlags(isAsync,!1);!this.match(5)&&this.prodParam.hasIn&&(flags|=8),this.prodParam.enter(flags),this.initFunction(node,isAsync);const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;return params&&(this.state.maybeInArrowParameters=!0,this.setArrowFunctionParameters(node,params,trailingCommaLoc)),this.state.maybeInArrowParameters=!1,this.parseFunctionBody(node,!0),this.prodParam.exit(),this.scope.exit(),this.state.maybeInArrowParameters=oldMaybeInArrowParameters,this.finishNode(node,"ArrowFunctionExpression")}setArrowFunctionParameters(node,params,trailingCommaLoc){this.toAssignableList(params,trailingCommaLoc,!1),node.params=params}parseFunctionBodyAndFinish(node,type,isMethod=!1){return this.parseFunctionBody(node,!1,isMethod),this.finishNode(node,type)}parseFunctionBody(node,allowExpression,isMethod=!1){const isExpression=allowExpression&&!this.match(5);if(this.expressionScope.enter(newExpressionScope()),isExpression)node.body=this.parseMaybeAssign(),this.checkParams(node,!1,allowExpression,!1);else{const oldStrict=this.state.strict,oldLabels=this.state.labels;this.state.labels=[],this.prodParam.enter(4|this.prodParam.currentFlags()),node.body=this.parseBlock(!0,!1,(hasStrictModeDirective=>{const nonSimple=!this.isSimpleParamList(node.params);hasStrictModeDirective&&nonSimple&&this.raise(Errors.IllegalLanguageModeDirective,{at:"method"!==node.kind&&"constructor"!==node.kind||!node.key?node:node.key.loc.end});const strictModeChanged=!oldStrict&&this.state.strict;this.checkParams(node,!(this.state.strict||allowExpression||isMethod||nonSimple),allowExpression,strictModeChanged),this.state.strict&&node.id&&this.checkIdentifier(node.id,65,strictModeChanged)})),this.prodParam.exit(),this.state.labels=oldLabels}this.expressionScope.exit()}isSimpleParameter(node){return"Identifier"===node.type}isSimpleParamList(params){for(let i=0,len=params.length;i<len;i++)if(!this.isSimpleParameter(params[i]))return!1;return!0}checkParams(node,allowDuplicates,isArrowFunction,strictModeChanged=!0){const checkClashes=!allowDuplicates&&new Set,formalParameters={type:"FormalParameters"};for(const param of node.params)this.checkLVal(param,{in:formalParameters,binding:5,checkClashes,strictModeChanged})}parseExprList(close,allowEmpty,refExpressionErrors,nodeForExtra){const elts=[];let first=!0;for(;!this.eat(close);){if(first)first=!1;else if(this.expect(12),this.match(close)){nodeForExtra&&this.addTrailingCommaExtraToNode(nodeForExtra),this.next();break}elts.push(this.parseExprListItem(allowEmpty,refExpressionErrors))}return elts}parseExprListItem(allowEmpty,refExpressionErrors,allowPlaceholder){let elt;if(this.match(12))allowEmpty||this.raise(Errors.UnexpectedToken,{at:this.state.curPosition(),unexpected:","}),elt=null;else if(this.match(21)){const spreadNodeStartLoc=this.state.startLoc;elt=this.parseParenItem(this.parseSpread(refExpressionErrors),spreadNodeStartLoc)}else if(this.match(17)){this.expectPlugin("partialApplication"),allowPlaceholder||this.raise(Errors.UnexpectedArgumentPlaceholder,{at:this.state.startLoc});const node=this.startNode();this.next(),elt=this.finishNode(node,"ArgumentPlaceholder")}else elt=this.parseMaybeAssignAllowIn(refExpressionErrors,this.parseParenItem);return elt}parseIdentifier(liberal){const node=this.startNode(),name=this.parseIdentifierName(liberal);return this.createIdentifier(node,name)}createIdentifier(node,name){return node.name=name,node.loc.identifierName=name,this.finishNode(node,"Identifier")}parseIdentifierName(liberal){let name;const{startLoc,type}=this.state;tokenIsKeywordOrIdentifier(type)?name=this.state.value:this.unexpected();const tokenIsKeyword=type<=92;return liberal?tokenIsKeyword&&this.replaceToken(130):this.checkReservedWord(name,startLoc,tokenIsKeyword,!1),this.next(),name}checkReservedWord(word,startLoc,checkKeywords,isBinding){if(word.length>10)return;if(!function(word){return reservedWordLikeSet.has(word)}(word))return;if(checkKeywords&&function(word){return keywords.has(word)}(word))return void this.raise(Errors.UnexpectedKeyword,{at:startLoc,keyword:word});if((this.state.strict?isBinding?isStrictBindReservedWord:isStrictReservedWord:isReservedWord)(word,this.inModule))this.raise(Errors.UnexpectedReservedWord,{at:startLoc,reservedWord:word});else if("yield"===word){if(this.prodParam.hasYield)return void this.raise(Errors.YieldBindingIdentifier,{at:startLoc})}else if("await"===word){if(this.prodParam.hasAwait)return void this.raise(Errors.AwaitBindingIdentifier,{at:startLoc});if(this.scope.inStaticBlock)return void this.raise(Errors.AwaitBindingIdentifierInStaticBlock,{at:startLoc});this.expressionScope.recordAsyncArrowParametersError({at:startLoc})}else if("arguments"===word&&this.scope.inClassAndNotInNonArrowFunction)return void this.raise(Errors.ArgumentsInClass,{at:startLoc})}isAwaitAllowed(){return!!this.prodParam.hasAwait||!(!this.options.allowAwaitOutsideFunction||this.scope.inFunction)}parseAwait(startLoc){const node=this.startNodeAt(startLoc);return this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter,{at:node}),this.eat(55)&&this.raise(Errors.ObsoleteAwaitStar,{at:node}),this.scope.inFunction||this.options.allowAwaitOutsideFunction||(this.isAmbiguousAwait()?this.ambiguousScriptDifferentAst=!0:this.sawUnambiguousESM=!0),this.state.soloAwait||(node.argument=this.parseMaybeUnary(null,!0)),this.finishNode(node,"AwaitExpression")}isAmbiguousAwait(){if(this.hasPrecedingLineBreak())return!0;const{type}=this.state;return 53===type||10===type||0===type||tokenIsTemplate(type)||101===type&&!this.state.containsEsc||135===type||56===type||this.hasPlugin("v8intrinsic")&&54===type}parseYield(){const node=this.startNode();this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter,{at:node}),this.next();let delegating=!1,argument=null;if(!this.hasPrecedingLineBreak())switch(delegating=this.eat(55),this.state.type){case 13:case 137:case 8:case 11:case 3:case 9:case 14:case 12:if(!delegating)break;default:argument=this.parseMaybeAssign()}return node.delegate=delegating,node.argument=argument,this.finishNode(node,"YieldExpression")}checkPipelineAtInfixOperator(left,leftStartLoc){this.hasPlugin(["pipelineOperator",{proposal:"smart"}])&&"SequenceExpression"===left.type&&this.raise(Errors.PipelineHeadSequenceExpression,{at:leftStartLoc})}parseSmartPipelineBodyInStyle(childExpr,startLoc){if(this.isSimpleReference(childExpr)){const bodyNode=this.startNodeAt(startLoc);return bodyNode.callee=childExpr,this.finishNode(bodyNode,"PipelineBareFunction")}{const bodyNode=this.startNodeAt(startLoc);return this.checkSmartPipeTopicBodyEarlyErrors(startLoc),bodyNode.expression=childExpr,this.finishNode(bodyNode,"PipelineTopicExpression")}}isSimpleReference(expression){switch(expression.type){case"MemberExpression":return!expression.computed&&this.isSimpleReference(expression.object);case"Identifier":return!0;default:return!1}}checkSmartPipeTopicBodyEarlyErrors(startLoc){if(this.match(19))throw this.raise(Errors.PipelineBodyNoArrow,{at:this.state.startLoc});this.topicReferenceWasUsedInCurrentContext()||this.raise(Errors.PipelineTopicUnused,{at:startLoc})}withTopicBindingContext(callback){const outerContextTopicState=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:1,maxTopicIndex:null};try{return callback()}finally{this.state.topicContext=outerContextTopicState}}withSmartMixTopicForbiddingContext(callback){if(!this.hasPlugin(["pipelineOperator",{proposal:"smart"}]))return callback();{const outerContextTopicState=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null};try{return callback()}finally{this.state.topicContext=outerContextTopicState}}}withSoloAwaitPermittingContext(callback){const outerContextSoloAwaitState=this.state.soloAwait;this.state.soloAwait=!0;try{return callback()}finally{this.state.soloAwait=outerContextSoloAwaitState}}allowInAnd(callback){const flags=this.prodParam.currentFlags();if(8&~flags){this.prodParam.enter(8|flags);try{return callback()}finally{this.prodParam.exit()}}return callback()}disallowInAnd(callback){const flags=this.prodParam.currentFlags();if(8&flags){this.prodParam.enter(-9&flags);try{return callback()}finally{this.prodParam.exit()}}return callback()}registerTopicReference(){this.state.topicContext.maxTopicIndex=0}topicReferenceIsAllowedInCurrentContext(){return this.state.topicContext.maxNumOfResolvableTopics>=1}topicReferenceWasUsedInCurrentContext(){return null!=this.state.topicContext.maxTopicIndex&&this.state.topicContext.maxTopicIndex>=0}parseFSharpPipelineBody(prec){const startLoc=this.state.startLoc;this.state.potentialArrowAt=this.state.start;const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!0;const ret=this.parseExprOp(this.parseMaybeUnaryOrPrivate(),startLoc,prec);return this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody,ret}parseModuleExpression(){this.expectPlugin("moduleBlocks");const node=this.startNode();this.next(),this.match(5)||this.unexpected(null,5);const program=this.startNodeAt(this.state.endLoc);this.next();const revertScopes=this.initializeScopes(!0);this.enterInitialScopes();try{node.body=this.parseProgram(program,8,"module")}finally{revertScopes()}return this.finishNode(node,"ModuleExpression")}parsePropertyNamePrefixOperator(prop){}}const loopLabel={kind:"loop"},switchLabel={kind:"switch"},loneSurrogate=/[\uD800-\uDFFF]/u,keywordRelationalOperator=/in(?:stanceof)?/y;class StatementParser extends ExpressionParser{parseTopLevel(file,program){return file.program=this.parseProgram(program),file.comments=this.state.comments,this.options.tokens&&(file.tokens=function(tokens,input){for(let i=0;i<tokens.length;i++){const token=tokens[i],{type}=token;if("number"==typeof type){if(136===type){const{loc,start,value,end}=token,hashEndPos=start+1,hashEndLoc=createPositionWithColumnOffset(loc.start,1);tokens.splice(i,1,new Token({type:getExportedToken(27),value:"#",start,end:hashEndPos,startLoc:loc.start,endLoc:hashEndLoc}),new Token({type:getExportedToken(130),value,start:hashEndPos,end,startLoc:hashEndLoc,endLoc:loc.end})),i++;continue}if(tokenIsTemplate(type)){const{loc,start,value,end}=token,backquoteEnd=start+1,backquoteEndLoc=createPositionWithColumnOffset(loc.start,1);let startToken,templateValue,templateElementEnd,templateElementEndLoc,endToken;startToken=96===input.charCodeAt(start)?new Token({type:getExportedToken(22),value:"`",start,end:backquoteEnd,startLoc:loc.start,endLoc:backquoteEndLoc}):new Token({type:getExportedToken(8),value:"}",start,end:backquoteEnd,startLoc:loc.start,endLoc:backquoteEndLoc}),24===type?(templateElementEnd=end-1,templateElementEndLoc=createPositionWithColumnOffset(loc.end,-1),templateValue=null===value?null:value.slice(1,-1),endToken=new Token({type:getExportedToken(22),value:"`",start:templateElementEnd,end,startLoc:templateElementEndLoc,endLoc:loc.end})):(templateElementEnd=end-2,templateElementEndLoc=createPositionWithColumnOffset(loc.end,-2),templateValue=null===value?null:value.slice(1,-2),endToken=new Token({type:getExportedToken(23),value:"${",start:templateElementEnd,end,startLoc:templateElementEndLoc,endLoc:loc.end})),tokens.splice(i,1,startToken,new Token({type:getExportedToken(20),value:templateValue,start:backquoteEnd,end:templateElementEnd,startLoc:backquoteEndLoc,endLoc:templateElementEndLoc}),endToken),i+=2;continue}token.type=getExportedToken(type)}}return tokens}(this.tokens,this.input)),this.finishNode(file,"File")}parseProgram(program,end=137,sourceType=this.options.sourceType){if(program.sourceType=sourceType,program.interpreter=this.parseInterpreterDirective(),this.parseBlockBody(program,!0,!0,end),this.inModule&&!this.options.allowUndeclaredExports&&this.scope.undefinedExports.size>0)for(const[localName,at]of Array.from(this.scope.undefinedExports))this.raise(Errors.ModuleExportUndefined,{at,localName});let finishedProgram;return finishedProgram=137===end?this.finishNode(program,"Program"):this.finishNodeAt(program,"Program",createPositionWithColumnOffset(this.state.startLoc,-1)),finishedProgram}stmtToDirective(stmt){const directive=stmt;directive.type="Directive",directive.value=directive.expression,delete directive.expression;const directiveLiteral=directive.value,expressionValue=directiveLiteral.value,raw=this.input.slice(directiveLiteral.start,directiveLiteral.end),val=directiveLiteral.value=raw.slice(1,-1);return this.addExtra(directiveLiteral,"raw",raw),this.addExtra(directiveLiteral,"rawValue",val),this.addExtra(directiveLiteral,"expressionValue",expressionValue),directiveLiteral.type="DirectiveLiteral",directive}parseInterpreterDirective(){if(!this.match(28))return null;const node=this.startNode();return node.value=this.state.value,this.next(),this.finishNode(node,"InterpreterDirective")}isLet(){return!!this.isContextual(99)&&this.hasFollowingBindingAtom()}chStartsBindingIdentifier(ch,pos){if(isIdentifierStart(ch)){if(keywordRelationalOperator.lastIndex=pos,keywordRelationalOperator.test(this.input)){const endCh=this.codePointAtPos(keywordRelationalOperator.lastIndex);if(!isIdentifierChar(endCh)&&92!==endCh)return!1}return!0}return 92===ch}chStartsBindingPattern(ch){return 91===ch||123===ch}hasFollowingBindingAtom(){const next=this.nextTokenStart(),nextCh=this.codePointAtPos(next);return this.chStartsBindingPattern(nextCh)||this.chStartsBindingIdentifier(nextCh,next)}hasInLineFollowingBindingIdentifier(){const next=this.nextTokenInLineStart(),nextCh=this.codePointAtPos(next);return this.chStartsBindingIdentifier(nextCh,next)}startsUsingForOf(){const{type,containsEsc}=this.lookahead();return!(101===type&&!containsEsc)&&(tokenIsIdentifier(type)&&!this.hasFollowingLineBreak()?(this.expectPlugin("explicitResourceManagement"),!0):void 0)}startsAwaitUsing(){let next=this.nextTokenInLineStart();if(this.isUnparsedContextual(next,"using")){next=this.nextTokenInLineStartSince(next+5);const nextCh=this.codePointAtPos(next);if(this.chStartsBindingIdentifier(nextCh,next))return this.expectPlugin("explicitResourceManagement"),!0}return!1}parseModuleItem(){return this.parseStatementLike(15)}parseStatementListItem(){return this.parseStatementLike(6|(!this.options.annexB||this.state.strict?0:8))}parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction=!1){let flags=0;return this.options.annexB&&!this.state.strict&&(flags|=4,allowLabeledFunction&&(flags|=8)),this.parseStatementLike(flags)}parseStatement(){return this.parseStatementLike(0)}parseStatementLike(flags){let decorators=null;return this.match(26)&&(decorators=this.parseDecorators(!0)),this.parseStatementContent(flags,decorators)}parseStatementContent(flags,decorators){const starttype=this.state.type,node=this.startNode(),allowDeclaration=!!(2&flags),allowFunctionDeclaration=!!(4&flags),topLevel=1&flags;switch(starttype){case 60:return this.parseBreakContinueStatement(node,!0);case 63:return this.parseBreakContinueStatement(node,!1);case 64:return this.parseDebuggerStatement(node);case 90:return this.parseDoWhileStatement(node);case 91:return this.parseForStatement(node);case 68:if(46===this.lookaheadCharCode())break;return allowFunctionDeclaration||this.raise(this.state.strict?Errors.StrictFunction:this.options.annexB?Errors.SloppyFunctionAnnexB:Errors.SloppyFunction,{at:this.state.startLoc}),this.parseFunctionStatement(node,!1,!allowDeclaration&&allowFunctionDeclaration);case 80:return allowDeclaration||this.unexpected(),this.parseClass(this.maybeTakeDecorators(decorators,node),!0);case 69:return this.parseIfStatement(node);case 70:return this.parseReturnStatement(node);case 71:return this.parseSwitchStatement(node);case 72:return this.parseThrowStatement(node);case 73:return this.parseTryStatement(node);case 96:if(!this.state.containsEsc&&this.startsAwaitUsing())return this.isAwaitAllowed()?allowDeclaration||this.raise(Errors.UnexpectedLexicalDeclaration,{at:node}):this.raise(Errors.AwaitUsingNotInAsyncContext,{at:node}),this.next(),this.parseVarStatement(node,"await using");break;case 105:if(this.state.containsEsc||!this.hasInLineFollowingBindingIdentifier())break;return this.expectPlugin("explicitResourceManagement"),!this.scope.inModule&&this.scope.inTopLevel?this.raise(Errors.UnexpectedUsingDeclaration,{at:this.state.startLoc}):allowDeclaration||this.raise(Errors.UnexpectedLexicalDeclaration,{at:this.state.startLoc}),this.parseVarStatement(node,"using");case 99:{if(this.state.containsEsc)break;const next=this.nextTokenStart(),nextCh=this.codePointAtPos(next);if(91!==nextCh){if(!allowDeclaration&&this.hasFollowingLineBreak())break;if(!this.chStartsBindingIdentifier(nextCh,next)&&123!==nextCh)break}}case 75:allowDeclaration||this.raise(Errors.UnexpectedLexicalDeclaration,{at:this.state.startLoc});case 74:{const kind=this.state.value;return this.parseVarStatement(node,kind)}case 92:return this.parseWhileStatement(node);case 76:return this.parseWithStatement(node);case 5:return this.parseBlock();case 13:return this.parseEmptyStatement(node);case 83:{const nextTokenCharCode=this.lookaheadCharCode();if(40===nextTokenCharCode||46===nextTokenCharCode)break}case 82:{let result;return this.options.allowImportExportEverywhere||topLevel||this.raise(Errors.UnexpectedImportExport,{at:this.state.startLoc}),this.next(),83===starttype?(result=this.parseImport(node),"ImportDeclaration"!==result.type||result.importKind&&"value"!==result.importKind||(this.sawUnambiguousESM=!0)):(result=this.parseExport(node,decorators),("ExportNamedDeclaration"!==result.type||result.exportKind&&"value"!==result.exportKind)&&("ExportAllDeclaration"!==result.type||result.exportKind&&"value"!==result.exportKind)&&"ExportDefaultDeclaration"!==result.type||(this.sawUnambiguousESM=!0)),this.assertModuleNodeAllowed(result),result}default:if(this.isAsyncFunction())return allowDeclaration||this.raise(Errors.AsyncFunctionInSingleStatementContext,{at:this.state.startLoc}),this.next(),this.parseFunctionStatement(node,!0,!allowDeclaration&&allowFunctionDeclaration)}const maybeName=this.state.value,expr=this.parseExpression();return tokenIsIdentifier(starttype)&&"Identifier"===expr.type&&this.eat(14)?this.parseLabeledStatement(node,maybeName,expr,flags):this.parseExpressionStatement(node,expr,decorators)}assertModuleNodeAllowed(node){this.options.allowImportExportEverywhere||this.inModule||this.raise(Errors.ImportOutsideModule,{at:node})}decoratorsEnabledBeforeExport(){return!!this.hasPlugin("decorators-legacy")||this.hasPlugin("decorators")&&!1!==this.getPluginOption("decorators","decoratorsBeforeExport")}maybeTakeDecorators(maybeDecorators,classNode,exportNode){return maybeDecorators&&(classNode.decorators&&classNode.decorators.length>0?("boolean"!=typeof this.getPluginOption("decorators","decoratorsBeforeExport")&&this.raise(Errors.DecoratorsBeforeAfterExport,{at:classNode.decorators[0]}),classNode.decorators.unshift(...maybeDecorators)):classNode.decorators=maybeDecorators,this.resetStartLocationFromNode(classNode,maybeDecorators[0]),exportNode&&this.resetStartLocationFromNode(exportNode,classNode)),classNode}canHaveLeadingDecorator(){return this.match(80)}parseDecorators(allowExport){const decorators=[];do{decorators.push(this.parseDecorator())}while(this.match(26));if(this.match(82))allowExport||this.unexpected(),this.decoratorsEnabledBeforeExport()||this.raise(Errors.DecoratorExportClass,{at:this.state.startLoc});else if(!this.canHaveLeadingDecorator())throw this.raise(Errors.UnexpectedLeadingDecorator,{at:this.state.startLoc});return decorators}parseDecorator(){this.expectOnePlugin(["decorators","decorators-legacy"]);const node=this.startNode();if(this.next(),this.hasPlugin("decorators")){const startLoc=this.state.startLoc;let expr;if(this.match(10)){const startLoc=this.state.startLoc;this.next(),expr=this.parseExpression(),this.expect(11),expr=this.wrapParenthesis(startLoc,expr);const paramsStartLoc=this.state.startLoc;node.expression=this.parseMaybeDecoratorArguments(expr),!1===this.getPluginOption("decorators","allowCallParenthesized")&&node.expression!==expr&&this.raise(Errors.DecoratorArgumentsOutsideParentheses,{at:paramsStartLoc})}else{for(expr=this.parseIdentifier(!1);this.eat(16);){const node=this.startNodeAt(startLoc);node.object=expr,this.match(136)?(this.classScope.usePrivateName(this.state.value,this.state.startLoc),node.property=this.parsePrivateName()):node.property=this.parseIdentifier(!0),node.computed=!1,expr=this.finishNode(node,"MemberExpression")}node.expression=this.parseMaybeDecoratorArguments(expr)}}else node.expression=this.parseExprSubscripts();return this.finishNode(node,"Decorator")}parseMaybeDecoratorArguments(expr){if(this.eat(10)){const node=this.startNodeAtNode(expr);return node.callee=expr,node.arguments=this.parseCallExpressionArguments(11,!1),this.toReferencedList(node.arguments),this.finishNode(node,"CallExpression")}return expr}parseBreakContinueStatement(node,isBreak){return this.next(),this.isLineTerminator()?node.label=null:(node.label=this.parseIdentifier(),this.semicolon()),this.verifyBreakContinue(node,isBreak),this.finishNode(node,isBreak?"BreakStatement":"ContinueStatement")}verifyBreakContinue(node,isBreak){let i;for(i=0;i<this.state.labels.length;++i){const lab=this.state.labels[i];if(null==node.label||lab.name===node.label.name){if(null!=lab.kind&&(isBreak||"loop"===lab.kind))break;if(node.label&&isBreak)break}}if(i===this.state.labels.length){const type=isBreak?"BreakStatement":"ContinueStatement";this.raise(Errors.IllegalBreakContinue,{at:node,type})}}parseDebuggerStatement(node){return this.next(),this.semicolon(),this.finishNode(node,"DebuggerStatement")}parseHeaderExpression(){this.expect(10);const val=this.parseExpression();return this.expect(11),val}parseDoWhileStatement(node){return this.next(),this.state.labels.push(loopLabel),node.body=this.withSmartMixTopicForbiddingContext((()=>this.parseStatement())),this.state.labels.pop(),this.expect(92),node.test=this.parseHeaderExpression(),this.eat(13),this.finishNode(node,"DoWhileStatement")}parseForStatement(node){this.next(),this.state.labels.push(loopLabel);let awaitAt=null;if(this.isAwaitAllowed()&&this.eatContextual(96)&&(awaitAt=this.state.lastTokStartLoc),this.scope.enter(0),this.expect(10),this.match(13))return null!==awaitAt&&this.unexpected(awaitAt),this.parseFor(node,null);const startsWithLet=this.isContextual(99);{const startsWithAwaitUsing=this.isContextual(96)&&this.startsAwaitUsing(),starsWithUsingDeclaration=startsWithAwaitUsing||this.isContextual(105)&&this.startsUsingForOf(),isLetOrUsing=startsWithLet&&this.hasFollowingBindingAtom()||starsWithUsingDeclaration;if(this.match(74)||this.match(75)||isLetOrUsing){const initNode=this.startNode();let kind;startsWithAwaitUsing?(kind="await using",this.isAwaitAllowed()||this.raise(Errors.AwaitUsingNotInAsyncContext,{at:this.state.startLoc}),this.next()):kind=this.state.value,this.next(),this.parseVar(initNode,!0,kind);const init=this.finishNode(initNode,"VariableDeclaration"),isForIn=this.match(58);return isForIn&&starsWithUsingDeclaration&&this.raise(Errors.ForInUsing,{at:init}),(isForIn||this.isContextual(101))&&1===init.declarations.length?this.parseForIn(node,init,awaitAt):(null!==awaitAt&&this.unexpected(awaitAt),this.parseFor(node,init))}}const startsWithAsync=this.isContextual(95),refExpressionErrors=new ExpressionErrors,init=this.parseExpression(!0,refExpressionErrors),isForOf=this.isContextual(101);if(isForOf&&(startsWithLet&&this.raise(Errors.ForOfLet,{at:init}),null===awaitAt&&startsWithAsync&&"Identifier"===init.type&&this.raise(Errors.ForOfAsync,{at:init})),isForOf||this.match(58)){this.checkDestructuringPrivate(refExpressionErrors),this.toAssignable(init,!0);const type=isForOf?"ForOfStatement":"ForInStatement";return this.checkLVal(init,{in:{type}}),this.parseForIn(node,init,awaitAt)}return this.checkExpressionErrors(refExpressionErrors,!0),null!==awaitAt&&this.unexpected(awaitAt),this.parseFor(node,init)}parseFunctionStatement(node,isAsync,isHangingDeclaration){return this.next(),this.parseFunction(node,1|(isHangingDeclaration?2:0)|(isAsync?8:0))}parseIfStatement(node){return this.next(),node.test=this.parseHeaderExpression(),node.consequent=this.parseStatementOrSloppyAnnexBFunctionDeclaration(),node.alternate=this.eat(66)?this.parseStatementOrSloppyAnnexBFunctionDeclaration():null,this.finishNode(node,"IfStatement")}parseReturnStatement(node){return this.prodParam.hasReturn||this.options.allowReturnOutsideFunction||this.raise(Errors.IllegalReturn,{at:this.state.startLoc}),this.next(),this.isLineTerminator()?node.argument=null:(node.argument=this.parseExpression(),this.semicolon()),this.finishNode(node,"ReturnStatement")}parseSwitchStatement(node){this.next(),node.discriminant=this.parseHeaderExpression();const cases=node.cases=[];let cur;this.expect(5),this.state.labels.push(switchLabel),this.scope.enter(0);for(let sawDefault;!this.match(8);)if(this.match(61)||this.match(65)){const isCase=this.match(61);cur&&this.finishNode(cur,"SwitchCase"),cases.push(cur=this.startNode()),cur.consequent=[],this.next(),isCase?cur.test=this.parseExpression():(sawDefault&&this.raise(Errors.MultipleDefaultsInSwitch,{at:this.state.lastTokStartLoc}),sawDefault=!0,cur.test=null),this.expect(14)}else cur?cur.consequent.push(this.parseStatementListItem()):this.unexpected();return this.scope.exit(),cur&&this.finishNode(cur,"SwitchCase"),this.next(),this.state.labels.pop(),this.finishNode(node,"SwitchStatement")}parseThrowStatement(node){return this.next(),this.hasPrecedingLineBreak()&&this.raise(Errors.NewlineAfterThrow,{at:this.state.lastTokEndLoc}),node.argument=this.parseExpression(),this.semicolon(),this.finishNode(node,"ThrowStatement")}parseCatchClauseParam(){const param=this.parseBindingAtom();return this.scope.enter(this.options.annexB&&"Identifier"===param.type?8:0),this.checkLVal(param,{in:{type:"CatchClause"},binding:9}),param}parseTryStatement(node){if(this.next(),node.block=this.parseBlock(),node.handler=null,this.match(62)){const clause=this.startNode();this.next(),this.match(10)?(this.expect(10),clause.param=this.parseCatchClauseParam(),this.expect(11)):(clause.param=null,this.scope.enter(0)),clause.body=this.withSmartMixTopicForbiddingContext((()=>this.parseBlock(!1,!1))),this.scope.exit(),node.handler=this.finishNode(clause,"CatchClause")}return node.finalizer=this.eat(67)?this.parseBlock():null,node.handler||node.finalizer||this.raise(Errors.NoCatchOrFinally,{at:node}),this.finishNode(node,"TryStatement")}parseVarStatement(node,kind,allowMissingInitializer=!1){return this.next(),this.parseVar(node,!1,kind,allowMissingInitializer),this.semicolon(),this.finishNode(node,"VariableDeclaration")}parseWhileStatement(node){return this.next(),node.test=this.parseHeaderExpression(),this.state.labels.push(loopLabel),node.body=this.withSmartMixTopicForbiddingContext((()=>this.parseStatement())),this.state.labels.pop(),this.finishNode(node,"WhileStatement")}parseWithStatement(node){return this.state.strict&&this.raise(Errors.StrictWith,{at:this.state.startLoc}),this.next(),node.object=this.parseHeaderExpression(),node.body=this.withSmartMixTopicForbiddingContext((()=>this.parseStatement())),this.finishNode(node,"WithStatement")}parseEmptyStatement(node){return this.next(),this.finishNode(node,"EmptyStatement")}parseLabeledStatement(node,maybeName,expr,flags){for(const label of this.state.labels)label.name===maybeName&&this.raise(Errors.LabelRedeclaration,{at:expr,labelName:maybeName});const kind=(token=this.state.type)>=90&&token<=92?"loop":this.match(71)?"switch":null;var token;for(let i=this.state.labels.length-1;i>=0;i--){const label=this.state.labels[i];if(label.statementStart!==node.start)break;label.statementStart=this.state.start,label.kind=kind}return this.state.labels.push({name:maybeName,kind,statementStart:this.state.start}),node.body=8&flags?this.parseStatementOrSloppyAnnexBFunctionDeclaration(!0):this.parseStatement(),this.state.labels.pop(),node.label=expr,this.finishNode(node,"LabeledStatement")}parseExpressionStatement(node,expr,decorators){return node.expression=expr,this.semicolon(),this.finishNode(node,"ExpressionStatement")}parseBlock(allowDirectives=!1,createNewLexicalScope=!0,afterBlockParse){const node=this.startNode();return allowDirectives&&this.state.strictErrors.clear(),this.expect(5),createNewLexicalScope&&this.scope.enter(0),this.parseBlockBody(node,allowDirectives,!1,8,afterBlockParse),createNewLexicalScope&&this.scope.exit(),this.finishNode(node,"BlockStatement")}isValidDirective(stmt){return"ExpressionStatement"===stmt.type&&"StringLiteral"===stmt.expression.type&&!stmt.expression.extra.parenthesized}parseBlockBody(node,allowDirectives,topLevel,end,afterBlockParse){const body=node.body=[],directives=node.directives=[];this.parseBlockOrModuleBlockBody(body,allowDirectives?directives:void 0,topLevel,end,afterBlockParse)}parseBlockOrModuleBlockBody(body,directives,topLevel,end,afterBlockParse){const oldStrict=this.state.strict;let hasStrictModeDirective=!1,parsedNonDirective=!1;for(;!this.match(end);){const stmt=topLevel?this.parseModuleItem():this.parseStatementListItem();if(directives&&!parsedNonDirective){if(this.isValidDirective(stmt)){const directive=this.stmtToDirective(stmt);directives.push(directive),hasStrictModeDirective||"use strict"!==directive.value.value||(hasStrictModeDirective=!0,this.setStrict(!0));continue}parsedNonDirective=!0,this.state.strictErrors.clear()}body.push(stmt)}null==afterBlockParse||afterBlockParse.call(this,hasStrictModeDirective),oldStrict||this.setStrict(!1),this.next()}parseFor(node,init){return node.init=init,this.semicolon(!1),node.test=this.match(13)?null:this.parseExpression(),this.semicolon(!1),node.update=this.match(11)?null:this.parseExpression(),this.expect(11),node.body=this.withSmartMixTopicForbiddingContext((()=>this.parseStatement())),this.scope.exit(),this.state.labels.pop(),this.finishNode(node,"ForStatement")}parseForIn(node,init,awaitAt){const isForIn=this.match(58);return this.next(),isForIn?null!==awaitAt&&this.unexpected(awaitAt):node.await=null!==awaitAt,"VariableDeclaration"!==init.type||null==init.declarations[0].init||isForIn&&this.options.annexB&&!this.state.strict&&"var"===init.kind&&"Identifier"===init.declarations[0].id.type||this.raise(Errors.ForInOfLoopInitializer,{at:init,type:isForIn?"ForInStatement":"ForOfStatement"}),"AssignmentPattern"===init.type&&this.raise(Errors.InvalidLhs,{at:init,ancestor:{type:"ForStatement"}}),node.left=init,node.right=isForIn?this.parseExpression():this.parseMaybeAssignAllowIn(),this.expect(11),node.body=this.withSmartMixTopicForbiddingContext((()=>this.parseStatement())),this.scope.exit(),this.state.labels.pop(),this.finishNode(node,isForIn?"ForInStatement":"ForOfStatement")}parseVar(node,isFor,kind,allowMissingInitializer=!1){const declarations=node.declarations=[];for(node.kind=kind;;){const decl=this.startNode();if(this.parseVarId(decl,kind),decl.init=this.eat(29)?isFor?this.parseMaybeAssignDisallowIn():this.parseMaybeAssignAllowIn():null,null!==decl.init||allowMissingInitializer||("Identifier"===decl.id.type||isFor&&(this.match(58)||this.isContextual(101))?"const"!==kind||this.match(58)||this.isContextual(101)||this.raise(Errors.DeclarationMissingInitializer,{at:this.state.lastTokEndLoc,kind:"const"}):this.raise(Errors.DeclarationMissingInitializer,{at:this.state.lastTokEndLoc,kind:"destructuring"})),declarations.push(this.finishNode(decl,"VariableDeclarator")),!this.eat(12))break}return node}parseVarId(decl,kind){const id=this.parseBindingAtom();this.checkLVal(id,{in:{type:"VariableDeclarator"},binding:"var"===kind?5:8201}),decl.id=id}parseAsyncFunctionExpression(node){return this.parseFunction(node,8)}parseFunction(node,flags=0){const hangingDeclaration=2&flags,isDeclaration=!!(1&flags),requireId=isDeclaration&&!(4&flags),isAsync=!!(8&flags);this.initFunction(node,isAsync),this.match(55)&&(hangingDeclaration&&this.raise(Errors.GeneratorInSingleStatementContext,{at:this.state.startLoc}),this.next(),node.generator=!0),isDeclaration&&(node.id=this.parseFunctionId(requireId));const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;return this.state.maybeInArrowParameters=!1,this.scope.enter(2),this.prodParam.enter(functionFlags(isAsync,node.generator)),isDeclaration||(node.id=this.parseFunctionId()),this.parseFunctionParams(node,!1),this.withSmartMixTopicForbiddingContext((()=>{this.parseFunctionBodyAndFinish(node,isDeclaration?"FunctionDeclaration":"FunctionExpression")})),this.prodParam.exit(),this.scope.exit(),isDeclaration&&!hangingDeclaration&&this.registerFunctionStatementId(node),this.state.maybeInArrowParameters=oldMaybeInArrowParameters,node}parseFunctionId(requireId){return requireId||tokenIsIdentifier(this.state.type)?this.parseIdentifier():null}parseFunctionParams(node,isConstructor){this.expect(10),this.expressionScope.enter(new ExpressionScope(3)),node.params=this.parseBindingList(11,41,2|(isConstructor?4:0)),this.expressionScope.exit()}registerFunctionStatementId(node){node.id&&this.scope.declareName(node.id.name,!this.options.annexB||this.state.strict||node.generator||node.async?this.scope.treatFunctionsAsVar?5:8201:17,node.id.loc.start)}parseClass(node,isStatement,optionalId){this.next();const oldStrict=this.state.strict;return this.state.strict=!0,this.parseClassId(node,isStatement,optionalId),this.parseClassSuper(node),node.body=this.parseClassBody(!!node.superClass,oldStrict),this.finishNode(node,isStatement?"ClassDeclaration":"ClassExpression")}isClassProperty(){return this.match(29)||this.match(13)||this.match(8)}isClassMethod(){return this.match(10)}isNonstaticConstructor(method){return!(method.computed||method.static||"constructor"!==method.key.name&&"constructor"!==method.key.value)}parseClassBody(hadSuperClass,oldStrict){this.classScope.enter();const state={hadConstructor:!1,hadSuperClass};let decorators=[];const classBody=this.startNode();if(classBody.body=[],this.expect(5),this.withSmartMixTopicForbiddingContext((()=>{for(;!this.match(8);){if(this.eat(13)){if(decorators.length>0)throw this.raise(Errors.DecoratorSemicolon,{at:this.state.lastTokEndLoc});continue}if(this.match(26)){decorators.push(this.parseDecorator());continue}const member=this.startNode();decorators.length&&(member.decorators=decorators,this.resetStartLocationFromNode(member,decorators[0]),decorators=[]),this.parseClassMember(classBody,member,state),"constructor"===member.kind&&member.decorators&&member.decorators.length>0&&this.raise(Errors.DecoratorConstructor,{at:member})}})),this.state.strict=oldStrict,this.next(),decorators.length)throw this.raise(Errors.TrailingDecorator,{at:this.state.startLoc});return this.classScope.exit(),this.finishNode(classBody,"ClassBody")}parseClassMemberFromModifier(classBody,member){const key=this.parseIdentifier(!0);if(this.isClassMethod()){const method=member;return method.kind="method",method.computed=!1,method.key=key,method.static=!1,this.pushClassMethod(classBody,method,!1,!1,!1,!1),!0}if(this.isClassProperty()){const prop=member;return prop.computed=!1,prop.key=key,prop.static=!1,classBody.body.push(this.parseClassProperty(prop)),!0}return this.resetPreviousNodeTrailingComments(key),!1}parseClassMember(classBody,member,state){const isStatic=this.isContextual(104);if(isStatic){if(this.parseClassMemberFromModifier(classBody,member))return;if(this.eat(5))return void this.parseClassStaticBlock(classBody,member)}this.parseClassMemberWithIsStatic(classBody,member,state,isStatic)}parseClassMemberWithIsStatic(classBody,member,state,isStatic){const publicMethod=member,privateMethod=member,publicProp=member,privateProp=member,accessorProp=member,method=publicMethod,publicMember=publicMethod;if(member.static=isStatic,this.parsePropertyNamePrefixOperator(member),this.eat(55)){method.kind="method";const isPrivateName=this.match(136);return this.parseClassElementName(method),isPrivateName?void this.pushClassPrivateMethod(classBody,privateMethod,!0,!1):(this.isNonstaticConstructor(publicMethod)&&this.raise(Errors.ConstructorIsGenerator,{at:publicMethod.key}),void this.pushClassMethod(classBody,publicMethod,!0,!1,!1,!1))}const isContextual=tokenIsIdentifier(this.state.type)&&!this.state.containsEsc,isPrivate=this.match(136),key=this.parseClassElementName(member),maybeQuestionTokenStartLoc=this.state.startLoc;if(this.parsePostMemberNameModifiers(publicMember),this.isClassMethod()){if(method.kind="method",isPrivate)return void this.pushClassPrivateMethod(classBody,privateMethod,!1,!1);const isConstructor=this.isNonstaticConstructor(publicMethod);let allowsDirectSuper=!1;isConstructor&&(publicMethod.kind="constructor",state.hadConstructor&&!this.hasPlugin("typescript")&&this.raise(Errors.DuplicateConstructor,{at:key}),isConstructor&&this.hasPlugin("typescript")&&member.override&&this.raise(Errors.OverrideOnConstructor,{at:key}),state.hadConstructor=!0,allowsDirectSuper=state.hadSuperClass),this.pushClassMethod(classBody,publicMethod,!1,!1,isConstructor,allowsDirectSuper)}else if(this.isClassProperty())isPrivate?this.pushClassPrivateProperty(classBody,privateProp):this.pushClassProperty(classBody,publicProp);else if(isContextual&&"async"===key.name&&!this.isLineTerminator()){this.resetPreviousNodeTrailingComments(key);const isGenerator=this.eat(55);publicMember.optional&&this.unexpected(maybeQuestionTokenStartLoc),method.kind="method";const isPrivate=this.match(136);this.parseClassElementName(method),this.parsePostMemberNameModifiers(publicMember),isPrivate?this.pushClassPrivateMethod(classBody,privateMethod,isGenerator,!0):(this.isNonstaticConstructor(publicMethod)&&this.raise(Errors.ConstructorIsAsync,{at:publicMethod.key}),this.pushClassMethod(classBody,publicMethod,isGenerator,!0,!1,!1))}else if(!isContextual||"get"!==key.name&&"set"!==key.name||this.match(55)&&this.isLineTerminator())if(isContextual&&"accessor"===key.name&&!this.isLineTerminator()){this.expectPlugin("decoratorAutoAccessors"),this.resetPreviousNodeTrailingComments(key);const isPrivate=this.match(136);this.parseClassElementName(publicProp),this.pushClassAccessorProperty(classBody,accessorProp,isPrivate)}else this.isLineTerminator()?isPrivate?this.pushClassPrivateProperty(classBody,privateProp):this.pushClassProperty(classBody,publicProp):this.unexpected();else{this.resetPreviousNodeTrailingComments(key),method.kind=key.name;const isPrivate=this.match(136);this.parseClassElementName(publicMethod),isPrivate?this.pushClassPrivateMethod(classBody,privateMethod,!1,!1):(this.isNonstaticConstructor(publicMethod)&&this.raise(Errors.ConstructorIsAccessor,{at:publicMethod.key}),this.pushClassMethod(classBody,publicMethod,!1,!1,!1,!1)),this.checkGetterSetterParams(publicMethod)}}parseClassElementName(member){const{type,value}=this.state;if(130!==type&&131!==type||!member.static||"prototype"!==value||this.raise(Errors.StaticPrototype,{at:this.state.startLoc}),136===type){"constructor"===value&&this.raise(Errors.ConstructorClassPrivateField,{at:this.state.startLoc});const key=this.parsePrivateName();return member.key=key,key}return this.parsePropertyName(member)}parseClassStaticBlock(classBody,member){var _member$decorators;this.scope.enter(208);const oldLabels=this.state.labels;this.state.labels=[],this.prodParam.enter(0);const body=member.body=[];this.parseBlockOrModuleBlockBody(body,void 0,!1,8),this.prodParam.exit(),this.scope.exit(),this.state.labels=oldLabels,classBody.body.push(this.finishNode(member,"StaticBlock")),null!=(_member$decorators=member.decorators)&&_member$decorators.length&&this.raise(Errors.DecoratorStaticBlock,{at:member})}pushClassProperty(classBody,prop){prop.computed||"constructor"!==prop.key.name&&"constructor"!==prop.key.value||this.raise(Errors.ConstructorClassField,{at:prop.key}),classBody.body.push(this.parseClassProperty(prop))}pushClassPrivateProperty(classBody,prop){const node=this.parseClassPrivateProperty(prop);classBody.body.push(node),this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),0,node.key.loc.start)}pushClassAccessorProperty(classBody,prop,isPrivate){if(!isPrivate&&!prop.computed){const key=prop.key;"constructor"!==key.name&&"constructor"!==key.value||this.raise(Errors.ConstructorClassField,{at:key})}const node=this.parseClassAccessorProperty(prop);classBody.body.push(node),isPrivate&&this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),0,node.key.loc.start)}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){classBody.body.push(this.parseMethod(method,isGenerator,isAsync,isConstructor,allowsDirectSuper,"ClassMethod",!0))}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){const node=this.parseMethod(method,isGenerator,isAsync,!1,!1,"ClassPrivateMethod",!0);classBody.body.push(node);const kind="get"===node.kind?node.static?6:2:"set"===node.kind?node.static?5:1:0;this.declareClassPrivateMethodInScope(node,kind)}declareClassPrivateMethodInScope(node,kind){this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),kind,node.key.loc.start)}parsePostMemberNameModifiers(methodOrProp){}parseClassPrivateProperty(node){return this.parseInitializer(node),this.semicolon(),this.finishNode(node,"ClassPrivateProperty")}parseClassProperty(node){return this.parseInitializer(node),this.semicolon(),this.finishNode(node,"ClassProperty")}parseClassAccessorProperty(node){return this.parseInitializer(node),this.semicolon(),this.finishNode(node,"ClassAccessorProperty")}parseInitializer(node){this.scope.enter(80),this.expressionScope.enter(newExpressionScope()),this.prodParam.enter(0),node.value=this.eat(29)?this.parseMaybeAssignAllowIn():null,this.expressionScope.exit(),this.prodParam.exit(),this.scope.exit()}parseClassId(node,isStatement,optionalId,bindingType=8331){if(tokenIsIdentifier(this.state.type))node.id=this.parseIdentifier(),isStatement&&this.declareNameFromIdentifier(node.id,bindingType);else{if(!optionalId&&isStatement)throw this.raise(Errors.MissingClassName,{at:this.state.startLoc});node.id=null}}parseClassSuper(node){node.superClass=this.eat(81)?this.parseExprSubscripts():null}parseExport(node,decorators){const maybeDefaultIdentifier=this.parseMaybeImportPhase(node,!0),hasDefault=this.maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier),parseAfterDefault=!hasDefault||this.eat(12),hasStar=parseAfterDefault&&this.eatExportStar(node),hasNamespace=hasStar&&this.maybeParseExportNamespaceSpecifier(node),parseAfterNamespace=parseAfterDefault&&(!hasNamespace||this.eat(12)),isFromRequired=hasDefault||hasStar;if(hasStar&&!hasNamespace){if(hasDefault&&this.unexpected(),decorators)throw this.raise(Errors.UnsupportedDecoratorExport,{at:node});return this.parseExportFrom(node,!0),this.finishNode(node,"ExportAllDeclaration")}const hasSpecifiers=this.maybeParseExportNamedSpecifiers(node);let hasDeclaration;if(hasDefault&&parseAfterDefault&&!hasStar&&!hasSpecifiers&&this.unexpected(null,5),hasNamespace&&parseAfterNamespace&&this.unexpected(null,97),isFromRequired||hasSpecifiers){if(hasDeclaration=!1,decorators)throw this.raise(Errors.UnsupportedDecoratorExport,{at:node});this.parseExportFrom(node,isFromRequired)}else hasDeclaration=this.maybeParseExportDeclaration(node);if(isFromRequired||hasSpecifiers||hasDeclaration){var _node2$declaration;const node2=node;if(this.checkExport(node2,!0,!1,!!node2.source),"ClassDeclaration"===(null==(_node2$declaration=node2.declaration)?void 0:_node2$declaration.type))this.maybeTakeDecorators(decorators,node2.declaration,node2);else if(decorators)throw this.raise(Errors.UnsupportedDecoratorExport,{at:node});return this.finishNode(node2,"ExportNamedDeclaration")}if(this.eat(65)){const node2=node,decl=this.parseExportDefaultExpression();if(node2.declaration=decl,"ClassDeclaration"===decl.type)this.maybeTakeDecorators(decorators,decl,node2);else if(decorators)throw this.raise(Errors.UnsupportedDecoratorExport,{at:node});return this.checkExport(node2,!0,!0),this.finishNode(node2,"ExportDefaultDeclaration")}this.unexpected(null,5)}eatExportStar(node){return this.eat(55)}maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier){if(maybeDefaultIdentifier||this.isExportDefaultSpecifier()){this.expectPlugin("exportDefaultFrom",null==maybeDefaultIdentifier?void 0:maybeDefaultIdentifier.loc.start);const id=maybeDefaultIdentifier||this.parseIdentifier(!0),specifier=this.startNodeAtNode(id);return specifier.exported=id,node.specifiers=[this.finishNode(specifier,"ExportDefaultSpecifier")],!0}return!1}maybeParseExportNamespaceSpecifier(node){if(this.isContextual(93)){node.specifiers||(node.specifiers=[]);const specifier=this.startNodeAt(this.state.lastTokStartLoc);return this.next(),specifier.exported=this.parseModuleExportName(),node.specifiers.push(this.finishNode(specifier,"ExportNamespaceSpecifier")),!0}return!1}maybeParseExportNamedSpecifiers(node){if(this.match(5)){node.specifiers||(node.specifiers=[]);const isTypeExport="type"===node.exportKind;return node.specifiers.push(...this.parseExportSpecifiers(isTypeExport)),node.source=null,node.declaration=null,this.hasPlugin("importAssertions")&&(node.assertions=[]),!0}return!1}maybeParseExportDeclaration(node){return!!this.shouldParseExportDeclaration()&&(node.specifiers=[],node.source=null,this.hasPlugin("importAssertions")&&(node.assertions=[]),node.declaration=this.parseExportDeclaration(node),!0)}isAsyncFunction(){if(!this.isContextual(95))return!1;const next=this.nextTokenInLineStart();return this.isUnparsedContextual(next,"function")}parseExportDefaultExpression(){const expr=this.startNode();if(this.match(68))return this.next(),this.parseFunction(expr,5);if(this.isAsyncFunction())return this.next(),this.next(),this.parseFunction(expr,13);if(this.match(80))return this.parseClass(expr,!0,!0);if(this.match(26))return this.hasPlugin("decorators")&&!0===this.getPluginOption("decorators","decoratorsBeforeExport")&&this.raise(Errors.DecoratorBeforeExport,{at:this.state.startLoc}),this.parseClass(this.maybeTakeDecorators(this.parseDecorators(!1),this.startNode()),!0,!0);if(this.match(75)||this.match(74)||this.isLet())throw this.raise(Errors.UnsupportedDefaultExport,{at:this.state.startLoc});const res=this.parseMaybeAssignAllowIn();return this.semicolon(),res}parseExportDeclaration(node){if(this.match(80)){return this.parseClass(this.startNode(),!0,!1)}return this.parseStatementListItem()}isExportDefaultSpecifier(){const{type}=this.state;if(tokenIsIdentifier(type)){if(95===type&&!this.state.containsEsc||99===type)return!1;if((128===type||127===type)&&!this.state.containsEsc){const{type:nextType}=this.lookahead();if(tokenIsIdentifier(nextType)&&97!==nextType||5===nextType)return this.expectOnePlugin(["flow","typescript"]),!1}}else if(!this.match(65))return!1;const next=this.nextTokenStart(),hasFrom=this.isUnparsedContextual(next,"from");if(44===this.input.charCodeAt(next)||tokenIsIdentifier(this.state.type)&&hasFrom)return!0;if(this.match(65)&&hasFrom){const nextAfterFrom=this.input.charCodeAt(this.nextTokenStartSince(next+4));return 34===nextAfterFrom||39===nextAfterFrom}return!1}parseExportFrom(node,expect){this.eatContextual(97)?(node.source=this.parseImportSource(),this.checkExport(node),this.maybeParseImportAttributes(node),this.checkJSONModuleImport(node)):expect&&this.unexpected(),this.semicolon()}shouldParseExportDeclaration(){const{type}=this.state;return 26===type&&(this.expectOnePlugin(["decorators","decorators-legacy"]),this.hasPlugin("decorators"))?(!0===this.getPluginOption("decorators","decoratorsBeforeExport")&&this.raise(Errors.DecoratorBeforeExport,{at:this.state.startLoc}),!0):74===type||75===type||68===type||80===type||this.isLet()||this.isAsyncFunction()}checkExport(node,checkNames,isDefault,isFrom){if(checkNames)if(isDefault){if(this.checkDuplicateExports(node,"default"),this.hasPlugin("exportDefaultFrom")){var _declaration$extra;const declaration=node.declaration;"Identifier"!==declaration.type||"from"!==declaration.name||declaration.end-declaration.start!=4||null!=(_declaration$extra=declaration.extra)&&_declaration$extra.parenthesized||this.raise(Errors.ExportDefaultFromAsIdentifier,{at:declaration})}}else if(node.specifiers&&node.specifiers.length)for(const specifier of node.specifiers){const{exported}=specifier,exportName="Identifier"===exported.type?exported.name:exported.value;if(this.checkDuplicateExports(specifier,exportName),!isFrom&&specifier.local){const{local}=specifier;"Identifier"!==local.type?this.raise(Errors.ExportBindingIsString,{at:specifier,localName:local.value,exportName}):(this.checkReservedWord(local.name,local.loc.start,!0,!1),this.scope.checkLocalExport(local))}}else if(node.declaration)if("FunctionDeclaration"===node.declaration.type||"ClassDeclaration"===node.declaration.type){const id=node.declaration.id;if(!id)throw new Error("Assertion failure");this.checkDuplicateExports(node,id.name)}else if("VariableDeclaration"===node.declaration.type)for(const declaration of node.declaration.declarations)this.checkDeclaration(declaration.id)}checkDeclaration(node){if("Identifier"===node.type)this.checkDuplicateExports(node,node.name);else if("ObjectPattern"===node.type)for(const prop of node.properties)this.checkDeclaration(prop);else if("ArrayPattern"===node.type)for(const elem of node.elements)elem&&this.checkDeclaration(elem);else"ObjectProperty"===node.type?this.checkDeclaration(node.value):"RestElement"===node.type?this.checkDeclaration(node.argument):"AssignmentPattern"===node.type&&this.checkDeclaration(node.left)}checkDuplicateExports(node,exportName){this.exportedIdentifiers.has(exportName)&&("default"===exportName?this.raise(Errors.DuplicateDefaultExport,{at:node}):this.raise(Errors.DuplicateExport,{at:node,exportName})),this.exportedIdentifiers.add(exportName)}parseExportSpecifiers(isInTypeExport){const nodes=[];let first=!0;for(this.expect(5);!this.eat(8);){if(first)first=!1;else if(this.expect(12),this.eat(8))break;const isMaybeTypeOnly=this.isContextual(128),isString=this.match(131),node=this.startNode();node.local=this.parseModuleExportName(),nodes.push(this.parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly))}return nodes}parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly){return this.eatContextual(93)?node.exported=this.parseModuleExportName():isString?node.exported=cloneStringLiteral(node.local):node.exported||(node.exported=cloneIdentifier(node.local)),this.finishNode(node,"ExportSpecifier")}parseModuleExportName(){if(this.match(131)){const result=this.parseStringLiteral(this.state.value),surrogate=result.value.match(loneSurrogate);return surrogate&&this.raise(Errors.ModuleExportNameHasLoneSurrogate,{at:result,surrogateCharCode:surrogate[0].charCodeAt(0)}),result}return this.parseIdentifier(!0)}isJSONModuleImport(node){return null!=node.assertions&&node.assertions.some((({key,value})=>"json"===value.value&&("Identifier"===key.type?"type"===key.name:"type"===key.value)))}checkImportReflection(node){var _node$assertions;node.module&&(1===node.specifiers.length&&"ImportDefaultSpecifier"===node.specifiers[0].type||this.raise(Errors.ImportReflectionNotBinding,{at:node.specifiers[0].loc.start}),(null==(_node$assertions=node.assertions)?void 0:_node$assertions.length)>0&&this.raise(Errors.ImportReflectionHasAssertion,{at:node.specifiers[0].loc.start}))}checkJSONModuleImport(node){if(this.isJSONModuleImport(node)&&"ExportAllDeclaration"!==node.type){const{specifiers}=node;if(null!=specifiers){const nonDefaultNamedSpecifier=specifiers.find((specifier=>{let imported;if("ExportSpecifier"===specifier.type?imported=specifier.local:"ImportSpecifier"===specifier.type&&(imported=specifier.imported),void 0!==imported)return"Identifier"===imported.type?"default"!==imported.name:"default"!==imported.value}));void 0!==nonDefaultNamedSpecifier&&this.raise(Errors.ImportJSONBindingNotDefault,{at:nonDefaultNamedSpecifier.loc.start})}}}isPotentialImportPhase(isExport){return!isExport&&this.isContextual(125)}applyImportPhase(node,isExport,phase,loc){isExport||("module"===phase?(this.expectPlugin("importReflection",loc),node.module=!0):this.hasPlugin("importReflection")&&(node.module=!1))}parseMaybeImportPhase(node,isExport){if(!this.isPotentialImportPhase(isExport))return this.applyImportPhase(node,isExport,null),null;const phaseIdentifier=this.parseIdentifier(!0),{type}=this.state;return(tokenIsKeywordOrIdentifier(type)?97!==type||102===this.lookaheadCharCode():12!==type)?(this.resetPreviousIdentifierLeadingComments(phaseIdentifier),this.applyImportPhase(node,isExport,phaseIdentifier.name,phaseIdentifier.loc.start),null):(this.applyImportPhase(node,isExport,null),phaseIdentifier)}isPrecedingIdImportPhase(phase){const{type}=this.state;return tokenIsIdentifier(type)?97!==type||102===this.lookaheadCharCode():12!==type}parseImport(node){return this.match(131)?this.parseImportSourceAndAttributes(node):this.parseImportSpecifiersAndAfter(node,this.parseMaybeImportPhase(node,!1))}parseImportSpecifiersAndAfter(node,maybeDefaultIdentifier){node.specifiers=[];const parseNext=!this.maybeParseDefaultImportSpecifier(node,maybeDefaultIdentifier)||this.eat(12),hasStar=parseNext&&this.maybeParseStarImportSpecifier(node);return parseNext&&!hasStar&&this.parseNamedImportSpecifiers(node),this.expectContextual(97),this.parseImportSourceAndAttributes(node)}parseImportSourceAndAttributes(node){return null!=node.specifiers||(node.specifiers=[]),node.source=this.parseImportSource(),this.maybeParseImportAttributes(node),this.checkImportReflection(node),this.checkJSONModuleImport(node),this.semicolon(),this.finishNode(node,"ImportDeclaration")}parseImportSource(){return this.match(131)||this.unexpected(),this.parseExprAtom()}parseImportSpecifierLocal(node,specifier,type){specifier.local=this.parseIdentifier(),node.specifiers.push(this.finishImportSpecifier(specifier,type))}finishImportSpecifier(specifier,type,bindingType=8201){return this.checkLVal(specifier.local,{in:{type},binding:bindingType}),this.finishNode(specifier,type)}parseImportAttributes(){this.expect(5);const attrs=[],attrNames=new Set;do{if(this.match(8))break;const node=this.startNode(),keyName=this.state.value;if(attrNames.has(keyName)&&this.raise(Errors.ModuleAttributesWithDuplicateKeys,{at:this.state.startLoc,key:keyName}),attrNames.add(keyName),this.match(131)?node.key=this.parseStringLiteral(keyName):node.key=this.parseIdentifier(!0),this.expect(14),!this.match(131))throw this.raise(Errors.ModuleAttributeInvalidValue,{at:this.state.startLoc});node.value=this.parseStringLiteral(this.state.value),attrs.push(this.finishNode(node,"ImportAttribute"))}while(this.eat(12));return this.expect(8),attrs}parseModuleAttributes(){const attrs=[],attributes=new Set;do{const node=this.startNode();if(node.key=this.parseIdentifier(!0),"type"!==node.key.name&&this.raise(Errors.ModuleAttributeDifferentFromType,{at:node.key}),attributes.has(node.key.name)&&this.raise(Errors.ModuleAttributesWithDuplicateKeys,{at:node.key,key:node.key.name}),attributes.add(node.key.name),this.expect(14),!this.match(131))throw this.raise(Errors.ModuleAttributeInvalidValue,{at:this.state.startLoc});node.value=this.parseStringLiteral(this.state.value),attrs.push(this.finishNode(node,"ImportAttribute"))}while(this.eat(12));return attrs}maybeParseImportAttributes(node){let attributes,useWith=!1;if(this.match(76)){if(this.hasPrecedingLineBreak()&&40===this.lookaheadCharCode())return;this.next(),this.hasPlugin("moduleAttributes")?attributes=this.parseModuleAttributes():(this.expectImportAttributesPlugin(),attributes=this.parseImportAttributes()),useWith=!0}else if(this.isContextual(94)&&!this.hasPrecedingLineBreak())this.hasPlugin("importAttributes")?(!0!==this.getPluginOption("importAttributes","deprecatedAssertSyntax")&&this.raise(Errors.ImportAttributesUseAssert,{at:this.state.startLoc}),this.addExtra(node,"deprecatedAssertSyntax",!0)):this.expectOnePlugin(["importAttributes","importAssertions"]),this.next(),attributes=this.parseImportAttributes();else if(this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions"))attributes=[];else{if(!this.hasPlugin("moduleAttributes"))return;attributes=[]}!useWith&&this.hasPlugin("importAssertions")?node.assertions=attributes:node.attributes=attributes}maybeParseDefaultImportSpecifier(node,maybeDefaultIdentifier){if(maybeDefaultIdentifier){const specifier=this.startNodeAtNode(maybeDefaultIdentifier);return specifier.local=maybeDefaultIdentifier,node.specifiers.push(this.finishImportSpecifier(specifier,"ImportDefaultSpecifier")),!0}return!!tokenIsKeywordOrIdentifier(this.state.type)&&(this.parseImportSpecifierLocal(node,this.startNode(),"ImportDefaultSpecifier"),!0)}maybeParseStarImportSpecifier(node){if(this.match(55)){const specifier=this.startNode();return this.next(),this.expectContextual(93),this.parseImportSpecifierLocal(node,specifier,"ImportNamespaceSpecifier"),!0}return!1}parseNamedImportSpecifiers(node){let first=!0;for(this.expect(5);!this.eat(8);){if(first)first=!1;else{if(this.eat(14))throw this.raise(Errors.DestructureNamedImport,{at:this.state.startLoc});if(this.expect(12),this.eat(8))break}const specifier=this.startNode(),importedIsString=this.match(131),isMaybeTypeOnly=this.isContextual(128);specifier.imported=this.parseModuleExportName();const importSpecifier=this.parseImportSpecifier(specifier,importedIsString,"type"===node.importKind||"typeof"===node.importKind,isMaybeTypeOnly,void 0);node.specifiers.push(importSpecifier)}}parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,bindingType){if(this.eatContextual(93))specifier.local=this.parseIdentifier();else{const{imported}=specifier;if(importedIsString)throw this.raise(Errors.ImportBindingIsString,{at:specifier,importName:imported.value});this.checkReservedWord(imported.name,specifier.loc.start,!0,!0),specifier.local||(specifier.local=cloneIdentifier(imported))}return this.finishImportSpecifier(specifier,"ImportSpecifier",bindingType)}isThisParam(param){return"Identifier"===param.type&&"this"===param.name}}class Parser extends StatementParser{constructor(options,input){super(options=function(opts){if(opts&&null!=opts.annexB&&!1!==opts.annexB)throw new Error("The `annexB` option can only be set to `false`.");const options={};for(const key of Object.keys(defaultOptions))options[key]=opts&&null!=opts[key]?opts[key]:defaultOptions[key];return options}(options),input),this.options=options,this.initializeScopes(),this.plugins=function(plugins){const pluginMap=new Map;for(const plugin of plugins){const[name,options]=Array.isArray(plugin)?plugin:[plugin,{}];pluginMap.has(name)||pluginMap.set(name,options||{})}return pluginMap}(this.options.plugins),this.filename=options.sourceFilename}getScopeHandler(){return ScopeHandler}parse(){this.enterInitialScopes();const file=this.startNode(),program=this.startNode();return this.nextToken(),file.errors=null,this.parseTopLevel(file,program),file.errors=this.state.errors,file}}const tokTypes=function(internalTokenTypes){const tokenTypes={};for(const typeName of Object.keys(internalTokenTypes))tokenTypes[typeName]=getExportedToken(internalTokenTypes[typeName]);return tokenTypes}(tt);function getParser(options,input){let cls=Parser;return null!=options&&options.plugins&&(!function(plugins){if(hasPlugin(plugins,"decorators")){if(hasPlugin(plugins,"decorators-legacy"))throw new Error("Cannot use the decorators and decorators-legacy plugin together");const decoratorsBeforeExport=getPluginOption(plugins,"decorators","decoratorsBeforeExport");if(null!=decoratorsBeforeExport&&"boolean"!=typeof decoratorsBeforeExport)throw new Error("'decoratorsBeforeExport' must be a boolean, if specified.");const allowCallParenthesized=getPluginOption(plugins,"decorators","allowCallParenthesized");if(null!=allowCallParenthesized&&"boolean"!=typeof allowCallParenthesized)throw new Error("'allowCallParenthesized' must be a boolean.")}if(hasPlugin(plugins,"flow")&&hasPlugin(plugins,"typescript"))throw new Error("Cannot combine flow and typescript plugins.");if(hasPlugin(plugins,"placeholders")&&hasPlugin(plugins,"v8intrinsic"))throw new Error("Cannot combine placeholders and v8intrinsic plugins.");if(hasPlugin(plugins,"pipelineOperator")){const proposal=getPluginOption(plugins,"pipelineOperator","proposal");if(!PIPELINE_PROPOSALS.includes(proposal)){const proposalList=PIPELINE_PROPOSALS.map((p=>`"${p}"`)).join(", ");throw new Error(`"pipelineOperator" requires "proposal" option whose value must be one of: ${proposalList}.`)}const tupleSyntaxIsHash=hasPlugin(plugins,["recordAndTuple",{syntaxType:"hash"}]);if("hack"===proposal){if(hasPlugin(plugins,"placeholders"))throw new Error("Cannot combine placeholders plugin and Hack-style pipes.");if(hasPlugin(plugins,"v8intrinsic"))throw new Error("Cannot combine v8intrinsic plugin and Hack-style pipes.");const topicToken=getPluginOption(plugins,"pipelineOperator","topicToken");if(!TOPIC_TOKENS.includes(topicToken)){const tokenList=TOPIC_TOKENS.map((t=>`"${t}"`)).join(", ");throw new Error(`"pipelineOperator" in "proposal": "hack" mode also requires a "topicToken" option whose value must be one of: ${tokenList}.`)}if("#"===topicToken&&tupleSyntaxIsHash)throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "hack", topicToken: "#" }]` and `["recordAndtuple", { syntaxType: "hash"}]`.')}else if("smart"===proposal&&tupleSyntaxIsHash)throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "smart" }]` and `["recordAndtuple", { syntaxType: "hash"}]`.')}if(hasPlugin(plugins,"moduleAttributes")){if(hasPlugin(plugins,"importAssertions")||hasPlugin(plugins,"importAttributes"))throw new Error("Cannot combine importAssertions, importAttributes and moduleAttributes plugins.");if("may-2020"!==getPluginOption(plugins,"moduleAttributes","version"))throw new Error("The 'moduleAttributes' plugin requires a 'version' option, representing the last proposal update. Currently, the only supported value is 'may-2020'.")}if(hasPlugin(plugins,"importAssertions")&&hasPlugin(plugins,"importAttributes"))throw new Error("Cannot combine importAssertions and importAttributes plugins.");if(hasPlugin(plugins,"recordAndTuple")&&null!=getPluginOption(plugins,"recordAndTuple","syntaxType")&&!RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins,"recordAndTuple","syntaxType")))throw new Error("The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: "+RECORD_AND_TUPLE_SYNTAX_TYPES.map((p=>`'${p}'`)).join(", "));if(hasPlugin(plugins,"asyncDoExpressions")&&!hasPlugin(plugins,"doExpressions")){const error=new Error("'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.");throw error.missingPlugins="doExpressions",error}}(options.plugins),cls=function(pluginsFromOptions){const pluginList=mixinPluginNames.filter((name=>hasPlugin(pluginsFromOptions,name))),key=pluginList.join("/");let cls=parserClassCache[key];if(!cls){cls=Parser;for(const plugin of pluginList)cls=mixinPlugins[plugin](cls);parserClassCache[key]=cls}return cls}(options.plugins)),new cls(options,input)}const parserClassCache={};exports.parse=function(input,options){var _options;if("unambiguous"!==(null==(_options=options)?void 0:_options.sourceType))return getParser(options,input).parse();options=Object.assign({},options);try{options.sourceType="module";const parser=getParser(options,input),ast=parser.parse();if(parser.sawUnambiguousESM)return ast;if(parser.ambiguousScriptDifferentAst)try{return options.sourceType="script",getParser(options,input).parse()}catch(_unused){}else ast.program.sourceType="script";return ast}catch(moduleError){try{return options.sourceType="script",getParser(options,input).parse()}catch(_unused2){}throw moduleError}},exports.parseExpression=function(input,options){const parser=getParser(options,input);return parser.options.strictMode&&(parser.state.strict=!0),parser.getExpression()},exports.tokTypes=tokTypes},"./node_modules/.pnpm/@babel+plugin-proposal-decorators@7.22.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-decorators/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1020305__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperPluginUtils=__nested_webpack_require_1020305__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),_pluginSyntaxDecorators=__nested_webpack_require_1020305__("./node_modules/.pnpm/@babel+plugin-syntax-decorators@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-decorators/lib/index.js"),_helperCreateClassFeaturesPlugin=__nested_webpack_require_1020305__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/index.js"),_transformerLegacy=__nested_webpack_require_1020305__("./node_modules/.pnpm/@babel+plugin-proposal-decorators@7.22.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-decorators/lib/transformer-legacy.js"),_transformer=__nested_webpack_require_1020305__("./node_modules/.pnpm/@babel+plugin-proposal-decorators@7.22.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-decorators/lib/transformer-2023-05.js"),_default=(0,_helperPluginUtils.declare)(((api,options)=>{api.assertVersion(7);var{legacy}=options;const{version}=options;return legacy||"legacy"===version?{name:"proposal-decorators",inherits:_pluginSyntaxDecorators.default,visitor:_transformerLegacy.default}:"2021-12"===version||"2022-03"===version||"2023-01"===version||"2023-05"===version?(0,_transformer.default)(api,options,version):(api.assertVersion("^7.0.2"),(0,_helperCreateClassFeaturesPlugin.createClassFeaturePlugin)({name:"proposal-decorators",api,feature:_helperCreateClassFeaturesPlugin.FEATURES.decorators,inherits:_pluginSyntaxDecorators.default}))}));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-proposal-decorators@7.22.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-decorators/lib/transformer-2023-05.js":(__unused_webpack_module,exports,__nested_webpack_require_1022195__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function({assertVersion,assumption},{loose},version){var _assumption;assertVersion("2023-05"===version||"2023-01"===version?"^7.21.0":"2021-12"===version?"^7.16.0":"^7.19.0");const VISITED=new WeakSet,constantSuper=null!=(_assumption=assumption("constantSuper"))?_assumption:loose;return{name:"proposal-decorators",inherits:_pluginSyntaxDecorators.default,visitor:{"ExportNamedDeclaration|ExportDefaultDeclaration"(path){var _declaration$decorato;const{declaration}=path.node;"ClassDeclaration"===(null==declaration?void 0:declaration.type)&&(null==(_declaration$decorato=declaration.decorators)?void 0:_declaration$decorato.length)>0&&(0,_helperSplitExportDeclaration.default)(path)},Class(path,state){if(VISITED.has(path))return;const newPath=function(path,state,constantSuper,version){const body=path.get("body.body"),classDecorators=path.node.decorators;let hasElementDecorators=!1;const generateClassPrivateUid=function(classPath){let generator;return()=>(generator||(generator=function(classPath){const currentPrivateId=[],privateNames=new Set;return classPath.traverse({PrivateName(path){privateNames.add(path.node.id.name)}}),()=>{let reifiedId;do{incrementId(currentPrivateId),reifiedId=String.fromCharCode(...currentPrivateId)}while(privateNames.has(reifiedId));return _core.types.privateName(_core.types.identifier(reifiedId))}}(classPath)),generator())}(path);for(const element of body)if(isClassDecoratableElementPath(element))if(element.node.decorators&&element.node.decorators.length>0)hasElementDecorators=!0;else if("ClassAccessorProperty"===element.node.type){const{key,value,static:isStatic,computed}=element.node,newId=generateClassPrivateUid(),newField=generateClassProperty(newId,value?_core.types.cloneNode(value):void 0,isStatic),[newPath]=element.replaceWith(newField);addProxyAccessorsFor(path.node.id,newPath,key,newId,version,computed)}if(!classDecorators&&!hasElementDecorators)return;const elementDecoratorInfo=[];let firstFieldPath,constructorPath,requiresProtoInit=!1,requiresStaticInit=!1;const decoratedPrivateMethods=new Set;let protoInitLocal,staticInitLocal,classInitLocal,classIdLocal;const assignments=[],scopeParent=path.scope.parent,memoiseExpression=(expression,hint)=>{const localEvaluatedId=scopeParent.generateDeclaredUidIdentifier(hint);return assignments.push(_core.types.assignmentExpression("=",localEvaluatedId,expression)),_core.types.cloneNode(localEvaluatedId)},decoratorsThis=new Map,maybeExtractDecorator=decorator=>{const{expression}=decorator;if("2023-05"===version&&_core.types.isMemberExpression(expression)){let object;_core.types.isSuper(expression.object)||_core.types.isThisExpression(expression.object)?object=memoiseExpression(_core.types.thisExpression(),"obj"):scopeParent.isStatic(expression.object)?object=expression.object:(object=memoiseExpression(expression.object,"obj"),expression.object=object),decoratorsThis.set(decorator,_core.types.cloneNode(object))}scopeParent.isStatic(expression)||(decorator.expression=memoiseExpression(expression,"dec"))};if(classDecorators){classInitLocal=scopeParent.generateDeclaredUidIdentifier("initClass");const[classId,classPath]=function(path){if("ClassDeclaration"===path.type){const varId=path.scope.generateUidIdentifierBasedOnNode(path.node.id),classId=_core.types.identifier(path.node.id.name);return path.scope.rename(classId.name,varId.name),path.insertBefore(_core.types.variableDeclaration("let",[_core.types.variableDeclarator(varId)])),path.get("id").replaceWith(classId),[_core.types.cloneNode(varId),path]}{let className,varId;path.node.id?(className=path.node.id.name,varId=path.scope.parent.generateDeclaredUidIdentifier(className),path.scope.rename(className,varId.name)):"VariableDeclarator"===path.parentPath.node.type&&"Identifier"===path.parentPath.node.id.type?(className=path.parentPath.node.id.name,varId=path.scope.parent.generateDeclaredUidIdentifier(className)):varId=path.scope.parent.generateDeclaredUidIdentifier("decorated_class");const newClassExpr=_core.types.classExpression(className&&_core.types.identifier(className),path.node.superClass,path.node.body),[newPath]=path.replaceWith(_core.types.sequenceExpression([newClassExpr,varId]));return[_core.types.cloneNode(varId),newPath.get("expressions.0")]}}(path);classIdLocal=classId,(path=classPath).node.decorators=null;for(const classDecorator of classDecorators)maybeExtractDecorator(classDecorator)}else path.node.id||(path.node.id=path.scope.generateUidIdentifier("Class")),classIdLocal=_core.types.cloneNode(path.node.id);let lastInstancePrivateName,needsInstancePrivateBrandCheck=!1;if(hasElementDecorators)for(const element of body){if(!isClassDecoratableElementPath(element))continue;const{node}=element,decorators=element.get("decorators"),hasDecorators=Array.isArray(decorators)&&decorators.length>0;if(hasDecorators)for(const decoratorPath of decorators)maybeExtractDecorator(decoratorPath.node);const isComputed="computed"in element.node&&!0===element.node.computed;isComputed&&(scopeParent.isStatic(node.key)||(node.key=memoiseExpression(node.key,"computedKey")));const kind=getElementKind(element),{key}=node,isPrivate="PrivateName"===key.type,isStatic=!!element.node.static;let name="computedKey";if(isPrivate?name=key.id.name:isComputed||"Identifier"!==key.type||(name=key.name),isPrivate&&!isStatic&&(hasDecorators&&(needsInstancePrivateBrandCheck=!0),!_core.types.isClassPrivateProperty(node)&&lastInstancePrivateName||(lastInstancePrivateName=key)),element.isClassMethod({kind:"constructor"})&&(constructorPath=element),hasDecorators){let locals,privateMethods,nameExpr;if(kind===ACCESSOR){const{value}=element.node,params=[_core.types.thisExpression()];value&&params.push(_core.types.cloneNode(value));const newId=generateClassPrivateUid(),newFieldInitId=element.scope.parent.generateDeclaredUidIdentifier(`init_${name}`),newField=generateClassProperty(newId,_core.types.callExpression(_core.types.cloneNode(newFieldInitId),params),isStatic),[newPath]=element.replaceWith(newField);if(isPrivate){privateMethods=extractProxyAccessorsFor(newId,version);const getId=newPath.scope.parent.generateDeclaredUidIdentifier(`get_${name}`),setId=newPath.scope.parent.generateDeclaredUidIdentifier(`set_${name}`);addCallAccessorsFor(newPath,key,getId,setId),locals=[newFieldInitId,getId,setId]}else addProxyAccessorsFor(path.node.id,newPath,key,newId,version,isComputed),locals=newFieldInitId}else if(kind===FIELD){const initId=element.scope.parent.generateDeclaredUidIdentifier(`init_${name}`),valuePath=element.get("value");valuePath.replaceWith(_core.types.callExpression(_core.types.cloneNode(initId),[_core.types.thisExpression(),valuePath.node].filter((v=>v)))),locals=initId,isPrivate&&(privateMethods=extractProxyAccessorsFor(key,version))}else if(isPrivate){locals=element.scope.parent.generateDeclaredUidIdentifier(`call_${name}`);new _helperReplaceSupers.default({constantSuper,methodPath:element,objectRef:classIdLocal,superRef:path.node.superClass,file:state.file,refToPreserve:classIdLocal}).replace();const{params,body,async:isAsync}=element.node;if(privateMethods=[_core.types.functionExpression(void 0,params.filter(isNotTsParameter),body,isAsync)],kind===GETTER||kind===SETTER)movePrivateAccessor(element,_core.types.cloneNode(key),_core.types.cloneNode(locals),isStatic);else{const node=element.node;path.node.body.body.unshift(_core.types.classPrivateProperty(key,_core.types.cloneNode(locals),[],node.static)),decoratedPrivateMethods.add(key.id.name),element.remove()}}nameExpr=isComputed?_core.types.cloneNode(key):"PrivateName"===key.type?_core.types.stringLiteral(key.id.name):"Identifier"===key.type?_core.types.stringLiteral(key.name):_core.types.cloneNode(key),elementDecoratorInfo.push({kind,decorators:decorators.map((d=>d.node.expression)),decoratorsThis:decorators.map((d=>decoratorsThis.get(d.node))),name:nameExpr,isStatic,privateMethods,locals}),kind!==FIELD&&(isStatic?requiresStaticInit=!0:requiresProtoInit=!0),element.node&&(element.node.decorators=null),firstFieldPath||isStatic||kind!==FIELD&&kind!==ACCESSOR||(firstFieldPath=element)}}const elementDecorations=function(info,version){return _core.types.arrayExpression(filteredOrderedDecoratorInfo(info).map((el=>{const{decs,hasThis}=generateDecorationList(el.decorators,el.decoratorsThis,version);let flag=el.kind;return el.isStatic&&(flag+="2023-05"===version?STATIC:STATIC_OLD_VERSION),hasThis&&(flag+=DECORATORS_HAVE_THIS),_core.types.arrayExpression([1===decs.length?decs[0]:_core.types.arrayExpression(decs),_core.types.numericLiteral(flag),el.name,...el.privateMethods||[]])})))}(elementDecoratorInfo,version);let classDecorationsFlag=0,classDecorations=[];if(classDecorators){const{hasThis,decs}=generateDecorationList(classDecorators.map((el=>el.expression)),classDecorators.map((dec=>decoratorsThis.get(dec))),version);classDecorationsFlag=hasThis?1:0,classDecorations=decs}const elementLocals=function(decorationInfo){const localIds=[];for(const el of filteredOrderedDecoratorInfo(decorationInfo)){const{locals}=el;Array.isArray(locals)?localIds.push(...locals):void 0!==locals&&localIds.push(locals)}return localIds}(elementDecoratorInfo);if(requiresProtoInit){protoInitLocal=scopeParent.generateDeclaredUidIdentifier("initProto"),elementLocals.push(protoInitLocal);const protoInitCall=_core.types.callExpression(_core.types.cloneNode(protoInitLocal),[_core.types.thisExpression()]);if(firstFieldPath){const value=firstFieldPath.get("value"),body=[protoInitCall];value.node&&body.push(value.node),value.replaceWith(_core.types.sequenceExpression(body))}else if(constructorPath)path.node.superClass?path.traverse({CallExpression:{exit(path){path.get("callee").isSuper()&&(path.replaceWith(_core.types.callExpression(_core.types.cloneNode(protoInitLocal),[path.node])),path.skip())}}}):constructorPath.node.body.body.unshift(_core.types.expressionStatement(protoInitCall));else{const body=[_core.types.expressionStatement(protoInitCall)];path.node.superClass&&body.unshift(_core.types.expressionStatement(_core.types.callExpression(_core.types.super(),[_core.types.spreadElement(_core.types.identifier("args"))]))),path.node.body.body.unshift(_core.types.classMethod("constructor",_core.types.identifier("constructor"),[_core.types.restElement(_core.types.identifier("args"))],_core.types.blockStatement(body)))}}requiresStaticInit&&(staticInitLocal=scopeParent.generateDeclaredUidIdentifier("initStatic"),elementLocals.push(staticInitLocal));decoratedPrivateMethods.size>0&&path.traverse({PrivateName(path){if(!decoratedPrivateMethods.has(path.node.id.name))return;const parentPath=path.parentPath,parentParentPath=parentPath.parentPath;if("AssignmentExpression"===parentParentPath.node.type&&parentParentPath.node.left===parentPath.node||"UpdateExpression"===parentParentPath.node.type||"RestElement"===parentParentPath.node.type||"ArrayPattern"===parentParentPath.node.type||"ObjectProperty"===parentParentPath.node.type&&parentParentPath.node.value===parentPath.node&&"ObjectPattern"===parentParentPath.parentPath.type||"ForOfStatement"===parentParentPath.node.type&&parentParentPath.node.left===parentPath.node)throw path.buildCodeFrameError(`Decorated private methods are not updatable, but "#${path.node.id.name}" is updated via this expression.`)}});const classLocals=[];let classInitInjected=!1;const classInitCall=classInitLocal&&_core.types.callExpression(_core.types.cloneNode(classInitLocal),[]),originalClass=path.node;if(classDecorators){classLocals.push(classIdLocal,classInitLocal);const statics=[];let staticBlocks=[];if(path.get("body.body").forEach((element=>{if(element.isStaticBlock())return staticBlocks.push(element.node),void element.remove();const isProperty=element.isClassProperty()||element.isClassPrivateProperty();if((isProperty||element.isClassPrivateMethod())&&element.node.static){if(isProperty&&staticBlocks.length>0){const allValues=staticBlocks.map(staticBlockToIIFE);element.node.value&&allValues.push(element.node.value),element.node.value=0===(exprs=allValues).length?_core.types.unaryExpression("void",_core.types.numericLiteral(0)):1===exprs.length?exprs[0]:_core.types.sequenceExpression(exprs),staticBlocks=[]}element.node.static=!1,statics.push(element.node),element.remove()}var exprs})),statics.length>0||staticBlocks.length>0){const staticsClass=_core.template.expression.ast`
        class extends ${state.addHelper("identity")} {}
      `;staticsClass.body.body=[_core.types.staticBlock([_core.types.toStatement(originalClass,!0)||_core.types.expressionStatement(originalClass)]),...statics];const constructorBody=[],newExpr=_core.types.newExpression(staticsClass,[]);staticBlocks.length>0&&constructorBody.push(...staticBlocks.map(staticBlockToIIFE)),classInitCall&&(classInitInjected=!0,constructorBody.push(classInitCall)),constructorBody.length>0?(constructorBody.unshift(_core.types.callExpression(_core.types.super(),[_core.types.cloneNode(classIdLocal)])),staticsClass.body.body.push(_core.types.classMethod("constructor",_core.types.identifier("constructor"),[],_core.types.blockStatement([_core.types.expressionStatement(_core.types.sequenceExpression(constructorBody))])))):newExpr.arguments.push(_core.types.cloneNode(classIdLocal)),path.replaceWith(newExpr)}}!classInitInjected&&classInitCall&&path.node.body.body.push(_core.types.staticBlock([_core.types.expressionStatement(classInitCall)]));return originalClass.body.body.unshift(_core.types.staticBlock([_core.types.expressionStatement(createLocalsAssignment(elementLocals,classLocals,elementDecorations,_core.types.arrayExpression(classDecorations),_core.types.numericLiteral(classDecorationsFlag),needsInstancePrivateBrandCheck?lastInstancePrivateName:null,state,version)),requiresStaticInit&&_core.types.expressionStatement(_core.types.callExpression(_core.types.cloneNode(staticInitLocal),[_core.types.thisExpression()]))].filter(Boolean))),path.insertBefore(assignments.map((expr=>_core.types.expressionStatement(expr)))),path.scope.crawl(),path}(path,state,constantSuper,version);newPath&&VISITED.add(newPath)}}}};var _core=__nested_webpack_require_1022195__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_pluginSyntaxDecorators=__nested_webpack_require_1022195__("./node_modules/.pnpm/@babel+plugin-syntax-decorators@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-decorators/lib/index.js"),_helperReplaceSupers=__nested_webpack_require_1022195__("./node_modules/.pnpm/@babel+helper-replace-supers@7.22.5/node_modules/@babel/helper-replace-supers/lib/index.js"),_helperSplitExportDeclaration=__nested_webpack_require_1022195__("./node_modules/.pnpm/@babel+helper-split-export-declaration@7.22.6/node_modules/@babel/helper-split-export-declaration/lib/index.js");function incrementId(id,idx=id.length-1){if(-1===idx)return void id.unshift(65);const current=id[idx];90===current?id[idx]=97:122===current?(id[idx]=65,incrementId(id,idx-1)):id[idx]=current+1}function generateClassProperty(key,value,isStatic){return"PrivateName"===key.type?_core.types.classPrivateProperty(key,value,void 0,isStatic):_core.types.classProperty(key,value,void 0,void 0,isStatic)}function addProxyAccessorsFor(className,element,originalKey,targetKey,version,isComputed=!1){const{static:isStatic}=element.node,thisArg="2023-05"===version&&isStatic?className:_core.types.thisExpression(),getterBody=_core.types.blockStatement([_core.types.returnStatement(_core.types.memberExpression(_core.types.cloneNode(thisArg),_core.types.cloneNode(targetKey)))]),setterBody=_core.types.blockStatement([_core.types.expressionStatement(_core.types.assignmentExpression("=",_core.types.memberExpression(_core.types.cloneNode(thisArg),_core.types.cloneNode(targetKey)),_core.types.identifier("v")))]);let getter,setter;"PrivateName"===originalKey.type?(getter=_core.types.classPrivateMethod("get",_core.types.cloneNode(originalKey),[],getterBody,isStatic),setter=_core.types.classPrivateMethod("set",_core.types.cloneNode(originalKey),[_core.types.identifier("v")],setterBody,isStatic)):(getter=_core.types.classMethod("get",_core.types.cloneNode(originalKey),[],getterBody,isComputed,isStatic),setter=_core.types.classMethod("set",_core.types.cloneNode(originalKey),[_core.types.identifier("v")],setterBody,isComputed,isStatic)),element.insertAfter(setter),element.insertAfter(getter)}function extractProxyAccessorsFor(targetKey,version){return"2023-05"!==version&&"2023-01"!==version?[_core.template.expression.ast`
        function () {
          return this.${_core.types.cloneNode(targetKey)};
        }
      `,_core.template.expression.ast`
        function (value) {
          this.${_core.types.cloneNode(targetKey)} = value;
        }
      `]:[_core.template.expression.ast`
      o => o.${_core.types.cloneNode(targetKey)}
    `,_core.template.expression.ast`
      (o, v) => o.${_core.types.cloneNode(targetKey)} = v
    `]}const FIELD=0,ACCESSOR=1,METHOD=2,GETTER=3,SETTER=4,STATIC_OLD_VERSION=5,STATIC=8,DECORATORS_HAVE_THIS=16;function getElementKind(element){switch(element.node.type){case"ClassProperty":case"ClassPrivateProperty":return FIELD;case"ClassAccessorProperty":return ACCESSOR;case"ClassMethod":case"ClassPrivateMethod":return"get"===element.node.kind?GETTER:"set"===element.node.kind?SETTER:METHOD}}function isDecoratorInfo(info){return"decorators"in info}function filteredOrderedDecoratorInfo(info){const filtered=info.filter(isDecoratorInfo);return[...filtered.filter((el=>el.isStatic&&el.kind>=ACCESSOR&&el.kind<=SETTER)),...filtered.filter((el=>!el.isStatic&&el.kind>=ACCESSOR&&el.kind<=SETTER)),...filtered.filter((el=>el.isStatic&&el.kind===FIELD)),...filtered.filter((el=>!el.isStatic&&el.kind===FIELD))]}function generateDecorationList(decorators,decoratorsThis,version){const decsCount=decorators.length,hasOneThis=decoratorsThis.some(Boolean),decs=[];for(let i=0;i<decsCount;i++)"2023-05"===version&&hasOneThis&&decs.push(decoratorsThis[i]||_core.types.unaryExpression("void",_core.types.numericLiteral(0))),decs.push(decorators[i]);return{hasThis:hasOneThis,decs}}function addCallAccessorsFor(element,key,getId,setId){element.insertAfter(_core.types.classPrivateMethod("get",_core.types.cloneNode(key),[],_core.types.blockStatement([_core.types.returnStatement(_core.types.callExpression(_core.types.cloneNode(getId),[_core.types.thisExpression()]))]))),element.insertAfter(_core.types.classPrivateMethod("set",_core.types.cloneNode(key),[_core.types.identifier("v")],_core.types.blockStatement([_core.types.expressionStatement(_core.types.callExpression(_core.types.cloneNode(setId),[_core.types.thisExpression(),_core.types.identifier("v")]))])))}function isNotTsParameter(node){return"TSParameterProperty"!==node.type}function movePrivateAccessor(element,key,methodLocalVar,isStatic){let params,block;"set"===element.node.kind?(params=[_core.types.identifier("v")],block=[_core.types.expressionStatement(_core.types.callExpression(methodLocalVar,[_core.types.thisExpression(),_core.types.identifier("v")]))]):(params=[],block=[_core.types.returnStatement(_core.types.callExpression(methodLocalVar,[_core.types.thisExpression()]))]),element.replaceWith(_core.types.classPrivateMethod(element.node.kind,_core.types.cloneNode(key),params,_core.types.blockStatement(block),isStatic))}function isClassDecoratableElementPath(path){const{type}=path;return"TSDeclareMethod"!==type&&"TSIndexSignature"!==type&&"StaticBlock"!==type}function staticBlockToIIFE(block){return _core.types.callExpression(_core.types.arrowFunctionExpression([],_core.types.blockStatement(block.body)),[])}function createLocalsAssignment(elementLocals,classLocals,elementDecorations,classDecorations,classDecorationsFlag,maybePrivateBranName,state,version){let lhs,rhs;const args=[_core.types.thisExpression(),elementDecorations,classDecorations];if("2021-12"===version||"2022-03"===version&&!state.availableHelper("applyDecs2203R")){const lhs=_core.types.arrayPattern([...elementLocals,...classLocals]),rhs=_core.types.callExpression(state.addHelper("2021-12"===version?"applyDecs":"applyDecs2203"),args);return _core.types.assignmentExpression("=",lhs,rhs)}return"2023-05"===version?((maybePrivateBranName||0!==classDecorationsFlag.value)&&args.push(classDecorationsFlag),maybePrivateBranName&&args.push(_core.template.expression.ast`
            _ => ${_core.types.cloneNode(maybePrivateBranName)} in _
          `),rhs=_core.types.callExpression(state.addHelper("applyDecs2305"),args)):"2023-01"===version?(maybePrivateBranName&&args.push(_core.template.expression.ast`
            _ => ${_core.types.cloneNode(maybePrivateBranName)} in _
          `),rhs=_core.types.callExpression(state.addHelper("applyDecs2301"),args)):rhs=_core.types.callExpression(state.addHelper("applyDecs2203R"),args),elementLocals.length>0?classLocals.length>0?lhs=_core.types.objectPattern([_core.types.objectProperty(_core.types.identifier("e"),_core.types.arrayPattern(elementLocals)),_core.types.objectProperty(_core.types.identifier("c"),_core.types.arrayPattern(classLocals))]):(lhs=_core.types.arrayPattern(elementLocals),rhs=_core.types.memberExpression(rhs,_core.types.identifier("e"),!1,!1)):(lhs=_core.types.arrayPattern(classLocals),rhs=_core.types.memberExpression(rhs,_core.types.identifier("c"),!1,!1)),_core.types.assignmentExpression("=",lhs,rhs)}},"./node_modules/.pnpm/@babel+plugin-proposal-decorators@7.22.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-decorators/lib/transformer-legacy.js":(__unused_webpack_module,exports,__nested_webpack_require_1043721__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _core=__nested_webpack_require_1043721__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js");const buildClassDecorator=_core.template.statement("\n  DECORATOR(CLASS_REF = INNER) || CLASS_REF;\n"),buildClassPrototype=(0,_core.template)("\n  CLASS_REF.prototype;\n"),buildGetDescriptor=(0,_core.template)("\n    Object.getOwnPropertyDescriptor(TARGET, PROPERTY);\n"),buildGetObjectInitializer=(0,_core.template)("\n    (TEMP = Object.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n"),WARNING_CALLS=new WeakSet;function applyEnsureOrdering(path){const identDecorators=(path.isClass()?[path,...path.get("body.body")]:path.get("properties")).reduce(((acc,prop)=>acc.concat(prop.node.decorators||[])),[]).filter((decorator=>!_core.types.isIdentifier(decorator.expression)));if(0!==identDecorators.length)return _core.types.sequenceExpression(identDecorators.map((decorator=>{const expression=decorator.expression,id=decorator.expression=path.scope.generateDeclaredUidIdentifier("dec");return _core.types.assignmentExpression("=",id,expression)})).concat([path.node]))}function hasClassDecorators(classNode){return!(!classNode.decorators||!classNode.decorators.length)}function hasMethodDecorators(body){return body.some((node=>{var _node$decorators;return null==(_node$decorators=node.decorators)?void 0:_node$decorators.length}))}function applyTargetDecorators(path,state,decoratedProps){const name=path.scope.generateDeclaredUidIdentifier(path.isClass()?"class":"obj"),exprs=decoratedProps.reduce((function(acc,node){let decorators=[];if(null!=node.decorators&&(decorators=node.decorators,node.decorators=null),0===decorators.length)return acc;if(node.computed)throw path.buildCodeFrameError("Computed method/property decorators are not yet supported.");const property=_core.types.isLiteral(node.key)?node.key:_core.types.stringLiteral(node.key.name),target=path.isClass()&&!node.static?buildClassPrototype({CLASS_REF:name}).expression:name;if(_core.types.isClassProperty(node,{static:!1})){const descriptor=path.scope.generateDeclaredUidIdentifier("descriptor"),initializer=node.value?_core.types.functionExpression(null,[],_core.types.blockStatement([_core.types.returnStatement(node.value)])):_core.types.nullLiteral();node.value=_core.types.callExpression(state.addHelper("initializerWarningHelper"),[descriptor,_core.types.thisExpression()]),WARNING_CALLS.add(node.value),acc.push(_core.types.assignmentExpression("=",_core.types.cloneNode(descriptor),_core.types.callExpression(state.addHelper("applyDecoratedDescriptor"),[_core.types.cloneNode(target),_core.types.cloneNode(property),_core.types.arrayExpression(decorators.map((dec=>_core.types.cloneNode(dec.expression)))),_core.types.objectExpression([_core.types.objectProperty(_core.types.identifier("configurable"),_core.types.booleanLiteral(!0)),_core.types.objectProperty(_core.types.identifier("enumerable"),_core.types.booleanLiteral(!0)),_core.types.objectProperty(_core.types.identifier("writable"),_core.types.booleanLiteral(!0)),_core.types.objectProperty(_core.types.identifier("initializer"),initializer)])])))}else acc.push(_core.types.callExpression(state.addHelper("applyDecoratedDescriptor"),[_core.types.cloneNode(target),_core.types.cloneNode(property),_core.types.arrayExpression(decorators.map((dec=>_core.types.cloneNode(dec.expression)))),_core.types.isObjectProperty(node)||_core.types.isClassProperty(node,{static:!0})?buildGetObjectInitializer({TEMP:path.scope.generateDeclaredUidIdentifier("init"),TARGET:_core.types.cloneNode(target),PROPERTY:_core.types.cloneNode(property)}).expression:buildGetDescriptor({TARGET:_core.types.cloneNode(target),PROPERTY:_core.types.cloneNode(property)}).expression,_core.types.cloneNode(target)]));return acc}),[]);return _core.types.sequenceExpression([_core.types.assignmentExpression("=",_core.types.cloneNode(name),path.node),_core.types.sequenceExpression(exprs),_core.types.cloneNode(name)])}function decoratedClassToExpression({node,scope}){if(!hasClassDecorators(node)&&!hasMethodDecorators(node.body.body))return;const ref=node.id?_core.types.cloneNode(node.id):scope.generateUidIdentifier("class");return _core.types.variableDeclaration("let",[_core.types.variableDeclarator(ref,_core.types.toExpression(node))])}var _default={ExportDefaultDeclaration(path){const decl=path.get("declaration");if(!decl.isClassDeclaration())return;const replacement=decoratedClassToExpression(decl);if(replacement){const[varDeclPath]=path.replaceWithMultiple([replacement,_core.types.exportNamedDeclaration(null,[_core.types.exportSpecifier(_core.types.cloneNode(replacement.declarations[0].id),_core.types.identifier("default"))])]);decl.node.id||path.scope.registerDeclaration(varDeclPath)}},ClassDeclaration(path){const replacement=decoratedClassToExpression(path);if(replacement){const[newPath]=path.replaceWith(replacement),decl=newPath.get("declarations.0"),id=decl.node.id,binding=path.scope.getOwnBinding(id.name);binding.identifier=id,binding.path=decl}},ClassExpression(path,state){const decoratedClass=applyEnsureOrdering(path)||function(classPath){if(!hasClassDecorators(classPath.node))return;const decorators=classPath.node.decorators||[];classPath.node.decorators=null;const name=classPath.scope.generateDeclaredUidIdentifier("class");return decorators.map((dec=>dec.expression)).reverse().reduce((function(acc,decorator){return buildClassDecorator({CLASS_REF:_core.types.cloneNode(name),DECORATOR:_core.types.cloneNode(decorator),INNER:acc}).expression}),classPath.node)}(path)||function(path,state){if(hasMethodDecorators(path.node.body.body))return applyTargetDecorators(path,state,path.node.body.body)}(path,state);decoratedClass&&path.replaceWith(decoratedClass)},ObjectExpression(path,state){const decoratedObject=applyEnsureOrdering(path)||function(path,state){if(hasMethodDecorators(path.node.properties))return applyTargetDecorators(path,state,path.node.properties.filter((prop=>"SpreadElement"!==prop.type)))}(path,state);decoratedObject&&path.replaceWith(decoratedObject)},AssignmentExpression(path,state){WARNING_CALLS.has(path.node.right)&&path.replaceWith(_core.types.callExpression(state.addHelper("initializerDefineProperty"),[_core.types.cloneNode(path.get("left.object").node),_core.types.stringLiteral(path.get("left.property").node.name||path.get("left.property").node.value),_core.types.cloneNode(path.get("right.arguments")[0].node),_core.types.cloneNode(path.get("right.arguments")[1].node)]))},CallExpression(path,state){3===path.node.arguments.length&&WARNING_CALLS.has(path.node.arguments[2])&&path.node.callee.name===state.addHelper("defineProperty").name&&path.replaceWith(_core.types.callExpression(state.addHelper("initializerDefineProperty"),[_core.types.cloneNode(path.get("arguments")[0].node),_core.types.cloneNode(path.get("arguments")[1].node),_core.types.cloneNode(path.get("arguments.2.arguments")[0].node),_core.types.cloneNode(path.get("arguments.2.arguments")[1].node)]))}};exports.default=_default},"./node_modules/.pnpm/@babel+plugin-proposal-export-namespace-from@7.18.9_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-export-namespace-from/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1051216__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperPluginUtils=__nested_webpack_require_1051216__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),_pluginSyntaxExportNamespaceFrom=__nested_webpack_require_1051216__("./node_modules/.pnpm/@babel+plugin-syntax-export-namespace-from@7.8.3_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-export-namespace-from/lib/index.js"),_core=__nested_webpack_require_1051216__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_default=(0,_helperPluginUtils.declare)((api=>(api.assertVersion(7),{name:"proposal-export-namespace-from",inherits:_pluginSyntaxExportNamespaceFrom.default,visitor:{ExportNamedDeclaration(path){var _exported$name;const{node,scope}=path,{specifiers}=node,index=_core.types.isExportDefaultSpecifier(specifiers[0])?1:0;if(!_core.types.isExportNamespaceSpecifier(specifiers[index]))return;const nodes=[];1===index&&nodes.push(_core.types.exportNamedDeclaration(null,[specifiers.shift()],node.source));const specifier=specifiers.shift(),{exported}=specifier,uid=scope.generateUidIdentifier(null!=(_exported$name=exported.name)?_exported$name:exported.value);nodes.push(_core.types.importDeclaration([_core.types.importNamespaceSpecifier(uid)],_core.types.cloneNode(node.source)),_core.types.exportNamedDeclaration(null,[_core.types.exportSpecifier(_core.types.cloneNode(uid),exported)])),node.specifiers.length>=1&&nodes.push(node);const[importDeclaration]=path.replaceWithMultiple(nodes);path.scope.registerDeclaration(importDeclaration)}}})));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-proposal-nullish-coalescing-operator@7.18.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-nullish-coalescing-operator/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1053082__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperPluginUtils=__nested_webpack_require_1053082__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),_pluginSyntaxNullishCoalescingOperator=__nested_webpack_require_1053082__("./node_modules/.pnpm/@babel+plugin-syntax-nullish-coalescing-operator@7.8.3_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-nullish-coalescing-operator/lib/index.js"),_core=__nested_webpack_require_1053082__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_default=(0,_helperPluginUtils.declare)(((api,{loose=!1})=>{var _api$assumption;api.assertVersion(7);const noDocumentAll=null!=(_api$assumption=api.assumption("noDocumentAll"))?_api$assumption:loose;return{name:"proposal-nullish-coalescing-operator",inherits:_pluginSyntaxNullishCoalescingOperator.default,visitor:{LogicalExpression(path){const{node,scope}=path;if("??"!==node.operator)return;let ref,assignment;if(scope.isStatic(node.left))ref=node.left,assignment=_core.types.cloneNode(node.left);else{if(scope.path.isPattern())return void path.replaceWith(_core.template.statement.ast`(() => ${path.node})()`);ref=scope.generateUidIdentifierBasedOnNode(node.left),scope.push({id:_core.types.cloneNode(ref)}),assignment=_core.types.assignmentExpression("=",ref,node.left)}path.replaceWith(_core.types.conditionalExpression(noDocumentAll?_core.types.binaryExpression("!=",assignment,_core.types.nullLiteral()):_core.types.logicalExpression("&&",_core.types.binaryExpression("!==",assignment,_core.types.nullLiteral()),_core.types.binaryExpression("!==",_core.types.cloneNode(ref),scope.buildUndefinedNode())),_core.types.cloneNode(ref),node.right))}}}}));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-proposal-optional-chaining@7.21.0_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-optional-chaining/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1055061__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helperPluginUtils=__nested_webpack_require_1055061__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),syntaxOptionalChaining=__nested_webpack_require_1055061__("./node_modules/.pnpm/@babel+plugin-syntax-optional-chaining@7.8.3_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-optional-chaining/lib/index.js"),core=__nested_webpack_require_1055061__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),helperSkipTransparentExpressionWrappers=__nested_webpack_require_1055061__("./node_modules/.pnpm/@babel+helper-skip-transparent-expression-wrappers@7.22.5/node_modules/@babel/helper-skip-transparent-expression-wrappers/lib/index.js");function willPathCastToBoolean(path){const maybeWrapped=findOutermostTransparentParent(path),{node,parentPath}=maybeWrapped;if(parentPath.isLogicalExpression()){const{operator,right}=parentPath.node;if("&&"===operator||"||"===operator||"??"===operator&&node===right)return willPathCastToBoolean(parentPath)}if(parentPath.isSequenceExpression()){const{expressions}=parentPath.node;return expressions[expressions.length-1]!==node||willPathCastToBoolean(parentPath)}return parentPath.isConditional({test:node})||parentPath.isUnaryExpression({operator:"!"})||parentPath.isLoop({test:node})}function findOutermostTransparentParent(path){let maybeWrapped=path;return path.findParent((p=>{if(!helperSkipTransparentExpressionWrappers.isTransparentExprWrapper(p.node))return!0;maybeWrapped=p})),maybeWrapped}const{ast}=core.template.expression;function isSimpleMemberExpression(expression){return expression=helperSkipTransparentExpressionWrappers.skipTransparentExprWrapperNodes(expression),core.types.isIdentifier(expression)||core.types.isSuper(expression)||core.types.isMemberExpression(expression)&&!expression.computed&&isSimpleMemberExpression(expression.object)}function transform(path,{pureGetters,noDocumentAll}){const{scope}=path,maybeWrapped=findOutermostTransparentParent(path),{parentPath}=maybeWrapped,willReplacementCastToBoolean=willPathCastToBoolean(maybeWrapped);let isDeleteOperation=!1;const parentIsCall=parentPath.isCallExpression({callee:maybeWrapped.node})&&path.isOptionalMemberExpression(),optionals=[];let optionalPath=path;if(scope.path.isPattern()&&function(path){let optionalPath=path;const{scope}=path;for(;optionalPath.isOptionalMemberExpression()||optionalPath.isOptionalCallExpression();){const{node}=optionalPath,childPath=helperSkipTransparentExpressionWrappers.skipTransparentExprWrappers(optionalPath.isOptionalMemberExpression()?optionalPath.get("object"):optionalPath.get("callee"));if(node.optional)return!scope.isStatic(childPath.node);optionalPath=childPath}}(optionalPath))return void path.replaceWith(core.template.ast`(() => ${path.node})()`);for(;optionalPath.isOptionalMemberExpression()||optionalPath.isOptionalCallExpression();){const{node}=optionalPath;node.optional&&optionals.push(node),optionalPath.isOptionalMemberExpression()?(optionalPath.node.type="MemberExpression",optionalPath=helperSkipTransparentExpressionWrappers.skipTransparentExprWrappers(optionalPath.get("object"))):optionalPath.isOptionalCallExpression()&&(optionalPath.node.type="CallExpression",optionalPath=helperSkipTransparentExpressionWrappers.skipTransparentExprWrappers(optionalPath.get("callee")))}let replacementPath=path;parentPath.isUnaryExpression({operator:"delete"})&&(replacementPath=parentPath,isDeleteOperation=!0);for(let i=optionals.length-1;i>=0;i--){const node=optionals[i],isCall=core.types.isCallExpression(node),chainWithTypes=isCall?node.callee:node.object,chain=helperSkipTransparentExpressionWrappers.skipTransparentExprWrapperNodes(chainWithTypes);let ref,check;if(isCall&&core.types.isIdentifier(chain,{name:"eval"})?(check=ref=chain,node.callee=core.types.sequenceExpression([core.types.numericLiteral(0),ref])):pureGetters&&isCall&&isSimpleMemberExpression(chain)?check=ref=node.callee:(ref=scope.maybeGenerateMemoised(chain),ref?(check=core.types.assignmentExpression("=",core.types.cloneNode(ref),chainWithTypes),isCall?node.callee=ref:node.object=ref):check=ref=chainWithTypes),isCall&&core.types.isMemberExpression(chain))if(pureGetters&&isSimpleMemberExpression(chain))node.callee=chainWithTypes;else{const{object}=chain;let context;if(core.types.isSuper(object))context=core.types.thisExpression();else{const memoized=scope.maybeGenerateMemoised(object);memoized?(context=memoized,chain.object=core.types.assignmentExpression("=",memoized,object)):context=object}node.arguments.unshift(core.types.cloneNode(context)),node.callee=core.types.memberExpression(node.callee,core.types.identifier("call"))}let replacement=replacementPath.node;if(0===i&&parentIsCall){var _baseRef;const object=helperSkipTransparentExpressionWrappers.skipTransparentExprWrapperNodes(replacement.object);let baseRef;pureGetters&&isSimpleMemberExpression(object)||(baseRef=scope.maybeGenerateMemoised(object),baseRef&&(replacement.object=core.types.assignmentExpression("=",baseRef,object))),replacement=core.types.callExpression(core.types.memberExpression(replacement,core.types.identifier("bind")),[core.types.cloneNode(null!=(_baseRef=baseRef)?_baseRef:object)])}if(willReplacementCastToBoolean){const nonNullishCheck=noDocumentAll?ast`${core.types.cloneNode(check)} != null`:ast`
            ${core.types.cloneNode(check)} !== null && ${core.types.cloneNode(ref)} !== void 0`;replacementPath.replaceWith(core.types.logicalExpression("&&",nonNullishCheck,replacement)),replacementPath=helperSkipTransparentExpressionWrappers.skipTransparentExprWrappers(replacementPath.get("right"))}else{const nullishCheck=noDocumentAll?ast`${core.types.cloneNode(check)} == null`:ast`
            ${core.types.cloneNode(check)} === null || ${core.types.cloneNode(ref)} === void 0`,returnValue=isDeleteOperation?ast`true`:ast`void 0`;replacementPath.replaceWith(core.types.conditionalExpression(nullishCheck,returnValue,replacement)),replacementPath=helperSkipTransparentExpressionWrappers.skipTransparentExprWrappers(replacementPath.get("alternate"))}}}var index=helperPluginUtils.declare(((api,options)=>{var _api$assumption,_api$assumption2;api.assertVersion(7);const{loose=!1}=options,noDocumentAll=null!=(_api$assumption=api.assumption("noDocumentAll"))?_api$assumption:loose,pureGetters=null!=(_api$assumption2=api.assumption("pureGetters"))?_api$assumption2:loose;return{name:"proposal-optional-chaining",inherits:syntaxOptionalChaining.default,visitor:{"OptionalCallExpression|OptionalMemberExpression"(path){transform(path,{noDocumentAll,pureGetters})}}}}));exports.default=index,exports.transform=transform},"./node_modules/.pnpm/@babel+plugin-syntax-decorators@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-decorators/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1061928__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_1061928__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js").declare)(((api,options)=>{api.assertVersion(7);let{version}=options;{const{legacy}=options;if(void 0!==legacy){if("boolean"!=typeof legacy)throw new Error(".legacy must be a boolean.");if(void 0!==version)throw new Error("You can either use the .legacy or the .version option, not both.")}if(void 0===version)version=legacy?"legacy":"2018-09";else if("2023-05"!==version&&"2023-01"!==version&&"2022-03"!==version&&"2021-12"!==version&&"2018-09"!==version&&"legacy"!==version)throw new Error("Unsupported decorators version: "+version);var{decoratorsBeforeExport}=options;if(void 0===decoratorsBeforeExport){if("2021-12"===version||"2022-03"===version)decoratorsBeforeExport=!1;else if("2018-09"===version)throw new Error("The decorators plugin, when .version is '2018-09' or not specified, requires a 'decoratorsBeforeExport' option, whose value must be a boolean.")}else{if("legacy"===version||"2022-03"===version||"2023-01"===version)throw new Error(`'decoratorsBeforeExport' can't be used with ${version} decorators.`);if("boolean"!=typeof decoratorsBeforeExport)throw new Error("'decoratorsBeforeExport' must be a boolean.")}}return{name:"syntax-decorators",manipulateOptions({generatorOpts},parserOpts){"legacy"===version?parserOpts.plugins.push("decorators-legacy"):"2023-01"===version||"2023-05"===version?parserOpts.plugins.push(["decorators",{allowCallParenthesized:!1}],"decoratorAutoAccessors"):"2022-03"===version?parserOpts.plugins.push(["decorators",{decoratorsBeforeExport:!1,allowCallParenthesized:!1}],"decoratorAutoAccessors"):"2021-12"===version?(parserOpts.plugins.push(["decorators",{decoratorsBeforeExport}],"decoratorAutoAccessors"),generatorOpts.decoratorsBeforeExport=decoratorsBeforeExport):"2018-09"===version&&(parserOpts.plugins.push(["decorators",{decoratorsBeforeExport}]),generatorOpts.decoratorsBeforeExport=decoratorsBeforeExport)}}}));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-syntax-import-assertions@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-import-assertions/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1064271__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_1064271__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js").declare)((api=>(api.assertVersion(7),{name:"syntax-import-assertions",manipulateOptions(opts,parserOpts){parserOpts.plugins.push("importAssertions")}})));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-syntax-jsx@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-jsx/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1064870__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_1064870__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js").declare)((api=>(api.assertVersion(7),{name:"syntax-jsx",manipulateOptions(opts,parserOpts){parserOpts.plugins.some((p=>"typescript"===(Array.isArray(p)?p[0]:p)))||parserOpts.plugins.push("jsx")}})));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-syntax-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-typescript/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1065528__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperPluginUtils=__nested_webpack_require_1065528__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),removePlugin=function(plugins,name){const indices=[];plugins.forEach(((plugin,i)=>{(Array.isArray(plugin)?plugin[0]:plugin)===name&&indices.unshift(i)}));for(const i of indices)plugins.splice(i,1)},_default=(0,_helperPluginUtils.declare)(((api,opts)=>{api.assertVersion(7);const{disallowAmbiguousJSXLike,dts}=opts;var{isTSX}=opts;return{name:"syntax-typescript",manipulateOptions(opts,parserOpts){{const{plugins}=parserOpts;removePlugin(plugins,"flow"),removePlugin(plugins,"jsx"),plugins.push("objectRestSpread","classProperties"),isTSX&&plugins.push("jsx")}parserOpts.plugins.push(["typescript",{disallowAmbiguousJSXLike,dts}])}}}));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-transform-modules-commonjs@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-modules-commonjs/lib/dynamic-import.js":(__unused_webpack_module,exports,__nested_webpack_require_1066656__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.transformDynamicImport=function(path,noInterop,file){const buildRequire=noInterop?requireNoInterop:requireInterop;path.replaceWith((0,_helperModuleTransforms.buildDynamicImport)(path.node,!0,!1,(specifier=>buildRequire(specifier,file))))};var _core=__nested_webpack_require_1066656__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_helperModuleTransforms=__nested_webpack_require_1066656__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/index.js");const requireNoInterop=source=>_core.template.expression.ast`require(${source})`,requireInterop=(source,file)=>_core.types.callExpression(file.addHelper("interopRequireWildcard"),[requireNoInterop(source)])},"./node_modules/.pnpm/@babel+plugin-transform-modules-commonjs@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-modules-commonjs/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1067668__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperPluginUtils=__nested_webpack_require_1067668__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),_helperModuleTransforms=__nested_webpack_require_1067668__("./node_modules/.pnpm/@babel+helper-module-transforms@7.22.5/node_modules/@babel/helper-module-transforms/lib/index.js"),_helperSimpleAccess=__nested_webpack_require_1067668__("./node_modules/.pnpm/@babel+helper-simple-access@7.22.5/node_modules/@babel/helper-simple-access/lib/index.js"),_core=__nested_webpack_require_1067668__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_dynamicImport=__nested_webpack_require_1067668__("./node_modules/.pnpm/@babel+plugin-transform-modules-commonjs@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-modules-commonjs/lib/dynamic-import.js"),_default=(0,_helperPluginUtils.declare)(((api,options)=>{var _api$assumption,_api$assumption2,_api$assumption3;api.assertVersion(7);const{strictNamespace=!1,mjsStrictNamespace=strictNamespace,allowTopLevelThis,strict,strictMode,noInterop,importInterop,lazy=!1,allowCommonJSExports=!0,loose=!1}=options,constantReexports=null!=(_api$assumption=api.assumption("constantReexports"))?_api$assumption:loose,enumerableModuleMeta=null!=(_api$assumption2=api.assumption("enumerableModuleMeta"))?_api$assumption2:loose,noIncompleteNsImportDetection=null!=(_api$assumption3=api.assumption("noIncompleteNsImportDetection"))&&_api$assumption3;if(!("boolean"==typeof lazy||"function"==typeof lazy||Array.isArray(lazy)&&lazy.every((item=>"string"==typeof item))))throw new Error(".lazy must be a boolean, array of strings, or a function");if("boolean"!=typeof strictNamespace)throw new Error(".strictNamespace must be a boolean, or undefined");if("boolean"!=typeof mjsStrictNamespace)throw new Error(".mjsStrictNamespace must be a boolean, or undefined");const getAssertion=localName=>_core.template.expression.ast`
    (function(){
      throw new Error(
        "The CommonJS '" + "${localName}" + "' variable is not available in ES6 modules." +
        "Consider setting setting sourceType:script or sourceType:unambiguous in your " +
        "Babel config for this file.");
    })()
  `,moduleExportsVisitor={ReferencedIdentifier(path){const localName=path.node.name;if("module"!==localName&&"exports"!==localName)return;const localBinding=path.scope.getBinding(localName);this.scope.getBinding(localName)!==localBinding||path.parentPath.isObjectProperty({value:path.node})&&path.parentPath.parentPath.isObjectPattern()||path.parentPath.isAssignmentExpression({left:path.node})||path.isAssignmentExpression({left:path.node})||path.replaceWith(getAssertion(localName))},UpdateExpression(path){const arg=path.get("argument");if(!arg.isIdentifier())return;const localName=arg.node.name;if("module"!==localName&&"exports"!==localName)return;const localBinding=path.scope.getBinding(localName);this.scope.getBinding(localName)===localBinding&&path.replaceWith(_core.types.assignmentExpression(path.node.operator[0]+"=",arg.node,getAssertion(localName)))},AssignmentExpression(path){const left=path.get("left");if(left.isIdentifier()){const localName=left.node.name;if("module"!==localName&&"exports"!==localName)return;const localBinding=path.scope.getBinding(localName);if(this.scope.getBinding(localName)!==localBinding)return;const right=path.get("right");right.replaceWith(_core.types.sequenceExpression([right.node,getAssertion(localName)]))}else if(left.isPattern()){const ids=left.getOuterBindingIdentifiers(),localName=Object.keys(ids).filter((localName=>("module"===localName||"exports"===localName)&&this.scope.getBinding(localName)===path.scope.getBinding(localName)))[0];if(localName){const right=path.get("right");right.replaceWith(_core.types.sequenceExpression([right.node,getAssertion(localName)]))}}}};return{name:"transform-modules-commonjs",pre(){this.file.set("@babel/plugin-transform-modules-*","commonjs")},visitor:{CallExpression(path){if(!this.file.has("@babel/plugin-proposal-dynamic-import"))return;if(!_core.types.isImport(path.node.callee))return;let{scope}=path;do{scope.rename("require")}while(scope=scope.parent);(0,_dynamicImport.transformDynamicImport)(path,noInterop,this.file)},Program:{exit(path,state){if(!(0,_helperModuleTransforms.isModule)(path))return;path.scope.rename("exports"),path.scope.rename("module"),path.scope.rename("require"),path.scope.rename("__filename"),path.scope.rename("__dirname"),allowCommonJSExports||((0,_helperSimpleAccess.default)(path,new Set(["module","exports"]),!1),path.traverse(moduleExportsVisitor,{scope:path.scope}));let moduleName=(0,_helperModuleTransforms.getModuleName)(this.file.opts,options);moduleName&&(moduleName=_core.types.stringLiteral(moduleName));const{meta,headers}=(0,_helperModuleTransforms.rewriteModuleStatementsAndPrepareHeader)(path,{exportName:"exports",constantReexports,enumerableModuleMeta,strict,strictMode,allowTopLevelThis,noInterop,importInterop,lazy,esNamespaceOnly:"string"==typeof state.filename&&/\.mjs$/.test(state.filename)?mjsStrictNamespace:strictNamespace,noIncompleteNsImportDetection,filename:this.file.opts.filename});for(const[source,metadata]of meta.source){const loadExpr=_core.types.callExpression(_core.types.identifier("require"),[_core.types.stringLiteral(source)]);let header;if((0,_helperModuleTransforms.isSideEffectImport)(metadata)){if(metadata.lazy)throw new Error("Assertion failure");header=_core.types.expressionStatement(loadExpr)}else{if(metadata.lazy&&!metadata.referenced)continue;const init=(0,_helperModuleTransforms.wrapInterop)(path,loadExpr,metadata.interop)||loadExpr;header=metadata.lazy?_core.template.statement.ast`
                  function ${metadata.name}() {
                    const data = ${init};
                    ${metadata.name} = function(){ return data; };
                    return data;
                  }
                `:_core.template.statement.ast`
                  var ${metadata.name} = ${init};
                `}header.loc=metadata.loc,headers.push(header),headers.push(...(0,_helperModuleTransforms.buildNamespaceInitStatements)(meta,metadata,constantReexports))}(0,_helperModuleTransforms.ensureStatementsHoisted)(headers),path.unshiftContainer("body",headers),path.get("body").forEach((path=>{-1!==headers.indexOf(path.node)&&path.isVariableDeclaration()&&path.scope.registerDeclaration(path)}))}}}}}));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/const-enum.js":(__unused_webpack_module,exports,__nested_webpack_require_1074338__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(path,t){const{name}=path.node.id,parentIsExport=path.parentPath.isExportNamedDeclaration();let isExported=parentIsExport;!isExported&&t.isProgram(path.parent)&&(isExported=path.parent.body.some((stmt=>t.isExportNamedDeclaration(stmt)&&"type"!==stmt.exportKind&&!stmt.source&&stmt.specifiers.some((spec=>t.isExportSpecifier(spec)&&"type"!==spec.exportKind&&spec.local.name===name)))));const{enumValues:entries}=(0,_enum.translateEnumValues)(path,t);if(isExported){const obj=t.objectExpression(entries.map((([name,value])=>t.objectProperty(t.isValidIdentifier(name)?t.identifier(name):t.stringLiteral(name),value))));return void(path.scope.hasOwnBinding(name)?(parentIsExport?path.parentPath:path).replaceWith(t.expressionStatement(t.callExpression(t.memberExpression(t.identifier("Object"),t.identifier("assign")),[path.node.id,obj]))):(path.replaceWith(t.variableDeclaration("var",[t.variableDeclarator(path.node.id,obj)])),path.scope.registerDeclaration(path)))}const entriesMap=new Map(entries);path.scope.path.traverse({Scope(path){path.scope.hasOwnBinding(name)&&path.skip()},MemberExpression(path){if(!t.isIdentifier(path.node.object,{name}))return;let key;if(path.node.computed){if(!t.isStringLiteral(path.node.property))return;key=path.node.property.value}else{if(!t.isIdentifier(path.node.property))return;key=path.node.property.name}entriesMap.has(key)&&path.replaceWith(t.cloneNode(entriesMap.get(key)))}}),path.remove()};var _enum=__nested_webpack_require_1074338__("./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/enum.js")},"./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/enum.js":(__unused_webpack_module,exports,__nested_webpack_require_1076239__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(path,t){const{node,parentPath}=path;if(node.declare)return void path.remove();const name=node.id.name,{fill,data,isPure}=function(path,t,id){const{enumValues:x,data,isPure}=translateEnumValues(path,t),assignments=x.map((([memberName,memberValue])=>buildEnumMember(t.isStringLiteral(memberValue),{ENUM:t.cloneNode(id),NAME:memberName,VALUE:memberValue})));return{fill:{ID:t.cloneNode(id),ASSIGNMENTS:assignments},data,isPure}}(path,t,node.id);switch(parentPath.type){case"BlockStatement":case"ExportNamedDeclaration":case"Program":{const isGlobal=t.isProgram(path.parent),isSeen=function seen(parentPath){if(parentPath.isExportDeclaration())return seen(parentPath.parentPath);return!!parentPath.getData(name)||(parentPath.setData(name,!0),!1)}(parentPath);let init=t.objectExpression([]);(isSeen||isGlobal)&&(init=t.logicalExpression("||",t.cloneNode(fill.ID),init));const enumIIFE=buildEnumWrapper(Object.assign({},fill,{INIT:init}));if(isPure&&(0,_helperAnnotateAsPure.default)(enumIIFE),isSeen){(parentPath.isExportDeclaration()?parentPath:path).replaceWith(t.expressionStatement(t.assignmentExpression("=",t.cloneNode(node.id),enumIIFE)))}else path.scope.registerDeclaration(path.replaceWith(t.variableDeclaration(isGlobal?"var":"let",[t.variableDeclarator(node.id,enumIIFE)]))[0]);ENUMS.set(path.scope.getBindingIdentifier(name),data);break}default:throw new Error(`Unexpected enum parent '${path.parent.type}`)}},exports.translateEnumValues=translateEnumValues;var _core=__nested_webpack_require_1076239__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),_assert=__nested_webpack_require_1076239__("assert"),_helperAnnotateAsPure=__nested_webpack_require_1076239__("./node_modules/.pnpm/@babel+helper-annotate-as-pure@7.22.5/node_modules/@babel/helper-annotate-as-pure/lib/index.js");const ENUMS=new WeakMap,buildEnumWrapper=_core.template.expression("\n    (function (ID) {\n      ASSIGNMENTS;\n      return ID;\n    })(INIT)\n  ");const buildStringAssignment=(0,_core.template)('\n  ENUM["NAME"] = VALUE;\n'),buildNumericAssignment=(0,_core.template)('\n  ENUM[ENUM["NAME"] = VALUE] = "NAME";\n'),buildEnumMember=(isString,options)=>(isString?buildStringAssignment:buildNumericAssignment)(options);function ReferencedIdentifier(expr,state){const{seen,path,t}=state,name=expr.node.name;seen.has(name)&&!expr.scope.hasOwnBinding(name)&&(expr.replaceWith(t.memberExpression(t.cloneNode(path.node.id),t.cloneNode(expr.node))),expr.skip())}const enumSelfReferenceVisitor={ReferencedIdentifier};function translateEnumValues(path,t){const seen=new Map;let lastName,constValue=-1,isPure=!0;const enumValues=path.get("members").map((memberPath=>{const member=memberPath.node,name=t.isIdentifier(member.id)?member.id.name:member.id.value,initializerPath=memberPath.get("initializer");let value;if(member.initializer)constValue=computeConstantValue(initializerPath,seen),void 0!==constValue?(seen.set(name,constValue),"number"==typeof constValue?value=t.numericLiteral(constValue):(_assert("string"==typeof constValue),value=t.stringLiteral(constValue))):(isPure&&(isPure=initializerPath.isPure()),initializerPath.isReferencedIdentifier()?ReferencedIdentifier(initializerPath,{t,seen,path}):initializerPath.traverse(enumSelfReferenceVisitor,{t,seen,path}),value=initializerPath.node,seen.set(name,void 0));else if("number"==typeof constValue)constValue+=1,value=t.numericLiteral(constValue),seen.set(name,constValue);else{if("string"==typeof constValue)throw path.buildCodeFrameError("Enum member must have initializer.");{const lastRef=t.memberExpression(t.cloneNode(path.node.id),t.stringLiteral(lastName),!0);value=t.binaryExpression("+",t.numericLiteral(1),lastRef),seen.set(name,void 0)}}return lastName=name,[name,value]}));return{isPure,data:seen,enumValues}}function computeConstantValue(path,prevMembers,seen=new Set){return evaluate(path);function evaluate(path){const expr=path.node;switch(expr.type){case"MemberExpression":case"Identifier":return evaluateRef(path,prevMembers,seen);case"StringLiteral":case"NumericLiteral":return expr.value;case"UnaryExpression":return function(path){const value=evaluate(path.get("argument"));if(void 0===value)return;switch(path.node.operator){case"+":return value;case"-":return-value;case"~":return~value;default:return}}(path);case"BinaryExpression":return function(path){const left=evaluate(path.get("left"));if(void 0===left)return;const right=evaluate(path.get("right"));if(void 0===right)return;switch(path.node.operator){case"|":return left|right;case"&":return left&right;case">>":return left>>right;case">>>":return left>>>right;case"<<":return left<<right;case"^":return left^right;case"*":return left*right;case"/":return left/right;case"+":return left+right;case"-":return left-right;case"%":return left%right;case"**":return Math.pow(left,right);default:return}}(path);case"ParenthesizedExpression":return evaluate(path.get("expression"));case"TemplateLiteral":{if(1===expr.quasis.length)return expr.quasis[0].value.cooked;const paths=path.get("expressions"),quasis=expr.quasis;let str="";for(let i=0;i<quasis.length;i++)if(str+=quasis[i].value.cooked,i+1<quasis.length){const value=evaluateRef(paths[i],prevMembers,seen);if(void 0===value)return;str+=value}return str}default:return}}function evaluateRef(path,prevMembers,seen){if(path.isMemberExpression()){const expr=path.node,obj=expr.object,prop=expr.property;if(!_core.types.isIdentifier(obj)||(expr.computed?!_core.types.isStringLiteral(prop):!_core.types.isIdentifier(prop)))return;const bindingIdentifier=path.scope.getBindingIdentifier(obj.name),data=ENUMS.get(bindingIdentifier);if(!data)return;return data.get(prop.computed?prop.value:prop.name)}if(path.isIdentifier()){const name=path.node.name;let value=null==prevMembers?void 0:prevMembers.get(name);if(void 0!==value)return value;if(seen.has(path.node))return;const bindingInitPath=path.resolve();if(bindingInitPath)return seen.add(path.node),value=computeConstantValue(bindingInitPath,void 0,seen),null==prevMembers||prevMembers.set(name,value),value}}}},"./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1082550__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperPluginUtils=__nested_webpack_require_1082550__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),_pluginSyntaxTypescript=__nested_webpack_require_1082550__("./node_modules/.pnpm/@babel+plugin-syntax-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-typescript/lib/index.js"),_helperCreateClassFeaturesPlugin=__nested_webpack_require_1082550__("./node_modules/.pnpm/@babel+helper-create-class-features-plugin@7.22.6_@babel+core@7.22.6/node_modules/@babel/helper-create-class-features-plugin/lib/index.js"),_constEnum=__nested_webpack_require_1082550__("./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/const-enum.js"),_enum=__nested_webpack_require_1082550__("./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/enum.js"),_namespace=__nested_webpack_require_1082550__("./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/namespace.js");function isInType(path){switch(path.parent.type){case"TSTypeReference":case"TSExpressionWithTypeArguments":case"TSTypeQuery":return!0;case"TSQualifiedName":return"TSImportEqualsDeclaration"!==path.parentPath.findParent((path=>"TSQualifiedName"!==path.type)).type;case"ExportSpecifier":return"type"===path.parent.exportKind||"type"===path.parentPath.parent.exportKind;default:return!1}}const GLOBAL_TYPES=new WeakMap,NEEDS_EXPLICIT_ESM=new WeakMap,PARSED_PARAMS=new WeakSet;function isGlobalType({scope},name){return!scope.hasBinding(name)&&(!!GLOBAL_TYPES.get(scope).has(name)||(console.warn(`The exported identifier "${name}" is not declared in Babel's scope tracker\nas a JavaScript value binding, and "@babel/plugin-transform-typescript"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n"${name}" without registering it in the scope tracker. If you are the author\n of that plugin, please use "scope.registerDeclaration(declarationPath)".`),!1))}function registerGlobalType(programScope,name){GLOBAL_TYPES.get(programScope).add(name)}function safeRemove(path){const ids=path.getBindingIdentifiers();for(const name of Object.keys(ids)){const binding=path.scope.getBinding(name);binding&&binding.identifier===ids[name]&&binding.scope.removeBinding(name)}path.opts.noScope=!0,path.remove(),path.opts.noScope=!1}function assertCjsTransformEnabled(path,pass,wrong,suggestion,extra=""){if("commonjs"!==pass.file.get("@babel/plugin-transform-modules-*"))throw path.buildCodeFrameError(`\`${wrong}\` is only supported when compiling modules to CommonJS.\nPlease consider using \`${suggestion}\`${extra}, or add @babel/plugin-transform-modules-commonjs to your Babel config.`)}var _default=(0,_helperPluginUtils.declare)(((api,opts)=>{const{types:t,template}=api;api.assertVersion(7);const JSX_PRAGMA_REGEX=/\*?\s*@jsx((?:Frag)?)\s+([^\s]+)/,{allowNamespaces=!0,jsxPragma="React.createElement",jsxPragmaFrag="React.Fragment",onlyRemoveTypeImports=!1,optimizeConstEnums=!1}=opts;var{allowDeclareFields=!1}=opts;const classMemberVisitors={field(path){const{node}=path;if(!allowDeclareFields&&node.declare)throw path.buildCodeFrameError("The 'declare' modifier is only allowed when the 'allowDeclareFields' option of @babel/plugin-transform-typescript or @babel/preset-typescript is enabled.");if(node.declare){if(node.value)throw path.buildCodeFrameError("Fields with the 'declare' modifier cannot be initialized here, but only in the constructor");node.decorators||path.remove()}else if(node.definite){if(node.value)throw path.buildCodeFrameError("Definitely assigned fields cannot be initialized here, but only in the constructor");allowDeclareFields||node.decorators||t.isClassPrivateProperty(node)||path.remove()}else node.abstract?path.remove():allowDeclareFields||node.value||node.decorators||t.isClassPrivateProperty(node)||path.remove();node.accessibility&&(node.accessibility=null),node.abstract&&(node.abstract=null),node.readonly&&(node.readonly=null),node.optional&&(node.optional=null),node.typeAnnotation&&(node.typeAnnotation=null),node.definite&&(node.definite=null),node.declare&&(node.declare=null),node.override&&(node.override=null)},method({node}){node.accessibility&&(node.accessibility=null),node.abstract&&(node.abstract=null),node.optional&&(node.optional=null),node.override&&(node.override=null)},constructor(path,classPath){path.node.accessibility&&(path.node.accessibility=null);const assigns=[],{scope}=path;for(const paramPath of path.get("params")){const param=paramPath.node;if("TSParameterProperty"===param.type){const parameter=param.parameter;if(PARSED_PARAMS.has(parameter))continue;let id;if(PARSED_PARAMS.add(parameter),t.isIdentifier(parameter))id=parameter;else{if(!t.isAssignmentPattern(parameter)||!t.isIdentifier(parameter.left))throw paramPath.buildCodeFrameError("Parameter properties can not be destructuring patterns.");id=parameter.left}assigns.push(template.statement.ast`
          this.${t.cloneNode(id)} = ${t.cloneNode(id)}`),paramPath.replaceWith(paramPath.get("parameter")),scope.registerBinding("param",paramPath)}}(0,_helperCreateClassFeaturesPlugin.injectInitialization)(classPath,path,assigns)}};return{name:"transform-typescript",inherits:_pluginSyntaxTypescript.default,visitor:{Pattern:visitPattern,Identifier:visitPattern,RestElement:visitPattern,Program:{enter(path,state){const{file}=state;let fileJsxPragma=null,fileJsxPragmaFrag=null;const programScope=path.scope;if(GLOBAL_TYPES.has(programScope)||GLOBAL_TYPES.set(programScope,new Set),file.ast.comments)for(const comment of file.ast.comments){const jsxMatches=JSX_PRAGMA_REGEX.exec(comment.value);jsxMatches&&(jsxMatches[1]?fileJsxPragmaFrag=jsxMatches[2]:fileJsxPragma=jsxMatches[2])}let pragmaImportName=fileJsxPragma||jsxPragma;pragmaImportName&&([pragmaImportName]=pragmaImportName.split("."));let pragmaFragImportName=fileJsxPragmaFrag||jsxPragmaFrag;pragmaFragImportName&&([pragmaFragImportName]=pragmaFragImportName.split("."));for(let stmt of path.get("body"))if(stmt.isImportDeclaration()){if(NEEDS_EXPLICIT_ESM.has(state.file.ast.program)||NEEDS_EXPLICIT_ESM.set(state.file.ast.program,!0),"type"===stmt.node.importKind){for(const specifier of stmt.node.specifiers)registerGlobalType(programScope,specifier.local.name);stmt.remove();continue}const importsToRemove=new Set,specifiersLength=stmt.node.specifiers.length,isAllSpecifiersElided=()=>specifiersLength>0&&specifiersLength===importsToRemove.size;for(const specifier of stmt.node.specifiers)if("ImportSpecifier"===specifier.type&&"type"===specifier.importKind){registerGlobalType(programScope,specifier.local.name);const binding=stmt.scope.getBinding(specifier.local.name);binding&&importsToRemove.add(binding.path)}if(onlyRemoveTypeImports)NEEDS_EXPLICIT_ESM.set(path.node,!1);else{if(0===stmt.node.specifiers.length){NEEDS_EXPLICIT_ESM.set(path.node,!1);continue}for(const specifier of stmt.node.specifiers){const binding=stmt.scope.getBinding(specifier.local.name);binding&&!importsToRemove.has(binding.path)&&(isImportTypeOnly({binding,programPath:path,pragmaImportName,pragmaFragImportName})?importsToRemove.add(binding.path):NEEDS_EXPLICIT_ESM.set(path.node,!1))}}if(isAllSpecifiersElided()&&!onlyRemoveTypeImports)stmt.remove();else for(const importPath of importsToRemove)importPath.remove()}else if(stmt.isExportDeclaration()&&(stmt=stmt.get("declaration")),stmt.isVariableDeclaration({declare:!0}))for(const name of Object.keys(stmt.getBindingIdentifiers()))registerGlobalType(programScope,name);else(stmt.isTSTypeAliasDeclaration()||stmt.isTSDeclareFunction()&&stmt.get("id").isIdentifier()||stmt.isTSInterfaceDeclaration()||stmt.isClassDeclaration({declare:!0})||stmt.isTSEnumDeclaration({declare:!0})||stmt.isTSModuleDeclaration({declare:!0})&&stmt.get("id").isIdentifier())&&registerGlobalType(programScope,stmt.node.id.name)},exit(path){"module"===path.node.sourceType&&NEEDS_EXPLICIT_ESM.get(path.node)&&path.pushContainer("body",t.exportNamedDeclaration())}},ExportNamedDeclaration(path,state){NEEDS_EXPLICIT_ESM.has(state.file.ast.program)||NEEDS_EXPLICIT_ESM.set(state.file.ast.program,!0),"type"!==path.node.exportKind?path.node.source&&path.node.specifiers.length>0&&path.node.specifiers.every((specifier=>"ExportSpecifier"===specifier.type&&"type"===specifier.exportKind))||!path.node.source&&path.node.specifiers.length>0&&path.node.specifiers.every((specifier=>t.isExportSpecifier(specifier)&&isGlobalType(path,specifier.local.name)))?path.remove():NEEDS_EXPLICIT_ESM.set(state.file.ast.program,!1):path.remove()},ExportAllDeclaration(path){"type"===path.node.exportKind&&path.remove()},ExportSpecifier(path){(!path.parent.source&&isGlobalType(path,path.node.local.name)||"type"===path.node.exportKind)&&path.remove()},ExportDefaultDeclaration(path,state){NEEDS_EXPLICIT_ESM.has(state.file.ast.program)||NEEDS_EXPLICIT_ESM.set(state.file.ast.program,!0),t.isIdentifier(path.node.declaration)&&isGlobalType(path,path.node.declaration.name)?path.remove():NEEDS_EXPLICIT_ESM.set(state.file.ast.program,!1)},TSDeclareFunction(path){safeRemove(path)},TSDeclareMethod(path){safeRemove(path)},VariableDeclaration(path){path.node.declare&&safeRemove(path)},VariableDeclarator({node}){node.definite&&(node.definite=null)},TSIndexSignature(path){path.remove()},ClassDeclaration(path){const{node}=path;node.declare&&safeRemove(path)},Class(path){const{node}=path;node.typeParameters&&(node.typeParameters=null),node.superTypeParameters&&(node.superTypeParameters=null),node.implements&&(node.implements=null),node.abstract&&(node.abstract=null),path.get("body.body").forEach((child=>{child.isClassMethod()||child.isClassPrivateMethod()?"constructor"===child.node.kind?classMemberVisitors.constructor(child,path):classMemberVisitors.method(child):(child.isClassProperty()||child.isClassPrivateProperty()||child.isClassAccessorProperty())&&classMemberVisitors.field(child)}))},Function(path){const{node}=path;node.typeParameters&&(node.typeParameters=null),node.returnType&&(node.returnType=null);const params=node.params;params.length>0&&t.isIdentifier(params[0],{name:"this"})&&params.shift()},TSModuleDeclaration(path){(0,_namespace.default)(path,allowNamespaces)},TSInterfaceDeclaration(path){path.remove()},TSTypeAliasDeclaration(path){path.remove()},TSEnumDeclaration(path){optimizeConstEnums&&path.node.const?(0,_constEnum.default)(path,t):(0,_enum.default)(path,t)},TSImportEqualsDeclaration(path,pass){const{id,moduleReference}=path.node;let init,varKind;t.isTSExternalModuleReference(moduleReference)?(assertCjsTransformEnabled(path,pass,`import ${id.name} = require(...);`,`import ${id.name} from '...';`," alongside Typescript's --allowSyntheticDefaultImports option"),init=t.callExpression(t.identifier("require"),[moduleReference.expression]),varKind="const"):(init=entityNameToExpr(moduleReference),varKind="var"),path.replaceWith(t.variableDeclaration(varKind,[t.variableDeclarator(id,init)])),path.scope.registerDeclaration(path)},TSExportAssignment(path,pass){assertCjsTransformEnabled(path,pass,"export = <value>;","export default <value>;"),path.replaceWith(template.statement.ast`module.exports = ${path.node.expression}`)},TSTypeAssertion(path){path.replaceWith(path.node.expression)},["TSAsExpression"+(t.tsSatisfiesExpression?"|TSSatisfiesExpression":"")](path){let{node}=path;do{node=node.expression}while(t.isTSAsExpression(node)||null!=t.isTSSatisfiesExpression&&t.isTSSatisfiesExpression(node));path.replaceWith(node)},[api.types.tsInstantiationExpression?"TSNonNullExpression|TSInstantiationExpression":"TSNonNullExpression"](path){path.replaceWith(path.node.expression)},CallExpression(path){path.node.typeParameters=null},OptionalCallExpression(path){path.node.typeParameters=null},NewExpression(path){path.node.typeParameters=null},JSXOpeningElement(path){path.node.typeParameters=null},TaggedTemplateExpression(path){path.node.typeParameters=null}}};function entityNameToExpr(node){return t.isTSQualifiedName(node)?t.memberExpression(entityNameToExpr(node.left),node.right):node}function visitPattern({node}){node.typeAnnotation&&(node.typeAnnotation=null),t.isIdentifier(node)&&node.optional&&(node.optional=null)}function isImportTypeOnly({binding,programPath,pragmaImportName,pragmaFragImportName}){for(const path of binding.referencePaths)if(!isInType(path))return!1;if(binding.identifier.name!==pragmaImportName&&binding.identifier.name!==pragmaFragImportName)return!0;let sourceFileHasJsx=!1;return programPath.traverse({"JSXElement|JSXFragment"(path){sourceFileHasJsx=!0,path.stop()}}),!sourceFileHasJsx}}));exports.default=_default},"./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/namespace.js":(__unused_webpack_module,exports,__nested_webpack_require_1095609__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(path,allowNamespaces){if(path.node.declare||"StringLiteral"===path.node.id.type)return void path.remove();if(!allowNamespaces)throw path.get("id").buildCodeFrameError("Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel. To enable and review caveats see: https://babeljs.io/docs/en/babel-plugin-transform-typescript");const name=path.node.id.name,value=handleNested(path,_core.types.cloneNode(path.node,!0)),bound=path.scope.hasOwnBinding(name);"ExportNamedDeclaration"===path.parent.type?bound?path.parentPath.replaceWith(value):(path.parentPath.insertAfter(value),path.replaceWith(getDeclaration(name)),path.scope.registerDeclaration(path.parentPath)):bound?path.replaceWith(value):path.scope.registerDeclaration(path.replaceWithMultiple([getDeclaration(name),value])[0])};var _core=__nested_webpack_require_1095609__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js");function getDeclaration(name){return _core.types.variableDeclaration("let",[_core.types.variableDeclarator(_core.types.identifier(name))])}function getMemberExpression(name,itemName){return _core.types.memberExpression(_core.types.identifier(name),_core.types.identifier(itemName))}function handleVariableDeclaration(node,name,hub){if("const"!==node.kind)throw hub.file.buildCodeFrameError(node,"Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript");const{declarations}=node;if(declarations.every((declarator=>_core.types.isIdentifier(declarator.id)))){for(const declarator of declarations)declarator.init=_core.types.assignmentExpression("=",getMemberExpression(name,declarator.id.name),declarator.init);return[node]}const bindingIdentifiers=_core.types.getBindingIdentifiers(node),assignments=[];for(const idName in bindingIdentifiers)assignments.push(_core.types.assignmentExpression("=",getMemberExpression(name,idName),_core.types.cloneNode(bindingIdentifiers[idName])));return[node,_core.types.expressionStatement(_core.types.sequenceExpression(assignments))]}function buildNestedAmbientModuleError(path,node){return path.hub.buildError(node,"Ambient modules cannot be nested in other modules or namespaces.",Error)}function handleNested(path,node,parentExport){const names=new Set,realName=node.id;_core.types.assertIdentifier(realName);const name=path.scope.generateUid(realName.name),namespaceTopLevel=_core.types.isTSModuleBlock(node.body)?node.body.body:[_core.types.exportNamedDeclaration(node.body)];for(let i=0;i<namespaceTopLevel.length;i++){const subNode=namespaceTopLevel[i];switch(subNode.type){case"TSModuleDeclaration":{if(!_core.types.isIdentifier(subNode.id))throw buildNestedAmbientModuleError(path,subNode);const transformed=handleNested(path,subNode),moduleName=subNode.id.name;names.has(moduleName)?namespaceTopLevel[i]=transformed:(names.add(moduleName),namespaceTopLevel.splice(i++,1,getDeclaration(moduleName),transformed));continue}case"TSEnumDeclaration":case"FunctionDeclaration":case"ClassDeclaration":names.add(subNode.id.name);continue;case"VariableDeclaration":for(const name in _core.types.getBindingIdentifiers(subNode))names.add(name);continue;default:continue;case"ExportNamedDeclaration":}if(!("declare"in subNode.declaration)||!subNode.declaration.declare)switch(subNode.declaration.type){case"TSEnumDeclaration":case"FunctionDeclaration":case"ClassDeclaration":{const itemName=subNode.declaration.id.name;names.add(itemName),namespaceTopLevel.splice(i++,1,subNode.declaration,_core.types.expressionStatement(_core.types.assignmentExpression("=",getMemberExpression(name,itemName),_core.types.identifier(itemName))));break}case"VariableDeclaration":{const nodes=handleVariableDeclaration(subNode.declaration,name,path.hub);namespaceTopLevel.splice(i,nodes.length,...nodes),i+=nodes.length-1;break}case"TSModuleDeclaration":{if(!_core.types.isIdentifier(subNode.declaration.id))throw buildNestedAmbientModuleError(path,subNode.declaration);const transformed=handleNested(path,subNode.declaration,_core.types.identifier(name)),moduleName=subNode.declaration.id.name;names.has(moduleName)?namespaceTopLevel[i]=transformed:(names.add(moduleName),namespaceTopLevel.splice(i++,1,getDeclaration(moduleName),transformed))}}}let fallthroughValue=_core.types.objectExpression([]);if(parentExport){const memberExpr=_core.types.memberExpression(parentExport,realName);fallthroughValue=_core.template.expression.ast`
      ${_core.types.cloneNode(memberExpr)} ||
        (${_core.types.cloneNode(memberExpr)} = ${fallthroughValue})
    `}return _core.template.statement.ast`
    (function (${_core.types.identifier(name)}) {
      ${namespaceTopLevel}
    })(${realName} || (${_core.types.cloneNode(realName)} = ${fallthroughValue}));
  `}},"./node_modules/.pnpm/@babel+preset-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/preset-typescript/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1100689__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helperPluginUtils=__nested_webpack_require_1100689__("./node_modules/.pnpm/@babel+helper-plugin-utils@7.22.5/node_modules/@babel/helper-plugin-utils/lib/index.js"),transformTypeScript=__nested_webpack_require_1100689__("./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/index.js");__nested_webpack_require_1100689__("./node_modules/.pnpm/@babel+plugin-syntax-jsx@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-jsx/lib/index.js");var transformModulesCommonJS=__nested_webpack_require_1100689__("./node_modules/.pnpm/@babel+plugin-transform-modules-commonjs@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-modules-commonjs/lib/index.js"),helperValidatorOption=__nested_webpack_require_1100689__("./node_modules/.pnpm/@babel+helper-validator-option@7.22.5/node_modules/@babel/helper-validator-option/lib/index.js");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var transformTypeScript__default=_interopDefaultLegacy(transformTypeScript),transformModulesCommonJS__default=_interopDefaultLegacy(transformModulesCommonJS);const v=new helperValidatorOption.OptionValidator("@babel/preset-typescript");var index=helperPluginUtils.declarePreset(((api,opts)=>{api.assertVersion(7);const{allExtensions,ignoreExtensions,allowNamespaces,disallowAmbiguousJSXLike,isTSX,jsxPragma,jsxPragmaFrag,onlyRemoveTypeImports,optimizeConstEnums}=function(options={}){let{allowNamespaces=!0,jsxPragma,onlyRemoveTypeImports}=options;const TopLevelOptions_ignoreExtensions="ignoreExtensions",TopLevelOptions_disallowAmbiguousJSXLike="disallowAmbiguousJSXLike",TopLevelOptions_jsxPragmaFrag="jsxPragmaFrag",TopLevelOptions_optimizeConstEnums="optimizeConstEnums",TopLevelOptions_allExtensions="allExtensions",TopLevelOptions_isTSX="isTSX",jsxPragmaFrag=v.validateStringOption(TopLevelOptions_jsxPragmaFrag,options.jsxPragmaFrag,"React.Fragment");var allExtensions=v.validateBooleanOption(TopLevelOptions_allExtensions,options.allExtensions,!1),isTSX=v.validateBooleanOption(TopLevelOptions_isTSX,options.isTSX,!1);isTSX&&v.invariant(allExtensions,"isTSX:true requires allExtensions:true");const ignoreExtensions=v.validateBooleanOption(TopLevelOptions_ignoreExtensions,options.ignoreExtensions,!1),disallowAmbiguousJSXLike=v.validateBooleanOption(TopLevelOptions_disallowAmbiguousJSXLike,options.disallowAmbiguousJSXLike,!1);disallowAmbiguousJSXLike&&v.invariant(allExtensions,"disallowAmbiguousJSXLike:true requires allExtensions:true");const normalized={ignoreExtensions,allowNamespaces,disallowAmbiguousJSXLike,jsxPragma,jsxPragmaFrag,onlyRemoveTypeImports,optimizeConstEnums:v.validateBooleanOption(TopLevelOptions_optimizeConstEnums,options.optimizeConstEnums,!1)};return normalized.allExtensions=allExtensions,normalized.isTSX=isTSX,normalized}(opts),pluginOptions=disallowAmbiguousJSXLike=>({allowDeclareFields:opts.allowDeclareFields,allowNamespaces,disallowAmbiguousJSXLike,jsxPragma,jsxPragmaFrag,onlyRemoveTypeImports,optimizeConstEnums}),getPlugins=(isTSX,disallowAmbiguousJSXLike)=>[[transformTypeScript__default.default,Object.assign({isTSX},pluginOptions(disallowAmbiguousJSXLike))]];return{overrides:allExtensions||ignoreExtensions?[{plugins:getPlugins(isTSX,disallowAmbiguousJSXLike)}]:[{test:/\.ts$/,plugins:getPlugins(!1,!1)},{test:/\.mts$/,sourceType:"module",plugins:getPlugins(!1,!0)},{test:/\.cts$/,sourceType:"unambiguous",plugins:[[transformModulesCommonJS__default.default,{allowTopLevelThis:!0}],[transformTypeScript__default.default,pluginOptions(!0)]]},{test:/\.tsx$/,plugins:getPlugins(!0,!1)}]}}));exports.default=index},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/builder.js":(__unused_webpack_module,exports,__nested_webpack_require_1104513__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function createTemplateBuilder(formatter,defaultOpts){const templateFnCache=new WeakMap,templateAstCache=new WeakMap,cachedOpts=defaultOpts||(0,_options.validate)(null);return Object.assign(((tpl,...args)=>{if("string"==typeof tpl){if(args.length>1)throw new Error("Unexpected extra params.");return extendedTrace((0,_string.default)(formatter,tpl,(0,_options.merge)(cachedOpts,(0,_options.validate)(args[0]))))}if(Array.isArray(tpl)){let builder=templateFnCache.get(tpl);return builder||(builder=(0,_literal.default)(formatter,tpl,cachedOpts),templateFnCache.set(tpl,builder)),extendedTrace(builder(args))}if("object"==typeof tpl&&tpl){if(args.length>0)throw new Error("Unexpected extra params.");return createTemplateBuilder(formatter,(0,_options.merge)(cachedOpts,(0,_options.validate)(tpl)))}throw new Error("Unexpected template param "+typeof tpl)}),{ast:(tpl,...args)=>{if("string"==typeof tpl){if(args.length>1)throw new Error("Unexpected extra params.");return(0,_string.default)(formatter,tpl,(0,_options.merge)((0,_options.merge)(cachedOpts,(0,_options.validate)(args[0])),NO_PLACEHOLDER))()}if(Array.isArray(tpl)){let builder=templateAstCache.get(tpl);return builder||(builder=(0,_literal.default)(formatter,tpl,(0,_options.merge)(cachedOpts,NO_PLACEHOLDER)),templateAstCache.set(tpl,builder)),builder(args)()}throw new Error("Unexpected template param "+typeof tpl)}})};var _options=__nested_webpack_require_1104513__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/options.js"),_string=__nested_webpack_require_1104513__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/string.js"),_literal=__nested_webpack_require_1104513__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/literal.js");const NO_PLACEHOLDER=(0,_options.validate)({placeholderPattern:!1});function extendedTrace(fn){let rootStack="";try{throw new Error}catch(error){error.stack&&(rootStack=error.stack.split("\n").slice(3).join("\n"))}return arg=>{try{return fn(arg)}catch(err){throw err.stack+=`\n    =============\n${rootStack}`,err}}}},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/formatters.js":(__unused_webpack_module,exports,__nested_webpack_require_1106808__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.statements=exports.statement=exports.smart=exports.program=exports.expression=void 0;var _t=__nested_webpack_require_1106808__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{assertExpressionStatement}=_t;function makeStatementFormatter(fn){return{code:str=>`/* @babel/template */;\n${str}`,validate:()=>{},unwrap:ast=>fn(ast.program.body.slice(1))}}const smart=makeStatementFormatter((body=>body.length>1?body:body[0]));exports.smart=smart;const statements=makeStatementFormatter((body=>body));exports.statements=statements;const statement=makeStatementFormatter((body=>{if(0===body.length)throw new Error("Found nothing to return.");if(body.length>1)throw new Error("Found multiple statements but wanted one");return body[0]}));exports.statement=statement;const expression={code:str=>`(\n${str}\n)`,validate:ast=>{if(ast.program.body.length>1)throw new Error("Found multiple statements but wanted one");if(0===expression.unwrap(ast).start)throw new Error("Parse result included parens.")},unwrap:({program})=>{const[stmt]=program.body;return assertExpressionStatement(stmt),stmt.expression}};exports.expression=expression;exports.program={code:str=>str,validate:()=>{},unwrap:ast=>ast.program}},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1108251__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.statements=exports.statement=exports.smart=exports.program=exports.expression=exports.default=void 0;var formatters=__nested_webpack_require_1108251__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/formatters.js"),_builder=__nested_webpack_require_1108251__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/builder.js");const smart=(0,_builder.default)(formatters.smart);exports.smart=smart;const statement=(0,_builder.default)(formatters.statement);exports.statement=statement;const statements=(0,_builder.default)(formatters.statements);exports.statements=statements;const expression=(0,_builder.default)(formatters.expression);exports.expression=expression;const program=(0,_builder.default)(formatters.program);exports.program=program;var _default=Object.assign(smart.bind(void 0),{smart,statement,statements,expression,program,ast:smart.ast});exports.default=_default},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/literal.js":(__unused_webpack_module,exports,__nested_webpack_require_1109377__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(formatter,tpl,opts){const{metadata,names}=function(formatter,tpl,opts){let prefix="BABEL_TPL$";const raw=tpl.join("");do{prefix="$$"+prefix}while(raw.includes(prefix));const{names,code}=function(tpl,prefix){const names=[];let code=tpl[0];for(let i=1;i<tpl.length;i++){const value=`${prefix}${i-1}`;names.push(value),code+=value+tpl[i]}return{names,code}}(tpl,prefix),metadata=(0,_parse.default)(formatter,formatter.code(code),{parser:opts.parser,placeholderWhitelist:new Set(names.concat(opts.placeholderWhitelist?Array.from(opts.placeholderWhitelist):[])),placeholderPattern:opts.placeholderPattern,preserveComments:opts.preserveComments,syntacticPlaceholders:opts.syntacticPlaceholders});return{metadata,names}}(formatter,tpl,opts);return arg=>{const defaultReplacements={};return arg.forEach(((replacement,i)=>{defaultReplacements[names[i]]=replacement})),arg=>{const replacements=(0,_options.normalizeReplacements)(arg);return replacements&&Object.keys(replacements).forEach((key=>{if(Object.prototype.hasOwnProperty.call(defaultReplacements,key))throw new Error("Unexpected replacement overlap.")})),formatter.unwrap((0,_populate.default)(metadata,replacements?Object.assign(replacements,defaultReplacements):defaultReplacements))}}};var _options=__nested_webpack_require_1109377__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/options.js"),_parse=__nested_webpack_require_1109377__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/parse.js"),_populate=__nested_webpack_require_1109377__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/populate.js")},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/options.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.merge=function(a,b){const{placeholderWhitelist=a.placeholderWhitelist,placeholderPattern=a.placeholderPattern,preserveComments=a.preserveComments,syntacticPlaceholders=a.syntacticPlaceholders}=b;return{parser:Object.assign({},a.parser,b.parser),placeholderWhitelist,placeholderPattern,preserveComments,syntacticPlaceholders}},exports.normalizeReplacements=function(replacements){if(Array.isArray(replacements))return replacements.reduce(((acc,replacement,i)=>(acc["$"+i]=replacement,acc)),{});if("object"==typeof replacements||null==replacements)return replacements||void 0;throw new Error("Template replacements must be an array, object, null, or undefined")},exports.validate=function(opts){if(null!=opts&&"object"!=typeof opts)throw new Error("Unknown template options.");const _ref=opts||{},{placeholderWhitelist,placeholderPattern,preserveComments,syntacticPlaceholders}=_ref,parser=function(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_ref,_excluded);if(null!=placeholderWhitelist&&!(placeholderWhitelist instanceof Set))throw new Error("'.placeholderWhitelist' must be a Set, null, or undefined");if(null!=placeholderPattern&&!(placeholderPattern instanceof RegExp)&&!1!==placeholderPattern)throw new Error("'.placeholderPattern' must be a RegExp, false, null, or undefined");if(null!=preserveComments&&"boolean"!=typeof preserveComments)throw new Error("'.preserveComments' must be a boolean, null, or undefined");if(null!=syntacticPlaceholders&&"boolean"!=typeof syntacticPlaceholders)throw new Error("'.syntacticPlaceholders' must be a boolean, null, or undefined");if(!0===syntacticPlaceholders&&(null!=placeholderWhitelist||null!=placeholderPattern))throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");return{parser,placeholderWhitelist:placeholderWhitelist||void 0,placeholderPattern:null==placeholderPattern?void 0:placeholderPattern,preserveComments:null==preserveComments?void 0:preserveComments,syntacticPlaceholders:null==syntacticPlaceholders?void 0:syntacticPlaceholders}};const _excluded=["placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders"]},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/parse.js":(__unused_webpack_module,exports,__nested_webpack_require_1113754__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(formatter,code,opts){const{placeholderWhitelist,placeholderPattern,preserveComments,syntacticPlaceholders}=opts,ast=function(code,parserOpts,syntacticPlaceholders){const plugins=(parserOpts.plugins||[]).slice();!1!==syntacticPlaceholders&&plugins.push("placeholders");parserOpts=Object.assign({allowReturnOutsideFunction:!0,allowSuperOutsideMethod:!0,sourceType:"module"},parserOpts,{plugins});try{return(0,_parser.parse)(code,parserOpts)}catch(err){const loc=err.loc;throw loc&&(err.message+="\n"+(0,_codeFrame.codeFrameColumns)(code,{start:loc}),err.code="BABEL_TEMPLATE_PARSE_ERROR"),err}}(code,opts.parser,syntacticPlaceholders);removePropertiesDeep(ast,{preserveComments}),formatter.validate(ast);const state={syntactic:{placeholders:[],placeholderNames:new Set},legacy:{placeholders:[],placeholderNames:new Set},placeholderWhitelist,placeholderPattern,syntacticPlaceholders};return traverse(ast,placeholderVisitorHandler,state),Object.assign({ast},state.syntactic.placeholders.length?state.syntactic:state.legacy)};var _t=__nested_webpack_require_1113754__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_parser=__nested_webpack_require_1113754__("./node_modules/.pnpm/@babel+parser@7.22.6/node_modules/@babel/parser/lib/index.js"),_codeFrame=__nested_webpack_require_1113754__("./stubs/babel-codeframe.js");const{isCallExpression,isExpressionStatement,isFunction,isIdentifier,isJSXIdentifier,isNewExpression,isPlaceholder,isStatement,isStringLiteral,removePropertiesDeep,traverse}=_t,PATTERN=/^[_$A-Z0-9]+$/;function placeholderVisitorHandler(node,ancestors,state){var _state$placeholderWhi;let name,hasSyntacticPlaceholders=state.syntactic.placeholders.length>0;if(isPlaceholder(node)){if(!1===state.syntacticPlaceholders)throw new Error("%%foo%%-style placeholders can't be used when '.syntacticPlaceholders' is false.");name=node.name.name,hasSyntacticPlaceholders=!0}else{if(hasSyntacticPlaceholders||state.syntacticPlaceholders)return;if(isIdentifier(node)||isJSXIdentifier(node))name=node.name;else{if(!isStringLiteral(node))return;name=node.value}}if(hasSyntacticPlaceholders&&(null!=state.placeholderPattern||null!=state.placeholderWhitelist))throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");if(!(hasSyntacticPlaceholders||!1!==state.placeholderPattern&&(state.placeholderPattern||PATTERN).test(name)||null!=(_state$placeholderWhi=state.placeholderWhitelist)&&_state$placeholderWhi.has(name)))return;ancestors=ancestors.slice();const{node:parent,key}=ancestors[ancestors.length-1];let type;isStringLiteral(node)||isPlaceholder(node,{expectedNode:"StringLiteral"})?type="string":isNewExpression(parent)&&"arguments"===key||isCallExpression(parent)&&"arguments"===key||isFunction(parent)&&"params"===key?type="param":isExpressionStatement(parent)&&!isPlaceholder(node)?(type="statement",ancestors=ancestors.slice(0,-1)):type=isStatement(node)&&isPlaceholder(node)?"statement":"other";const{placeholders,placeholderNames}=hasSyntacticPlaceholders?state.syntactic:state.legacy;placeholders.push({name,type,resolve:ast=>function(ast,ancestors){let parent=ast;for(let i=0;i<ancestors.length-1;i++){const{key,index}=ancestors[i];parent=void 0===index?parent[key]:parent[key][index]}const{key,index}=ancestors[ancestors.length-1];return{parent,key,index}}(ast,ancestors),isDuplicate:placeholderNames.has(name)}),placeholderNames.add(name)}},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/populate.js":(__unused_webpack_module,exports,__nested_webpack_require_1117407__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(metadata,replacements){const ast=cloneNode(metadata.ast);replacements&&(metadata.placeholders.forEach((placeholder=>{if(!Object.prototype.hasOwnProperty.call(replacements,placeholder.name)){const placeholderName=placeholder.name;throw new Error(`Error: No substitution given for "${placeholderName}". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`)}})),Object.keys(replacements).forEach((key=>{if(!metadata.placeholderNames.has(key))throw new Error(`Unknown substitution "${key}" given`)})));return metadata.placeholders.slice().reverse().forEach((placeholder=>{try{!function(placeholder,ast,replacement){placeholder.isDuplicate&&(Array.isArray(replacement)?replacement=replacement.map((node=>cloneNode(node))):"object"==typeof replacement&&(replacement=cloneNode(replacement)));const{parent,key,index}=placeholder.resolve(ast);if("string"===placeholder.type){if("string"==typeof replacement&&(replacement=stringLiteral(replacement)),!replacement||!isStringLiteral(replacement))throw new Error("Expected string substitution")}else if("statement"===placeholder.type)void 0===index?replacement?Array.isArray(replacement)?replacement=blockStatement(replacement):"string"==typeof replacement?replacement=expressionStatement(identifier(replacement)):isStatement(replacement)||(replacement=expressionStatement(replacement)):replacement=emptyStatement():replacement&&!Array.isArray(replacement)&&("string"==typeof replacement&&(replacement=identifier(replacement)),isStatement(replacement)||(replacement=expressionStatement(replacement)));else if("param"===placeholder.type){if("string"==typeof replacement&&(replacement=identifier(replacement)),void 0===index)throw new Error("Assertion failure.")}else if("string"==typeof replacement&&(replacement=identifier(replacement)),Array.isArray(replacement))throw new Error("Cannot replace single expression with an array.");if(void 0===index)validate(parent,key,replacement),parent[key]=replacement;else{const items=parent[key].slice();"statement"===placeholder.type||"param"===placeholder.type?null==replacement?items.splice(index,1):Array.isArray(replacement)?items.splice(index,1,...replacement):items[index]=replacement:items[index]=replacement,validate(parent,key,items),parent[key]=items}}(placeholder,ast,replacements&&replacements[placeholder.name]||null)}catch(e){throw e.message=`@babel/template placeholder "${placeholder.name}": ${e.message}`,e}})),ast};var _t=__nested_webpack_require_1117407__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{blockStatement,cloneNode,emptyStatement,expressionStatement,identifier,isStatement,isStringLiteral,stringLiteral,validate}=_t},"./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/string.js":(__unused_webpack_module,exports,__nested_webpack_require_1120543__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(formatter,code,opts){let metadata;return code=formatter.code(code),arg=>{const replacements=(0,_options.normalizeReplacements)(arg);return metadata||(metadata=(0,_parse.default)(formatter,code,opts)),formatter.unwrap((0,_populate.default)(metadata,replacements))}};var _options=__nested_webpack_require_1120543__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/options.js"),_parse=__nested_webpack_require_1120543__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/parse.js"),_populate=__nested_webpack_require_1120543__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/populate.js")},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/cache.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.clear=function(){clearPath(),clearScope()},exports.clearPath=clearPath,exports.clearScope=clearScope,exports.scope=exports.path=void 0;let path=new WeakMap;exports.path=path;let scope=new WeakMap;function clearPath(){exports.path=path=new WeakMap}function clearScope(){exports.scope=scope=new WeakMap}exports.scope=scope},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/context.js":(__unused_webpack_module,exports,__nested_webpack_require_1121932__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _path=__nested_webpack_require_1121932__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js"),_t=__nested_webpack_require_1121932__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{VISITOR_KEYS}=_t;exports.default=class{constructor(scope,opts,state,parentPath){this.queue=null,this.priorityQueue=null,this.parentPath=parentPath,this.scope=scope,this.state=state,this.opts=opts}shouldVisit(node){const opts=this.opts;if(opts.enter||opts.exit)return!0;if(opts[node.type])return!0;const keys=VISITOR_KEYS[node.type];if(null==keys||!keys.length)return!1;for(const key of keys)if(node[key])return!0;return!1}create(node,container,key,listKey){return _path.default.get({parentPath:this.parentPath,parent:node,container,key,listKey})}maybeQueue(path,notPriority){this.queue&&(notPriority?this.queue.push(path):this.priorityQueue.push(path))}visitMultiple(container,parent,listKey){if(0===container.length)return!1;const queue=[];for(let key=0;key<container.length;key++){const node=container[key];node&&this.shouldVisit(node)&&queue.push(this.create(parent,container,key,listKey))}return this.visitQueue(queue)}visitSingle(node,key){return!!this.shouldVisit(node[key])&&this.visitQueue([this.create(node,node,key)])}visitQueue(queue){this.queue=queue,this.priorityQueue=[];const visited=new WeakSet;let stop=!1;for(const path of queue){if(path.resync(),0!==path.contexts.length&&path.contexts[path.contexts.length-1]===this||path.pushContext(this),null===path.key)continue;const{node}=path;if(!visited.has(node)){if(node&&visited.add(node),path.visit()){stop=!0;break}if(this.priorityQueue.length&&(stop=this.visitQueue(this.priorityQueue),this.priorityQueue=[],this.queue=queue,stop))break}}for(const path of queue)path.popContext();return this.queue=null,stop}visit(node,key){const nodes=node[key];return!!nodes&&(Array.isArray(nodes)?this.visitMultiple(nodes,node,key):this.visitSingle(node,key))}}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/hub.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;exports.default=class{getCode(){}getScope(){}addHelper(){throw new Error("Helpers are not supported by the default hub.")}buildError(node,msg,Error=TypeError){return new Error(msg)}}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1124515__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Hub",{enumerable:!0,get:function(){return _hub.default}}),Object.defineProperty(exports,"NodePath",{enumerable:!0,get:function(){return _path.default}}),Object.defineProperty(exports,"Scope",{enumerable:!0,get:function(){return _scope.default}}),exports.visitors=exports.default=void 0;var visitors=__nested_webpack_require_1124515__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/visitors.js");exports.visitors=visitors;var _t=__nested_webpack_require_1124515__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),cache=__nested_webpack_require_1124515__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/cache.js"),_traverseNode=__nested_webpack_require_1124515__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/traverse-node.js"),_path=__nested_webpack_require_1124515__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js"),_scope=__nested_webpack_require_1124515__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/scope/index.js"),_hub=__nested_webpack_require_1124515__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/hub.js");const{VISITOR_KEYS,removeProperties,traverseFast}=_t;function traverse(parent,opts={},scope,state,parentPath){if(parent){if(!opts.noScope&&!scope&&"Program"!==parent.type&&"File"!==parent.type)throw new Error(`You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ${parent.type} node without passing scope and parentPath.`);VISITOR_KEYS[parent.type]&&(visitors.explode(opts),(0,_traverseNode.traverseNode)(parent,opts,scope,state,parentPath))}}var _default=traverse;function hasDenylistedType(path,state){path.node.type===state.type&&(state.has=!0,path.stop())}exports.default=_default,traverse.visitors=visitors,traverse.verify=visitors.verify,traverse.explode=visitors.explode,traverse.cheap=function(node,enter){traverseFast(node,enter)},traverse.node=function(node,opts,scope,state,path,skipKeys){(0,_traverseNode.traverseNode)(node,opts,scope,state,path,skipKeys)},traverse.clearNode=function(node,opts){removeProperties(node,opts),cache.path.delete(node)},traverse.removeProperties=function(tree,opts){return traverseFast(tree,traverse.clearNode,opts),tree},traverse.hasType=function(tree,type,denylistTypes){if(null!=denylistTypes&&denylistTypes.includes(tree.type))return!1;if(tree.type===type)return!0;const state={has:!1,type};return traverse(tree,{noScope:!0,denylist:denylistTypes,enter:hasDenylistedType},null,state),state.has},traverse.cache=cache},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/ancestry.js":(__unused_webpack_module,exports,__nested_webpack_require_1127333__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.find=function(callback){let path=this;do{if(callback(path))return path}while(path=path.parentPath);return null},exports.findParent=function(callback){let path=this;for(;path=path.parentPath;)if(callback(path))return path;return null},exports.getAncestry=function(){let path=this;const paths=[];do{paths.push(path)}while(path=path.parentPath);return paths},exports.getDeepestCommonAncestorFrom=function(paths,filter){if(!paths.length)return this;if(1===paths.length)return paths[0];let lastCommonIndex,lastCommon,minDepth=1/0;const ancestries=paths.map((path=>{const ancestry=[];do{ancestry.unshift(path)}while((path=path.parentPath)&&path!==this);return ancestry.length<minDepth&&(minDepth=ancestry.length),ancestry})),first=ancestries[0];depthLoop:for(let i=0;i<minDepth;i++){const shouldMatch=first[i];for(const ancestry of ancestries)if(ancestry[i]!==shouldMatch)break depthLoop;lastCommonIndex=i,lastCommon=shouldMatch}if(lastCommon)return filter?filter(lastCommon,lastCommonIndex,ancestries):lastCommon;throw new Error("Couldn't find intersection")},exports.getEarliestCommonAncestorFrom=function(paths){return this.getDeepestCommonAncestorFrom(paths,(function(deepest,i,ancestries){let earliest;const keys=VISITOR_KEYS[deepest.type];for(const ancestry of ancestries){const path=ancestry[i+1];if(!earliest){earliest=path;continue}if(path.listKey&&earliest.listKey===path.listKey&&path.key<earliest.key){earliest=path;continue}keys.indexOf(earliest.parentKey)>keys.indexOf(path.parentKey)&&(earliest=path)}return earliest}))},exports.getFunctionParent=function(){return this.findParent((p=>p.isFunction()))},exports.getStatementParent=function(){let path=this;do{if(!path.parentPath||Array.isArray(path.container)&&path.isStatement())break;path=path.parentPath}while(path);if(path&&(path.isProgram()||path.isFile()))throw new Error("File/Program node, we can't possibly find a statement parent to this");return path},exports.inType=function(...candidateTypes){let path=this;for(;path;){for(const type of candidateTypes)if(path.node.type===type)return!0;path=path.parentPath}return!1},exports.isAncestor=function(maybeDescendant){return maybeDescendant.isDescendant(this)},exports.isDescendant=function(maybeAncestor){return!!this.findParent((parent=>parent===maybeAncestor))};var _t=__nested_webpack_require_1127333__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{VISITOR_KEYS}=_t},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/comments.js":(__unused_webpack_module,exports,__nested_webpack_require_1129975__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.addComment=function(type,content,line){_addComment(this.node,type,content,line)},exports.addComments=function(type,comments){_addComments(this.node,type,comments)},exports.shareCommentsWithSiblings=function(){if("string"==typeof this.key)return;const node=this.node;if(!node)return;const trailing=node.trailingComments,leading=node.leadingComments;if(!trailing&&!leading)return;const prev=this.getSibling(this.key-1),next=this.getSibling(this.key+1),hasPrev=Boolean(prev.node),hasNext=Boolean(next.node);hasPrev&&(leading&&prev.addComments("trailing",removeIfExisting(leading,prev.node.trailingComments)),trailing&&!hasNext&&prev.addComments("trailing",trailing));hasNext&&(trailing&&next.addComments("leading",removeIfExisting(trailing,next.node.leadingComments)),leading&&!hasPrev&&next.addComments("leading",leading))};var _t=__nested_webpack_require_1129975__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{addComment:_addComment,addComments:_addComments}=_t;function removeIfExisting(list,toRemove){if(!toRemove)return list;let lastFoundIndex=-1;return list.filter((el=>{const i=toRemove.indexOf(el,lastFoundIndex);if(-1===i)return!0;lastFoundIndex=i}))}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/context.js":(__unused_webpack_module,exports,__nested_webpack_require_1131390__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports._call=function(fns){if(!fns)return!1;for(const fn of fns){if(!fn)continue;const node=this.node;if(!node)return!0;const ret=fn.call(this.state,this,this.state);if(ret&&"object"==typeof ret&&"function"==typeof ret.then)throw new Error("You appear to be using a plugin with an async traversal visitor, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");if(ret)throw new Error(`Unexpected return value from visitor method ${fn}`);if(this.node!==node)return!0;if(this._traverseFlags>0)return!0}return!1},exports._getQueueContexts=function(){let path=this,contexts=this.contexts;for(;!contexts.length&&(path=path.parentPath,path);)contexts=path.contexts;return contexts},exports._resyncKey=function(){if(!this.container)return;if(this.node===this.container[this.key])return;if(Array.isArray(this.container)){for(let i=0;i<this.container.length;i++)if(this.container[i]===this.node)return void this.setKey(i)}else for(const key of Object.keys(this.container))if(this.container[key]===this.node)return void this.setKey(key);this.key=null},exports._resyncList=function(){if(!this.parent||!this.inList)return;const newContainer=this.parent[this.listKey];if(this.container===newContainer)return;this.container=newContainer||null},exports._resyncParent=function(){this.parentPath&&(this.parent=this.parentPath.node)},exports._resyncRemoved=function(){null!=this.key&&this.container&&this.container[this.key]===this.node||this._markRemoved()},exports.call=function(key){const opts=this.opts;if(this.debug(key),this.node&&this._call(opts[key]))return!0;var _opts$this$node$type;return!!this.node&&this._call(null==(_opts$this$node$type=opts[this.node.type])?void 0:_opts$this$node$type[key])},exports.isBlacklisted=exports.isDenylisted=function(){var _this$opts$denylist;const denylist=null!=(_this$opts$denylist=this.opts.denylist)?_this$opts$denylist:this.opts.blacklist;return denylist&&denylist.indexOf(this.node.type)>-1},exports.popContext=function(){this.contexts.pop(),this.contexts.length>0?this.setContext(this.contexts[this.contexts.length-1]):this.setContext(void 0)},exports.pushContext=function(context){this.contexts.push(context),this.setContext(context)},exports.requeue=function(pathToQueue=this){if(pathToQueue.removed)return;const contexts=this.contexts;for(const context of contexts)context.maybeQueue(pathToQueue)},exports.resync=function(){if(this.removed)return;this._resyncParent(),this._resyncList(),this._resyncKey()},exports.setContext=function(context){null!=this.skipKeys&&(this.skipKeys={});this._traverseFlags=0,context&&(this.context=context,this.state=context.state,this.opts=context.opts);return this.setScope(),this},exports.setKey=function(key){var _this$node;this.key=key,this.node=this.container[this.key],this.type=null==(_this$node=this.node)?void 0:_this$node.type},exports.setScope=function(){var _this$opts2,_this$scope;if(null!=(_this$opts2=this.opts)&&_this$opts2.noScope)return;let target,path=this.parentPath;(("key"===this.key||"decorators"===this.listKey)&&path.isMethod()||"discriminant"===this.key&&path.isSwitchStatement())&&(path=path.parentPath);for(;path&&!target;){var _path$opts;if(null!=(_path$opts=path.opts)&&_path$opts.noScope)return;target=path.scope,path=path.parentPath}this.scope=this.getScope(target),null==(_this$scope=this.scope)||_this$scope.init()},exports.setup=function(parentPath,container,listKey,key){this.listKey=listKey,this.container=container,this.parentPath=parentPath||this.parentPath,this.setKey(key)},exports.skip=function(){this.shouldSkip=!0},exports.skipKey=function(key){null==this.skipKeys&&(this.skipKeys={});this.skipKeys[key]=!0},exports.stop=function(){this._traverseFlags|=_index.SHOULD_SKIP|_index.SHOULD_STOP},exports.visit=function(){var _this$opts$shouldSkip,_this$opts;if(!this.node)return!1;if(this.isDenylisted())return!1;if(null!=(_this$opts$shouldSkip=(_this$opts=this.opts).shouldSkip)&&_this$opts$shouldSkip.call(_this$opts,this))return!1;const currentContext=this.context;if(this.shouldSkip||this.call("enter"))return this.debug("Skip..."),this.shouldStop;return restoreContext(this,currentContext),this.debug("Recursing into..."),this.shouldStop=(0,_traverseNode.traverseNode)(this.node,this.opts,this.scope,this.state,this,this.skipKeys),restoreContext(this,currentContext),this.call("exit"),this.shouldStop};var _traverseNode=__nested_webpack_require_1131390__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/traverse-node.js"),_index=__nested_webpack_require_1131390__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js");function restoreContext(path,context){path.context!==context&&(path.context=context,path.state=context.state,path.opts=context.opts)}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/conversion.js":(__unused_webpack_module,exports,__nested_webpack_require_1136405__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.arrowFunctionToExpression=function({allowInsertArrow=!0,allowInsertArrowWithRest=allowInsertArrow,noNewArrows=!(()=>{var _arguments$;return null==(_arguments$=arguments[0])?void 0:_arguments$.specCompliant})()}={}){if(!this.isArrowFunctionExpression())throw this.buildCodeFrameError("Cannot convert non-arrow function to a function expression.");const{thisBinding,fnPath:fn}=hoistFunctionEnvironment(this,noNewArrows,allowInsertArrow,allowInsertArrowWithRest);if(fn.ensureBlock(),function(path,type){path.node.type=type}(fn,"FunctionExpression"),!noNewArrows){const checkBinding=thisBinding?null:fn.scope.generateUidIdentifier("arrowCheckId");return checkBinding&&fn.parentPath.scope.push({id:checkBinding,init:objectExpression([])}),fn.get("body").unshiftContainer("body",expressionStatement(callExpression(this.hub.addHelper("newArrowCheck"),[thisExpression(),identifier(checkBinding?checkBinding.name:thisBinding)]))),fn.replaceWith(callExpression(memberExpression((0,_helperFunctionName.default)(this,!0)||fn.node,identifier("bind")),[checkBinding?identifier(checkBinding.name):thisExpression()])),fn.get("callee.object")}return fn},exports.ensureBlock=function(){const body=this.get("body"),bodyNode=body.node;if(Array.isArray(body))throw new Error("Can't convert array path to a block statement");if(!bodyNode)throw new Error("Can't convert node without a body");if(body.isBlockStatement())return bodyNode;const statements=[];let key,listKey,stringPath="body";body.isStatement()?(listKey="body",key=0,statements.push(body.node)):(stringPath+=".body.0",this.isFunction()?(key="argument",statements.push(returnStatement(body.node))):(key="expression",statements.push(expressionStatement(body.node))));this.node.body=blockStatement(statements);const parentPath=this.get(stringPath);return body.setup(parentPath,listKey?parentPath.node[listKey]:parentPath.node,listKey,key),this.node},exports.toComputedKey=function(){let key;if(this.isMemberExpression())key=this.node.property;else{if(!this.isProperty()&&!this.isMethod())throw new ReferenceError("todo");key=this.node.key}this.node.computed||isIdentifier(key)&&(key=stringLiteral(key.name));return key},exports.unwrapFunctionEnvironment=function(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameError("Can only unwrap the environment of a function.");hoistFunctionEnvironment(this)};var _t=__nested_webpack_require_1136405__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_helperEnvironmentVisitor=__nested_webpack_require_1136405__("./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js"),_helperFunctionName=__nested_webpack_require_1136405__("./node_modules/.pnpm/@babel+helper-function-name@7.22.5/node_modules/@babel/helper-function-name/lib/index.js"),_visitors=__nested_webpack_require_1136405__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/visitors.js");const{arrowFunctionExpression,assignmentExpression,binaryExpression,blockStatement,callExpression,conditionalExpression,expressionStatement,identifier,isIdentifier,jsxIdentifier,logicalExpression,LOGICAL_OPERATORS,memberExpression,metaProperty,numericLiteral,objectExpression,restElement,returnStatement,sequenceExpression,spreadElement,stringLiteral,super:_super,thisExpression,toExpression,unaryExpression}=_t;exports.arrowFunctionToShadowed=function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()};const getSuperCallsVisitor=(0,_visitors.merge)([{CallExpression(child,{allSuperCalls}){child.get("callee").isSuper()&&allSuperCalls.push(child)}},_helperEnvironmentVisitor.default]);function hoistFunctionEnvironment(fnPath,noNewArrows=!0,allowInsertArrow=!0,allowInsertArrowWithRest=!0){let arrowParent,thisEnvFn=fnPath.findParent((p=>p.isArrowFunctionExpression()?(null!=arrowParent||(arrowParent=p),!1):p.isFunction()||p.isProgram()||p.isClassProperty({static:!1})||p.isClassPrivateProperty({static:!1})));const inConstructor=thisEnvFn.isClassMethod({kind:"constructor"});if(thisEnvFn.isClassProperty()||thisEnvFn.isClassPrivateProperty())if(arrowParent)thisEnvFn=arrowParent;else{if(!allowInsertArrow)throw fnPath.buildCodeFrameError("Unable to transform arrow inside class property");fnPath.replaceWith(callExpression(arrowFunctionExpression([],toExpression(fnPath.node)),[])),thisEnvFn=fnPath.get("callee"),fnPath=thisEnvFn.get("body")}const{thisPaths,argumentsPaths,newTargetPaths,superProps,superCalls}=function(fnPath){const thisPaths=[],argumentsPaths=[],newTargetPaths=[],superProps=[],superCalls=[];return fnPath.traverse(getScopeInformationVisitor,{thisPaths,argumentsPaths,newTargetPaths,superProps,superCalls}),{thisPaths,argumentsPaths,newTargetPaths,superProps,superCalls}}(fnPath);if(inConstructor&&superCalls.length>0){if(!allowInsertArrow)throw superCalls[0].buildCodeFrameError("When using '@babel/plugin-transform-arrow-functions', it's not possible to compile `super()` in an arrow function without compiling classes.\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.");if(!allowInsertArrowWithRest)throw superCalls[0].buildCodeFrameError("When using '@babel/plugin-transform-parameters', it's not possible to compile `super()` in an arrow function with default or rest parameters without compiling classes.\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.");const allSuperCalls=[];thisEnvFn.traverse(getSuperCallsVisitor,{allSuperCalls});const superBinding=function(thisEnvFn){return getBinding(thisEnvFn,"supercall",(()=>{const argsBinding=thisEnvFn.scope.generateUidIdentifier("args");return arrowFunctionExpression([restElement(argsBinding)],callExpression(_super(),[spreadElement(identifier(argsBinding.name))]))}))}(thisEnvFn);allSuperCalls.forEach((superCall=>{const callee=identifier(superBinding);callee.loc=superCall.node.callee.loc,superCall.get("callee").replaceWith(callee)}))}if(argumentsPaths.length>0){const argumentsBinding=getBinding(thisEnvFn,"arguments",(()=>{const args=()=>identifier("arguments");return thisEnvFn.scope.path.isProgram()?conditionalExpression(binaryExpression("===",unaryExpression("typeof",args()),stringLiteral("undefined")),thisEnvFn.scope.buildUndefinedNode(),args()):args()}));argumentsPaths.forEach((argumentsChild=>{const argsRef=identifier(argumentsBinding);argsRef.loc=argumentsChild.node.loc,argumentsChild.replaceWith(argsRef)}))}if(newTargetPaths.length>0){const newTargetBinding=getBinding(thisEnvFn,"newtarget",(()=>metaProperty(identifier("new"),identifier("target"))));newTargetPaths.forEach((targetChild=>{const targetRef=identifier(newTargetBinding);targetRef.loc=targetChild.node.loc,targetChild.replaceWith(targetRef)}))}if(superProps.length>0){if(!allowInsertArrow)throw superProps[0].buildCodeFrameError("When using '@babel/plugin-transform-arrow-functions', it's not possible to compile `super.prop` in an arrow function without compiling classes.\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.");superProps.reduce(((acc,superProp)=>acc.concat(function(superProp){if(superProp.parentPath.isAssignmentExpression()&&"="!==superProp.parentPath.node.operator){const assignmentPath=superProp.parentPath,op=assignmentPath.node.operator.slice(0,-1),value=assignmentPath.node.right,isLogicalAssignment=function(op){return LOGICAL_OPERATORS.includes(op)}(op);if(superProp.node.computed){const tmp=superProp.scope.generateDeclaredUidIdentifier("tmp"),object=superProp.node.object,property=superProp.node.property;assignmentPath.get("left").replaceWith(memberExpression(object,assignmentExpression("=",tmp,property),!0)),assignmentPath.get("right").replaceWith(rightExpression(isLogicalAssignment?"=":op,memberExpression(object,identifier(tmp.name),!0),value))}else{const object=superProp.node.object,property=superProp.node.property;assignmentPath.get("left").replaceWith(memberExpression(object,property)),assignmentPath.get("right").replaceWith(rightExpression(isLogicalAssignment?"=":op,memberExpression(object,identifier(property.name)),value))}return isLogicalAssignment?assignmentPath.replaceWith(logicalExpression(op,assignmentPath.node.left,assignmentPath.node.right)):assignmentPath.node.operator="=",[assignmentPath.get("left"),assignmentPath.get("right").get("left")]}if(superProp.parentPath.isUpdateExpression()){const updateExpr=superProp.parentPath,tmp=superProp.scope.generateDeclaredUidIdentifier("tmp"),computedKey=superProp.node.computed?superProp.scope.generateDeclaredUidIdentifier("prop"):null,parts=[assignmentExpression("=",tmp,memberExpression(superProp.node.object,computedKey?assignmentExpression("=",computedKey,superProp.node.property):superProp.node.property,superProp.node.computed)),assignmentExpression("=",memberExpression(superProp.node.object,computedKey?identifier(computedKey.name):superProp.node.property,superProp.node.computed),binaryExpression(superProp.parentPath.node.operator[0],identifier(tmp.name),numericLiteral(1)))];superProp.parentPath.node.prefix||parts.push(identifier(tmp.name)),updateExpr.replaceWith(sequenceExpression(parts));return[updateExpr.get("expressions.0.right"),updateExpr.get("expressions.1.left")]}return[superProp];function rightExpression(op,left,right){return"="===op?assignmentExpression("=",left,right):binaryExpression(op,left,right)}}(superProp))),[]).forEach((superProp=>{const key=superProp.node.computed?"":superProp.get("property").node.name,superParentPath=superProp.parentPath,isAssignment=superParentPath.isAssignmentExpression({left:superProp.node}),isCall=superParentPath.isCallExpression({callee:superProp.node}),isTaggedTemplate=superParentPath.isTaggedTemplateExpression({tag:superProp.node}),superBinding=function(thisEnvFn,isAssignment,propName){const op=isAssignment?"set":"get";return getBinding(thisEnvFn,`superprop_${op}:${propName||""}`,(()=>{const argsList=[];let fnBody;if(propName)fnBody=memberExpression(_super(),identifier(propName));else{const method=thisEnvFn.scope.generateUidIdentifier("prop");argsList.unshift(method),fnBody=memberExpression(_super(),identifier(method.name),!0)}if(isAssignment){const valueIdent=thisEnvFn.scope.generateUidIdentifier("value");argsList.push(valueIdent),fnBody=assignmentExpression("=",fnBody,identifier(valueIdent.name))}return arrowFunctionExpression(argsList,fnBody)}))}(thisEnvFn,isAssignment,key),args=[];if(superProp.node.computed&&args.push(superProp.get("property").node),isAssignment){const value=superParentPath.node.right;args.push(value)}const call=callExpression(identifier(superBinding),args);isCall?(superParentPath.unshiftContainer("arguments",thisExpression()),superProp.replaceWith(memberExpression(call,identifier("call"))),thisPaths.push(superParentPath.get("arguments.0"))):isAssignment?superParentPath.replaceWith(call):isTaggedTemplate?(superProp.replaceWith(callExpression(memberExpression(call,identifier("bind"),!1),[thisExpression()])),thisPaths.push(superProp.get("arguments.0"))):superProp.replaceWith(call)}))}let thisBinding;return(thisPaths.length>0||!noNewArrows)&&(thisBinding=function(thisEnvFn,inConstructor){return getBinding(thisEnvFn,"this",(thisBinding=>{if(!inConstructor||!hasSuperClass(thisEnvFn))return thisExpression();thisEnvFn.traverse(assignSuperThisVisitor,{supers:new WeakSet,thisBinding})}))}(thisEnvFn,inConstructor),(noNewArrows||inConstructor&&hasSuperClass(thisEnvFn))&&(thisPaths.forEach((thisChild=>{const thisRef=thisChild.isJSX()?jsxIdentifier(thisBinding):identifier(thisBinding);thisRef.loc=thisChild.node.loc,thisChild.replaceWith(thisRef)})),noNewArrows||(thisBinding=null))),{thisBinding,fnPath}}function hasSuperClass(thisEnvFn){return thisEnvFn.isClassMethod()&&!!thisEnvFn.parentPath.parentPath.node.superClass}const assignSuperThisVisitor=(0,_visitors.merge)([{CallExpression(child,{supers,thisBinding}){child.get("callee").isSuper()&&(supers.has(child.node)||(supers.add(child.node),child.replaceWithMultiple([child.node,assignmentExpression("=",identifier(thisBinding),identifier("this"))])))}},_helperEnvironmentVisitor.default]);function getBinding(thisEnvFn,key,init){const cacheKey="binding:"+key;let data=thisEnvFn.getData(cacheKey);if(!data){const id=thisEnvFn.scope.generateUidIdentifier(key);data=id.name,thisEnvFn.setData(cacheKey,data),thisEnvFn.scope.push({id,init:init(data)})}return data}const getScopeInformationVisitor=(0,_visitors.merge)([{ThisExpression(child,{thisPaths}){thisPaths.push(child)},JSXIdentifier(child,{thisPaths}){"this"===child.node.name&&(child.parentPath.isJSXMemberExpression({object:child.node})||child.parentPath.isJSXOpeningElement({name:child.node}))&&thisPaths.push(child)},CallExpression(child,{superCalls}){child.get("callee").isSuper()&&superCalls.push(child)},MemberExpression(child,{superProps}){child.get("object").isSuper()&&superProps.push(child)},Identifier(child,{argumentsPaths}){if(!child.isReferencedIdentifier({name:"arguments"}))return;let curr=child.scope;do{if(curr.hasOwnBinding("arguments"))return void curr.rename("arguments");if(curr.path.isFunction()&&!curr.path.isArrowFunctionExpression())break}while(curr=curr.parent);argumentsPaths.push(child)},MetaProperty(child,{newTargetPaths}){child.get("meta").isIdentifier({name:"new"})&&child.get("property").isIdentifier({name:"target"})&&newTargetPaths.push(child)}},_helperEnvironmentVisitor.default])},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/evaluation.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.evaluate=function(){const state={confident:!0,deoptPath:null,seen:new Map};let value=evaluateCached(this,state);state.confident||(value=void 0);return{confident:state.confident,deopt:state.deoptPath,value}},exports.evaluateTruthy=function(){const res=this.evaluate();if(res.confident)return!!res.value};const VALID_CALLEES=["String","Number","Math"],INVALID_METHODS=["random"];function isValidCallee(val){return VALID_CALLEES.includes(val)}function deopt(path,state){state.confident&&(state.deoptPath=path,state.confident=!1)}const Globals=new Map([["undefined",void 0],["Infinity",1/0],["NaN",NaN]]);function evaluateCached(path,state){const{node}=path,{seen}=state;if(seen.has(node)){const existing=seen.get(node);return existing.resolved?existing.value:void deopt(path,state)}{const item={resolved:!1};seen.set(node,item);const val=function(path,state){if(!state.confident)return;if(path.isSequenceExpression()){const exprs=path.get("expressions");return evaluateCached(exprs[exprs.length-1],state)}if(path.isStringLiteral()||path.isNumericLiteral()||path.isBooleanLiteral())return path.node.value;if(path.isNullLiteral())return null;if(path.isTemplateLiteral())return evaluateQuasis(path,path.node.quasis,state);if(path.isTaggedTemplateExpression()&&path.get("tag").isMemberExpression()){const object=path.get("tag.object"),{node:{name}}=object,property=path.get("tag.property");if(object.isIdentifier()&&"String"===name&&!path.scope.getBinding(name)&&property.isIdentifier()&&"raw"===property.node.name)return evaluateQuasis(path,path.node.quasi.quasis,state,!0)}if(path.isConditionalExpression()){const testResult=evaluateCached(path.get("test"),state);if(!state.confident)return;return evaluateCached(testResult?path.get("consequent"):path.get("alternate"),state)}if(path.isExpressionWrapper())return evaluateCached(path.get("expression"),state);if(path.isMemberExpression()&&!path.parentPath.isCallExpression({callee:path.node})){const property=path.get("property"),object=path.get("object");if(object.isLiteral()){const value=object.node.value,type=typeof value;let key=null;if(path.node.computed){if(key=evaluateCached(property,state),!state.confident)return}else property.isIdentifier()&&(key=property.node.name);if(!("number"!==type&&"string"!==type||null==key||"number"!=typeof key&&"string"!=typeof key))return value[key]}}if(path.isReferencedIdentifier()){const binding=path.scope.getBinding(path.node.name);if(binding){if(binding.constantViolations.length>0||path.node.start<binding.path.node.end)return void deopt(binding.path,state);if(binding.hasValue)return binding.value}const name=path.node.name;if(Globals.has(name))return binding?void deopt(binding.path,state):Globals.get(name);const resolved=path.resolve();return resolved===path?void deopt(path,state):evaluateCached(resolved,state)}if(path.isUnaryExpression({prefix:!0})){if("void"===path.node.operator)return;const argument=path.get("argument");if("typeof"===path.node.operator&&(argument.isFunction()||argument.isClass()))return"function";const arg=evaluateCached(argument,state);if(!state.confident)return;switch(path.node.operator){case"!":return!arg;case"+":return+arg;case"-":return-arg;case"~":return~arg;case"typeof":return typeof arg}}if(path.isArrayExpression()){const arr=[],elems=path.get("elements");for(const elem of elems){const elemValue=elem.evaluate();if(!elemValue.confident)return void deopt(elemValue.deopt,state);arr.push(elemValue.value)}return arr}if(path.isObjectExpression()){const obj={},props=path.get("properties");for(const prop of props){if(prop.isObjectMethod()||prop.isSpreadElement())return void deopt(prop,state);const keyPath=prop.get("key");let key;if(prop.node.computed){if(key=keyPath.evaluate(),!key.confident)return void deopt(key.deopt,state);key=key.value}else key=keyPath.isIdentifier()?keyPath.node.name:keyPath.node.value;let value=prop.get("value").evaluate();if(!value.confident)return void deopt(value.deopt,state);value=value.value,obj[key]=value}return obj}if(path.isLogicalExpression()){const wasConfident=state.confident,left=evaluateCached(path.get("left"),state),leftConfident=state.confident;state.confident=wasConfident;const right=evaluateCached(path.get("right"),state),rightConfident=state.confident;switch(path.node.operator){case"||":if(state.confident=leftConfident&&(!!left||rightConfident),!state.confident)return;return left||right;case"&&":if(state.confident=leftConfident&&(!left||rightConfident),!state.confident)return;return left&&right;case"??":if(state.confident=leftConfident&&(null!=left||rightConfident),!state.confident)return;return null!=left?left:right}}if(path.isBinaryExpression()){const left=evaluateCached(path.get("left"),state);if(!state.confident)return;const right=evaluateCached(path.get("right"),state);if(!state.confident)return;switch(path.node.operator){case"-":return left-right;case"+":return left+right;case"/":return left/right;case"*":return left*right;case"%":return left%right;case"**":return Math.pow(left,right);case"<":return left<right;case">":return left>right;case"<=":return left<=right;case">=":return left>=right;case"==":return left==right;case"!=":return left!=right;case"===":return left===right;case"!==":return left!==right;case"|":return left|right;case"&":return left&right;case"^":return left^right;case"<<":return left<<right;case">>":return left>>right;case">>>":return left>>>right}}if(path.isCallExpression()){const callee=path.get("callee");let context,func;if(callee.isIdentifier()&&!path.scope.getBinding(callee.node.name)&&isValidCallee(callee.node.name)&&(func=global[callee.node.name]),callee.isMemberExpression()){const object=callee.get("object"),property=callee.get("property");if(object.isIdentifier()&&property.isIdentifier()&&isValidCallee(object.node.name)&&!function(val){return INVALID_METHODS.includes(val)}(property.node.name)&&(context=global[object.node.name],func=context[property.node.name]),object.isLiteral()&&property.isIdentifier()){const type=typeof object.node.value;"string"!==type&&"number"!==type||(context=object.node.value,func=context[property.node.name])}}if(func){const args=path.get("arguments").map((arg=>evaluateCached(arg,state)));if(!state.confident)return;return func.apply(context,args)}}deopt(path,state)}(path,state);return state.confident&&(item.resolved=!0,item.value=val),val}}function evaluateQuasis(path,quasis,state,raw=!1){let str="",i=0;const exprs=path.isTemplateLiteral()?path.get("expressions"):path.get("quasi.expressions");for(const elem of quasis){if(!state.confident)break;str+=raw?elem.value.raw:elem.value.cooked;const expr=exprs[i++];expr&&(str+=String(evaluateCached(expr,state)))}if(state.confident)return str}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/family.js":(__unused_webpack_module,exports,__nested_webpack_require_1156879__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports._getKey=function(key,context){const node=this.node,container=node[key];return Array.isArray(container)?container.map(((_,i)=>_index.default.get({listKey:key,parentPath:this,parent:node,container,key:i}).setContext(context))):_index.default.get({parentPath:this,parent:node,container:node,key}).setContext(context)},exports._getPattern=function(parts,context){let path=this;for(const part of parts)path="."===part?path.parentPath:Array.isArray(path)?path[part]:path.get(part,context);return path},exports.get=function(key,context=!0){!0===context&&(context=this.context);const parts=key.split(".");return 1===parts.length?this._getKey(key,context):this._getPattern(parts,context)},exports.getAllNextSiblings=function(){let _key=this.key,sibling=this.getSibling(++_key);const siblings=[];for(;sibling.node;)siblings.push(sibling),sibling=this.getSibling(++_key);return siblings},exports.getAllPrevSiblings=function(){let _key=this.key,sibling=this.getSibling(--_key);const siblings=[];for(;sibling.node;)siblings.push(sibling),sibling=this.getSibling(--_key);return siblings},exports.getBindingIdentifierPaths=function(duplicates=!1,outerOnly=!1){const search=[this],ids=Object.create(null);for(;search.length;){const id=search.shift();if(!id)continue;if(!id.node)continue;const keys=_getBindingIdentifiers.keys[id.node.type];if(id.isIdentifier())if(duplicates){(ids[id.node.name]=ids[id.node.name]||[]).push(id)}else ids[id.node.name]=id;else if(id.isExportDeclaration()){const declaration=id.get("declaration");isDeclaration(declaration)&&search.push(declaration)}else{if(outerOnly){if(id.isFunctionDeclaration()){search.push(id.get("id"));continue}if(id.isFunctionExpression())continue}if(keys)for(let i=0;i<keys.length;i++){const key=keys[i],child=id.get(key);Array.isArray(child)?search.push(...child):child.node&&search.push(child)}}}return ids},exports.getBindingIdentifiers=function(duplicates){return _getBindingIdentifiers(this.node,duplicates)},exports.getCompletionRecords=function(){return _getCompletionRecords(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map((r=>r.path))},exports.getNextSibling=function(){return this.getSibling(this.key+1)},exports.getOpposite=function(){if("left"===this.key)return this.getSibling("right");if("right"===this.key)return this.getSibling("left");return null},exports.getOuterBindingIdentifierPaths=function(duplicates=!1){return this.getBindingIdentifierPaths(duplicates,!0)},exports.getOuterBindingIdentifiers=function(duplicates){return _getOuterBindingIdentifiers(this.node,duplicates)},exports.getPrevSibling=function(){return this.getSibling(this.key-1)},exports.getSibling=function(key){return _index.default.get({parentPath:this.parentPath,parent:this.parent,container:this.container,listKey:this.listKey,key}).setContext(this.context)};var _index=__nested_webpack_require_1156879__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js"),_t=__nested_webpack_require_1156879__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{getBindingIdentifiers:_getBindingIdentifiers,getOuterBindingIdentifiers:_getOuterBindingIdentifiers,isDeclaration,numericLiteral,unaryExpression}=_t,NORMAL_COMPLETION=0,BREAK_COMPLETION=1;function addCompletionRecords(path,records,context){return path&&records.push(..._getCompletionRecords(path,context)),records}function normalCompletionToBreak(completions){completions.forEach((c=>{c.type=BREAK_COMPLETION}))}function replaceBreakStatementInBreakCompletion(completions,reachable){completions.forEach((c=>{c.path.isBreakStatement({label:null})&&(reachable?c.path.replaceWith(unaryExpression("void",numericLiteral(0))):c.path.remove())}))}function getStatementListCompletion(paths,context){const completions=[];if(context.canHaveBreak){let lastNormalCompletions=[];for(let i=0;i<paths.length;i++){const path=paths[i],newContext=Object.assign({},context,{inCaseClause:!1});path.isBlockStatement()&&(context.inCaseClause||context.shouldPopulateBreak)?newContext.shouldPopulateBreak=!0:newContext.shouldPopulateBreak=!1;const statementCompletions=_getCompletionRecords(path,newContext);if(statementCompletions.length>0&&statementCompletions.every((c=>c.type===BREAK_COMPLETION))){lastNormalCompletions.length>0&&statementCompletions.every((c=>c.path.isBreakStatement({label:null})))?(normalCompletionToBreak(lastNormalCompletions),completions.push(...lastNormalCompletions),lastNormalCompletions.some((c=>c.path.isDeclaration()))&&(completions.push(...statementCompletions),replaceBreakStatementInBreakCompletion(statementCompletions,!0)),replaceBreakStatementInBreakCompletion(statementCompletions,!1)):(completions.push(...statementCompletions),context.shouldPopulateBreak||replaceBreakStatementInBreakCompletion(statementCompletions,!0));break}if(i===paths.length-1)completions.push(...statementCompletions);else{lastNormalCompletions=[];for(let i=0;i<statementCompletions.length;i++){const c=statementCompletions[i];c.type===BREAK_COMPLETION&&completions.push(c),c.type===NORMAL_COMPLETION&&lastNormalCompletions.push(c)}}}}else if(paths.length)for(let i=paths.length-1;i>=0;i--){const pathCompletions=_getCompletionRecords(paths[i],context);if(pathCompletions.length>1||1===pathCompletions.length&&!pathCompletions[0].path.isVariableDeclaration()){completions.push(...pathCompletions);break}}return completions}function _getCompletionRecords(path,context){let records=[];if(path.isIfStatement())records=addCompletionRecords(path.get("consequent"),records,context),records=addCompletionRecords(path.get("alternate"),records,context);else{if(path.isDoExpression()||path.isFor()||path.isWhile()||path.isLabeledStatement())return addCompletionRecords(path.get("body"),records,context);if(path.isProgram()||path.isBlockStatement())return getStatementListCompletion(path.get("body"),context);if(path.isFunction())return _getCompletionRecords(path.get("body"),context);if(path.isTryStatement())records=addCompletionRecords(path.get("block"),records,context),records=addCompletionRecords(path.get("handler"),records,context);else{if(path.isCatchClause())return addCompletionRecords(path.get("body"),records,context);if(path.isSwitchStatement())return function(cases,records,context){let lastNormalCompletions=[];for(let i=0;i<cases.length;i++){const caseCompletions=_getCompletionRecords(cases[i],context),normalCompletions=[],breakCompletions=[];for(const c of caseCompletions)c.type===NORMAL_COMPLETION&&normalCompletions.push(c),c.type===BREAK_COMPLETION&&breakCompletions.push(c);normalCompletions.length&&(lastNormalCompletions=normalCompletions),records.push(...breakCompletions)}return records.push(...lastNormalCompletions),records}(path.get("cases"),records,context);if(path.isSwitchCase())return getStatementListCompletion(path.get("consequent"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});path.isBreakStatement()?records.push(function(path){return{type:BREAK_COMPLETION,path}}(path)):records.push(function(path){return{type:NORMAL_COMPLETION,path}}(path))}}return records}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1164144__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SHOULD_STOP=exports.SHOULD_SKIP=exports.REMOVED=void 0;var virtualTypes=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/virtual-types.js"),_debug=__nested_webpack_require_1164144__("./node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js"),_index=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js"),_scope=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/scope/index.js"),_t=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),t=_t,_cache=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/cache.js"),_generator=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+generator@7.22.5/node_modules/@babel/generator/lib/index.js"),NodePath_ancestry=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/ancestry.js"),NodePath_inference=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/index.js"),NodePath_replacement=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/replacement.js"),NodePath_evaluation=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/evaluation.js"),NodePath_conversion=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/conversion.js"),NodePath_introspection=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/introspection.js"),NodePath_context=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/context.js"),NodePath_removal=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/removal.js"),NodePath_modification=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/modification.js"),NodePath_family=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/family.js"),NodePath_comments=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/comments.js"),NodePath_virtual_types_validator=__nested_webpack_require_1164144__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/virtual-types-validator.js");const{validate}=_t,debug=_debug("babel");exports.REMOVED=1;exports.SHOULD_STOP=2;exports.SHOULD_SKIP=4;class NodePath{constructor(hub,parent){this.contexts=[],this.state=null,this.opts=null,this._traverseFlags=0,this.skipKeys=null,this.parentPath=null,this.container=null,this.listKey=null,this.key=null,this.node=null,this.type=null,this.parent=parent,this.hub=hub,this.data=null,this.context=null,this.scope=null}static get({hub,parentPath,parent,container,listKey,key}){if(!hub&&parentPath&&(hub=parentPath.hub),!parent)throw new Error("To get a node path the parent needs to exist");const targetNode=container[key];let paths=_cache.path.get(parent);paths||(paths=new Map,_cache.path.set(parent,paths));let path=paths.get(targetNode);return path||(path=new NodePath(hub,parent),targetNode&&paths.set(targetNode,path)),path.setup(parentPath,container,listKey,key),path}getScope(scope){return this.isScope()?new _scope.default(this):scope}setData(key,val){return null==this.data&&(this.data=Object.create(null)),this.data[key]=val}getData(key,def){null==this.data&&(this.data=Object.create(null));let val=this.data[key];return void 0===val&&void 0!==def&&(val=this.data[key]=def),val}hasNode(){return null!=this.node}buildCodeFrameError(msg,Error=SyntaxError){return this.hub.buildError(this.node,msg,Error)}traverse(visitor,state){(0,_index.default)(this.node,visitor,this.scope,state,this)}set(key,node){validate(this.node,key,node),this.node[key]=node}getPathLocation(){const parts=[];let path=this;do{let key=path.key;path.inList&&(key=`${path.listKey}[${key}]`),parts.unshift(key)}while(path=path.parentPath);return parts.join(".")}debug(message){debug.enabled&&debug(`${this.getPathLocation()} ${this.type}: ${message}`)}toString(){return(0,_generator.default)(this.node).code}get inList(){return!!this.listKey}set inList(inList){inList||(this.listKey=null)}get parentKey(){return this.listKey||this.key}get shouldSkip(){return!!(4&this._traverseFlags)}set shouldSkip(v){v?this._traverseFlags|=4:this._traverseFlags&=-5}get shouldStop(){return!!(2&this._traverseFlags)}set shouldStop(v){v?this._traverseFlags|=2:this._traverseFlags&=-3}get removed(){return!!(1&this._traverseFlags)}set removed(v){v?this._traverseFlags|=1:this._traverseFlags&=-2}}Object.assign(NodePath.prototype,NodePath_ancestry,NodePath_inference,NodePath_replacement,NodePath_evaluation,NodePath_conversion,NodePath_introspection,NodePath_context,NodePath_removal,NodePath_modification,NodePath_family,NodePath_comments),NodePath.prototype._guessExecutionStatusRelativeToDifferentFunctions=NodePath_introspection._guessExecutionStatusRelativeTo;for(const type of t.TYPES){const typeKey=`is${type}`,fn=t[typeKey];NodePath.prototype[typeKey]=function(opts){return fn(this.node,opts)},NodePath.prototype[`assert${type}`]=function(opts){if(!fn(this.node,opts))throw new TypeError(`Expected node path of type ${type}`)}}Object.assign(NodePath.prototype,NodePath_virtual_types_validator);for(const type of Object.keys(virtualTypes))"_"!==type[0]&&(t.TYPES.includes(type)||t.TYPES.push(type));var _default=NodePath;exports.default=_default},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1170073__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports._getTypeAnnotation=function(){const node=this.node;if(!node){if("init"===this.key&&this.parentPath.isVariableDeclarator()){const declar=this.parentPath.parentPath,declarParent=declar.parentPath;return"left"===declar.key&&declarParent.isForInStatement()?stringTypeAnnotation():"left"===declar.key&&declarParent.isForOfStatement()?anyTypeAnnotation():voidTypeAnnotation()}return}if(node.typeAnnotation)return node.typeAnnotation;if(typeAnnotationInferringNodes.has(node))return;typeAnnotationInferringNodes.add(node);try{var _inferer;let inferer=inferers[node.type];if(inferer)return inferer.call(this,node);if(inferer=inferers[this.parentPath.type],null!=(_inferer=inferer)&&_inferer.validParent)return this.parentPath.getTypeAnnotation()}finally{typeAnnotationInferringNodes.delete(node)}},exports.baseTypeStrictlyMatches=function(rightArg){const left=this.getTypeAnnotation(),right=rightArg.getTypeAnnotation();if(!isAnyTypeAnnotation(left)&&isFlowBaseAnnotation(left))return right.type===left.type;return!1},exports.couldBeBaseType=function(name){const type=this.getTypeAnnotation();if(isAnyTypeAnnotation(type))return!0;if(isUnionTypeAnnotation(type)){for(const type2 of type.types)if(isAnyTypeAnnotation(type2)||_isBaseType(name,type2,!0))return!0;return!1}return _isBaseType(name,type,!0)},exports.getTypeAnnotation=function(){let type=this.getData("typeAnnotation");if(null!=type)return type;type=this._getTypeAnnotation()||anyTypeAnnotation(),(isTypeAnnotation(type)||isTSTypeAnnotation(type))&&(type=type.typeAnnotation);return this.setData("typeAnnotation",type),type},exports.isBaseType=function(baseName,soft){return _isBaseType(baseName,this.getTypeAnnotation(),soft)},exports.isGenericType=function(genericName){const type=this.getTypeAnnotation();if("Array"===genericName&&(isTSArrayType(type)||isArrayTypeAnnotation(type)||isTupleTypeAnnotation(type)))return!0;return isGenericTypeAnnotation(type)&&isIdentifier(type.id,{name:genericName})||isTSTypeReference(type)&&isIdentifier(type.typeName,{name:genericName})};var inferers=__nested_webpack_require_1170073__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/inferers.js"),_t=__nested_webpack_require_1170073__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{anyTypeAnnotation,isAnyTypeAnnotation,isArrayTypeAnnotation,isBooleanTypeAnnotation,isEmptyTypeAnnotation,isFlowBaseAnnotation,isGenericTypeAnnotation,isIdentifier,isMixedTypeAnnotation,isNumberTypeAnnotation,isStringTypeAnnotation,isTSArrayType,isTSTypeAnnotation,isTSTypeReference,isTupleTypeAnnotation,isTypeAnnotation,isUnionTypeAnnotation,isVoidTypeAnnotation,stringTypeAnnotation,voidTypeAnnotation}=_t;const typeAnnotationInferringNodes=new WeakSet;function _isBaseType(baseName,type,soft){if("string"===baseName)return isStringTypeAnnotation(type);if("number"===baseName)return isNumberTypeAnnotation(type);if("boolean"===baseName)return isBooleanTypeAnnotation(type);if("any"===baseName)return isAnyTypeAnnotation(type);if("mixed"===baseName)return isMixedTypeAnnotation(type);if("empty"===baseName)return isEmptyTypeAnnotation(type);if("void"===baseName)return isVoidTypeAnnotation(type);if(soft)return!1;throw new Error(`Unknown base type ${baseName}`)}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/inferer-reference.js":(__unused_webpack_module,exports,__nested_webpack_require_1173567__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){if(!this.isReferenced())return;const binding=this.scope.getBinding(node.name);if(binding)return binding.identifier.typeAnnotation?binding.identifier.typeAnnotation:function(binding,path,name){const types=[],functionConstantViolations=[];let constantViolations=getConstantViolationsBefore(binding,path,functionConstantViolations);const testType=getConditionalAnnotation(binding,path,name);if(testType){const testConstantViolations=getConstantViolationsBefore(binding,testType.ifStatement);constantViolations=constantViolations.filter((path=>testConstantViolations.indexOf(path)<0)),types.push(testType.typeAnnotation)}if(constantViolations.length){constantViolations.push(...functionConstantViolations);for(const violation of constantViolations)types.push(violation.getTypeAnnotation())}if(!types.length)return;return(0,_util.createUnionType)(types)}(binding,this,node.name);if("undefined"===node.name)return voidTypeAnnotation();if("NaN"===node.name||"Infinity"===node.name)return numberTypeAnnotation();node.name};var _t=__nested_webpack_require_1173567__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_util=__nested_webpack_require_1173567__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/util.js");const{BOOLEAN_NUMBER_BINARY_OPERATORS,createTypeAnnotationBasedOnTypeof,numberTypeAnnotation,voidTypeAnnotation}=_t;function getConstantViolationsBefore(binding,path,functions){const violations=binding.constantViolations.slice();return violations.unshift(binding.path),violations.filter((violation=>{const status=(violation=violation.resolve())._guessExecutionStatusRelativeTo(path);return functions&&"unknown"===status&&functions.push(violation),"before"===status}))}function inferAnnotationFromBinaryExpression(name,path){const operator=path.node.operator,right=path.get("right").resolve(),left=path.get("left").resolve();let target,typeofPath,typePath;if(left.isIdentifier({name})?target=right:right.isIdentifier({name})&&(target=left),target)return"==="===operator?target.getTypeAnnotation():BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator)>=0?numberTypeAnnotation():void 0;if("==="!==operator&&"=="!==operator)return;if(left.isUnaryExpression({operator:"typeof"})?(typeofPath=left,typePath=right):right.isUnaryExpression({operator:"typeof"})&&(typeofPath=right,typePath=left),!typeofPath)return;if(!typeofPath.get("argument").isIdentifier({name}))return;if(typePath=typePath.resolve(),!typePath.isLiteral())return;const typeValue=typePath.node.value;return"string"==typeof typeValue?createTypeAnnotationBasedOnTypeof(typeValue):void 0}function getConditionalAnnotation(binding,path,name){const ifStatement=function(binding,path,name){let parentPath;for(;parentPath=path.parentPath;){if(parentPath.isIfStatement()||parentPath.isConditionalExpression()){if("test"===path.key)return;return parentPath}if(parentPath.isFunction()&&parentPath.parentPath.scope.getBinding(name)!==binding)return;path=parentPath}}(binding,path,name);if(!ifStatement)return;const paths=[ifStatement.get("test")],types=[];for(let i=0;i<paths.length;i++){const path=paths[i];if(path.isLogicalExpression())"&&"===path.node.operator&&(paths.push(path.get("left")),paths.push(path.get("right")));else if(path.isBinaryExpression()){const type=inferAnnotationFromBinaryExpression(name,path);type&&types.push(type)}}return types.length?{typeAnnotation:(0,_util.createUnionType)(types),ifStatement}:getConditionalAnnotation(binding,ifStatement,name)}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/inferers.js":(__unused_webpack_module,exports,__nested_webpack_require_1177305__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArrayExpression=ArrayExpression,exports.AssignmentExpression=function(){return this.get("right").getTypeAnnotation()},exports.BinaryExpression=function(node){const operator=node.operator;if(NUMBER_BINARY_OPERATORS.indexOf(operator)>=0)return numberTypeAnnotation();if(BOOLEAN_BINARY_OPERATORS.indexOf(operator)>=0)return booleanTypeAnnotation();if("+"===operator){const right=this.get("right"),left=this.get("left");return left.isBaseType("number")&&right.isBaseType("number")?numberTypeAnnotation():left.isBaseType("string")||right.isBaseType("string")?stringTypeAnnotation():unionTypeAnnotation([stringTypeAnnotation(),numberTypeAnnotation()])}},exports.BooleanLiteral=function(){return booleanTypeAnnotation()},exports.CallExpression=function(){const{callee}=this.node;if(isObjectKeys(callee))return arrayTypeAnnotation(stringTypeAnnotation());if(isArrayFrom(callee)||isObjectValues(callee)||isIdentifier(callee,{name:"Array"}))return arrayTypeAnnotation(anyTypeAnnotation());if(isObjectEntries(callee))return arrayTypeAnnotation(tupleTypeAnnotation([stringTypeAnnotation(),anyTypeAnnotation()]));return resolveCall(this.get("callee"))},exports.ConditionalExpression=function(){const argumentTypes=[this.get("consequent").getTypeAnnotation(),this.get("alternate").getTypeAnnotation()];return(0,_util.createUnionType)(argumentTypes)},exports.ClassDeclaration=exports.ClassExpression=exports.FunctionDeclaration=exports.ArrowFunctionExpression=exports.FunctionExpression=function(){return genericTypeAnnotation(identifier("Function"))},Object.defineProperty(exports,"Identifier",{enumerable:!0,get:function(){return _infererReference.default}}),exports.LogicalExpression=function(){const argumentTypes=[this.get("left").getTypeAnnotation(),this.get("right").getTypeAnnotation()];return(0,_util.createUnionType)(argumentTypes)},exports.NewExpression=function(node){if("Identifier"===node.callee.type)return genericTypeAnnotation(node.callee)},exports.NullLiteral=function(){return nullLiteralTypeAnnotation()},exports.NumericLiteral=function(){return numberTypeAnnotation()},exports.ObjectExpression=function(){return genericTypeAnnotation(identifier("Object"))},exports.ParenthesizedExpression=function(){return this.get("expression").getTypeAnnotation()},exports.RegExpLiteral=function(){return genericTypeAnnotation(identifier("RegExp"))},exports.RestElement=RestElement,exports.SequenceExpression=function(){return this.get("expressions").pop().getTypeAnnotation()},exports.StringLiteral=function(){return stringTypeAnnotation()},exports.TSAsExpression=TSAsExpression,exports.TSNonNullExpression=function(){return this.get("expression").getTypeAnnotation()},exports.TaggedTemplateExpression=function(){return resolveCall(this.get("tag"))},exports.TemplateLiteral=function(){return stringTypeAnnotation()},exports.TypeCastExpression=TypeCastExpression,exports.UnaryExpression=function(node){const operator=node.operator;if("void"===operator)return voidTypeAnnotation();if(NUMBER_UNARY_OPERATORS.indexOf(operator)>=0)return numberTypeAnnotation();if(STRING_UNARY_OPERATORS.indexOf(operator)>=0)return stringTypeAnnotation();if(BOOLEAN_UNARY_OPERATORS.indexOf(operator)>=0)return booleanTypeAnnotation()},exports.UpdateExpression=function(node){const operator=node.operator;if("++"===operator||"--"===operator)return numberTypeAnnotation()},exports.VariableDeclarator=function(){if(!this.get("id").isIdentifier())return;return this.get("init").getTypeAnnotation()};var _t=__nested_webpack_require_1177305__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_infererReference=__nested_webpack_require_1177305__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/inferer-reference.js"),_util=__nested_webpack_require_1177305__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/util.js");const{BOOLEAN_BINARY_OPERATORS,BOOLEAN_UNARY_OPERATORS,NUMBER_BINARY_OPERATORS,NUMBER_UNARY_OPERATORS,STRING_UNARY_OPERATORS,anyTypeAnnotation,arrayTypeAnnotation,booleanTypeAnnotation,buildMatchMemberExpression,genericTypeAnnotation,identifier,nullLiteralTypeAnnotation,numberTypeAnnotation,stringTypeAnnotation,tupleTypeAnnotation,unionTypeAnnotation,voidTypeAnnotation,isIdentifier}=_t;function TypeCastExpression(node){return node.typeAnnotation}function TSAsExpression(node){return node.typeAnnotation}function ArrayExpression(){return genericTypeAnnotation(identifier("Array"))}function RestElement(){return ArrayExpression()}TypeCastExpression.validParent=!0,TSAsExpression.validParent=!0,RestElement.validParent=!0;const isArrayFrom=buildMatchMemberExpression("Array.from"),isObjectKeys=buildMatchMemberExpression("Object.keys"),isObjectValues=buildMatchMemberExpression("Object.values"),isObjectEntries=buildMatchMemberExpression("Object.entries");function resolveCall(callee){if((callee=callee.resolve()).isFunction()){const{node}=callee;if(node.async)return node.generator?genericTypeAnnotation(identifier("AsyncIterator")):genericTypeAnnotation(identifier("Promise"));if(node.generator)return genericTypeAnnotation(identifier("Iterator"));if(callee.node.returnType)return callee.node.returnType}}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/inference/util.js":(__unused_webpack_module,exports,__nested_webpack_require_1182708__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createUnionType=function(types){if(isFlowType(types[0]))return createFlowUnionType?createFlowUnionType(types):createUnionTypeAnnotation(types);if(createTSUnionType)return createTSUnionType(types)};var _t=__nested_webpack_require_1182708__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{createFlowUnionType,createTSUnionType,createUnionTypeAnnotation,isFlowType,isTSType}=_t},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/introspection.js":(__unused_webpack_module,exports,__nested_webpack_require_1183343__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports._guessExecutionStatusRelativeTo=function(target){return _guessExecutionStatusRelativeToCached(this,target,new Map)},exports._resolve=function(dangerous,resolved){if(resolved&&resolved.indexOf(this)>=0)return;if((resolved=resolved||[]).push(this),this.isVariableDeclarator()){if(this.get("id").isIdentifier())return this.get("init").resolve(dangerous,resolved)}else if(this.isReferencedIdentifier()){const binding=this.scope.getBinding(this.node.name);if(!binding)return;if(!binding.constant)return;if("module"===binding.kind)return;if(binding.path!==this){const ret=binding.path.resolve(dangerous,resolved);if(this.find((parent=>parent.node===ret.node)))return;return ret}}else{if(this.isTypeCastExpression())return this.get("expression").resolve(dangerous,resolved);if(dangerous&&this.isMemberExpression()){const targetKey=this.toComputedKey();if(!isLiteral(targetKey))return;const targetName=targetKey.value,target=this.get("object").resolve(dangerous,resolved);if(target.isObjectExpression()){const props=target.get("properties");for(const prop of props){if(!prop.isProperty())continue;const key=prop.get("key");let match=prop.isnt("computed")&&key.isIdentifier({name:targetName});if(match=match||key.isLiteral({value:targetName}),match)return prop.get("value").resolve(dangerous,resolved)}}else if(target.isArrayExpression()&&!isNaN(+targetName)){const elem=target.get("elements")[targetName];if(elem)return elem.resolve(dangerous,resolved)}}}},exports.canHaveVariableDeclarationOrExpression=function(){return("init"===this.key||"left"===this.key)&&this.parentPath.isFor()},exports.canSwapBetweenExpressionAndStatement=function(replacement){if("body"!==this.key||!this.parentPath.isArrowFunctionExpression())return!1;if(this.isExpression())return isBlockStatement(replacement);if(this.isBlockStatement())return isExpression(replacement);return!1},exports.equals=function(key,value){return this.node[key]===value},exports.getSource=function(){const node=this.node;if(node.end){const code=this.hub.getCode();if(code)return code.slice(node.start,node.end)}return""},exports.has=has,exports.is=void 0,exports.isCompletionRecord=function(allowInsideFunction){let path=this,first=!0;do{const{type,container}=path;if(!first&&(path.isFunction()||"StaticBlock"===type))return!!allowInsideFunction;if(first=!1,Array.isArray(container)&&path.key!==container.length-1)return!1}while((path=path.parentPath)&&!path.isProgram()&&!path.isDoExpression());return!0},exports.isConstantExpression=function(){if(this.isIdentifier()){const binding=this.scope.getBinding(this.node.name);return!!binding&&binding.constant}if(this.isLiteral())return!this.isRegExpLiteral()&&(!this.isTemplateLiteral()||this.get("expressions").every((expression=>expression.isConstantExpression())));if(this.isUnaryExpression())return"void"===this.node.operator&&this.get("argument").isConstantExpression();if(this.isBinaryExpression()){const{operator}=this.node;return"in"!==operator&&"instanceof"!==operator&&this.get("left").isConstantExpression()&&this.get("right").isConstantExpression()}return!1},exports.isInStrictMode=function(){const start=this.isProgram()?this:this.parentPath;return!!start.find((path=>{if(path.isProgram({sourceType:"module"}))return!0;if(path.isClass())return!0;if(path.isArrowFunctionExpression()&&!path.get("body").isBlockStatement())return!1;let body;if(path.isFunction())body=path.node.body;else{if(!path.isProgram())return!1;body=path.node}for(const directive of body.directives)if("use strict"===directive.value.value)return!0}))},exports.isNodeType=function(type){return isType(this.type,type)},exports.isStatementOrBlock=function(){return!this.parentPath.isLabeledStatement()&&!isBlockStatement(this.container)&&STATEMENT_OR_BLOCK_KEYS.includes(this.key)},exports.isStatic=function(){return this.scope.isStatic(this.node)},exports.isnt=function(key){return!this.has(key)},exports.matchesPattern=function(pattern,allowPartial){return _matchesPattern(this.node,pattern,allowPartial)},exports.referencesImport=function(moduleSource,importName){if(!this.isReferencedIdentifier()){if(this.isJSXMemberExpression()&&this.node.property.name===importName||(this.isMemberExpression()||this.isOptionalMemberExpression())&&(this.node.computed?isStringLiteral(this.node.property,{value:importName}):this.node.property.name===importName)){const object=this.get("object");return object.isReferencedIdentifier()&&object.referencesImport(moduleSource,"*")}return!1}const binding=this.scope.getBinding(this.node.name);if(!binding||"module"!==binding.kind)return!1;const path=binding.path,parent=path.parentPath;if(!parent.isImportDeclaration())return!1;if(parent.node.source.value!==moduleSource)return!1;if(!importName)return!0;if(path.isImportDefaultSpecifier()&&"default"===importName)return!0;if(path.isImportNamespaceSpecifier()&&"*"===importName)return!0;if(path.isImportSpecifier()&&isIdentifier(path.node.imported,{name:importName}))return!0;return!1},exports.resolve=function(dangerous,resolved){return this._resolve(dangerous,resolved)||this},exports.willIMaybeExecuteBefore=function(target){return"after"!==this._guessExecutionStatusRelativeTo(target)};var _t=__nested_webpack_require_1183343__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{STATEMENT_OR_BLOCK_KEYS,VISITOR_KEYS,isBlockStatement,isExpression,isIdentifier,isLiteral,isStringLiteral,isType,matchesPattern:_matchesPattern}=_t;function has(key){const val=this.node&&this.node[key];return val&&Array.isArray(val)?!!val.length:!!val}const is=has;function getOuterFunction(path){return path.isProgram()?path:(path.parentPath.scope.getFunctionParent()||path.parentPath.scope.getProgramParent()).path}function isExecutionUncertain(type,key){switch(type){case"LogicalExpression":case"AssignmentPattern":return"right"===key;case"ConditionalExpression":case"IfStatement":return"consequent"===key||"alternate"===key;case"WhileStatement":case"DoWhileStatement":case"ForInStatement":case"ForOfStatement":return"body"===key;case"ForStatement":return"body"===key||"update"===key;case"SwitchStatement":return"cases"===key;case"TryStatement":return"handler"===key;case"OptionalMemberExpression":return"property"===key;case"OptionalCallExpression":return"arguments"===key;default:return!1}}function isExecutionUncertainInList(paths,maxIndex){for(let i=0;i<maxIndex;i++){const path=paths[i];if(isExecutionUncertain(path.parent.type,path.parentKey))return!0}return!1}exports.is=is;const SYMBOL_CHECKING=Symbol();function _guessExecutionStatusRelativeToCached(base,target,cache){const funcParent={this:getOuterFunction(base),target:getOuterFunction(target)};if(funcParent.target.node!==funcParent.this.node)return function(base,target,cache){let cached,nodeMap=cache.get(base.node);if(nodeMap){if(cached=nodeMap.get(target.node))return cached===SYMBOL_CHECKING?"unknown":cached}else cache.set(base.node,nodeMap=new Map);nodeMap.set(target.node,SYMBOL_CHECKING);const result=function(base,target,cache){if(!target.isFunctionDeclaration())return"before"===_guessExecutionStatusRelativeToCached(base,target,cache)?"before":"unknown";if(target.parentPath.isExportDeclaration())return"unknown";const binding=target.scope.getBinding(target.node.id.name);if(!binding.references)return"before";const referencePaths=binding.referencePaths;let allStatus;for(const path of referencePaths){if(!!path.find((path=>path.node===target.node)))continue;if("callee"!==path.key||!path.parentPath.isCallExpression())return"unknown";const status=_guessExecutionStatusRelativeToCached(base,path,cache);if(allStatus&&allStatus!==status)return"unknown";allStatus=status}return allStatus}(base,target,cache);return nodeMap.set(target.node,result),result}(base,funcParent.target,cache);const paths={target:target.getAncestry(),this:base.getAncestry()};if(paths.target.indexOf(base)>=0)return"after";if(paths.this.indexOf(target)>=0)return"before";let commonPath;const commonIndex={target:0,this:0};for(;!commonPath&&commonIndex.this<paths.this.length;){const path=paths.this[commonIndex.this];commonIndex.target=paths.target.indexOf(path),commonIndex.target>=0?commonPath=path:commonIndex.this++}if(!commonPath)throw new Error("Internal Babel error - The two compared nodes don't appear to belong to the same program.");if(isExecutionUncertainInList(paths.this,commonIndex.this-1)||isExecutionUncertainInList(paths.target,commonIndex.target-1))return"unknown";const divergence={this:paths.this[commonIndex.this-1],target:paths.target[commonIndex.target-1]};if(divergence.target.listKey&&divergence.this.listKey&&divergence.target.container===divergence.this.container)return divergence.target.key>divergence.this.key?"before":"after";const keys=VISITOR_KEYS[commonPath.type],keyPosition_this=keys.indexOf(divergence.this.parentKey);return keys.indexOf(divergence.target.parentKey)>keyPosition_this?"before":"after"}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/hoister.js":(__unused_webpack_module,exports,__nested_webpack_require_1192426__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _t=__nested_webpack_require_1192426__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_t2=_t;const{react}=_t,{cloneNode,jsxExpressionContainer,variableDeclaration,variableDeclarator}=_t2,referenceVisitor={ReferencedIdentifier(path,state){if(path.isJSXIdentifier()&&react.isCompatTag(path.node.name)&&!path.parentPath.isJSXMemberExpression())return;if("this"===path.node.name){let scope=path.scope;do{if(scope.path.isFunction()&&!scope.path.isArrowFunctionExpression())break}while(scope=scope.parent);scope&&state.breakOnScopePaths.push(scope.path)}const binding=path.scope.getBinding(path.node.name);if(binding){for(const violation of binding.constantViolations)if(violation.scope!==binding.path.scope)return state.mutableBinding=!0,void path.stop();binding===state.scope.getBinding(path.node.name)&&(state.bindings[path.node.name]=binding)}}};exports.default=class{constructor(path,scope){this.breakOnScopePaths=void 0,this.bindings=void 0,this.mutableBinding=void 0,this.scopes=void 0,this.scope=void 0,this.path=void 0,this.attachAfter=void 0,this.breakOnScopePaths=[],this.bindings={},this.mutableBinding=!1,this.scopes=[],this.scope=scope,this.path=path,this.attachAfter=!1}isCompatibleScope(scope){for(const key of Object.keys(this.bindings)){const binding=this.bindings[key];if(!scope.bindingIdentifierEquals(key,binding.identifier))return!1}return!0}getCompatibleScopes(){let scope=this.path.scope;do{if(!this.isCompatibleScope(scope))break;if(this.scopes.push(scope),this.breakOnScopePaths.indexOf(scope.path)>=0)break}while(scope=scope.parent)}getAttachmentPath(){let path=this._getAttachmentPath();if(!path)return;let targetScope=path.scope;if(targetScope.path===path&&(targetScope=path.scope.parent),targetScope.path.isProgram()||targetScope.path.isFunction())for(const name of Object.keys(this.bindings)){if(!targetScope.hasOwnBinding(name))continue;const binding=this.bindings[name];if("param"===binding.kind||"params"===binding.path.parentKey)continue;if(this.getAttachmentParentForPath(binding.path).key>=path.key){this.attachAfter=!0,path=binding.path;for(const violationPath of binding.constantViolations)this.getAttachmentParentForPath(violationPath).key>path.key&&(path=violationPath)}}return path}_getAttachmentPath(){const scope=this.scopes.pop();if(scope)if(scope.path.isFunction()){if(!this.hasOwnParamBindings(scope))return this.getNextScopeAttachmentParent();{if(this.scope===scope)return;const bodies=scope.path.get("body").get("body");for(let i=0;i<bodies.length;i++)if(!bodies[i].node._blockHoist)return bodies[i]}}else if(scope.path.isProgram())return this.getNextScopeAttachmentParent()}getNextScopeAttachmentParent(){const scope=this.scopes.pop();if(scope)return this.getAttachmentParentForPath(scope.path)}getAttachmentParentForPath(path){do{if(!path.parentPath||Array.isArray(path.container)&&path.isStatement())return path}while(path=path.parentPath)}hasOwnParamBindings(scope){for(const name of Object.keys(this.bindings)){if(!scope.hasOwnBinding(name))continue;const binding=this.bindings[name];if("param"===binding.kind&&binding.constant)return!0}return!1}run(){if(this.path.traverse(referenceVisitor,this),this.mutableBinding)return;this.getCompatibleScopes();const attachTo=this.getAttachmentPath();if(!attachTo)return;if(attachTo.getFunctionParent()===this.path.getFunctionParent())return;let uid=attachTo.scope.generateUidIdentifier("ref");const declarator=variableDeclarator(uid,this.path.node),insertFn=this.attachAfter?"insertAfter":"insertBefore",[attached]=attachTo[insertFn]([attachTo.isVariableDeclarator()?declarator:variableDeclaration("var",[declarator])]),parent=this.path.parentPath;return parent.isJSXElement()&&this.path.container===parent.node.children&&(uid=jsxExpressionContainer(uid)),this.path.replaceWith(cloneNode(uid)),attachTo.isVariableDeclarator()?attached.get("init"):attached.get("declarations.0.init")}}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/removal-hooks.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.hooks=void 0;exports.hooks=[function(self,parent){if("test"===self.key&&(parent.isWhile()||parent.isSwitchCase())||"declaration"===self.key&&parent.isExportDeclaration()||"body"===self.key&&parent.isLabeledStatement()||"declarations"===self.listKey&&parent.isVariableDeclaration()&&1===parent.node.declarations.length||"expression"===self.key&&parent.isExpressionStatement())return parent.remove(),!0},function(self,parent){if(parent.isSequenceExpression()&&1===parent.node.expressions.length)return parent.replaceWith(parent.node.expressions[0]),!0},function(self,parent){if(parent.isBinary())return"left"===self.key?parent.replaceWith(parent.node.right):parent.replaceWith(parent.node.left),!0},function(self,parent){if(parent.isIfStatement()&&"consequent"===self.key||"body"===self.key&&(parent.isLoop()||parent.isArrowFunctionExpression()))return self.replaceWith({type:"BlockStatement",body:[]}),!0}]},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/virtual-types-validator.js":(__unused_webpack_module,exports,__nested_webpack_require_1197711__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isBindingIdentifier=function(){const{node,parent}=this,grandparent=this.parentPath.parent;return isIdentifier(node)&&isBinding(node,parent,grandparent)},exports.isBlockScoped=function(){return nodeIsBlockScoped(this.node)},exports.isExistentialTypeParam=function(){throw new Error("`path.isExistentialTypeParam` has been renamed to `path.isExistsTypeAnnotation()` in Babel 7.")},exports.isExpression=function(){return this.isIdentifier()?this.isReferencedIdentifier():nodeIsExpression(this.node)},exports.isFlow=function(){const{node}=this;return!!nodeIsFlow(node)||(isImportDeclaration(node)?"type"===node.importKind||"typeof"===node.importKind:isExportDeclaration(node)?"type"===node.exportKind:!!isImportSpecifier(node)&&("type"===node.importKind||"typeof"===node.importKind))},exports.isForAwaitStatement=function(){return isForOfStatement(this.node,{await:!0})},exports.isGenerated=function(){return!this.isUser()},exports.isNumericLiteralTypeAnnotation=function(){throw new Error("`path.isNumericLiteralTypeAnnotation()` has been renamed to `path.isNumberLiteralTypeAnnotation()` in Babel 7.")},exports.isPure=function(constantsOnly){return this.scope.isPure(this.node,constantsOnly)},exports.isReferenced=function(){return nodeIsReferenced(this.node,this.parent)},exports.isReferencedIdentifier=function(opts){const{node,parent}=this;if(!isIdentifier(node,opts)&&!isJSXMemberExpression(parent,opts)){if(!isJSXIdentifier(node,opts))return!1;if(isCompatTag(node.name))return!1}return nodeIsReferenced(node,parent,this.parentPath.parent)},exports.isReferencedMemberExpression=function(){const{node,parent}=this;return isMemberExpression(node)&&nodeIsReferenced(node,parent)},exports.isRestProperty=function(){return nodeIsRestElement(this.node)&&this.parentPath&&this.parentPath.isObjectPattern()},exports.isScope=function(){return nodeIsScope(this.node,this.parent)},exports.isSpreadProperty=function(){return nodeIsRestElement(this.node)&&this.parentPath&&this.parentPath.isObjectExpression()},exports.isStatement=function(){const{node,parent}=this;if(nodeIsStatement(node)){if(isVariableDeclaration(node)){if(isForXStatement(parent,{left:node}))return!1;if(isForStatement(parent,{init:node}))return!1}return!0}return!1},exports.isUser=function(){return this.node&&!!this.node.loc},exports.isVar=function(){return nodeIsVar(this.node)};var _t=__nested_webpack_require_1197711__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{isBinding,isBlockScoped:nodeIsBlockScoped,isExportDeclaration,isExpression:nodeIsExpression,isFlow:nodeIsFlow,isForStatement,isForXStatement,isIdentifier,isImportDeclaration,isImportSpecifier,isJSXIdentifier,isJSXMemberExpression,isMemberExpression,isRestElement:nodeIsRestElement,isReferenced:nodeIsReferenced,isScope:nodeIsScope,isStatement:nodeIsStatement,isVar:nodeIsVar,isVariableDeclaration,react,isForOfStatement}=_t,{isCompatTag}=react},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/virtual-types.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Var=exports.User=exports.Statement=exports.SpreadProperty=exports.Scope=exports.RestProperty=exports.ReferencedMemberExpression=exports.ReferencedIdentifier=exports.Referenced=exports.Pure=exports.NumericLiteralTypeAnnotation=exports.Generated=exports.ForAwaitStatement=exports.Flow=exports.Expression=exports.ExistentialTypeParam=exports.BlockScoped=exports.BindingIdentifier=void 0;exports.ReferencedIdentifier=["Identifier","JSXIdentifier"];exports.ReferencedMemberExpression=["MemberExpression"];exports.BindingIdentifier=["Identifier"];exports.Statement=["Statement"];exports.Expression=["Expression"];exports.Scope=["Scopable","Pattern"];exports.Referenced=null;exports.BlockScoped=null;exports.Var=["VariableDeclaration"];exports.User=null;exports.Generated=null;exports.Pure=null;exports.Flow=["Flow","ImportDeclaration","ExportDeclaration","ImportSpecifier"];exports.RestProperty=["RestElement"];exports.SpreadProperty=["RestElement"];exports.ExistentialTypeParam=["ExistsTypeAnnotation"];exports.NumericLiteralTypeAnnotation=["NumberLiteralTypeAnnotation"];exports.ForAwaitStatement=["ForOfStatement"]},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/modification.js":(__unused_webpack_module,exports,__nested_webpack_require_1202176__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports._containerInsert=function(from,nodes){this.updateSiblingKeys(from,nodes.length);const paths=[];this.container.splice(from,0,...nodes);for(let i=0;i<nodes.length;i++){const to=from+i,path=this.getSibling(to);paths.push(path),this.context&&this.context.queue&&path.pushContext(this.context)}const contexts=this._getQueueContexts();for(const path of paths){path.setScope(),path.debug("Inserted.");for(const context of contexts)context.maybeQueue(path,!0)}return paths},exports._containerInsertAfter=function(nodes){return this._containerInsert(this.key+1,nodes)},exports._containerInsertBefore=function(nodes){return this._containerInsert(this.key,nodes)},exports._verifyNodeList=function(nodes){if(!nodes)return[];Array.isArray(nodes)||(nodes=[nodes]);for(let i=0;i<nodes.length;i++){const node=nodes[i];let msg;if(node?"object"!=typeof node?msg="contains a non-object node":node.type?node instanceof _index.default&&(msg="has a NodePath when it expected a raw object"):msg="without a type":msg="has falsy node",msg){const type=Array.isArray(node)?"array":typeof node;throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`)}}return nodes},exports.hoist=function(scope=this.scope){return new _hoister.default(this,scope).run()},exports.insertAfter=function(nodes_){if(this._assertUnremoved(),this.isSequenceExpression())return last(this.get("expressions")).insertAfter(nodes_);const nodes=this._verifyNodeList(nodes_),{parentPath,parent}=this;if(parentPath.isExpressionStatement()||parentPath.isLabeledStatement()||isExportNamedDeclaration(parent)||parentPath.isExportDefaultDeclaration()&&this.isDeclaration())return parentPath.insertAfter(nodes.map((node=>isExpression(node)?expressionStatement(node):node)));if(this.isNodeType("Expression")&&!this.isJSXElement()&&!parentPath.isJSXElement()||parentPath.isForStatement()&&"init"===this.key){if(this.node){const node=this.node;let{scope}=this;if(scope.path.isPattern())return assertExpression(node),this.replaceWith(callExpression(arrowFunctionExpression([],node),[])),this.get("callee.body").insertAfter(nodes),[this];if(isHiddenInSequenceExpression(this))nodes.unshift(node);else if(isCallExpression(node)&&isSuper(node.callee))nodes.unshift(node),nodes.push(thisExpression());else if(function(node,scope){if(!isAssignmentExpression(node)||!isIdentifier(node.left))return!1;const blockScope=scope.getBlockParent();return blockScope.hasOwnBinding(node.left.name)&&blockScope.getOwnBinding(node.left.name).constantViolations.length<=1}(node,scope))nodes.unshift(node),nodes.push(cloneNode(node.left));else if(scope.isPure(node,!0))nodes.push(node);else{parentPath.isMethod({computed:!0,key:node})&&(scope=scope.parent);const temp=scope.generateDeclaredUidIdentifier();nodes.unshift(expressionStatement(assignmentExpression("=",cloneNode(temp),node))),nodes.push(expressionStatement(cloneNode(temp)))}}return this.replaceExpressionWithStatements(nodes)}if(Array.isArray(this.container))return this._containerInsertAfter(nodes);if(this.isStatementOrBlock()){const node=this.node,shouldInsertCurrentNode=node&&(!this.isExpressionStatement()||null!=node.expression);return this.replaceWith(blockStatement(shouldInsertCurrentNode?[node]:[])),this.pushContainer("body",nodes)}throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?")},exports.insertBefore=function(nodes_){this._assertUnremoved();const nodes=this._verifyNodeList(nodes_),{parentPath,parent}=this;if(parentPath.isExpressionStatement()||parentPath.isLabeledStatement()||isExportNamedDeclaration(parent)||parentPath.isExportDefaultDeclaration()&&this.isDeclaration())return parentPath.insertBefore(nodes);if(this.isNodeType("Expression")&&!this.isJSXElement()||parentPath.isForStatement()&&"init"===this.key)return this.node&&nodes.push(this.node),this.replaceExpressionWithStatements(nodes);if(Array.isArray(this.container))return this._containerInsertBefore(nodes);if(this.isStatementOrBlock()){const node=this.node,shouldInsertCurrentNode=node&&(!this.isExpressionStatement()||null!=node.expression);return this.replaceWith(blockStatement(shouldInsertCurrentNode?[node]:[])),this.unshiftContainer("body",nodes)}throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?")},exports.pushContainer=function(listKey,nodes){this._assertUnremoved();const verifiedNodes=this._verifyNodeList(nodes),container=this.node[listKey];return _index.default.get({parentPath:this,parent:this.node,container,listKey,key:container.length}).setContext(this.context).replaceWithMultiple(verifiedNodes)},exports.unshiftContainer=function(listKey,nodes){this._assertUnremoved(),nodes=this._verifyNodeList(nodes);return _index.default.get({parentPath:this,parent:this.node,container:this.node[listKey],listKey,key:0}).setContext(this.context)._containerInsertBefore(nodes)},exports.updateSiblingKeys=function(fromIndex,incrementBy){if(!this.parent)return;const paths=_cache.path.get(this.parent);for(const[,path]of paths)"number"==typeof path.key&&path.key>=fromIndex&&(path.key+=incrementBy)};var _cache=__nested_webpack_require_1202176__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/cache.js"),_hoister=__nested_webpack_require_1202176__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/hoister.js"),_index=__nested_webpack_require_1202176__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js"),_t=__nested_webpack_require_1202176__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{arrowFunctionExpression,assertExpression,assignmentExpression,blockStatement,callExpression,cloneNode,expressionStatement,isAssignmentExpression,isCallExpression,isExportNamedDeclaration,isExpression,isIdentifier,isSequenceExpression,isSuper,thisExpression}=_t;const last=arr=>arr[arr.length-1];function isHiddenInSequenceExpression(path){return isSequenceExpression(path.parent)&&(last(path.parent.expressions)!==path.node||isHiddenInSequenceExpression(path.parentPath))}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/removal.js":(__unused_webpack_module,exports,__nested_webpack_require_1208486__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports._assertUnremoved=function(){if(this.removed)throw this.buildCodeFrameError("NodePath has been removed so is read-only.")},exports._callRemovalHooks=function(){for(const fn of _removalHooks.hooks)if(fn(this,this.parentPath))return!0},exports._markRemoved=function(){this._traverseFlags|=_index.SHOULD_SKIP|_index.REMOVED,this.parent&&_cache.path.get(this.parent).delete(this.node);this.node=null},exports._remove=function(){Array.isArray(this.container)?(this.container.splice(this.key,1),this.updateSiblingKeys(this.key,-1)):this._replaceWith(null)},exports._removeFromScope=function(){const bindings=this.getBindingIdentifiers();Object.keys(bindings).forEach((name=>this.scope.removeBinding(name)))},exports.remove=function(){var _this$opts;this._assertUnremoved(),this.resync(),null!=(_this$opts=this.opts)&&_this$opts.noScope||this._removeFromScope();if(this._callRemovalHooks())return void this._markRemoved();this.shareCommentsWithSiblings(),this._remove(),this._markRemoved()};var _removalHooks=__nested_webpack_require_1208486__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/removal-hooks.js"),_cache=__nested_webpack_require_1208486__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/cache.js"),_index=__nested_webpack_require_1208486__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js")},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/replacement.js":(__unused_webpack_module,exports,__nested_webpack_require_1210082__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports._replaceWith=function(node){var _pathCache$get2;if(!this.container)throw new ReferenceError("Container is falsy");this.inList?validate(this.parent,this.key,[node]):validate(this.parent,this.key,node);this.debug(`Replace with ${null==node?void 0:node.type}`),null==(_pathCache$get2=_cache.path.get(this.parent))||_pathCache$get2.set(node,this).delete(this.node),this.node=this.container[this.key]=node},exports.replaceExpressionWithStatements=function(nodes){this.resync();const nodesAsSequenceExpression=toSequenceExpression(nodes,this.scope);if(nodesAsSequenceExpression)return this.replaceWith(nodesAsSequenceExpression)[0].get("expressions");const functionParent=this.getFunctionParent(),isParentAsync=null==functionParent?void 0:functionParent.is("async"),isParentGenerator=null==functionParent?void 0:functionParent.is("generator"),container=arrowFunctionExpression([],blockStatement(nodes));this.replaceWith(callExpression(container,[]));const callee=this.get("callee");(0,_helperHoistVariables.default)(callee.get("body"),(id=>{this.scope.push({id})}),"var");const completionRecords=this.get("callee").getCompletionRecords();for(const path of completionRecords){if(!path.isExpressionStatement())continue;const loop=path.findParent((path=>path.isLoop()));if(loop){let uid=loop.getData("expressionReplacementReturnUid");uid?uid=identifier(uid.name):(uid=callee.scope.generateDeclaredUidIdentifier("ret"),callee.get("body").pushContainer("body",returnStatement(cloneNode(uid))),loop.setData("expressionReplacementReturnUid",uid)),path.get("expression").replaceWith(assignmentExpression("=",cloneNode(uid),path.node.expression))}else path.replaceWith(returnStatement(path.node.expression))}callee.arrowFunctionToExpression();const newCallee=callee,needToAwaitFunction=isParentAsync&&_index.default.hasType(this.get("callee.body").node,"AwaitExpression",FUNCTION_TYPES),needToYieldFunction=isParentGenerator&&_index.default.hasType(this.get("callee.body").node,"YieldExpression",FUNCTION_TYPES);needToAwaitFunction&&(newCallee.set("async",!0),needToYieldFunction||this.replaceWith(awaitExpression(this.node)));needToYieldFunction&&(newCallee.set("generator",!0),this.replaceWith(yieldExpression(this.node,!0)));return newCallee.get("body.body")},exports.replaceInline=function(nodes){if(this.resync(),Array.isArray(nodes)){if(Array.isArray(this.container)){nodes=this._verifyNodeList(nodes);const paths=this._containerInsertAfter(nodes);return this.remove(),paths}return this.replaceWithMultiple(nodes)}return this.replaceWith(nodes)},exports.replaceWith=function(replacementPath){if(this.resync(),this.removed)throw new Error("You can't replace this node, we've already removed it");let replacement=replacementPath instanceof _index2.default?replacementPath.node:replacementPath;if(!replacement)throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");if(this.node===replacement)return[this];if(this.isProgram()&&!isProgram(replacement))throw new Error("You can only replace a Program root node with another Program node");if(Array.isArray(replacement))throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");if("string"==typeof replacement)throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");let nodePath="";this.isNodeType("Statement")&&isExpression(replacement)&&(this.canHaveVariableDeclarationOrExpression()||this.canSwapBetweenExpressionAndStatement(replacement)||this.parentPath.isExportDefaultDeclaration()||(replacement=expressionStatement(replacement),nodePath="expression"));if(this.isNodeType("Expression")&&isStatement(replacement)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(replacement))return this.replaceExpressionWithStatements([replacement]);const oldNode=this.node;oldNode&&(inheritsComments(replacement,oldNode),removeComments(oldNode));return this._replaceWith(replacement),this.type=replacement.type,this.setScope(),this.requeue(),[nodePath?this.get(nodePath):this]},exports.replaceWithMultiple=function(nodes){var _pathCache$get;this.resync(),nodes=this._verifyNodeList(nodes),inheritLeadingComments(nodes[0],this.node),inheritTrailingComments(nodes[nodes.length-1],this.node),null==(_pathCache$get=_cache.path.get(this.parent))||_pathCache$get.delete(this.node),this.node=this.container[this.key]=null;const paths=this.insertAfter(nodes);this.node?this.requeue():this.remove();return paths},exports.replaceWithSourceString=function(replacement){let ast;this.resync();try{replacement=`(${replacement})`,ast=(0,_parser.parse)(replacement)}catch(err){const loc=err.loc;throw loc&&(err.message+=" - make sure this is an expression.\n"+(0,_codeFrame.codeFrameColumns)(replacement,{start:{line:loc.line,column:loc.column+1}}),err.code="BABEL_REPLACE_SOURCE_ERROR"),err}const expressionAST=ast.program.body[0].expression;return _index.default.removeProperties(expressionAST),this.replaceWith(expressionAST)};var _codeFrame=__nested_webpack_require_1210082__("./stubs/babel-codeframe.js"),_index=__nested_webpack_require_1210082__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js"),_index2=__nested_webpack_require_1210082__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/index.js"),_cache=__nested_webpack_require_1210082__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/cache.js"),_parser=__nested_webpack_require_1210082__("./node_modules/.pnpm/@babel+parser@7.22.6/node_modules/@babel/parser/lib/index.js"),_t=__nested_webpack_require_1210082__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_helperHoistVariables=__nested_webpack_require_1210082__("./node_modules/.pnpm/@babel+helper-hoist-variables@7.22.5/node_modules/@babel/helper-hoist-variables/lib/index.js");const{FUNCTION_TYPES,arrowFunctionExpression,assignmentExpression,awaitExpression,blockStatement,callExpression,cloneNode,expressionStatement,identifier,inheritLeadingComments,inheritTrailingComments,inheritsComments,isExpression,isProgram,isStatement,removeComments,returnStatement,toSequenceExpression,validate,yieldExpression}=_t},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/scope/binding.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;exports.default=class{constructor({identifier,scope,path,kind}){this.identifier=void 0,this.scope=void 0,this.path=void 0,this.kind=void 0,this.constantViolations=[],this.constant=!0,this.referencePaths=[],this.referenced=!1,this.references=0,this.identifier=identifier,this.scope=scope,this.path=path,this.kind=kind,"var"!==kind&&"hoisted"!==kind||!function(path){for(let{parentPath,key}=path;parentPath;({parentPath,key}=parentPath)){if(parentPath.isFunctionParent())return!1;if(parentPath.isWhile()||parentPath.isForXStatement()||parentPath.isForStatement()&&"body"===key)return!0}return!1}(path||(()=>{throw new Error("Internal Babel error: unreachable ")})())||this.reassign(path),this.clearValue()}deoptValue(){this.clearValue(),this.hasDeoptedValue=!0}setValue(value){this.hasDeoptedValue||(this.hasValue=!0,this.value=value)}clearValue(){this.hasDeoptedValue=!1,this.hasValue=!1,this.value=null}reassign(path){this.constant=!1,-1===this.constantViolations.indexOf(path)&&this.constantViolations.push(path)}reference(path){-1===this.referencePaths.indexOf(path)&&(this.referenced=!0,this.references++,this.referencePaths.push(path))}dereference(){this.references--,this.referenced=!!this.references}}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/scope/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1217892__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _renamer=__nested_webpack_require_1217892__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/scope/lib/renamer.js"),_index=__nested_webpack_require_1217892__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/index.js"),_binding=__nested_webpack_require_1217892__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/scope/binding.js"),_globals=__nested_webpack_require_1217892__("./node_modules/.pnpm/globals@11.12.0/node_modules/globals/index.js"),_t=__nested_webpack_require_1217892__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),t=_t,_cache=__nested_webpack_require_1217892__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/cache.js"),_visitors=__nested_webpack_require_1217892__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/visitors.js");const{NOT_LOCAL_BINDING,callExpression,cloneNode,getBindingIdentifiers,identifier,isArrayExpression,isBinary,isClass,isClassBody,isClassDeclaration,isExportAllDeclaration,isExportDefaultDeclaration,isExportNamedDeclaration,isFunctionDeclaration,isIdentifier,isImportDeclaration,isLiteral,isMethod,isModuleSpecifier,isNullLiteral,isObjectExpression,isProperty,isPureish,isRegExpLiteral,isSuper,isTaggedTemplateExpression,isTemplateLiteral,isThisExpression,isUnaryExpression,isVariableDeclaration,matchesPattern,memberExpression,numericLiteral,toIdentifier,unaryExpression,variableDeclaration,variableDeclarator,isRecordExpression,isTupleExpression,isObjectProperty,isTopicReference,isMetaProperty,isPrivateName,isExportDeclaration}=_t;function gatherNodeParts(node,parts){switch(null==node?void 0:node.type){default:if(isImportDeclaration(node)||isExportDeclaration(node))if((isExportAllDeclaration(node)||isExportNamedDeclaration(node)||isImportDeclaration(node))&&node.source)gatherNodeParts(node.source,parts);else if((isExportNamedDeclaration(node)||isImportDeclaration(node))&&node.specifiers&&node.specifiers.length)for(const e of node.specifiers)gatherNodeParts(e,parts);else(isExportDefaultDeclaration(node)||isExportNamedDeclaration(node))&&node.declaration&&gatherNodeParts(node.declaration,parts);else isModuleSpecifier(node)?gatherNodeParts(node.local,parts):!isLiteral(node)||isNullLiteral(node)||isRegExpLiteral(node)||isTemplateLiteral(node)||parts.push(node.value);break;case"MemberExpression":case"OptionalMemberExpression":case"JSXMemberExpression":gatherNodeParts(node.object,parts),gatherNodeParts(node.property,parts);break;case"Identifier":case"JSXIdentifier":parts.push(node.name);break;case"CallExpression":case"OptionalCallExpression":case"NewExpression":gatherNodeParts(node.callee,parts);break;case"ObjectExpression":case"ObjectPattern":for(const e of node.properties)gatherNodeParts(e,parts);break;case"SpreadElement":case"RestElement":case"UnaryExpression":case"UpdateExpression":gatherNodeParts(node.argument,parts);break;case"ObjectProperty":case"ObjectMethod":case"ClassProperty":case"ClassMethod":case"ClassPrivateProperty":case"ClassPrivateMethod":gatherNodeParts(node.key,parts);break;case"ThisExpression":parts.push("this");break;case"Super":parts.push("super");break;case"Import":parts.push("import");break;case"DoExpression":parts.push("do");break;case"YieldExpression":parts.push("yield"),gatherNodeParts(node.argument,parts);break;case"AwaitExpression":parts.push("await"),gatherNodeParts(node.argument,parts);break;case"AssignmentExpression":gatherNodeParts(node.left,parts);break;case"VariableDeclarator":case"FunctionExpression":case"FunctionDeclaration":case"ClassExpression":case"ClassDeclaration":case"PrivateName":gatherNodeParts(node.id,parts);break;case"ParenthesizedExpression":gatherNodeParts(node.expression,parts);break;case"MetaProperty":gatherNodeParts(node.meta,parts),gatherNodeParts(node.property,parts);break;case"JSXElement":gatherNodeParts(node.openingElement,parts);break;case"JSXOpeningElement":gatherNodeParts(node.name,parts);break;case"JSXFragment":gatherNodeParts(node.openingFragment,parts);break;case"JSXOpeningFragment":parts.push("Fragment");break;case"JSXNamespacedName":gatherNodeParts(node.namespace,parts),gatherNodeParts(node.name,parts)}}const collectorVisitor={ForStatement(path){const declar=path.get("init");if(declar.isVar()){const{scope}=path;(scope.getFunctionParent()||scope.getProgramParent()).registerBinding("var",declar)}},Declaration(path){if(path.isBlockScoped())return;if(path.isImportDeclaration())return;if(path.isExportDeclaration())return;(path.scope.getFunctionParent()||path.scope.getProgramParent()).registerDeclaration(path)},ImportDeclaration(path){path.scope.getBlockParent().registerDeclaration(path)},ReferencedIdentifier(path,state){state.references.push(path)},ForXStatement(path,state){const left=path.get("left");if(left.isPattern()||left.isIdentifier())state.constantViolations.push(path);else if(left.isVar()){const{scope}=path;(scope.getFunctionParent()||scope.getProgramParent()).registerBinding("var",left)}},ExportDeclaration:{exit(path){const{node,scope}=path;if(isExportAllDeclaration(node))return;const declar=node.declaration;if(isClassDeclaration(declar)||isFunctionDeclaration(declar)){const id=declar.id;if(!id)return;const binding=scope.getBinding(id.name);null==binding||binding.reference(path)}else if(isVariableDeclaration(declar))for(const decl of declar.declarations)for(const name of Object.keys(getBindingIdentifiers(decl))){const binding=scope.getBinding(name);null==binding||binding.reference(path)}}},LabeledStatement(path){path.scope.getBlockParent().registerDeclaration(path)},AssignmentExpression(path,state){state.assignments.push(path)},UpdateExpression(path,state){state.constantViolations.push(path)},UnaryExpression(path,state){"delete"===path.node.operator&&state.constantViolations.push(path)},BlockScoped(path){let scope=path.scope;scope.path===path&&(scope=scope.parent);if(scope.getBlockParent().registerDeclaration(path),path.isClassDeclaration()&&path.node.id){const name=path.node.id.name;path.scope.bindings[name]=path.scope.parent.getBinding(name)}},CatchClause(path){path.scope.registerBinding("let",path)},Function(path){const params=path.get("params");for(const param of params)path.scope.registerBinding("param",param);path.isFunctionExpression()&&path.has("id")&&!path.get("id").node[NOT_LOCAL_BINDING]&&path.scope.registerBinding("local",path.get("id"),path)},ClassExpression(path){path.has("id")&&!path.get("id").node[NOT_LOCAL_BINDING]&&path.scope.registerBinding("local",path)}};let uid=0;class Scope{constructor(path){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;const{node}=path,cached=_cache.scope.get(node);if((null==cached?void 0:cached.path)===path)return cached;_cache.scope.set(node,this),this.uid=uid++,this.block=node,this.path=path,this.labels=new Map,this.inited=!1}get parent(){var _parent;let parent,path=this.path;do{const shouldSkip="key"===path.key||"decorators"===path.listKey;path=path.parentPath,shouldSkip&&path.isMethod()&&(path=path.parentPath),path&&path.isScope()&&(parent=path)}while(path&&!parent);return null==(_parent=parent)?void 0:_parent.scope}get parentBlock(){return this.path.parent}get hub(){return this.path.hub}traverse(node,opts,state){(0,_index.default)(node,opts,this,state,this.path)}generateDeclaredUidIdentifier(name){const id=this.generateUidIdentifier(name);return this.push({id}),cloneNode(id)}generateUidIdentifier(name){return identifier(this.generateUid(name))}generateUid(name="temp"){let uid;name=toIdentifier(name).replace(/^_+/,"").replace(/[0-9]+$/g,"");let i=1;do{uid=this._generateUid(name,i),i++}while(this.hasLabel(uid)||this.hasBinding(uid)||this.hasGlobal(uid)||this.hasReference(uid));const program=this.getProgramParent();return program.references[uid]=!0,program.uids[uid]=!0,uid}_generateUid(name,i){let id=name;return i>1&&(id+=i),`_${id}`}generateUidBasedOnNode(node,defaultName){const parts=[];gatherNodeParts(node,parts);let id=parts.join("$");return id=id.replace(/^_/,"")||defaultName||"ref",this.generateUid(id.slice(0,20))}generateUidIdentifierBasedOnNode(node,defaultName){return identifier(this.generateUidBasedOnNode(node,defaultName))}isStatic(node){if(isThisExpression(node)||isSuper(node)||isTopicReference(node))return!0;if(isIdentifier(node)){const binding=this.getBinding(node.name);return binding?binding.constant:this.hasBinding(node.name)}return!1}maybeGenerateMemoised(node,dontPush){if(this.isStatic(node))return null;{const id=this.generateUidIdentifierBasedOnNode(node);return dontPush?id:(this.push({id}),cloneNode(id))}}checkBlockScopedCollisions(local,kind,name,id){if("param"===kind)return;if("local"===local.kind)return;if("let"===kind||"let"===local.kind||"const"===local.kind||"module"===local.kind||"param"===local.kind&&"const"===kind)throw this.hub.buildError(id,`Duplicate declaration "${name}"`,TypeError)}rename(oldName,newName){const binding=this.getBinding(oldName);if(binding){newName||(newName=this.generateUidIdentifier(oldName).name);new _renamer.default(binding,oldName,newName).rename(arguments[2])}}_renameFromMap(map,oldName,newName,value){map[oldName]&&(map[newName]=value,map[oldName]=null)}dump(){const sep="-".repeat(60);console.log(sep);let scope=this;do{console.log("#",scope.block.type);for(const name of Object.keys(scope.bindings)){const binding=scope.bindings[name];console.log(" -",name,{constant:binding.constant,references:binding.references,violations:binding.constantViolations.length,kind:binding.kind})}}while(scope=scope.parent);console.log(sep)}toArray(node,i,arrayLikeIsIterable){if(isIdentifier(node)){const binding=this.getBinding(node.name);if(null!=binding&&binding.constant&&binding.path.isGenericType("Array"))return node}if(isArrayExpression(node))return node;if(isIdentifier(node,{name:"arguments"}))return callExpression(memberExpression(memberExpression(memberExpression(identifier("Array"),identifier("prototype")),identifier("slice")),identifier("call")),[node]);let helperName;const args=[node];return!0===i?helperName="toConsumableArray":"number"==typeof i?(args.push(numericLiteral(i)),helperName="slicedToArray"):helperName="toArray",arrayLikeIsIterable&&(args.unshift(this.hub.addHelper(helperName)),helperName="maybeArrayLike"),callExpression(this.hub.addHelper(helperName),args)}hasLabel(name){return!!this.getLabel(name)}getLabel(name){return this.labels.get(name)}registerLabel(path){this.labels.set(path.node.label.name,path)}registerDeclaration(path){if(path.isLabeledStatement())this.registerLabel(path);else if(path.isFunctionDeclaration())this.registerBinding("hoisted",path.get("id"),path);else if(path.isVariableDeclaration()){const declarations=path.get("declarations"),{kind}=path.node;for(const declar of declarations)this.registerBinding("using"===kind||"await using"===kind?"const":kind,declar)}else if(path.isClassDeclaration()){if(path.node.declare)return;this.registerBinding("let",path)}else if(path.isImportDeclaration()){const isTypeDeclaration="type"===path.node.importKind||"typeof"===path.node.importKind,specifiers=path.get("specifiers");for(const specifier of specifiers){const isTypeSpecifier=isTypeDeclaration||specifier.isImportSpecifier()&&("type"===specifier.node.importKind||"typeof"===specifier.node.importKind);this.registerBinding(isTypeSpecifier?"unknown":"module",specifier)}}else if(path.isExportDeclaration()){const declar=path.get("declaration");(declar.isClassDeclaration()||declar.isFunctionDeclaration()||declar.isVariableDeclaration())&&this.registerDeclaration(declar)}else this.registerBinding("unknown",path)}buildUndefinedNode(){return unaryExpression("void",numericLiteral(0),!0)}registerConstantViolation(path){const ids=path.getBindingIdentifiers();for(const name of Object.keys(ids)){var _this$getBinding;null==(_this$getBinding=this.getBinding(name))||_this$getBinding.reassign(path)}}registerBinding(kind,path,bindingPath=path){if(!kind)throw new ReferenceError("no `kind`");if(path.isVariableDeclaration()){const declarators=path.get("declarations");for(const declar of declarators)this.registerBinding(kind,declar);return}const parent=this.getProgramParent(),ids=path.getOuterBindingIdentifiers(!0);for(const name of Object.keys(ids)){parent.references[name]=!0;for(const id of ids[name]){const local=this.getOwnBinding(name);if(local){if(local.identifier===id)continue;this.checkBlockScopedCollisions(local,kind,name,id)}local?this.registerConstantViolation(bindingPath):this.bindings[name]=new _binding.default({identifier:id,scope:this,path:bindingPath,kind})}}}addGlobal(node){this.globals[node.name]=node}hasUid(name){let scope=this;do{if(scope.uids[name])return!0}while(scope=scope.parent);return!1}hasGlobal(name){let scope=this;do{if(scope.globals[name])return!0}while(scope=scope.parent);return!1}hasReference(name){return!!this.getProgramParent().references[name]}isPure(node,constantsOnly){if(isIdentifier(node)){const binding=this.getBinding(node.name);return!!binding&&(!constantsOnly||binding.constant)}if(isThisExpression(node)||isMetaProperty(node)||isTopicReference(node)||isPrivateName(node))return!0;var _node$decorators,_node$decorators2,_node$decorators3;if(isClass(node))return!(node.superClass&&!this.isPure(node.superClass,constantsOnly))&&(!((null==(_node$decorators=node.decorators)?void 0:_node$decorators.length)>0)&&this.isPure(node.body,constantsOnly));if(isClassBody(node)){for(const method of node.body)if(!this.isPure(method,constantsOnly))return!1;return!0}if(isBinary(node))return this.isPure(node.left,constantsOnly)&&this.isPure(node.right,constantsOnly);if(isArrayExpression(node)||isTupleExpression(node)){for(const elem of node.elements)if(null!==elem&&!this.isPure(elem,constantsOnly))return!1;return!0}if(isObjectExpression(node)||isRecordExpression(node)){for(const prop of node.properties)if(!this.isPure(prop,constantsOnly))return!1;return!0}if(isMethod(node))return!(node.computed&&!this.isPure(node.key,constantsOnly))&&!((null==(_node$decorators2=node.decorators)?void 0:_node$decorators2.length)>0);if(isProperty(node))return!(node.computed&&!this.isPure(node.key,constantsOnly))&&(!((null==(_node$decorators3=node.decorators)?void 0:_node$decorators3.length)>0)&&!((isObjectProperty(node)||node.static)&&null!==node.value&&!this.isPure(node.value,constantsOnly)));if(isUnaryExpression(node))return this.isPure(node.argument,constantsOnly);if(isTaggedTemplateExpression(node))return matchesPattern(node.tag,"String.raw")&&!this.hasBinding("String",!0)&&this.isPure(node.quasi,constantsOnly);if(isTemplateLiteral(node)){for(const expression of node.expressions)if(!this.isPure(expression,constantsOnly))return!1;return!0}return isPureish(node)}setData(key,val){return this.data[key]=val}getData(key){let scope=this;do{const data=scope.data[key];if(null!=data)return data}while(scope=scope.parent)}removeData(key){let scope=this;do{null!=scope.data[key]&&(scope.data[key]=null)}while(scope=scope.parent)}init(){this.inited||(this.inited=!0,this.crawl())}crawl(){const path=this.path;this.references=Object.create(null),this.bindings=Object.create(null),this.globals=Object.create(null),this.uids=Object.create(null),this.data=Object.create(null);const programParent=this.getProgramParent();if(programParent.crawling)return;const state={references:[],constantViolations:[],assignments:[]};if(this.crawling=!0,"Program"!==path.type&&(0,_visitors.isExplodedVisitor)(collectorVisitor)){for(const visit of collectorVisitor.enter)visit.call(state,path,state);const typeVisitors=collectorVisitor[path.type];if(typeVisitors)for(const visit of typeVisitors.enter)visit.call(state,path,state)}path.traverse(collectorVisitor,state),this.crawling=!1;for(const path of state.assignments){const ids=path.getBindingIdentifiers();for(const name of Object.keys(ids))path.scope.getBinding(name)||programParent.addGlobal(ids[name]);path.scope.registerConstantViolation(path)}for(const ref of state.references){const binding=ref.scope.getBinding(ref.node.name);binding?binding.reference(ref):programParent.addGlobal(ref.node)}for(const path of state.constantViolations)path.scope.registerConstantViolation(path)}push(opts){let path=this.path;path.isPattern()?path=this.getPatternParent().path:path.isBlockStatement()||path.isProgram()||(path=this.getBlockParent().path),path.isSwitchStatement()&&(path=(this.getFunctionParent()||this.getProgramParent()).path);const{init,unique,kind="var",id}=opts;if(!init&&!unique&&("var"===kind||"let"===kind)&&path.isFunction()&&!path.node.name&&t.isCallExpression(path.parent,{callee:path.node})&&path.parent.arguments.length<=path.node.params.length&&t.isIdentifier(id))return path.pushContainer("params",id),void path.scope.registerBinding("param",path.get("params")[path.node.params.length-1]);(path.isLoop()||path.isCatchClause()||path.isFunction())&&(path.ensureBlock(),path=path.get("body"));const blockHoist=null==opts._blockHoist?2:opts._blockHoist,dataKey=`declaration:${kind}:${blockHoist}`;let declarPath=!unique&&path.getData(dataKey);if(!declarPath){const declar=variableDeclaration(kind,[]);declar._blockHoist=blockHoist,[declarPath]=path.unshiftContainer("body",[declar]),unique||path.setData(dataKey,declarPath)}const declarator=variableDeclarator(id,init),len=declarPath.node.declarations.push(declarator);path.scope.registerBinding(kind,declarPath.get("declarations")[len-1])}getProgramParent(){let scope=this;do{if(scope.path.isProgram())return scope}while(scope=scope.parent);throw new Error("Couldn't find a Program")}getFunctionParent(){let scope=this;do{if(scope.path.isFunctionParent())return scope}while(scope=scope.parent);return null}getBlockParent(){let scope=this;do{if(scope.path.isBlockParent())return scope}while(scope=scope.parent);throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...")}getPatternParent(){let scope=this;do{if(!scope.path.isPattern())return scope.getBlockParent()}while(scope=scope.parent.parent);throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...")}getAllBindings(){const ids=Object.create(null);let scope=this;do{for(const key of Object.keys(scope.bindings))key in ids==!1&&(ids[key]=scope.bindings[key]);scope=scope.parent}while(scope);return ids}getAllBindingsOfKind(...kinds){const ids=Object.create(null);for(const kind of kinds){let scope=this;do{for(const name of Object.keys(scope.bindings)){const binding=scope.bindings[name];binding.kind===kind&&(ids[name]=binding)}scope=scope.parent}while(scope)}return ids}bindingIdentifierEquals(name,node){return this.getBindingIdentifier(name)===node}getBinding(name){let previousPath,scope=this;do{const binding=scope.getOwnBinding(name);var _previousPath;if(binding){if(null==(_previousPath=previousPath)||!_previousPath.isPattern()||"param"===binding.kind||"local"===binding.kind)return binding}else if(!binding&&"arguments"===name&&scope.path.isFunction()&&!scope.path.isArrowFunctionExpression())break;previousPath=scope.path}while(scope=scope.parent)}getOwnBinding(name){return this.bindings[name]}getBindingIdentifier(name){var _this$getBinding2;return null==(_this$getBinding2=this.getBinding(name))?void 0:_this$getBinding2.identifier}getOwnBindingIdentifier(name){const binding=this.bindings[name];return null==binding?void 0:binding.identifier}hasOwnBinding(name){return!!this.getOwnBinding(name)}hasBinding(name,opts){var _opts,_opts2,_opts3;return!!name&&(!!this.hasOwnBinding(name)||("boolean"==typeof opts&&(opts={noGlobals:opts}),!!this.parentHasBinding(name,opts)||(!(null!=(_opts=opts)&&_opts.noUids||!this.hasUid(name))||(!(null!=(_opts2=opts)&&_opts2.noGlobals||!Scope.globals.includes(name))||!(null!=(_opts3=opts)&&_opts3.noGlobals||!Scope.contextVariables.includes(name))))))}parentHasBinding(name,opts){var _this$parent;return null==(_this$parent=this.parent)?void 0:_this$parent.hasBinding(name,opts)}moveBindingTo(name,scope){const info=this.getBinding(name);info&&(info.scope.removeOwnBinding(name),info.scope=scope,scope.bindings[name]=info)}removeOwnBinding(name){delete this.bindings[name]}removeBinding(name){var _this$getBinding3;null==(_this$getBinding3=this.getBinding(name))||_this$getBinding3.scope.removeOwnBinding(name);let scope=this;do{scope.uids[name]&&(scope.uids[name]=!1)}while(scope=scope.parent)}}exports.default=Scope,Scope.globals=Object.keys(_globals.builtin),Scope.contextVariables=["arguments","undefined","Infinity","NaN"]},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/scope/lib/renamer.js":(__unused_webpack_module,exports,__nested_webpack_require_1238614__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _helperSplitExportDeclaration=__nested_webpack_require_1238614__("./node_modules/.pnpm/@babel+helper-split-export-declaration@7.22.6/node_modules/@babel/helper-split-export-declaration/lib/index.js"),t=__nested_webpack_require_1238614__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js"),_helperEnvironmentVisitor=__nested_webpack_require_1238614__("./node_modules/.pnpm/@babel+helper-environment-visitor@7.22.5/node_modules/@babel/helper-environment-visitor/lib/index.js"),_traverseNode=__nested_webpack_require_1238614__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/traverse-node.js"),_visitors=__nested_webpack_require_1238614__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/visitors.js");const renameVisitor={ReferencedIdentifier({node},state){node.name===state.oldName&&(node.name=state.newName)},Scope(path,state){path.scope.bindingIdentifierEquals(state.oldName,state.binding.identifier)||(path.skip(),path.isMethod()&&(0,_helperEnvironmentVisitor.requeueComputedKeyAndDecorators)(path))},ObjectProperty({node,scope},state){const{name}=node.key;var _node$extra;!node.shorthand||name!==state.oldName&&name!==state.newName||scope.getBindingIdentifier(name)!==state.binding.identifier||(node.shorthand=!1,null!=(_node$extra=node.extra)&&_node$extra.shorthand&&(node.extra.shorthand=!1))},"AssignmentExpression|Declaration|VariableDeclarator"(path,state){if(path.isVariableDeclaration())return;const ids=path.getOuterBindingIdentifiers();for(const name in ids)name===state.oldName&&(ids[name].name=state.newName)}};exports.default=class{constructor(binding,oldName,newName){this.newName=newName,this.oldName=oldName,this.binding=binding}maybeConvertFromExportDeclaration(parentDeclar){const maybeExportDeclar=parentDeclar.parentPath;if(maybeExportDeclar.isExportDeclaration()){if(maybeExportDeclar.isExportDefaultDeclaration()){const{declaration}=maybeExportDeclar.node;if(t.isDeclaration(declaration)&&!declaration.id)return}maybeExportDeclar.isExportAllDeclaration()||(0,_helperSplitExportDeclaration.default)(maybeExportDeclar)}}maybeConvertFromClassFunctionDeclaration(path){return path}maybeConvertFromClassFunctionExpression(path){return path}rename(){const{binding,oldName,newName}=this,{scope,path}=binding,parentDeclar=path.find((path=>path.isDeclaration()||path.isFunctionExpression()||path.isClassExpression()));if(parentDeclar){parentDeclar.getOuterBindingIdentifiers()[oldName]===binding.identifier&&this.maybeConvertFromExportDeclaration(parentDeclar)}const blockToTraverse=arguments[0]||scope.block;(0,_traverseNode.traverseNode)(blockToTraverse,(0,_visitors.explode)(renameVisitor),scope,this,scope.path,{discriminant:!0}),arguments[0]||(scope.removeOwnBinding(oldName),scope.bindings[newName]=binding,this.binding.identifier.name=newName),parentDeclar&&(this.maybeConvertFromClassFunctionDeclaration(path),this.maybeConvertFromClassFunctionExpression(path))}}},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/traverse-node.js":(__unused_webpack_module,exports,__nested_webpack_require_1241764__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.traverseNode=function(node,opts,scope,state,path,skipKeys){const keys=VISITOR_KEYS[node.type];if(!keys)return!1;const context=new _context.default(scope,opts,state,path);for(const key of keys)if((!skipKeys||!skipKeys[key])&&context.visit(node,key))return!0;return!1};var _context=__nested_webpack_require_1241764__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/context.js"),_t=__nested_webpack_require_1241764__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{VISITOR_KEYS}=_t},"./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/visitors.js":(__unused_webpack_module,exports,__nested_webpack_require_1242508__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.explode=explode,exports.isExplodedVisitor=isExplodedVisitor,exports.merge=function(visitors,states=[],wrapper){const rootVisitor={};for(let i=0;i<visitors.length;i++){const visitor=visitors[i],state=states[i];explode(visitor);for(const type of Object.keys(visitor)){let visitorType=visitor[type];(state||wrapper)&&(visitorType=wrapWithStateOrWrapper(visitorType,state,wrapper));mergePair(rootVisitor[type]||(rootVisitor[type]={}),visitorType)}}return rootVisitor},exports.verify=verify;var virtualTypes=__nested_webpack_require_1242508__("./node_modules/.pnpm/@babel+traverse@7.22.6/node_modules/@babel/traverse/lib/path/lib/virtual-types.js"),_t=__nested_webpack_require_1242508__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js");const{DEPRECATED_KEYS,DEPRECATED_ALIASES,FLIPPED_ALIAS_KEYS,TYPES,__internal__deprecationWarning:deprecationWarning}=_t;function isExplodedVisitor(visitor){return null==visitor?void 0:visitor._exploded}function explode(visitor){if(isExplodedVisitor(visitor))return visitor;visitor._exploded=!0;for(const nodeType of Object.keys(visitor)){if(shouldIgnoreKey(nodeType))continue;const parts=nodeType.split("|");if(1===parts.length)continue;const fns=visitor[nodeType];delete visitor[nodeType];for(const part of parts)visitor[part]=fns}verify(visitor),delete visitor.__esModule,function(obj){for(const key of Object.keys(obj)){if(shouldIgnoreKey(key))continue;const fns=obj[key];"function"==typeof fns&&(obj[key]={enter:fns})}}(visitor),ensureCallbackArrays(visitor);for(const nodeType of Object.keys(visitor)){if(shouldIgnoreKey(nodeType))continue;if(!(nodeType in virtualTypes))continue;const fns=visitor[nodeType];for(const type of Object.keys(fns))fns[type]=wrapCheck(nodeType,fns[type]);delete visitor[nodeType];const types=virtualTypes[nodeType];if(null!==types)for(const type of types)visitor[type]?mergePair(visitor[type],fns):visitor[type]=fns;else mergePair(visitor,fns)}for(const nodeType of Object.keys(visitor)){if(shouldIgnoreKey(nodeType))continue;let aliases=FLIPPED_ALIAS_KEYS[nodeType];if(nodeType in DEPRECATED_KEYS){const deprecatedKey=DEPRECATED_KEYS[nodeType];deprecationWarning(nodeType,deprecatedKey,"Visitor "),aliases=[deprecatedKey]}else if(nodeType in DEPRECATED_ALIASES){const deprecatedAlias=DEPRECATED_ALIASES[nodeType];deprecationWarning(nodeType,deprecatedAlias,"Visitor "),aliases=FLIPPED_ALIAS_KEYS[deprecatedAlias]}if(!aliases)continue;const fns=visitor[nodeType];delete visitor[nodeType];for(const alias of aliases){const existing=visitor[alias];existing?mergePair(existing,fns):visitor[alias]=Object.assign({},fns)}}for(const nodeType of Object.keys(visitor))shouldIgnoreKey(nodeType)||ensureCallbackArrays(visitor[nodeType]);return visitor}function verify(visitor){if(!visitor._verified){if("function"==typeof visitor)throw new Error("You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?");for(const nodeType of Object.keys(visitor)){if("enter"!==nodeType&&"exit"!==nodeType||validateVisitorMethods(nodeType,visitor[nodeType]),shouldIgnoreKey(nodeType))continue;if(TYPES.indexOf(nodeType)<0)throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);const visitors=visitor[nodeType];if("object"==typeof visitors)for(const visitorKey of Object.keys(visitors)){if("enter"!==visitorKey&&"exit"!==visitorKey)throw new Error(`You passed \`traverse()\` a visitor object with the property ${nodeType} that has the invalid property ${visitorKey}`);validateVisitorMethods(`${nodeType}.${visitorKey}`,visitors[visitorKey])}}visitor._verified=!0}}function validateVisitorMethods(path,val){const fns=[].concat(val);for(const fn of fns)if("function"!=typeof fn)throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`)}function wrapWithStateOrWrapper(oldVisitor,state,wrapper){const newVisitor={};for(const key of Object.keys(oldVisitor)){let fns=oldVisitor[key];Array.isArray(fns)&&(fns=fns.map((function(fn){let newFn=fn;return state&&(newFn=function(path){fn.call(state,path,state)}),wrapper&&(newFn=wrapper(state.key,key,newFn)),newFn!==fn&&(newFn.toString=()=>fn.toString()),newFn})),newVisitor[key]=fns)}return newVisitor}function ensureCallbackArrays(obj){obj.enter&&!Array.isArray(obj.enter)&&(obj.enter=[obj.enter]),obj.exit&&!Array.isArray(obj.exit)&&(obj.exit=[obj.exit])}function wrapCheck(nodeType,fn){const newFn=function(path){if(path[`is${nodeType}`]())return fn.apply(this,arguments)};return newFn.toString=()=>fn.toString(),newFn}function shouldIgnoreKey(key){return"_"===key[0]||("enter"===key||"exit"===key||"shouldSkip"===key||("denylist"===key||"noScope"===key||"skipKeys"===key||"blacklist"===key))}function mergePair(dest,src){for(const key of Object.keys(src))dest[key]=[].concat(dest[key]||[],src[key])}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/asserts/assertNode.js":(__unused_webpack_module,exports,__nested_webpack_require_1247556__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){if(!(0,_isNode.default)(node)){var _node$type;const type=null!=(_node$type=null==node?void 0:node.type)?_node$type:JSON.stringify(node);throw new TypeError(`Not a valid node of type "${type}"`)}};var _isNode=__nested_webpack_require_1247556__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isNode.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/asserts/generated/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1248135__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.assertAccessor=function(node,opts){assert("Accessor",node,opts)},exports.assertAnyTypeAnnotation=function(node,opts){assert("AnyTypeAnnotation",node,opts)},exports.assertArgumentPlaceholder=function(node,opts){assert("ArgumentPlaceholder",node,opts)},exports.assertArrayExpression=function(node,opts){assert("ArrayExpression",node,opts)},exports.assertArrayPattern=function(node,opts){assert("ArrayPattern",node,opts)},exports.assertArrayTypeAnnotation=function(node,opts){assert("ArrayTypeAnnotation",node,opts)},exports.assertArrowFunctionExpression=function(node,opts){assert("ArrowFunctionExpression",node,opts)},exports.assertAssignmentExpression=function(node,opts){assert("AssignmentExpression",node,opts)},exports.assertAssignmentPattern=function(node,opts){assert("AssignmentPattern",node,opts)},exports.assertAwaitExpression=function(node,opts){assert("AwaitExpression",node,opts)},exports.assertBigIntLiteral=function(node,opts){assert("BigIntLiteral",node,opts)},exports.assertBinary=function(node,opts){assert("Binary",node,opts)},exports.assertBinaryExpression=function(node,opts){assert("BinaryExpression",node,opts)},exports.assertBindExpression=function(node,opts){assert("BindExpression",node,opts)},exports.assertBlock=function(node,opts){assert("Block",node,opts)},exports.assertBlockParent=function(node,opts){assert("BlockParent",node,opts)},exports.assertBlockStatement=function(node,opts){assert("BlockStatement",node,opts)},exports.assertBooleanLiteral=function(node,opts){assert("BooleanLiteral",node,opts)},exports.assertBooleanLiteralTypeAnnotation=function(node,opts){assert("BooleanLiteralTypeAnnotation",node,opts)},exports.assertBooleanTypeAnnotation=function(node,opts){assert("BooleanTypeAnnotation",node,opts)},exports.assertBreakStatement=function(node,opts){assert("BreakStatement",node,opts)},exports.assertCallExpression=function(node,opts){assert("CallExpression",node,opts)},exports.assertCatchClause=function(node,opts){assert("CatchClause",node,opts)},exports.assertClass=function(node,opts){assert("Class",node,opts)},exports.assertClassAccessorProperty=function(node,opts){assert("ClassAccessorProperty",node,opts)},exports.assertClassBody=function(node,opts){assert("ClassBody",node,opts)},exports.assertClassDeclaration=function(node,opts){assert("ClassDeclaration",node,opts)},exports.assertClassExpression=function(node,opts){assert("ClassExpression",node,opts)},exports.assertClassImplements=function(node,opts){assert("ClassImplements",node,opts)},exports.assertClassMethod=function(node,opts){assert("ClassMethod",node,opts)},exports.assertClassPrivateMethod=function(node,opts){assert("ClassPrivateMethod",node,opts)},exports.assertClassPrivateProperty=function(node,opts){assert("ClassPrivateProperty",node,opts)},exports.assertClassProperty=function(node,opts){assert("ClassProperty",node,opts)},exports.assertCompletionStatement=function(node,opts){assert("CompletionStatement",node,opts)},exports.assertConditional=function(node,opts){assert("Conditional",node,opts)},exports.assertConditionalExpression=function(node,opts){assert("ConditionalExpression",node,opts)},exports.assertContinueStatement=function(node,opts){assert("ContinueStatement",node,opts)},exports.assertDebuggerStatement=function(node,opts){assert("DebuggerStatement",node,opts)},exports.assertDecimalLiteral=function(node,opts){assert("DecimalLiteral",node,opts)},exports.assertDeclaration=function(node,opts){assert("Declaration",node,opts)},exports.assertDeclareClass=function(node,opts){assert("DeclareClass",node,opts)},exports.assertDeclareExportAllDeclaration=function(node,opts){assert("DeclareExportAllDeclaration",node,opts)},exports.assertDeclareExportDeclaration=function(node,opts){assert("DeclareExportDeclaration",node,opts)},exports.assertDeclareFunction=function(node,opts){assert("DeclareFunction",node,opts)},exports.assertDeclareInterface=function(node,opts){assert("DeclareInterface",node,opts)},exports.assertDeclareModule=function(node,opts){assert("DeclareModule",node,opts)},exports.assertDeclareModuleExports=function(node,opts){assert("DeclareModuleExports",node,opts)},exports.assertDeclareOpaqueType=function(node,opts){assert("DeclareOpaqueType",node,opts)},exports.assertDeclareTypeAlias=function(node,opts){assert("DeclareTypeAlias",node,opts)},exports.assertDeclareVariable=function(node,opts){assert("DeclareVariable",node,opts)},exports.assertDeclaredPredicate=function(node,opts){assert("DeclaredPredicate",node,opts)},exports.assertDecorator=function(node,opts){assert("Decorator",node,opts)},exports.assertDirective=function(node,opts){assert("Directive",node,opts)},exports.assertDirectiveLiteral=function(node,opts){assert("DirectiveLiteral",node,opts)},exports.assertDoExpression=function(node,opts){assert("DoExpression",node,opts)},exports.assertDoWhileStatement=function(node,opts){assert("DoWhileStatement",node,opts)},exports.assertEmptyStatement=function(node,opts){assert("EmptyStatement",node,opts)},exports.assertEmptyTypeAnnotation=function(node,opts){assert("EmptyTypeAnnotation",node,opts)},exports.assertEnumBody=function(node,opts){assert("EnumBody",node,opts)},exports.assertEnumBooleanBody=function(node,opts){assert("EnumBooleanBody",node,opts)},exports.assertEnumBooleanMember=function(node,opts){assert("EnumBooleanMember",node,opts)},exports.assertEnumDeclaration=function(node,opts){assert("EnumDeclaration",node,opts)},exports.assertEnumDefaultedMember=function(node,opts){assert("EnumDefaultedMember",node,opts)},exports.assertEnumMember=function(node,opts){assert("EnumMember",node,opts)},exports.assertEnumNumberBody=function(node,opts){assert("EnumNumberBody",node,opts)},exports.assertEnumNumberMember=function(node,opts){assert("EnumNumberMember",node,opts)},exports.assertEnumStringBody=function(node,opts){assert("EnumStringBody",node,opts)},exports.assertEnumStringMember=function(node,opts){assert("EnumStringMember",node,opts)},exports.assertEnumSymbolBody=function(node,opts){assert("EnumSymbolBody",node,opts)},exports.assertExistsTypeAnnotation=function(node,opts){assert("ExistsTypeAnnotation",node,opts)},exports.assertExportAllDeclaration=function(node,opts){assert("ExportAllDeclaration",node,opts)},exports.assertExportDeclaration=function(node,opts){assert("ExportDeclaration",node,opts)},exports.assertExportDefaultDeclaration=function(node,opts){assert("ExportDefaultDeclaration",node,opts)},exports.assertExportDefaultSpecifier=function(node,opts){assert("ExportDefaultSpecifier",node,opts)},exports.assertExportNamedDeclaration=function(node,opts){assert("ExportNamedDeclaration",node,opts)},exports.assertExportNamespaceSpecifier=function(node,opts){assert("ExportNamespaceSpecifier",node,opts)},exports.assertExportSpecifier=function(node,opts){assert("ExportSpecifier",node,opts)},exports.assertExpression=function(node,opts){assert("Expression",node,opts)},exports.assertExpressionStatement=function(node,opts){assert("ExpressionStatement",node,opts)},exports.assertExpressionWrapper=function(node,opts){assert("ExpressionWrapper",node,opts)},exports.assertFile=function(node,opts){assert("File",node,opts)},exports.assertFlow=function(node,opts){assert("Flow",node,opts)},exports.assertFlowBaseAnnotation=function(node,opts){assert("FlowBaseAnnotation",node,opts)},exports.assertFlowDeclaration=function(node,opts){assert("FlowDeclaration",node,opts)},exports.assertFlowPredicate=function(node,opts){assert("FlowPredicate",node,opts)},exports.assertFlowType=function(node,opts){assert("FlowType",node,opts)},exports.assertFor=function(node,opts){assert("For",node,opts)},exports.assertForInStatement=function(node,opts){assert("ForInStatement",node,opts)},exports.assertForOfStatement=function(node,opts){assert("ForOfStatement",node,opts)},exports.assertForStatement=function(node,opts){assert("ForStatement",node,opts)},exports.assertForXStatement=function(node,opts){assert("ForXStatement",node,opts)},exports.assertFunction=function(node,opts){assert("Function",node,opts)},exports.assertFunctionDeclaration=function(node,opts){assert("FunctionDeclaration",node,opts)},exports.assertFunctionExpression=function(node,opts){assert("FunctionExpression",node,opts)},exports.assertFunctionParent=function(node,opts){assert("FunctionParent",node,opts)},exports.assertFunctionTypeAnnotation=function(node,opts){assert("FunctionTypeAnnotation",node,opts)},exports.assertFunctionTypeParam=function(node,opts){assert("FunctionTypeParam",node,opts)},exports.assertGenericTypeAnnotation=function(node,opts){assert("GenericTypeAnnotation",node,opts)},exports.assertIdentifier=function(node,opts){assert("Identifier",node,opts)},exports.assertIfStatement=function(node,opts){assert("IfStatement",node,opts)},exports.assertImmutable=function(node,opts){assert("Immutable",node,opts)},exports.assertImport=function(node,opts){assert("Import",node,opts)},exports.assertImportAttribute=function(node,opts){assert("ImportAttribute",node,opts)},exports.assertImportDeclaration=function(node,opts){assert("ImportDeclaration",node,opts)},exports.assertImportDefaultSpecifier=function(node,opts){assert("ImportDefaultSpecifier",node,opts)},exports.assertImportNamespaceSpecifier=function(node,opts){assert("ImportNamespaceSpecifier",node,opts)},exports.assertImportOrExportDeclaration=function(node,opts){assert("ImportOrExportDeclaration",node,opts)},exports.assertImportSpecifier=function(node,opts){assert("ImportSpecifier",node,opts)},exports.assertIndexedAccessType=function(node,opts){assert("IndexedAccessType",node,opts)},exports.assertInferredPredicate=function(node,opts){assert("InferredPredicate",node,opts)},exports.assertInterfaceDeclaration=function(node,opts){assert("InterfaceDeclaration",node,opts)},exports.assertInterfaceExtends=function(node,opts){assert("InterfaceExtends",node,opts)},exports.assertInterfaceTypeAnnotation=function(node,opts){assert("InterfaceTypeAnnotation",node,opts)},exports.assertInterpreterDirective=function(node,opts){assert("InterpreterDirective",node,opts)},exports.assertIntersectionTypeAnnotation=function(node,opts){assert("IntersectionTypeAnnotation",node,opts)},exports.assertJSX=function(node,opts){assert("JSX",node,opts)},exports.assertJSXAttribute=function(node,opts){assert("JSXAttribute",node,opts)},exports.assertJSXClosingElement=function(node,opts){assert("JSXClosingElement",node,opts)},exports.assertJSXClosingFragment=function(node,opts){assert("JSXClosingFragment",node,opts)},exports.assertJSXElement=function(node,opts){assert("JSXElement",node,opts)},exports.assertJSXEmptyExpression=function(node,opts){assert("JSXEmptyExpression",node,opts)},exports.assertJSXExpressionContainer=function(node,opts){assert("JSXExpressionContainer",node,opts)},exports.assertJSXFragment=function(node,opts){assert("JSXFragment",node,opts)},exports.assertJSXIdentifier=function(node,opts){assert("JSXIdentifier",node,opts)},exports.assertJSXMemberExpression=function(node,opts){assert("JSXMemberExpression",node,opts)},exports.assertJSXNamespacedName=function(node,opts){assert("JSXNamespacedName",node,opts)},exports.assertJSXOpeningElement=function(node,opts){assert("JSXOpeningElement",node,opts)},exports.assertJSXOpeningFragment=function(node,opts){assert("JSXOpeningFragment",node,opts)},exports.assertJSXSpreadAttribute=function(node,opts){assert("JSXSpreadAttribute",node,opts)},exports.assertJSXSpreadChild=function(node,opts){assert("JSXSpreadChild",node,opts)},exports.assertJSXText=function(node,opts){assert("JSXText",node,opts)},exports.assertLVal=function(node,opts){assert("LVal",node,opts)},exports.assertLabeledStatement=function(node,opts){assert("LabeledStatement",node,opts)},exports.assertLiteral=function(node,opts){assert("Literal",node,opts)},exports.assertLogicalExpression=function(node,opts){assert("LogicalExpression",node,opts)},exports.assertLoop=function(node,opts){assert("Loop",node,opts)},exports.assertMemberExpression=function(node,opts){assert("MemberExpression",node,opts)},exports.assertMetaProperty=function(node,opts){assert("MetaProperty",node,opts)},exports.assertMethod=function(node,opts){assert("Method",node,opts)},exports.assertMiscellaneous=function(node,opts){assert("Miscellaneous",node,opts)},exports.assertMixedTypeAnnotation=function(node,opts){assert("MixedTypeAnnotation",node,opts)},exports.assertModuleDeclaration=function(node,opts){(0,_deprecationWarning.default)("assertModuleDeclaration","assertImportOrExportDeclaration"),assert("ModuleDeclaration",node,opts)},exports.assertModuleExpression=function(node,opts){assert("ModuleExpression",node,opts)},exports.assertModuleSpecifier=function(node,opts){assert("ModuleSpecifier",node,opts)},exports.assertNewExpression=function(node,opts){assert("NewExpression",node,opts)},exports.assertNoop=function(node,opts){assert("Noop",node,opts)},exports.assertNullLiteral=function(node,opts){assert("NullLiteral",node,opts)},exports.assertNullLiteralTypeAnnotation=function(node,opts){assert("NullLiteralTypeAnnotation",node,opts)},exports.assertNullableTypeAnnotation=function(node,opts){assert("NullableTypeAnnotation",node,opts)},exports.assertNumberLiteral=function(node,opts){(0,_deprecationWarning.default)("assertNumberLiteral","assertNumericLiteral"),assert("NumberLiteral",node,opts)},exports.assertNumberLiteralTypeAnnotation=function(node,opts){assert("NumberLiteralTypeAnnotation",node,opts)},exports.assertNumberTypeAnnotation=function(node,opts){assert("NumberTypeAnnotation",node,opts)},exports.assertNumericLiteral=function(node,opts){assert("NumericLiteral",node,opts)},exports.assertObjectExpression=function(node,opts){assert("ObjectExpression",node,opts)},exports.assertObjectMember=function(node,opts){assert("ObjectMember",node,opts)},exports.assertObjectMethod=function(node,opts){assert("ObjectMethod",node,opts)},exports.assertObjectPattern=function(node,opts){assert("ObjectPattern",node,opts)},exports.assertObjectProperty=function(node,opts){assert("ObjectProperty",node,opts)},exports.assertObjectTypeAnnotation=function(node,opts){assert("ObjectTypeAnnotation",node,opts)},exports.assertObjectTypeCallProperty=function(node,opts){assert("ObjectTypeCallProperty",node,opts)},exports.assertObjectTypeIndexer=function(node,opts){assert("ObjectTypeIndexer",node,opts)},exports.assertObjectTypeInternalSlot=function(node,opts){assert("ObjectTypeInternalSlot",node,opts)},exports.assertObjectTypeProperty=function(node,opts){assert("ObjectTypeProperty",node,opts)},exports.assertObjectTypeSpreadProperty=function(node,opts){assert("ObjectTypeSpreadProperty",node,opts)},exports.assertOpaqueType=function(node,opts){assert("OpaqueType",node,opts)},exports.assertOptionalCallExpression=function(node,opts){assert("OptionalCallExpression",node,opts)},exports.assertOptionalIndexedAccessType=function(node,opts){assert("OptionalIndexedAccessType",node,opts)},exports.assertOptionalMemberExpression=function(node,opts){assert("OptionalMemberExpression",node,opts)},exports.assertParenthesizedExpression=function(node,opts){assert("ParenthesizedExpression",node,opts)},exports.assertPattern=function(node,opts){assert("Pattern",node,opts)},exports.assertPatternLike=function(node,opts){assert("PatternLike",node,opts)},exports.assertPipelineBareFunction=function(node,opts){assert("PipelineBareFunction",node,opts)},exports.assertPipelinePrimaryTopicReference=function(node,opts){assert("PipelinePrimaryTopicReference",node,opts)},exports.assertPipelineTopicExpression=function(node,opts){assert("PipelineTopicExpression",node,opts)},exports.assertPlaceholder=function(node,opts){assert("Placeholder",node,opts)},exports.assertPrivate=function(node,opts){assert("Private",node,opts)},exports.assertPrivateName=function(node,opts){assert("PrivateName",node,opts)},exports.assertProgram=function(node,opts){assert("Program",node,opts)},exports.assertProperty=function(node,opts){assert("Property",node,opts)},exports.assertPureish=function(node,opts){assert("Pureish",node,opts)},exports.assertQualifiedTypeIdentifier=function(node,opts){assert("QualifiedTypeIdentifier",node,opts)},exports.assertRecordExpression=function(node,opts){assert("RecordExpression",node,opts)},exports.assertRegExpLiteral=function(node,opts){assert("RegExpLiteral",node,opts)},exports.assertRegexLiteral=function(node,opts){(0,_deprecationWarning.default)("assertRegexLiteral","assertRegExpLiteral"),assert("RegexLiteral",node,opts)},exports.assertRestElement=function(node,opts){assert("RestElement",node,opts)},exports.assertRestProperty=function(node,opts){(0,_deprecationWarning.default)("assertRestProperty","assertRestElement"),assert("RestProperty",node,opts)},exports.assertReturnStatement=function(node,opts){assert("ReturnStatement",node,opts)},exports.assertScopable=function(node,opts){assert("Scopable",node,opts)},exports.assertSequenceExpression=function(node,opts){assert("SequenceExpression",node,opts)},exports.assertSpreadElement=function(node,opts){assert("SpreadElement",node,opts)},exports.assertSpreadProperty=function(node,opts){(0,_deprecationWarning.default)("assertSpreadProperty","assertSpreadElement"),assert("SpreadProperty",node,opts)},exports.assertStandardized=function(node,opts){assert("Standardized",node,opts)},exports.assertStatement=function(node,opts){assert("Statement",node,opts)},exports.assertStaticBlock=function(node,opts){assert("StaticBlock",node,opts)},exports.assertStringLiteral=function(node,opts){assert("StringLiteral",node,opts)},exports.assertStringLiteralTypeAnnotation=function(node,opts){assert("StringLiteralTypeAnnotation",node,opts)},exports.assertStringTypeAnnotation=function(node,opts){assert("StringTypeAnnotation",node,opts)},exports.assertSuper=function(node,opts){assert("Super",node,opts)},exports.assertSwitchCase=function(node,opts){assert("SwitchCase",node,opts)},exports.assertSwitchStatement=function(node,opts){assert("SwitchStatement",node,opts)},exports.assertSymbolTypeAnnotation=function(node,opts){assert("SymbolTypeAnnotation",node,opts)},exports.assertTSAnyKeyword=function(node,opts){assert("TSAnyKeyword",node,opts)},exports.assertTSArrayType=function(node,opts){assert("TSArrayType",node,opts)},exports.assertTSAsExpression=function(node,opts){assert("TSAsExpression",node,opts)},exports.assertTSBaseType=function(node,opts){assert("TSBaseType",node,opts)},exports.assertTSBigIntKeyword=function(node,opts){assert("TSBigIntKeyword",node,opts)},exports.assertTSBooleanKeyword=function(node,opts){assert("TSBooleanKeyword",node,opts)},exports.assertTSCallSignatureDeclaration=function(node,opts){assert("TSCallSignatureDeclaration",node,opts)},exports.assertTSConditionalType=function(node,opts){assert("TSConditionalType",node,opts)},exports.assertTSConstructSignatureDeclaration=function(node,opts){assert("TSConstructSignatureDeclaration",node,opts)},exports.assertTSConstructorType=function(node,opts){assert("TSConstructorType",node,opts)},exports.assertTSDeclareFunction=function(node,opts){assert("TSDeclareFunction",node,opts)},exports.assertTSDeclareMethod=function(node,opts){assert("TSDeclareMethod",node,opts)},exports.assertTSEntityName=function(node,opts){assert("TSEntityName",node,opts)},exports.assertTSEnumDeclaration=function(node,opts){assert("TSEnumDeclaration",node,opts)},exports.assertTSEnumMember=function(node,opts){assert("TSEnumMember",node,opts)},exports.assertTSExportAssignment=function(node,opts){assert("TSExportAssignment",node,opts)},exports.assertTSExpressionWithTypeArguments=function(node,opts){assert("TSExpressionWithTypeArguments",node,opts)},exports.assertTSExternalModuleReference=function(node,opts){assert("TSExternalModuleReference",node,opts)},exports.assertTSFunctionType=function(node,opts){assert("TSFunctionType",node,opts)},exports.assertTSImportEqualsDeclaration=function(node,opts){assert("TSImportEqualsDeclaration",node,opts)},exports.assertTSImportType=function(node,opts){assert("TSImportType",node,opts)},exports.assertTSIndexSignature=function(node,opts){assert("TSIndexSignature",node,opts)},exports.assertTSIndexedAccessType=function(node,opts){assert("TSIndexedAccessType",node,opts)},exports.assertTSInferType=function(node,opts){assert("TSInferType",node,opts)},exports.assertTSInstantiationExpression=function(node,opts){assert("TSInstantiationExpression",node,opts)},exports.assertTSInterfaceBody=function(node,opts){assert("TSInterfaceBody",node,opts)},exports.assertTSInterfaceDeclaration=function(node,opts){assert("TSInterfaceDeclaration",node,opts)},exports.assertTSIntersectionType=function(node,opts){assert("TSIntersectionType",node,opts)},exports.assertTSIntrinsicKeyword=function(node,opts){assert("TSIntrinsicKeyword",node,opts)},exports.assertTSLiteralType=function(node,opts){assert("TSLiteralType",node,opts)},exports.assertTSMappedType=function(node,opts){assert("TSMappedType",node,opts)},exports.assertTSMethodSignature=function(node,opts){assert("TSMethodSignature",node,opts)},exports.assertTSModuleBlock=function(node,opts){assert("TSModuleBlock",node,opts)},exports.assertTSModuleDeclaration=function(node,opts){assert("TSModuleDeclaration",node,opts)},exports.assertTSNamedTupleMember=function(node,opts){assert("TSNamedTupleMember",node,opts)},exports.assertTSNamespaceExportDeclaration=function(node,opts){assert("TSNamespaceExportDeclaration",node,opts)},exports.assertTSNeverKeyword=function(node,opts){assert("TSNeverKeyword",node,opts)},exports.assertTSNonNullExpression=function(node,opts){assert("TSNonNullExpression",node,opts)},exports.assertTSNullKeyword=function(node,opts){assert("TSNullKeyword",node,opts)},exports.assertTSNumberKeyword=function(node,opts){assert("TSNumberKeyword",node,opts)},exports.assertTSObjectKeyword=function(node,opts){assert("TSObjectKeyword",node,opts)},exports.assertTSOptionalType=function(node,opts){assert("TSOptionalType",node,opts)},exports.assertTSParameterProperty=function(node,opts){assert("TSParameterProperty",node,opts)},exports.assertTSParenthesizedType=function(node,opts){assert("TSParenthesizedType",node,opts)},exports.assertTSPropertySignature=function(node,opts){assert("TSPropertySignature",node,opts)},exports.assertTSQualifiedName=function(node,opts){assert("TSQualifiedName",node,opts)},exports.assertTSRestType=function(node,opts){assert("TSRestType",node,opts)},exports.assertTSSatisfiesExpression=function(node,opts){assert("TSSatisfiesExpression",node,opts)},exports.assertTSStringKeyword=function(node,opts){assert("TSStringKeyword",node,opts)},exports.assertTSSymbolKeyword=function(node,opts){assert("TSSymbolKeyword",node,opts)},exports.assertTSThisType=function(node,opts){assert("TSThisType",node,opts)},exports.assertTSTupleType=function(node,opts){assert("TSTupleType",node,opts)},exports.assertTSType=function(node,opts){assert("TSType",node,opts)},exports.assertTSTypeAliasDeclaration=function(node,opts){assert("TSTypeAliasDeclaration",node,opts)},exports.assertTSTypeAnnotation=function(node,opts){assert("TSTypeAnnotation",node,opts)},exports.assertTSTypeAssertion=function(node,opts){assert("TSTypeAssertion",node,opts)},exports.assertTSTypeElement=function(node,opts){assert("TSTypeElement",node,opts)},exports.assertTSTypeLiteral=function(node,opts){assert("TSTypeLiteral",node,opts)},exports.assertTSTypeOperator=function(node,opts){assert("TSTypeOperator",node,opts)},exports.assertTSTypeParameter=function(node,opts){assert("TSTypeParameter",node,opts)},exports.assertTSTypeParameterDeclaration=function(node,opts){assert("TSTypeParameterDeclaration",node,opts)},exports.assertTSTypeParameterInstantiation=function(node,opts){assert("TSTypeParameterInstantiation",node,opts)},exports.assertTSTypePredicate=function(node,opts){assert("TSTypePredicate",node,opts)},exports.assertTSTypeQuery=function(node,opts){assert("TSTypeQuery",node,opts)},exports.assertTSTypeReference=function(node,opts){assert("TSTypeReference",node,opts)},exports.assertTSUndefinedKeyword=function(node,opts){assert("TSUndefinedKeyword",node,opts)},exports.assertTSUnionType=function(node,opts){assert("TSUnionType",node,opts)},exports.assertTSUnknownKeyword=function(node,opts){assert("TSUnknownKeyword",node,opts)},exports.assertTSVoidKeyword=function(node,opts){assert("TSVoidKeyword",node,opts)},exports.assertTaggedTemplateExpression=function(node,opts){assert("TaggedTemplateExpression",node,opts)},exports.assertTemplateElement=function(node,opts){assert("TemplateElement",node,opts)},exports.assertTemplateLiteral=function(node,opts){assert("TemplateLiteral",node,opts)},exports.assertTerminatorless=function(node,opts){assert("Terminatorless",node,opts)},exports.assertThisExpression=function(node,opts){assert("ThisExpression",node,opts)},exports.assertThisTypeAnnotation=function(node,opts){assert("ThisTypeAnnotation",node,opts)},exports.assertThrowStatement=function(node,opts){assert("ThrowStatement",node,opts)},exports.assertTopicReference=function(node,opts){assert("TopicReference",node,opts)},exports.assertTryStatement=function(node,opts){assert("TryStatement",node,opts)},exports.assertTupleExpression=function(node,opts){assert("TupleExpression",node,opts)},exports.assertTupleTypeAnnotation=function(node,opts){assert("TupleTypeAnnotation",node,opts)},exports.assertTypeAlias=function(node,opts){assert("TypeAlias",node,opts)},exports.assertTypeAnnotation=function(node,opts){assert("TypeAnnotation",node,opts)},exports.assertTypeCastExpression=function(node,opts){assert("TypeCastExpression",node,opts)},exports.assertTypeParameter=function(node,opts){assert("TypeParameter",node,opts)},exports.assertTypeParameterDeclaration=function(node,opts){assert("TypeParameterDeclaration",node,opts)},exports.assertTypeParameterInstantiation=function(node,opts){assert("TypeParameterInstantiation",node,opts)},exports.assertTypeScript=function(node,opts){assert("TypeScript",node,opts)},exports.assertTypeofTypeAnnotation=function(node,opts){assert("TypeofTypeAnnotation",node,opts)},exports.assertUnaryExpression=function(node,opts){assert("UnaryExpression",node,opts)},exports.assertUnaryLike=function(node,opts){assert("UnaryLike",node,opts)},exports.assertUnionTypeAnnotation=function(node,opts){assert("UnionTypeAnnotation",node,opts)},exports.assertUpdateExpression=function(node,opts){assert("UpdateExpression",node,opts)},exports.assertUserWhitespacable=function(node,opts){assert("UserWhitespacable",node,opts)},exports.assertV8IntrinsicIdentifier=function(node,opts){assert("V8IntrinsicIdentifier",node,opts)},exports.assertVariableDeclaration=function(node,opts){assert("VariableDeclaration",node,opts)},exports.assertVariableDeclarator=function(node,opts){assert("VariableDeclarator",node,opts)},exports.assertVariance=function(node,opts){assert("Variance",node,opts)},exports.assertVoidTypeAnnotation=function(node,opts){assert("VoidTypeAnnotation",node,opts)},exports.assertWhile=function(node,opts){assert("While",node,opts)},exports.assertWhileStatement=function(node,opts){assert("WhileStatement",node,opts)},exports.assertWithStatement=function(node,opts){assert("WithStatement",node,opts)},exports.assertYieldExpression=function(node,opts){assert("YieldExpression",node,opts)};var _is=__nested_webpack_require_1248135__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/is.js"),_deprecationWarning=__nested_webpack_require_1248135__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/deprecationWarning.js");function assert(type,node,opts){if(!(0,_is.default)(type,node,opts))throw new Error(`Expected type "${type}" with option ${JSON.stringify(opts)}, but instead got "${node.type}".`)}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js":(__unused_webpack_module,exports,__nested_webpack_require_1275914__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(types){const flattened=(0,_removeTypeDuplicates.default)(types);return 1===flattened.length?flattened[0]:(0,_generated.unionTypeAnnotation)(flattened)};var _generated=__nested_webpack_require_1275914__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_removeTypeDuplicates=__nested_webpack_require_1275914__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js":(__unused_webpack_module,exports,__nested_webpack_require_1276636__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _generated=__nested_webpack_require_1276636__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_default=function(type){switch(type){case"string":return(0,_generated.stringTypeAnnotation)();case"number":return(0,_generated.numberTypeAnnotation)();case"undefined":return(0,_generated.voidTypeAnnotation)();case"boolean":return(0,_generated.booleanTypeAnnotation)();case"function":return(0,_generated.genericTypeAnnotation)((0,_generated.identifier)("Function"));case"object":return(0,_generated.genericTypeAnnotation)((0,_generated.identifier)("Object"));case"symbol":return(0,_generated.genericTypeAnnotation)((0,_generated.identifier)("Symbol"));case"bigint":return(0,_generated.anyTypeAnnotation)()}throw new Error("Invalid typeof value: "+type)};exports.default=_default},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1277700__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.anyTypeAnnotation=function(){return{type:"AnyTypeAnnotation"}},exports.argumentPlaceholder=function(){return{type:"ArgumentPlaceholder"}},exports.arrayExpression=function(elements=[]){return(0,_validateNode.default)({type:"ArrayExpression",elements})},exports.arrayPattern=function(elements){return(0,_validateNode.default)({type:"ArrayPattern",elements})},exports.arrayTypeAnnotation=function(elementType){return(0,_validateNode.default)({type:"ArrayTypeAnnotation",elementType})},exports.arrowFunctionExpression=function(params,body,async=!1){return(0,_validateNode.default)({type:"ArrowFunctionExpression",params,body,async,expression:null})},exports.assignmentExpression=function(operator,left,right){return(0,_validateNode.default)({type:"AssignmentExpression",operator,left,right})},exports.assignmentPattern=function(left,right){return(0,_validateNode.default)({type:"AssignmentPattern",left,right})},exports.awaitExpression=function(argument){return(0,_validateNode.default)({type:"AwaitExpression",argument})},exports.bigIntLiteral=function(value){return(0,_validateNode.default)({type:"BigIntLiteral",value})},exports.binaryExpression=function(operator,left,right){return(0,_validateNode.default)({type:"BinaryExpression",operator,left,right})},exports.bindExpression=function(object,callee){return(0,_validateNode.default)({type:"BindExpression",object,callee})},exports.blockStatement=function(body,directives=[]){return(0,_validateNode.default)({type:"BlockStatement",body,directives})},exports.booleanLiteral=function(value){return(0,_validateNode.default)({type:"BooleanLiteral",value})},exports.booleanLiteralTypeAnnotation=function(value){return(0,_validateNode.default)({type:"BooleanLiteralTypeAnnotation",value})},exports.booleanTypeAnnotation=function(){return{type:"BooleanTypeAnnotation"}},exports.breakStatement=function(label=null){return(0,_validateNode.default)({type:"BreakStatement",label})},exports.callExpression=function(callee,_arguments){return(0,_validateNode.default)({type:"CallExpression",callee,arguments:_arguments})},exports.catchClause=function(param=null,body){return(0,_validateNode.default)({type:"CatchClause",param,body})},exports.classAccessorProperty=function(key,value=null,typeAnnotation=null,decorators=null,computed=!1,_static=!1){return(0,_validateNode.default)({type:"ClassAccessorProperty",key,value,typeAnnotation,decorators,computed,static:_static})},exports.classBody=function(body){return(0,_validateNode.default)({type:"ClassBody",body})},exports.classDeclaration=function(id,superClass=null,body,decorators=null){return(0,_validateNode.default)({type:"ClassDeclaration",id,superClass,body,decorators})},exports.classExpression=function(id=null,superClass=null,body,decorators=null){return(0,_validateNode.default)({type:"ClassExpression",id,superClass,body,decorators})},exports.classImplements=function(id,typeParameters=null){return(0,_validateNode.default)({type:"ClassImplements",id,typeParameters})},exports.classMethod=function(kind="method",key,params,body,computed=!1,_static=!1,generator=!1,async=!1){return(0,_validateNode.default)({type:"ClassMethod",kind,key,params,body,computed,static:_static,generator,async})},exports.classPrivateMethod=function(kind="method",key,params,body,_static=!1){return(0,_validateNode.default)({type:"ClassPrivateMethod",kind,key,params,body,static:_static})},exports.classPrivateProperty=function(key,value=null,decorators=null,_static=!1){return(0,_validateNode.default)({type:"ClassPrivateProperty",key,value,decorators,static:_static})},exports.classProperty=function(key,value=null,typeAnnotation=null,decorators=null,computed=!1,_static=!1){return(0,_validateNode.default)({type:"ClassProperty",key,value,typeAnnotation,decorators,computed,static:_static})},exports.conditionalExpression=function(test,consequent,alternate){return(0,_validateNode.default)({type:"ConditionalExpression",test,consequent,alternate})},exports.continueStatement=function(label=null){return(0,_validateNode.default)({type:"ContinueStatement",label})},exports.debuggerStatement=function(){return{type:"DebuggerStatement"}},exports.decimalLiteral=function(value){return(0,_validateNode.default)({type:"DecimalLiteral",value})},exports.declareClass=function(id,typeParameters=null,_extends=null,body){return(0,_validateNode.default)({type:"DeclareClass",id,typeParameters,extends:_extends,body})},exports.declareExportAllDeclaration=function(source){return(0,_validateNode.default)({type:"DeclareExportAllDeclaration",source})},exports.declareExportDeclaration=function(declaration=null,specifiers=null,source=null){return(0,_validateNode.default)({type:"DeclareExportDeclaration",declaration,specifiers,source})},exports.declareFunction=function(id){return(0,_validateNode.default)({type:"DeclareFunction",id})},exports.declareInterface=function(id,typeParameters=null,_extends=null,body){return(0,_validateNode.default)({type:"DeclareInterface",id,typeParameters,extends:_extends,body})},exports.declareModule=function(id,body,kind=null){return(0,_validateNode.default)({type:"DeclareModule",id,body,kind})},exports.declareModuleExports=function(typeAnnotation){return(0,_validateNode.default)({type:"DeclareModuleExports",typeAnnotation})},exports.declareOpaqueType=function(id,typeParameters=null,supertype=null){return(0,_validateNode.default)({type:"DeclareOpaqueType",id,typeParameters,supertype})},exports.declareTypeAlias=function(id,typeParameters=null,right){return(0,_validateNode.default)({type:"DeclareTypeAlias",id,typeParameters,right})},exports.declareVariable=function(id){return(0,_validateNode.default)({type:"DeclareVariable",id})},exports.declaredPredicate=function(value){return(0,_validateNode.default)({type:"DeclaredPredicate",value})},exports.decorator=function(expression){return(0,_validateNode.default)({type:"Decorator",expression})},exports.directive=function(value){return(0,_validateNode.default)({type:"Directive",value})},exports.directiveLiteral=function(value){return(0,_validateNode.default)({type:"DirectiveLiteral",value})},exports.doExpression=function(body,async=!1){return(0,_validateNode.default)({type:"DoExpression",body,async})},exports.doWhileStatement=function(test,body){return(0,_validateNode.default)({type:"DoWhileStatement",test,body})},exports.emptyStatement=function(){return{type:"EmptyStatement"}},exports.emptyTypeAnnotation=function(){return{type:"EmptyTypeAnnotation"}},exports.enumBooleanBody=function(members){return(0,_validateNode.default)({type:"EnumBooleanBody",members,explicitType:null,hasUnknownMembers:null})},exports.enumBooleanMember=function(id){return(0,_validateNode.default)({type:"EnumBooleanMember",id,init:null})},exports.enumDeclaration=function(id,body){return(0,_validateNode.default)({type:"EnumDeclaration",id,body})},exports.enumDefaultedMember=function(id){return(0,_validateNode.default)({type:"EnumDefaultedMember",id})},exports.enumNumberBody=function(members){return(0,_validateNode.default)({type:"EnumNumberBody",members,explicitType:null,hasUnknownMembers:null})},exports.enumNumberMember=function(id,init){return(0,_validateNode.default)({type:"EnumNumberMember",id,init})},exports.enumStringBody=function(members){return(0,_validateNode.default)({type:"EnumStringBody",members,explicitType:null,hasUnknownMembers:null})},exports.enumStringMember=function(id,init){return(0,_validateNode.default)({type:"EnumStringMember",id,init})},exports.enumSymbolBody=function(members){return(0,_validateNode.default)({type:"EnumSymbolBody",members,hasUnknownMembers:null})},exports.existsTypeAnnotation=function(){return{type:"ExistsTypeAnnotation"}},exports.exportAllDeclaration=function(source){return(0,_validateNode.default)({type:"ExportAllDeclaration",source})},exports.exportDefaultDeclaration=function(declaration){return(0,_validateNode.default)({type:"ExportDefaultDeclaration",declaration})},exports.exportDefaultSpecifier=function(exported){return(0,_validateNode.default)({type:"ExportDefaultSpecifier",exported})},exports.exportNamedDeclaration=function(declaration=null,specifiers=[],source=null){return(0,_validateNode.default)({type:"ExportNamedDeclaration",declaration,specifiers,source})},exports.exportNamespaceSpecifier=function(exported){return(0,_validateNode.default)({type:"ExportNamespaceSpecifier",exported})},exports.exportSpecifier=function(local,exported){return(0,_validateNode.default)({type:"ExportSpecifier",local,exported})},exports.expressionStatement=function(expression){return(0,_validateNode.default)({type:"ExpressionStatement",expression})},exports.file=function(program,comments=null,tokens=null){return(0,_validateNode.default)({type:"File",program,comments,tokens})},exports.forInStatement=function(left,right,body){return(0,_validateNode.default)({type:"ForInStatement",left,right,body})},exports.forOfStatement=function(left,right,body,_await=!1){return(0,_validateNode.default)({type:"ForOfStatement",left,right,body,await:_await})},exports.forStatement=function(init=null,test=null,update=null,body){return(0,_validateNode.default)({type:"ForStatement",init,test,update,body})},exports.functionDeclaration=function(id=null,params,body,generator=!1,async=!1){return(0,_validateNode.default)({type:"FunctionDeclaration",id,params,body,generator,async})},exports.functionExpression=function(id=null,params,body,generator=!1,async=!1){return(0,_validateNode.default)({type:"FunctionExpression",id,params,body,generator,async})},exports.functionTypeAnnotation=function(typeParameters=null,params,rest=null,returnType){return(0,_validateNode.default)({type:"FunctionTypeAnnotation",typeParameters,params,rest,returnType})},exports.functionTypeParam=function(name=null,typeAnnotation){return(0,_validateNode.default)({type:"FunctionTypeParam",name,typeAnnotation})},exports.genericTypeAnnotation=function(id,typeParameters=null){return(0,_validateNode.default)({type:"GenericTypeAnnotation",id,typeParameters})},exports.identifier=function(name){return(0,_validateNode.default)({type:"Identifier",name})},exports.ifStatement=function(test,consequent,alternate=null){return(0,_validateNode.default)({type:"IfStatement",test,consequent,alternate})},exports.import=function(){return{type:"Import"}},exports.importAttribute=function(key,value){return(0,_validateNode.default)({type:"ImportAttribute",key,value})},exports.importDeclaration=function(specifiers,source){return(0,_validateNode.default)({type:"ImportDeclaration",specifiers,source})},exports.importDefaultSpecifier=function(local){return(0,_validateNode.default)({type:"ImportDefaultSpecifier",local})},exports.importNamespaceSpecifier=function(local){return(0,_validateNode.default)({type:"ImportNamespaceSpecifier",local})},exports.importSpecifier=function(local,imported){return(0,_validateNode.default)({type:"ImportSpecifier",local,imported})},exports.indexedAccessType=function(objectType,indexType){return(0,_validateNode.default)({type:"IndexedAccessType",objectType,indexType})},exports.inferredPredicate=function(){return{type:"InferredPredicate"}},exports.interfaceDeclaration=function(id,typeParameters=null,_extends=null,body){return(0,_validateNode.default)({type:"InterfaceDeclaration",id,typeParameters,extends:_extends,body})},exports.interfaceExtends=function(id,typeParameters=null){return(0,_validateNode.default)({type:"InterfaceExtends",id,typeParameters})},exports.interfaceTypeAnnotation=function(_extends=null,body){return(0,_validateNode.default)({type:"InterfaceTypeAnnotation",extends:_extends,body})},exports.interpreterDirective=function(value){return(0,_validateNode.default)({type:"InterpreterDirective",value})},exports.intersectionTypeAnnotation=function(types){return(0,_validateNode.default)({type:"IntersectionTypeAnnotation",types})},exports.jSXAttribute=exports.jsxAttribute=function(name,value=null){return(0,_validateNode.default)({type:"JSXAttribute",name,value})},exports.jSXClosingElement=exports.jsxClosingElement=function(name){return(0,_validateNode.default)({type:"JSXClosingElement",name})},exports.jSXClosingFragment=exports.jsxClosingFragment=function(){return{type:"JSXClosingFragment"}},exports.jSXElement=exports.jsxElement=function(openingElement,closingElement=null,children,selfClosing=null){return(0,_validateNode.default)({type:"JSXElement",openingElement,closingElement,children,selfClosing})},exports.jSXEmptyExpression=exports.jsxEmptyExpression=function(){return{type:"JSXEmptyExpression"}},exports.jSXExpressionContainer=exports.jsxExpressionContainer=function(expression){return(0,_validateNode.default)({type:"JSXExpressionContainer",expression})},exports.jSXFragment=exports.jsxFragment=function(openingFragment,closingFragment,children){return(0,_validateNode.default)({type:"JSXFragment",openingFragment,closingFragment,children})},exports.jSXIdentifier=exports.jsxIdentifier=function(name){return(0,_validateNode.default)({type:"JSXIdentifier",name})},exports.jSXMemberExpression=exports.jsxMemberExpression=function(object,property){return(0,_validateNode.default)({type:"JSXMemberExpression",object,property})},exports.jSXNamespacedName=exports.jsxNamespacedName=function(namespace,name){return(0,_validateNode.default)({type:"JSXNamespacedName",namespace,name})},exports.jSXOpeningElement=exports.jsxOpeningElement=function(name,attributes,selfClosing=!1){return(0,_validateNode.default)({type:"JSXOpeningElement",name,attributes,selfClosing})},exports.jSXOpeningFragment=exports.jsxOpeningFragment=function(){return{type:"JSXOpeningFragment"}},exports.jSXSpreadAttribute=exports.jsxSpreadAttribute=function(argument){return(0,_validateNode.default)({type:"JSXSpreadAttribute",argument})},exports.jSXSpreadChild=exports.jsxSpreadChild=function(expression){return(0,_validateNode.default)({type:"JSXSpreadChild",expression})},exports.jSXText=exports.jsxText=function(value){return(0,_validateNode.default)({type:"JSXText",value})},exports.labeledStatement=function(label,body){return(0,_validateNode.default)({type:"LabeledStatement",label,body})},exports.logicalExpression=function(operator,left,right){return(0,_validateNode.default)({type:"LogicalExpression",operator,left,right})},exports.memberExpression=function(object,property,computed=!1,optional=null){return(0,_validateNode.default)({type:"MemberExpression",object,property,computed,optional})},exports.metaProperty=function(meta,property){return(0,_validateNode.default)({type:"MetaProperty",meta,property})},exports.mixedTypeAnnotation=function(){return{type:"MixedTypeAnnotation"}},exports.moduleExpression=function(body){return(0,_validateNode.default)({type:"ModuleExpression",body})},exports.newExpression=function(callee,_arguments){return(0,_validateNode.default)({type:"NewExpression",callee,arguments:_arguments})},exports.noop=function(){return{type:"Noop"}},exports.nullLiteral=function(){return{type:"NullLiteral"}},exports.nullLiteralTypeAnnotation=function(){return{type:"NullLiteralTypeAnnotation"}},exports.nullableTypeAnnotation=function(typeAnnotation){return(0,_validateNode.default)({type:"NullableTypeAnnotation",typeAnnotation})},exports.numberLiteral=function(value){return(0,_deprecationWarning.default)("NumberLiteral","NumericLiteral","The node type "),numericLiteral(value)},exports.numberLiteralTypeAnnotation=function(value){return(0,_validateNode.default)({type:"NumberLiteralTypeAnnotation",value})},exports.numberTypeAnnotation=function(){return{type:"NumberTypeAnnotation"}},exports.numericLiteral=numericLiteral,exports.objectExpression=function(properties){return(0,_validateNode.default)({type:"ObjectExpression",properties})},exports.objectMethod=function(kind="method",key,params,body,computed=!1,generator=!1,async=!1){return(0,_validateNode.default)({type:"ObjectMethod",kind,key,params,body,computed,generator,async})},exports.objectPattern=function(properties){return(0,_validateNode.default)({type:"ObjectPattern",properties})},exports.objectProperty=function(key,value,computed=!1,shorthand=!1,decorators=null){return(0,_validateNode.default)({type:"ObjectProperty",key,value,computed,shorthand,decorators})},exports.objectTypeAnnotation=function(properties,indexers=[],callProperties=[],internalSlots=[],exact=!1){return(0,_validateNode.default)({type:"ObjectTypeAnnotation",properties,indexers,callProperties,internalSlots,exact})},exports.objectTypeCallProperty=function(value){return(0,_validateNode.default)({type:"ObjectTypeCallProperty",value,static:null})},exports.objectTypeIndexer=function(id=null,key,value,variance=null){return(0,_validateNode.default)({type:"ObjectTypeIndexer",id,key,value,variance,static:null})},exports.objectTypeInternalSlot=function(id,value,optional,_static,method){return(0,_validateNode.default)({type:"ObjectTypeInternalSlot",id,value,optional,static:_static,method})},exports.objectTypeProperty=function(key,value,variance=null){return(0,_validateNode.default)({type:"ObjectTypeProperty",key,value,variance,kind:null,method:null,optional:null,proto:null,static:null})},exports.objectTypeSpreadProperty=function(argument){return(0,_validateNode.default)({type:"ObjectTypeSpreadProperty",argument})},exports.opaqueType=function(id,typeParameters=null,supertype=null,impltype){return(0,_validateNode.default)({type:"OpaqueType",id,typeParameters,supertype,impltype})},exports.optionalCallExpression=function(callee,_arguments,optional){return(0,_validateNode.default)({type:"OptionalCallExpression",callee,arguments:_arguments,optional})},exports.optionalIndexedAccessType=function(objectType,indexType){return(0,_validateNode.default)({type:"OptionalIndexedAccessType",objectType,indexType,optional:null})},exports.optionalMemberExpression=function(object,property,computed=!1,optional){return(0,_validateNode.default)({type:"OptionalMemberExpression",object,property,computed,optional})},exports.parenthesizedExpression=function(expression){return(0,_validateNode.default)({type:"ParenthesizedExpression",expression})},exports.pipelineBareFunction=function(callee){return(0,_validateNode.default)({type:"PipelineBareFunction",callee})},exports.pipelinePrimaryTopicReference=function(){return{type:"PipelinePrimaryTopicReference"}},exports.pipelineTopicExpression=function(expression){return(0,_validateNode.default)({type:"PipelineTopicExpression",expression})},exports.placeholder=function(expectedNode,name){return(0,_validateNode.default)({type:"Placeholder",expectedNode,name})},exports.privateName=function(id){return(0,_validateNode.default)({type:"PrivateName",id})},exports.program=function(body,directives=[],sourceType="script",interpreter=null){return(0,_validateNode.default)({type:"Program",body,directives,sourceType,interpreter,sourceFile:null})},exports.qualifiedTypeIdentifier=function(id,qualification){return(0,_validateNode.default)({type:"QualifiedTypeIdentifier",id,qualification})},exports.recordExpression=function(properties){return(0,_validateNode.default)({type:"RecordExpression",properties})},exports.regExpLiteral=regExpLiteral,exports.regexLiteral=function(pattern,flags=""){return(0,_deprecationWarning.default)("RegexLiteral","RegExpLiteral","The node type "),regExpLiteral(pattern,flags)},exports.restElement=restElement,exports.restProperty=function(argument){return(0,_deprecationWarning.default)("RestProperty","RestElement","The node type "),restElement(argument)},exports.returnStatement=function(argument=null){return(0,_validateNode.default)({type:"ReturnStatement",argument})},exports.sequenceExpression=function(expressions){return(0,_validateNode.default)({type:"SequenceExpression",expressions})},exports.spreadElement=spreadElement,exports.spreadProperty=function(argument){return(0,_deprecationWarning.default)("SpreadProperty","SpreadElement","The node type "),spreadElement(argument)},exports.staticBlock=function(body){return(0,_validateNode.default)({type:"StaticBlock",body})},exports.stringLiteral=function(value){return(0,_validateNode.default)({type:"StringLiteral",value})},exports.stringLiteralTypeAnnotation=function(value){return(0,_validateNode.default)({type:"StringLiteralTypeAnnotation",value})},exports.stringTypeAnnotation=function(){return{type:"StringTypeAnnotation"}},exports.super=function(){return{type:"Super"}},exports.switchCase=function(test=null,consequent){return(0,_validateNode.default)({type:"SwitchCase",test,consequent})},exports.switchStatement=function(discriminant,cases){return(0,_validateNode.default)({type:"SwitchStatement",discriminant,cases})},exports.symbolTypeAnnotation=function(){return{type:"SymbolTypeAnnotation"}},exports.taggedTemplateExpression=function(tag,quasi){return(0,_validateNode.default)({type:"TaggedTemplateExpression",tag,quasi})},exports.templateElement=function(value,tail=!1){return(0,_validateNode.default)({type:"TemplateElement",value,tail})},exports.templateLiteral=function(quasis,expressions){return(0,_validateNode.default)({type:"TemplateLiteral",quasis,expressions})},exports.thisExpression=function(){return{type:"ThisExpression"}},exports.thisTypeAnnotation=function(){return{type:"ThisTypeAnnotation"}},exports.throwStatement=function(argument){return(0,_validateNode.default)({type:"ThrowStatement",argument})},exports.topicReference=function(){return{type:"TopicReference"}},exports.tryStatement=function(block,handler=null,finalizer=null){return(0,_validateNode.default)({type:"TryStatement",block,handler,finalizer})},exports.tSAnyKeyword=exports.tsAnyKeyword=function(){return{type:"TSAnyKeyword"}},exports.tSArrayType=exports.tsArrayType=function(elementType){return(0,_validateNode.default)({type:"TSArrayType",elementType})},exports.tSAsExpression=exports.tsAsExpression=function(expression,typeAnnotation){return(0,_validateNode.default)({type:"TSAsExpression",expression,typeAnnotation})},exports.tSBigIntKeyword=exports.tsBigIntKeyword=function(){return{type:"TSBigIntKeyword"}},exports.tSBooleanKeyword=exports.tsBooleanKeyword=function(){return{type:"TSBooleanKeyword"}},exports.tSCallSignatureDeclaration=exports.tsCallSignatureDeclaration=function(typeParameters=null,parameters,typeAnnotation=null){return(0,_validateNode.default)({type:"TSCallSignatureDeclaration",typeParameters,parameters,typeAnnotation})},exports.tSConditionalType=exports.tsConditionalType=function(checkType,extendsType,trueType,falseType){return(0,_validateNode.default)({type:"TSConditionalType",checkType,extendsType,trueType,falseType})},exports.tSConstructSignatureDeclaration=exports.tsConstructSignatureDeclaration=function(typeParameters=null,parameters,typeAnnotation=null){return(0,_validateNode.default)({type:"TSConstructSignatureDeclaration",typeParameters,parameters,typeAnnotation})},exports.tSConstructorType=exports.tsConstructorType=function(typeParameters=null,parameters,typeAnnotation=null){return(0,_validateNode.default)({type:"TSConstructorType",typeParameters,parameters,typeAnnotation})},exports.tSDeclareFunction=exports.tsDeclareFunction=function(id=null,typeParameters=null,params,returnType=null){return(0,_validateNode.default)({type:"TSDeclareFunction",id,typeParameters,params,returnType})},exports.tSDeclareMethod=exports.tsDeclareMethod=function(decorators=null,key,typeParameters=null,params,returnType=null){return(0,_validateNode.default)({type:"TSDeclareMethod",decorators,key,typeParameters,params,returnType})},exports.tSEnumDeclaration=exports.tsEnumDeclaration=function(id,members){return(0,_validateNode.default)({type:"TSEnumDeclaration",id,members})},exports.tSEnumMember=exports.tsEnumMember=function(id,initializer=null){return(0,_validateNode.default)({type:"TSEnumMember",id,initializer})},exports.tSExportAssignment=exports.tsExportAssignment=function(expression){return(0,_validateNode.default)({type:"TSExportAssignment",expression})},exports.tSExpressionWithTypeArguments=exports.tsExpressionWithTypeArguments=function(expression,typeParameters=null){return(0,_validateNode.default)({type:"TSExpressionWithTypeArguments",expression,typeParameters})},exports.tSExternalModuleReference=exports.tsExternalModuleReference=function(expression){return(0,_validateNode.default)({type:"TSExternalModuleReference",expression})},exports.tSFunctionType=exports.tsFunctionType=function(typeParameters=null,parameters,typeAnnotation=null){return(0,_validateNode.default)({type:"TSFunctionType",typeParameters,parameters,typeAnnotation})},exports.tSImportEqualsDeclaration=exports.tsImportEqualsDeclaration=function(id,moduleReference){return(0,_validateNode.default)({type:"TSImportEqualsDeclaration",id,moduleReference,isExport:null})},exports.tSImportType=exports.tsImportType=function(argument,qualifier=null,typeParameters=null){return(0,_validateNode.default)({type:"TSImportType",argument,qualifier,typeParameters})},exports.tSIndexSignature=exports.tsIndexSignature=function(parameters,typeAnnotation=null){return(0,_validateNode.default)({type:"TSIndexSignature",parameters,typeAnnotation})},exports.tSIndexedAccessType=exports.tsIndexedAccessType=function(objectType,indexType){return(0,_validateNode.default)({type:"TSIndexedAccessType",objectType,indexType})},exports.tSInferType=exports.tsInferType=function(typeParameter){return(0,_validateNode.default)({type:"TSInferType",typeParameter})},exports.tSInstantiationExpression=exports.tsInstantiationExpression=function(expression,typeParameters=null){return(0,_validateNode.default)({type:"TSInstantiationExpression",expression,typeParameters})},exports.tSInterfaceBody=exports.tsInterfaceBody=function(body){return(0,_validateNode.default)({type:"TSInterfaceBody",body})},exports.tSInterfaceDeclaration=exports.tsInterfaceDeclaration=function(id,typeParameters=null,_extends=null,body){return(0,_validateNode.default)({type:"TSInterfaceDeclaration",id,typeParameters,extends:_extends,body})},exports.tSIntersectionType=exports.tsIntersectionType=function(types){return(0,_validateNode.default)({type:"TSIntersectionType",types})},exports.tSIntrinsicKeyword=exports.tsIntrinsicKeyword=function(){return{type:"TSIntrinsicKeyword"}},exports.tSLiteralType=exports.tsLiteralType=function(literal){return(0,_validateNode.default)({type:"TSLiteralType",literal})},exports.tSMappedType=exports.tsMappedType=function(typeParameter,typeAnnotation=null,nameType=null){return(0,_validateNode.default)({type:"TSMappedType",typeParameter,typeAnnotation,nameType})},exports.tSMethodSignature=exports.tsMethodSignature=function(key,typeParameters=null,parameters,typeAnnotation=null){return(0,_validateNode.default)({type:"TSMethodSignature",key,typeParameters,parameters,typeAnnotation,kind:null})},exports.tSModuleBlock=exports.tsModuleBlock=function(body){return(0,_validateNode.default)({type:"TSModuleBlock",body})},exports.tSModuleDeclaration=exports.tsModuleDeclaration=function(id,body){return(0,_validateNode.default)({type:"TSModuleDeclaration",id,body})},exports.tSNamedTupleMember=exports.tsNamedTupleMember=function(label,elementType,optional=!1){return(0,_validateNode.default)({type:"TSNamedTupleMember",label,elementType,optional})},exports.tSNamespaceExportDeclaration=exports.tsNamespaceExportDeclaration=function(id){return(0,_validateNode.default)({type:"TSNamespaceExportDeclaration",id})},exports.tSNeverKeyword=exports.tsNeverKeyword=function(){return{type:"TSNeverKeyword"}},exports.tSNonNullExpression=exports.tsNonNullExpression=function(expression){return(0,_validateNode.default)({type:"TSNonNullExpression",expression})},exports.tSNullKeyword=exports.tsNullKeyword=function(){return{type:"TSNullKeyword"}},exports.tSNumberKeyword=exports.tsNumberKeyword=function(){return{type:"TSNumberKeyword"}},exports.tSObjectKeyword=exports.tsObjectKeyword=function(){return{type:"TSObjectKeyword"}},exports.tSOptionalType=exports.tsOptionalType=function(typeAnnotation){return(0,_validateNode.default)({type:"TSOptionalType",typeAnnotation})},exports.tSParameterProperty=exports.tsParameterProperty=function(parameter){return(0,_validateNode.default)({type:"TSParameterProperty",parameter})},exports.tSParenthesizedType=exports.tsParenthesizedType=function(typeAnnotation){return(0,_validateNode.default)({type:"TSParenthesizedType",typeAnnotation})},exports.tSPropertySignature=exports.tsPropertySignature=function(key,typeAnnotation=null,initializer=null){return(0,_validateNode.default)({type:"TSPropertySignature",key,typeAnnotation,initializer,kind:null})},exports.tSQualifiedName=exports.tsQualifiedName=function(left,right){return(0,_validateNode.default)({type:"TSQualifiedName",left,right})},exports.tSRestType=exports.tsRestType=function(typeAnnotation){return(0,_validateNode.default)({type:"TSRestType",typeAnnotation})},exports.tSSatisfiesExpression=exports.tsSatisfiesExpression=function(expression,typeAnnotation){return(0,_validateNode.default)({type:"TSSatisfiesExpression",expression,typeAnnotation})},exports.tSStringKeyword=exports.tsStringKeyword=function(){return{type:"TSStringKeyword"}},exports.tSSymbolKeyword=exports.tsSymbolKeyword=function(){return{type:"TSSymbolKeyword"}},exports.tSThisType=exports.tsThisType=function(){return{type:"TSThisType"}},exports.tSTupleType=exports.tsTupleType=function(elementTypes){return(0,_validateNode.default)({type:"TSTupleType",elementTypes})},exports.tSTypeAliasDeclaration=exports.tsTypeAliasDeclaration=function(id,typeParameters=null,typeAnnotation){return(0,_validateNode.default)({type:"TSTypeAliasDeclaration",id,typeParameters,typeAnnotation})},exports.tSTypeAnnotation=exports.tsTypeAnnotation=function(typeAnnotation){return(0,_validateNode.default)({type:"TSTypeAnnotation",typeAnnotation})},exports.tSTypeAssertion=exports.tsTypeAssertion=function(typeAnnotation,expression){return(0,_validateNode.default)({type:"TSTypeAssertion",typeAnnotation,expression})},exports.tSTypeLiteral=exports.tsTypeLiteral=function(members){return(0,_validateNode.default)({type:"TSTypeLiteral",members})},exports.tSTypeOperator=exports.tsTypeOperator=function(typeAnnotation){return(0,_validateNode.default)({type:"TSTypeOperator",typeAnnotation,operator:null})},exports.tSTypeParameter=exports.tsTypeParameter=function(constraint=null,_default=null,name){return(0,_validateNode.default)({type:"TSTypeParameter",constraint,default:_default,name})},exports.tSTypeParameterDeclaration=exports.tsTypeParameterDeclaration=function(params){return(0,_validateNode.default)({type:"TSTypeParameterDeclaration",params})},exports.tSTypeParameterInstantiation=exports.tsTypeParameterInstantiation=function(params){return(0,_validateNode.default)({type:"TSTypeParameterInstantiation",params})},exports.tSTypePredicate=exports.tsTypePredicate=function(parameterName,typeAnnotation=null,asserts=null){return(0,_validateNode.default)({type:"TSTypePredicate",parameterName,typeAnnotation,asserts})},exports.tSTypeQuery=exports.tsTypeQuery=function(exprName,typeParameters=null){return(0,_validateNode.default)({type:"TSTypeQuery",exprName,typeParameters})},exports.tSTypeReference=exports.tsTypeReference=function(typeName,typeParameters=null){return(0,_validateNode.default)({type:"TSTypeReference",typeName,typeParameters})},exports.tSUndefinedKeyword=exports.tsUndefinedKeyword=function(){return{type:"TSUndefinedKeyword"}},exports.tSUnionType=exports.tsUnionType=function(types){return(0,_validateNode.default)({type:"TSUnionType",types})},exports.tSUnknownKeyword=exports.tsUnknownKeyword=function(){return{type:"TSUnknownKeyword"}},exports.tSVoidKeyword=exports.tsVoidKeyword=function(){return{type:"TSVoidKeyword"}},exports.tupleExpression=function(elements=[]){return(0,_validateNode.default)({type:"TupleExpression",elements})},exports.tupleTypeAnnotation=function(types){return(0,_validateNode.default)({type:"TupleTypeAnnotation",types})},exports.typeAlias=function(id,typeParameters=null,right){return(0,_validateNode.default)({type:"TypeAlias",id,typeParameters,right})},exports.typeAnnotation=function(typeAnnotation){return(0,_validateNode.default)({type:"TypeAnnotation",typeAnnotation})},exports.typeCastExpression=function(expression,typeAnnotation){return(0,_validateNode.default)({type:"TypeCastExpression",expression,typeAnnotation})},exports.typeParameter=function(bound=null,_default=null,variance=null){return(0,_validateNode.default)({type:"TypeParameter",bound,default:_default,variance,name:null})},exports.typeParameterDeclaration=function(params){return(0,_validateNode.default)({type:"TypeParameterDeclaration",params})},exports.typeParameterInstantiation=function(params){return(0,_validateNode.default)({type:"TypeParameterInstantiation",params})},exports.typeofTypeAnnotation=function(argument){return(0,_validateNode.default)({type:"TypeofTypeAnnotation",argument})},exports.unaryExpression=function(operator,argument,prefix=!0){return(0,_validateNode.default)({type:"UnaryExpression",operator,argument,prefix})},exports.unionTypeAnnotation=function(types){return(0,_validateNode.default)({type:"UnionTypeAnnotation",types})},exports.updateExpression=function(operator,argument,prefix=!1){return(0,_validateNode.default)({type:"UpdateExpression",operator,argument,prefix})},exports.v8IntrinsicIdentifier=function(name){return(0,_validateNode.default)({type:"V8IntrinsicIdentifier",name})},exports.variableDeclaration=function(kind,declarations){return(0,_validateNode.default)({type:"VariableDeclaration",kind,declarations})},exports.variableDeclarator=function(id,init=null){return(0,_validateNode.default)({type:"VariableDeclarator",id,init})},exports.variance=function(kind){return(0,_validateNode.default)({type:"Variance",kind})},exports.voidTypeAnnotation=function(){return{type:"VoidTypeAnnotation"}},exports.whileStatement=function(test,body){return(0,_validateNode.default)({type:"WhileStatement",test,body})},exports.withStatement=function(object,body){return(0,_validateNode.default)({type:"WithStatement",object,body})},exports.yieldExpression=function(argument=null,delegate=!1){return(0,_validateNode.default)({type:"YieldExpression",argument,delegate})};var _validateNode=__nested_webpack_require_1277700__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/validateNode.js"),_deprecationWarning=__nested_webpack_require_1277700__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/deprecationWarning.js");function numericLiteral(value){return(0,_validateNode.default)({type:"NumericLiteral",value})}function regExpLiteral(pattern,flags=""){return(0,_validateNode.default)({type:"RegExpLiteral",pattern,flags})}function restElement(argument){return(0,_validateNode.default)({type:"RestElement",argument})}function spreadElement(argument){return(0,_validateNode.default)({type:"SpreadElement",argument})}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/uppercase.js":(__unused_webpack_module,exports,__nested_webpack_require_1312469__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"AnyTypeAnnotation",{enumerable:!0,get:function(){return _index.anyTypeAnnotation}}),Object.defineProperty(exports,"ArgumentPlaceholder",{enumerable:!0,get:function(){return _index.argumentPlaceholder}}),Object.defineProperty(exports,"ArrayExpression",{enumerable:!0,get:function(){return _index.arrayExpression}}),Object.defineProperty(exports,"ArrayPattern",{enumerable:!0,get:function(){return _index.arrayPattern}}),Object.defineProperty(exports,"ArrayTypeAnnotation",{enumerable:!0,get:function(){return _index.arrayTypeAnnotation}}),Object.defineProperty(exports,"ArrowFunctionExpression",{enumerable:!0,get:function(){return _index.arrowFunctionExpression}}),Object.defineProperty(exports,"AssignmentExpression",{enumerable:!0,get:function(){return _index.assignmentExpression}}),Object.defineProperty(exports,"AssignmentPattern",{enumerable:!0,get:function(){return _index.assignmentPattern}}),Object.defineProperty(exports,"AwaitExpression",{enumerable:!0,get:function(){return _index.awaitExpression}}),Object.defineProperty(exports,"BigIntLiteral",{enumerable:!0,get:function(){return _index.bigIntLiteral}}),Object.defineProperty(exports,"BinaryExpression",{enumerable:!0,get:function(){return _index.binaryExpression}}),Object.defineProperty(exports,"BindExpression",{enumerable:!0,get:function(){return _index.bindExpression}}),Object.defineProperty(exports,"BlockStatement",{enumerable:!0,get:function(){return _index.blockStatement}}),Object.defineProperty(exports,"BooleanLiteral",{enumerable:!0,get:function(){return _index.booleanLiteral}}),Object.defineProperty(exports,"BooleanLiteralTypeAnnotation",{enumerable:!0,get:function(){return _index.booleanLiteralTypeAnnotation}}),Object.defineProperty(exports,"BooleanTypeAnnotation",{enumerable:!0,get:function(){return _index.booleanTypeAnnotation}}),Object.defineProperty(exports,"BreakStatement",{enumerable:!0,get:function(){return _index.breakStatement}}),Object.defineProperty(exports,"CallExpression",{enumerable:!0,get:function(){return _index.callExpression}}),Object.defineProperty(exports,"CatchClause",{enumerable:!0,get:function(){return _index.catchClause}}),Object.defineProperty(exports,"ClassAccessorProperty",{enumerable:!0,get:function(){return _index.classAccessorProperty}}),Object.defineProperty(exports,"ClassBody",{enumerable:!0,get:function(){return _index.classBody}}),Object.defineProperty(exports,"ClassDeclaration",{enumerable:!0,get:function(){return _index.classDeclaration}}),Object.defineProperty(exports,"ClassExpression",{enumerable:!0,get:function(){return _index.classExpression}}),Object.defineProperty(exports,"ClassImplements",{enumerable:!0,get:function(){return _index.classImplements}}),Object.defineProperty(exports,"ClassMethod",{enumerable:!0,get:function(){return _index.classMethod}}),Object.defineProperty(exports,"ClassPrivateMethod",{enumerable:!0,get:function(){return _index.classPrivateMethod}}),Object.defineProperty(exports,"ClassPrivateProperty",{enumerable:!0,get:function(){return _index.classPrivateProperty}}),Object.defineProperty(exports,"ClassProperty",{enumerable:!0,get:function(){return _index.classProperty}}),Object.defineProperty(exports,"ConditionalExpression",{enumerable:!0,get:function(){return _index.conditionalExpression}}),Object.defineProperty(exports,"ContinueStatement",{enumerable:!0,get:function(){return _index.continueStatement}}),Object.defineProperty(exports,"DebuggerStatement",{enumerable:!0,get:function(){return _index.debuggerStatement}}),Object.defineProperty(exports,"DecimalLiteral",{enumerable:!0,get:function(){return _index.decimalLiteral}}),Object.defineProperty(exports,"DeclareClass",{enumerable:!0,get:function(){return _index.declareClass}}),Object.defineProperty(exports,"DeclareExportAllDeclaration",{enumerable:!0,get:function(){return _index.declareExportAllDeclaration}}),Object.defineProperty(exports,"DeclareExportDeclaration",{enumerable:!0,get:function(){return _index.declareExportDeclaration}}),Object.defineProperty(exports,"DeclareFunction",{enumerable:!0,get:function(){return _index.declareFunction}}),Object.defineProperty(exports,"DeclareInterface",{enumerable:!0,get:function(){return _index.declareInterface}}),Object.defineProperty(exports,"DeclareModule",{enumerable:!0,get:function(){return _index.declareModule}}),Object.defineProperty(exports,"DeclareModuleExports",{enumerable:!0,get:function(){return _index.declareModuleExports}}),Object.defineProperty(exports,"DeclareOpaqueType",{enumerable:!0,get:function(){return _index.declareOpaqueType}}),Object.defineProperty(exports,"DeclareTypeAlias",{enumerable:!0,get:function(){return _index.declareTypeAlias}}),Object.defineProperty(exports,"DeclareVariable",{enumerable:!0,get:function(){return _index.declareVariable}}),Object.defineProperty(exports,"DeclaredPredicate",{enumerable:!0,get:function(){return _index.declaredPredicate}}),Object.defineProperty(exports,"Decorator",{enumerable:!0,get:function(){return _index.decorator}}),Object.defineProperty(exports,"Directive",{enumerable:!0,get:function(){return _index.directive}}),Object.defineProperty(exports,"DirectiveLiteral",{enumerable:!0,get:function(){return _index.directiveLiteral}}),Object.defineProperty(exports,"DoExpression",{enumerable:!0,get:function(){return _index.doExpression}}),Object.defineProperty(exports,"DoWhileStatement",{enumerable:!0,get:function(){return _index.doWhileStatement}}),Object.defineProperty(exports,"EmptyStatement",{enumerable:!0,get:function(){return _index.emptyStatement}}),Object.defineProperty(exports,"EmptyTypeAnnotation",{enumerable:!0,get:function(){return _index.emptyTypeAnnotation}}),Object.defineProperty(exports,"EnumBooleanBody",{enumerable:!0,get:function(){return _index.enumBooleanBody}}),Object.defineProperty(exports,"EnumBooleanMember",{enumerable:!0,get:function(){return _index.enumBooleanMember}}),Object.defineProperty(exports,"EnumDeclaration",{enumerable:!0,get:function(){return _index.enumDeclaration}}),Object.defineProperty(exports,"EnumDefaultedMember",{enumerable:!0,get:function(){return _index.enumDefaultedMember}}),Object.defineProperty(exports,"EnumNumberBody",{enumerable:!0,get:function(){return _index.enumNumberBody}}),Object.defineProperty(exports,"EnumNumberMember",{enumerable:!0,get:function(){return _index.enumNumberMember}}),Object.defineProperty(exports,"EnumStringBody",{enumerable:!0,get:function(){return _index.enumStringBody}}),Object.defineProperty(exports,"EnumStringMember",{enumerable:!0,get:function(){return _index.enumStringMember}}),Object.defineProperty(exports,"EnumSymbolBody",{enumerable:!0,get:function(){return _index.enumSymbolBody}}),Object.defineProperty(exports,"ExistsTypeAnnotation",{enumerable:!0,get:function(){return _index.existsTypeAnnotation}}),Object.defineProperty(exports,"ExportAllDeclaration",{enumerable:!0,get:function(){return _index.exportAllDeclaration}}),Object.defineProperty(exports,"ExportDefaultDeclaration",{enumerable:!0,get:function(){return _index.exportDefaultDeclaration}}),Object.defineProperty(exports,"ExportDefaultSpecifier",{enumerable:!0,get:function(){return _index.exportDefaultSpecifier}}),Object.defineProperty(exports,"ExportNamedDeclaration",{enumerable:!0,get:function(){return _index.exportNamedDeclaration}}),Object.defineProperty(exports,"ExportNamespaceSpecifier",{enumerable:!0,get:function(){return _index.exportNamespaceSpecifier}}),Object.defineProperty(exports,"ExportSpecifier",{enumerable:!0,get:function(){return _index.exportSpecifier}}),Object.defineProperty(exports,"ExpressionStatement",{enumerable:!0,get:function(){return _index.expressionStatement}}),Object.defineProperty(exports,"File",{enumerable:!0,get:function(){return _index.file}}),Object.defineProperty(exports,"ForInStatement",{enumerable:!0,get:function(){return _index.forInStatement}}),Object.defineProperty(exports,"ForOfStatement",{enumerable:!0,get:function(){return _index.forOfStatement}}),Object.defineProperty(exports,"ForStatement",{enumerable:!0,get:function(){return _index.forStatement}}),Object.defineProperty(exports,"FunctionDeclaration",{enumerable:!0,get:function(){return _index.functionDeclaration}}),Object.defineProperty(exports,"FunctionExpression",{enumerable:!0,get:function(){return _index.functionExpression}}),Object.defineProperty(exports,"FunctionTypeAnnotation",{enumerable:!0,get:function(){return _index.functionTypeAnnotation}}),Object.defineProperty(exports,"FunctionTypeParam",{enumerable:!0,get:function(){return _index.functionTypeParam}}),Object.defineProperty(exports,"GenericTypeAnnotation",{enumerable:!0,get:function(){return _index.genericTypeAnnotation}}),Object.defineProperty(exports,"Identifier",{enumerable:!0,get:function(){return _index.identifier}}),Object.defineProperty(exports,"IfStatement",{enumerable:!0,get:function(){return _index.ifStatement}}),Object.defineProperty(exports,"Import",{enumerable:!0,get:function(){return _index.import}}),Object.defineProperty(exports,"ImportAttribute",{enumerable:!0,get:function(){return _index.importAttribute}}),Object.defineProperty(exports,"ImportDeclaration",{enumerable:!0,get:function(){return _index.importDeclaration}}),Object.defineProperty(exports,"ImportDefaultSpecifier",{enumerable:!0,get:function(){return _index.importDefaultSpecifier}}),Object.defineProperty(exports,"ImportNamespaceSpecifier",{enumerable:!0,get:function(){return _index.importNamespaceSpecifier}}),Object.defineProperty(exports,"ImportSpecifier",{enumerable:!0,get:function(){return _index.importSpecifier}}),Object.defineProperty(exports,"IndexedAccessType",{enumerable:!0,get:function(){return _index.indexedAccessType}}),Object.defineProperty(exports,"InferredPredicate",{enumerable:!0,get:function(){return _index.inferredPredicate}}),Object.defineProperty(exports,"InterfaceDeclaration",{enumerable:!0,get:function(){return _index.interfaceDeclaration}}),Object.defineProperty(exports,"InterfaceExtends",{enumerable:!0,get:function(){return _index.interfaceExtends}}),Object.defineProperty(exports,"InterfaceTypeAnnotation",{enumerable:!0,get:function(){return _index.interfaceTypeAnnotation}}),Object.defineProperty(exports,"InterpreterDirective",{enumerable:!0,get:function(){return _index.interpreterDirective}}),Object.defineProperty(exports,"IntersectionTypeAnnotation",{enumerable:!0,get:function(){return _index.intersectionTypeAnnotation}}),Object.defineProperty(exports,"JSXAttribute",{enumerable:!0,get:function(){return _index.jsxAttribute}}),Object.defineProperty(exports,"JSXClosingElement",{enumerable:!0,get:function(){return _index.jsxClosingElement}}),Object.defineProperty(exports,"JSXClosingFragment",{enumerable:!0,get:function(){return _index.jsxClosingFragment}}),Object.defineProperty(exports,"JSXElement",{enumerable:!0,get:function(){return _index.jsxElement}}),Object.defineProperty(exports,"JSXEmptyExpression",{enumerable:!0,get:function(){return _index.jsxEmptyExpression}}),Object.defineProperty(exports,"JSXExpressionContainer",{enumerable:!0,get:function(){return _index.jsxExpressionContainer}}),Object.defineProperty(exports,"JSXFragment",{enumerable:!0,get:function(){return _index.jsxFragment}}),Object.defineProperty(exports,"JSXIdentifier",{enumerable:!0,get:function(){return _index.jsxIdentifier}}),Object.defineProperty(exports,"JSXMemberExpression",{enumerable:!0,get:function(){return _index.jsxMemberExpression}}),Object.defineProperty(exports,"JSXNamespacedName",{enumerable:!0,get:function(){return _index.jsxNamespacedName}}),Object.defineProperty(exports,"JSXOpeningElement",{enumerable:!0,get:function(){return _index.jsxOpeningElement}}),Object.defineProperty(exports,"JSXOpeningFragment",{enumerable:!0,get:function(){return _index.jsxOpeningFragment}}),Object.defineProperty(exports,"JSXSpreadAttribute",{enumerable:!0,get:function(){return _index.jsxSpreadAttribute}}),Object.defineProperty(exports,"JSXSpreadChild",{enumerable:!0,get:function(){return _index.jsxSpreadChild}}),Object.defineProperty(exports,"JSXText",{enumerable:!0,get:function(){return _index.jsxText}}),Object.defineProperty(exports,"LabeledStatement",{enumerable:!0,get:function(){return _index.labeledStatement}}),Object.defineProperty(exports,"LogicalExpression",{enumerable:!0,get:function(){return _index.logicalExpression}}),Object.defineProperty(exports,"MemberExpression",{enumerable:!0,get:function(){return _index.memberExpression}}),Object.defineProperty(exports,"MetaProperty",{enumerable:!0,get:function(){return _index.metaProperty}}),Object.defineProperty(exports,"MixedTypeAnnotation",{enumerable:!0,get:function(){return _index.mixedTypeAnnotation}}),Object.defineProperty(exports,"ModuleExpression",{enumerable:!0,get:function(){return _index.moduleExpression}}),Object.defineProperty(exports,"NewExpression",{enumerable:!0,get:function(){return _index.newExpression}}),Object.defineProperty(exports,"Noop",{enumerable:!0,get:function(){return _index.noop}}),Object.defineProperty(exports,"NullLiteral",{enumerable:!0,get:function(){return _index.nullLiteral}}),Object.defineProperty(exports,"NullLiteralTypeAnnotation",{enumerable:!0,get:function(){return _index.nullLiteralTypeAnnotation}}),Object.defineProperty(exports,"NullableTypeAnnotation",{enumerable:!0,get:function(){return _index.nullableTypeAnnotation}}),Object.defineProperty(exports,"NumberLiteral",{enumerable:!0,get:function(){return _index.numberLiteral}}),Object.defineProperty(exports,"NumberLiteralTypeAnnotation",{enumerable:!0,get:function(){return _index.numberLiteralTypeAnnotation}}),Object.defineProperty(exports,"NumberTypeAnnotation",{enumerable:!0,get:function(){return _index.numberTypeAnnotation}}),Object.defineProperty(exports,"NumericLiteral",{enumerable:!0,get:function(){return _index.numericLiteral}}),Object.defineProperty(exports,"ObjectExpression",{enumerable:!0,get:function(){return _index.objectExpression}}),Object.defineProperty(exports,"ObjectMethod",{enumerable:!0,get:function(){return _index.objectMethod}}),Object.defineProperty(exports,"ObjectPattern",{enumerable:!0,get:function(){return _index.objectPattern}}),Object.defineProperty(exports,"ObjectProperty",{enumerable:!0,get:function(){return _index.objectProperty}}),Object.defineProperty(exports,"ObjectTypeAnnotation",{enumerable:!0,get:function(){return _index.objectTypeAnnotation}}),Object.defineProperty(exports,"ObjectTypeCallProperty",{enumerable:!0,get:function(){return _index.objectTypeCallProperty}}),Object.defineProperty(exports,"ObjectTypeIndexer",{enumerable:!0,get:function(){return _index.objectTypeIndexer}}),Object.defineProperty(exports,"ObjectTypeInternalSlot",{enumerable:!0,get:function(){return _index.objectTypeInternalSlot}}),Object.defineProperty(exports,"ObjectTypeProperty",{enumerable:!0,get:function(){return _index.objectTypeProperty}}),Object.defineProperty(exports,"ObjectTypeSpreadProperty",{enumerable:!0,get:function(){return _index.objectTypeSpreadProperty}}),Object.defineProperty(exports,"OpaqueType",{enumerable:!0,get:function(){return _index.opaqueType}}),Object.defineProperty(exports,"OptionalCallExpression",{enumerable:!0,get:function(){return _index.optionalCallExpression}}),Object.defineProperty(exports,"OptionalIndexedAccessType",{enumerable:!0,get:function(){return _index.optionalIndexedAccessType}}),Object.defineProperty(exports,"OptionalMemberExpression",{enumerable:!0,get:function(){return _index.optionalMemberExpression}}),Object.defineProperty(exports,"ParenthesizedExpression",{enumerable:!0,get:function(){return _index.parenthesizedExpression}}),Object.defineProperty(exports,"PipelineBareFunction",{enumerable:!0,get:function(){return _index.pipelineBareFunction}}),Object.defineProperty(exports,"PipelinePrimaryTopicReference",{enumerable:!0,get:function(){return _index.pipelinePrimaryTopicReference}}),Object.defineProperty(exports,"PipelineTopicExpression",{enumerable:!0,get:function(){return _index.pipelineTopicExpression}}),Object.defineProperty(exports,"Placeholder",{enumerable:!0,get:function(){return _index.placeholder}}),Object.defineProperty(exports,"PrivateName",{enumerable:!0,get:function(){return _index.privateName}}),Object.defineProperty(exports,"Program",{enumerable:!0,get:function(){return _index.program}}),Object.defineProperty(exports,"QualifiedTypeIdentifier",{enumerable:!0,get:function(){return _index.qualifiedTypeIdentifier}}),Object.defineProperty(exports,"RecordExpression",{enumerable:!0,get:function(){return _index.recordExpression}}),Object.defineProperty(exports,"RegExpLiteral",{enumerable:!0,get:function(){return _index.regExpLiteral}}),Object.defineProperty(exports,"RegexLiteral",{enumerable:!0,get:function(){return _index.regexLiteral}}),Object.defineProperty(exports,"RestElement",{enumerable:!0,get:function(){return _index.restElement}}),Object.defineProperty(exports,"RestProperty",{enumerable:!0,get:function(){return _index.restProperty}}),Object.defineProperty(exports,"ReturnStatement",{enumerable:!0,get:function(){return _index.returnStatement}}),Object.defineProperty(exports,"SequenceExpression",{enumerable:!0,get:function(){return _index.sequenceExpression}}),Object.defineProperty(exports,"SpreadElement",{enumerable:!0,get:function(){return _index.spreadElement}}),Object.defineProperty(exports,"SpreadProperty",{enumerable:!0,get:function(){return _index.spreadProperty}}),Object.defineProperty(exports,"StaticBlock",{enumerable:!0,get:function(){return _index.staticBlock}}),Object.defineProperty(exports,"StringLiteral",{enumerable:!0,get:function(){return _index.stringLiteral}}),Object.defineProperty(exports,"StringLiteralTypeAnnotation",{enumerable:!0,get:function(){return _index.stringLiteralTypeAnnotation}}),Object.defineProperty(exports,"StringTypeAnnotation",{enumerable:!0,get:function(){return _index.stringTypeAnnotation}}),Object.defineProperty(exports,"Super",{enumerable:!0,get:function(){return _index.super}}),Object.defineProperty(exports,"SwitchCase",{enumerable:!0,get:function(){return _index.switchCase}}),Object.defineProperty(exports,"SwitchStatement",{enumerable:!0,get:function(){return _index.switchStatement}}),Object.defineProperty(exports,"SymbolTypeAnnotation",{enumerable:!0,get:function(){return _index.symbolTypeAnnotation}}),Object.defineProperty(exports,"TSAnyKeyword",{enumerable:!0,get:function(){return _index.tsAnyKeyword}}),Object.defineProperty(exports,"TSArrayType",{enumerable:!0,get:function(){return _index.tsArrayType}}),Object.defineProperty(exports,"TSAsExpression",{enumerable:!0,get:function(){return _index.tsAsExpression}}),Object.defineProperty(exports,"TSBigIntKeyword",{enumerable:!0,get:function(){return _index.tsBigIntKeyword}}),Object.defineProperty(exports,"TSBooleanKeyword",{enumerable:!0,get:function(){return _index.tsBooleanKeyword}}),Object.defineProperty(exports,"TSCallSignatureDeclaration",{enumerable:!0,get:function(){return _index.tsCallSignatureDeclaration}}),Object.defineProperty(exports,"TSConditionalType",{enumerable:!0,get:function(){return _index.tsConditionalType}}),Object.defineProperty(exports,"TSConstructSignatureDeclaration",{enumerable:!0,get:function(){return _index.tsConstructSignatureDeclaration}}),Object.defineProperty(exports,"TSConstructorType",{enumerable:!0,get:function(){return _index.tsConstructorType}}),Object.defineProperty(exports,"TSDeclareFunction",{enumerable:!0,get:function(){return _index.tsDeclareFunction}}),Object.defineProperty(exports,"TSDeclareMethod",{enumerable:!0,get:function(){return _index.tsDeclareMethod}}),Object.defineProperty(exports,"TSEnumDeclaration",{enumerable:!0,get:function(){return _index.tsEnumDeclaration}}),Object.defineProperty(exports,"TSEnumMember",{enumerable:!0,get:function(){return _index.tsEnumMember}}),Object.defineProperty(exports,"TSExportAssignment",{enumerable:!0,get:function(){return _index.tsExportAssignment}}),Object.defineProperty(exports,"TSExpressionWithTypeArguments",{enumerable:!0,get:function(){return _index.tsExpressionWithTypeArguments}}),Object.defineProperty(exports,"TSExternalModuleReference",{enumerable:!0,get:function(){return _index.tsExternalModuleReference}}),Object.defineProperty(exports,"TSFunctionType",{enumerable:!0,get:function(){return _index.tsFunctionType}}),Object.defineProperty(exports,"TSImportEqualsDeclaration",{enumerable:!0,get:function(){return _index.tsImportEqualsDeclaration}}),Object.defineProperty(exports,"TSImportType",{enumerable:!0,get:function(){return _index.tsImportType}}),Object.defineProperty(exports,"TSIndexSignature",{enumerable:!0,get:function(){return _index.tsIndexSignature}}),Object.defineProperty(exports,"TSIndexedAccessType",{enumerable:!0,get:function(){return _index.tsIndexedAccessType}}),Object.defineProperty(exports,"TSInferType",{enumerable:!0,get:function(){return _index.tsInferType}}),Object.defineProperty(exports,"TSInstantiationExpression",{enumerable:!0,get:function(){return _index.tsInstantiationExpression}}),Object.defineProperty(exports,"TSInterfaceBody",{enumerable:!0,get:function(){return _index.tsInterfaceBody}}),Object.defineProperty(exports,"TSInterfaceDeclaration",{enumerable:!0,get:function(){return _index.tsInterfaceDeclaration}}),Object.defineProperty(exports,"TSIntersectionType",{enumerable:!0,get:function(){return _index.tsIntersectionType}}),Object.defineProperty(exports,"TSIntrinsicKeyword",{enumerable:!0,get:function(){return _index.tsIntrinsicKeyword}}),Object.defineProperty(exports,"TSLiteralType",{enumerable:!0,get:function(){return _index.tsLiteralType}}),Object.defineProperty(exports,"TSMappedType",{enumerable:!0,get:function(){return _index.tsMappedType}}),Object.defineProperty(exports,"TSMethodSignature",{enumerable:!0,get:function(){return _index.tsMethodSignature}}),Object.defineProperty(exports,"TSModuleBlock",{enumerable:!0,get:function(){return _index.tsModuleBlock}}),Object.defineProperty(exports,"TSModuleDeclaration",{enumerable:!0,get:function(){return _index.tsModuleDeclaration}}),Object.defineProperty(exports,"TSNamedTupleMember",{enumerable:!0,get:function(){return _index.tsNamedTupleMember}}),Object.defineProperty(exports,"TSNamespaceExportDeclaration",{enumerable:!0,get:function(){return _index.tsNamespaceExportDeclaration}}),Object.defineProperty(exports,"TSNeverKeyword",{enumerable:!0,get:function(){return _index.tsNeverKeyword}}),Object.defineProperty(exports,"TSNonNullExpression",{enumerable:!0,get:function(){return _index.tsNonNullExpression}}),Object.defineProperty(exports,"TSNullKeyword",{enumerable:!0,get:function(){return _index.tsNullKeyword}}),Object.defineProperty(exports,"TSNumberKeyword",{enumerable:!0,get:function(){return _index.tsNumberKeyword}}),Object.defineProperty(exports,"TSObjectKeyword",{enumerable:!0,get:function(){return _index.tsObjectKeyword}}),Object.defineProperty(exports,"TSOptionalType",{enumerable:!0,get:function(){return _index.tsOptionalType}}),Object.defineProperty(exports,"TSParameterProperty",{enumerable:!0,get:function(){return _index.tsParameterProperty}}),Object.defineProperty(exports,"TSParenthesizedType",{enumerable:!0,get:function(){return _index.tsParenthesizedType}}),Object.defineProperty(exports,"TSPropertySignature",{enumerable:!0,get:function(){return _index.tsPropertySignature}}),Object.defineProperty(exports,"TSQualifiedName",{enumerable:!0,get:function(){return _index.tsQualifiedName}}),Object.defineProperty(exports,"TSRestType",{enumerable:!0,get:function(){return _index.tsRestType}}),Object.defineProperty(exports,"TSSatisfiesExpression",{enumerable:!0,get:function(){return _index.tsSatisfiesExpression}}),Object.defineProperty(exports,"TSStringKeyword",{enumerable:!0,get:function(){return _index.tsStringKeyword}}),Object.defineProperty(exports,"TSSymbolKeyword",{enumerable:!0,get:function(){return _index.tsSymbolKeyword}}),Object.defineProperty(exports,"TSThisType",{enumerable:!0,get:function(){return _index.tsThisType}}),Object.defineProperty(exports,"TSTupleType",{enumerable:!0,get:function(){return _index.tsTupleType}}),Object.defineProperty(exports,"TSTypeAliasDeclaration",{enumerable:!0,get:function(){return _index.tsTypeAliasDeclaration}}),Object.defineProperty(exports,"TSTypeAnnotation",{enumerable:!0,get:function(){return _index.tsTypeAnnotation}}),Object.defineProperty(exports,"TSTypeAssertion",{enumerable:!0,get:function(){return _index.tsTypeAssertion}}),Object.defineProperty(exports,"TSTypeLiteral",{enumerable:!0,get:function(){return _index.tsTypeLiteral}}),Object.defineProperty(exports,"TSTypeOperator",{enumerable:!0,get:function(){return _index.tsTypeOperator}}),Object.defineProperty(exports,"TSTypeParameter",{enumerable:!0,get:function(){return _index.tsTypeParameter}}),Object.defineProperty(exports,"TSTypeParameterDeclaration",{enumerable:!0,get:function(){return _index.tsTypeParameterDeclaration}}),Object.defineProperty(exports,"TSTypeParameterInstantiation",{enumerable:!0,get:function(){return _index.tsTypeParameterInstantiation}}),Object.defineProperty(exports,"TSTypePredicate",{enumerable:!0,get:function(){return _index.tsTypePredicate}}),Object.defineProperty(exports,"TSTypeQuery",{enumerable:!0,get:function(){return _index.tsTypeQuery}}),Object.defineProperty(exports,"TSTypeReference",{enumerable:!0,get:function(){return _index.tsTypeReference}}),Object.defineProperty(exports,"TSUndefinedKeyword",{enumerable:!0,get:function(){return _index.tsUndefinedKeyword}}),Object.defineProperty(exports,"TSUnionType",{enumerable:!0,get:function(){return _index.tsUnionType}}),Object.defineProperty(exports,"TSUnknownKeyword",{enumerable:!0,get:function(){return _index.tsUnknownKeyword}}),Object.defineProperty(exports,"TSVoidKeyword",{enumerable:!0,get:function(){return _index.tsVoidKeyword}}),Object.defineProperty(exports,"TaggedTemplateExpression",{enumerable:!0,get:function(){return _index.taggedTemplateExpression}}),Object.defineProperty(exports,"TemplateElement",{enumerable:!0,get:function(){return _index.templateElement}}),Object.defineProperty(exports,"TemplateLiteral",{enumerable:!0,get:function(){return _index.templateLiteral}}),Object.defineProperty(exports,"ThisExpression",{enumerable:!0,get:function(){return _index.thisExpression}}),Object.defineProperty(exports,"ThisTypeAnnotation",{enumerable:!0,get:function(){return _index.thisTypeAnnotation}}),Object.defineProperty(exports,"ThrowStatement",{enumerable:!0,get:function(){return _index.throwStatement}}),Object.defineProperty(exports,"TopicReference",{enumerable:!0,get:function(){return _index.topicReference}}),Object.defineProperty(exports,"TryStatement",{enumerable:!0,get:function(){return _index.tryStatement}}),Object.defineProperty(exports,"TupleExpression",{enumerable:!0,get:function(){return _index.tupleExpression}}),Object.defineProperty(exports,"TupleTypeAnnotation",{enumerable:!0,get:function(){return _index.tupleTypeAnnotation}}),Object.defineProperty(exports,"TypeAlias",{enumerable:!0,get:function(){return _index.typeAlias}}),Object.defineProperty(exports,"TypeAnnotation",{enumerable:!0,get:function(){return _index.typeAnnotation}}),Object.defineProperty(exports,"TypeCastExpression",{enumerable:!0,get:function(){return _index.typeCastExpression}}),Object.defineProperty(exports,"TypeParameter",{enumerable:!0,get:function(){return _index.typeParameter}}),Object.defineProperty(exports,"TypeParameterDeclaration",{enumerable:!0,get:function(){return _index.typeParameterDeclaration}}),Object.defineProperty(exports,"TypeParameterInstantiation",{enumerable:!0,get:function(){return _index.typeParameterInstantiation}}),Object.defineProperty(exports,"TypeofTypeAnnotation",{enumerable:!0,get:function(){return _index.typeofTypeAnnotation}}),Object.defineProperty(exports,"UnaryExpression",{enumerable:!0,get:function(){return _index.unaryExpression}}),Object.defineProperty(exports,"UnionTypeAnnotation",{enumerable:!0,get:function(){return _index.unionTypeAnnotation}}),Object.defineProperty(exports,"UpdateExpression",{enumerable:!0,get:function(){return _index.updateExpression}}),Object.defineProperty(exports,"V8IntrinsicIdentifier",{enumerable:!0,get:function(){return _index.v8IntrinsicIdentifier}}),Object.defineProperty(exports,"VariableDeclaration",{enumerable:!0,get:function(){return _index.variableDeclaration}}),Object.defineProperty(exports,"VariableDeclarator",{enumerable:!0,get:function(){return _index.variableDeclarator}}),Object.defineProperty(exports,"Variance",{enumerable:!0,get:function(){return _index.variance}}),Object.defineProperty(exports,"VoidTypeAnnotation",{enumerable:!0,get:function(){return _index.voidTypeAnnotation}}),Object.defineProperty(exports,"WhileStatement",{enumerable:!0,get:function(){return _index.whileStatement}}),Object.defineProperty(exports,"WithStatement",{enumerable:!0,get:function(){return _index.withStatement}}),Object.defineProperty(exports,"YieldExpression",{enumerable:!0,get:function(){return _index.yieldExpression}});var _index=__nested_webpack_require_1312469__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/react/buildChildren.js":(__unused_webpack_module,exports,__nested_webpack_require_1341729__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){const elements=[];for(let i=0;i<node.children.length;i++){let child=node.children[i];(0,_generated.isJSXText)(child)?(0,_cleanJSXElementLiteralChild.default)(child,elements):((0,_generated.isJSXExpressionContainer)(child)&&(child=child.expression),(0,_generated.isJSXEmptyExpression)(child)||elements.push(child))}return elements};var _generated=__nested_webpack_require_1341729__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_cleanJSXElementLiteralChild=__nested_webpack_require_1341729__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js":(__unused_webpack_module,exports,__nested_webpack_require_1342635__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(typeAnnotations){const types=typeAnnotations.map((type=>(0,_index.isTSTypeAnnotation)(type)?type.typeAnnotation:type)),flattened=(0,_removeTypeDuplicates.default)(types);return 1===flattened.length?flattened[0]:(0,_generated.tsUnionType)(flattened)};var _generated=__nested_webpack_require_1342635__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_removeTypeDuplicates=__nested_webpack_require_1342635__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js"),_index=__nested_webpack_require_1342635__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/validateNode.js":(__unused_webpack_module,exports,__nested_webpack_require_1343566__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){const keys=_.BUILDER_KEYS[node.type];for(const key of keys)(0,_validate.default)(node,key,node[key]);return node};var _validate=__nested_webpack_require_1343566__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/validate.js"),_=__nested_webpack_require_1343566__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/clone.js":(__unused_webpack_module,exports,__nested_webpack_require_1344160__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return(0,_cloneNode.default)(node,!1)};var _cloneNode=__nested_webpack_require_1344160__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneDeep.js":(__unused_webpack_module,exports,__nested_webpack_require_1344575__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return(0,_cloneNode.default)(node)};var _cloneNode=__nested_webpack_require_1344575__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js":(__unused_webpack_module,exports,__nested_webpack_require_1344997__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return(0,_cloneNode.default)(node,!0,!0)};var _cloneNode=__nested_webpack_require_1344997__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js":(__unused_webpack_module,exports,__nested_webpack_require_1345415__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,deep=!0,withoutLoc=!1){return cloneNodeInternal(node,deep,withoutLoc,new Map)};var _definitions=__nested_webpack_require_1345415__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js"),_generated=__nested_webpack_require_1345415__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js");const has=Function.call.bind(Object.prototype.hasOwnProperty);function cloneIfNode(obj,deep,withoutLoc,commentsCache){return obj&&"string"==typeof obj.type?cloneNodeInternal(obj,deep,withoutLoc,commentsCache):obj}function cloneIfNodeOrArray(obj,deep,withoutLoc,commentsCache){return Array.isArray(obj)?obj.map((node=>cloneIfNode(node,deep,withoutLoc,commentsCache))):cloneIfNode(obj,deep,withoutLoc,commentsCache)}function cloneNodeInternal(node,deep=!0,withoutLoc=!1,commentsCache){if(!node)return node;const{type}=node,newNode={type:node.type};if((0,_generated.isIdentifier)(node))newNode.name=node.name,has(node,"optional")&&"boolean"==typeof node.optional&&(newNode.optional=node.optional),has(node,"typeAnnotation")&&(newNode.typeAnnotation=deep?cloneIfNodeOrArray(node.typeAnnotation,!0,withoutLoc,commentsCache):node.typeAnnotation);else{if(!has(_definitions.NODE_FIELDS,type))throw new Error(`Unknown node type: "${type}"`);for(const field of Object.keys(_definitions.NODE_FIELDS[type]))has(node,field)&&(newNode[field]=deep?(0,_generated.isFile)(node)&&"comments"===field?maybeCloneComments(node.comments,deep,withoutLoc,commentsCache):cloneIfNodeOrArray(node[field],!0,withoutLoc,commentsCache):node[field])}return has(node,"loc")&&(newNode.loc=withoutLoc?null:node.loc),has(node,"leadingComments")&&(newNode.leadingComments=maybeCloneComments(node.leadingComments,deep,withoutLoc,commentsCache)),has(node,"innerComments")&&(newNode.innerComments=maybeCloneComments(node.innerComments,deep,withoutLoc,commentsCache)),has(node,"trailingComments")&&(newNode.trailingComments=maybeCloneComments(node.trailingComments,deep,withoutLoc,commentsCache)),has(node,"extra")&&(newNode.extra=Object.assign({},node.extra)),newNode}function maybeCloneComments(comments,deep,withoutLoc,commentsCache){return comments&&deep?comments.map((comment=>{const cache=commentsCache.get(comment);if(cache)return cache;const{type,value,loc}=comment,ret={type,value,loc};return withoutLoc&&(ret.loc=null),commentsCache.set(comment,ret),ret})):comments}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js":(__unused_webpack_module,exports,__nested_webpack_require_1348050__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return(0,_cloneNode.default)(node,!1,!0)};var _cloneNode=__nested_webpack_require_1348050__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/addComment.js":(__unused_webpack_module,exports,__nested_webpack_require_1348472__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,type,content,line){return(0,_addComments.default)(node,type,[{type:line?"CommentLine":"CommentBlock",value:content}])};var _addComments=__nested_webpack_require_1348472__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/addComments.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/addComments.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,type,comments){if(!comments||!node)return node;const key=`${type}Comments`;node[key]?"leading"===type?node[key]=comments.concat(node[key]):node[key].push(...comments):node[key]=comments;return node}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritInnerComments.js":(__unused_webpack_module,exports,__nested_webpack_require_1349418__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(child,parent){(0,_inherit.default)("innerComments",child,parent)};var _inherit=__nested_webpack_require_1349418__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/inherit.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritLeadingComments.js":(__unused_webpack_module,exports,__nested_webpack_require_1349866__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(child,parent){(0,_inherit.default)("leadingComments",child,parent)};var _inherit=__nested_webpack_require_1349866__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/inherit.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritTrailingComments.js":(__unused_webpack_module,exports,__nested_webpack_require_1350317__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(child,parent){(0,_inherit.default)("trailingComments",child,parent)};var _inherit=__nested_webpack_require_1350317__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/inherit.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritsComments.js":(__unused_webpack_module,exports,__nested_webpack_require_1350762__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(child,parent){return(0,_inheritTrailingComments.default)(child,parent),(0,_inheritLeadingComments.default)(child,parent),(0,_inheritInnerComments.default)(child,parent),child};var _inheritTrailingComments=__nested_webpack_require_1350762__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritTrailingComments.js"),_inheritLeadingComments=__nested_webpack_require_1350762__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritLeadingComments.js"),_inheritInnerComments=__nested_webpack_require_1350762__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritInnerComments.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/removeComments.js":(__unused_webpack_module,exports,__nested_webpack_require_1351649__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return _constants.COMMENT_KEYS.forEach((key=>{node[key]=null})),node};var _constants=__nested_webpack_require_1351649__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/generated/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1352105__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WHILE_TYPES=exports.USERWHITESPACABLE_TYPES=exports.UNARYLIKE_TYPES=exports.TYPESCRIPT_TYPES=exports.TSTYPE_TYPES=exports.TSTYPEELEMENT_TYPES=exports.TSENTITYNAME_TYPES=exports.TSBASETYPE_TYPES=exports.TERMINATORLESS_TYPES=exports.STATEMENT_TYPES=exports.STANDARDIZED_TYPES=exports.SCOPABLE_TYPES=exports.PUREISH_TYPES=exports.PROPERTY_TYPES=exports.PRIVATE_TYPES=exports.PATTERN_TYPES=exports.PATTERNLIKE_TYPES=exports.OBJECTMEMBER_TYPES=exports.MODULESPECIFIER_TYPES=exports.MODULEDECLARATION_TYPES=exports.MISCELLANEOUS_TYPES=exports.METHOD_TYPES=exports.LVAL_TYPES=exports.LOOP_TYPES=exports.LITERAL_TYPES=exports.JSX_TYPES=exports.IMPORTOREXPORTDECLARATION_TYPES=exports.IMMUTABLE_TYPES=exports.FUNCTION_TYPES=exports.FUNCTIONPARENT_TYPES=exports.FOR_TYPES=exports.FORXSTATEMENT_TYPES=exports.FLOW_TYPES=exports.FLOWTYPE_TYPES=exports.FLOWPREDICATE_TYPES=exports.FLOWDECLARATION_TYPES=exports.FLOWBASEANNOTATION_TYPES=exports.EXPRESSION_TYPES=exports.EXPRESSIONWRAPPER_TYPES=exports.EXPORTDECLARATION_TYPES=exports.ENUMMEMBER_TYPES=exports.ENUMBODY_TYPES=exports.DECLARATION_TYPES=exports.CONDITIONAL_TYPES=exports.COMPLETIONSTATEMENT_TYPES=exports.CLASS_TYPES=exports.BLOCK_TYPES=exports.BLOCKPARENT_TYPES=exports.BINARY_TYPES=exports.ACCESSOR_TYPES=void 0;var _definitions=__nested_webpack_require_1352105__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js");const STANDARDIZED_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Standardized;exports.STANDARDIZED_TYPES=STANDARDIZED_TYPES;const EXPRESSION_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Expression;exports.EXPRESSION_TYPES=EXPRESSION_TYPES;const BINARY_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Binary;exports.BINARY_TYPES=BINARY_TYPES;const SCOPABLE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Scopable;exports.SCOPABLE_TYPES=SCOPABLE_TYPES;const BLOCKPARENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS.BlockParent;exports.BLOCKPARENT_TYPES=BLOCKPARENT_TYPES;const BLOCK_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Block;exports.BLOCK_TYPES=BLOCK_TYPES;const STATEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Statement;exports.STATEMENT_TYPES=STATEMENT_TYPES;const TERMINATORLESS_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Terminatorless;exports.TERMINATORLESS_TYPES=TERMINATORLESS_TYPES;const COMPLETIONSTATEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS.CompletionStatement;exports.COMPLETIONSTATEMENT_TYPES=COMPLETIONSTATEMENT_TYPES;const CONDITIONAL_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Conditional;exports.CONDITIONAL_TYPES=CONDITIONAL_TYPES;const LOOP_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Loop;exports.LOOP_TYPES=LOOP_TYPES;const WHILE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.While;exports.WHILE_TYPES=WHILE_TYPES;const EXPRESSIONWRAPPER_TYPES=_definitions.FLIPPED_ALIAS_KEYS.ExpressionWrapper;exports.EXPRESSIONWRAPPER_TYPES=EXPRESSIONWRAPPER_TYPES;const FOR_TYPES=_definitions.FLIPPED_ALIAS_KEYS.For;exports.FOR_TYPES=FOR_TYPES;const FORXSTATEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS.ForXStatement;exports.FORXSTATEMENT_TYPES=FORXSTATEMENT_TYPES;const FUNCTION_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Function;exports.FUNCTION_TYPES=FUNCTION_TYPES;const FUNCTIONPARENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS.FunctionParent;exports.FUNCTIONPARENT_TYPES=FUNCTIONPARENT_TYPES;const PUREISH_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Pureish;exports.PUREISH_TYPES=PUREISH_TYPES;const DECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Declaration;exports.DECLARATION_TYPES=DECLARATION_TYPES;const PATTERNLIKE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.PatternLike;exports.PATTERNLIKE_TYPES=PATTERNLIKE_TYPES;const LVAL_TYPES=_definitions.FLIPPED_ALIAS_KEYS.LVal;exports.LVAL_TYPES=LVAL_TYPES;const TSENTITYNAME_TYPES=_definitions.FLIPPED_ALIAS_KEYS.TSEntityName;exports.TSENTITYNAME_TYPES=TSENTITYNAME_TYPES;const LITERAL_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Literal;exports.LITERAL_TYPES=LITERAL_TYPES;const IMMUTABLE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Immutable;exports.IMMUTABLE_TYPES=IMMUTABLE_TYPES;const USERWHITESPACABLE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.UserWhitespacable;exports.USERWHITESPACABLE_TYPES=USERWHITESPACABLE_TYPES;const METHOD_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Method;exports.METHOD_TYPES=METHOD_TYPES;const OBJECTMEMBER_TYPES=_definitions.FLIPPED_ALIAS_KEYS.ObjectMember;exports.OBJECTMEMBER_TYPES=OBJECTMEMBER_TYPES;const PROPERTY_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Property;exports.PROPERTY_TYPES=PROPERTY_TYPES;const UNARYLIKE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.UnaryLike;exports.UNARYLIKE_TYPES=UNARYLIKE_TYPES;const PATTERN_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Pattern;exports.PATTERN_TYPES=PATTERN_TYPES;const CLASS_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Class;exports.CLASS_TYPES=CLASS_TYPES;const IMPORTOREXPORTDECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS.ImportOrExportDeclaration;exports.IMPORTOREXPORTDECLARATION_TYPES=IMPORTOREXPORTDECLARATION_TYPES;const EXPORTDECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS.ExportDeclaration;exports.EXPORTDECLARATION_TYPES=EXPORTDECLARATION_TYPES;const MODULESPECIFIER_TYPES=_definitions.FLIPPED_ALIAS_KEYS.ModuleSpecifier;exports.MODULESPECIFIER_TYPES=MODULESPECIFIER_TYPES;const ACCESSOR_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Accessor;exports.ACCESSOR_TYPES=ACCESSOR_TYPES;const PRIVATE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Private;exports.PRIVATE_TYPES=PRIVATE_TYPES;const FLOW_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Flow;exports.FLOW_TYPES=FLOW_TYPES;const FLOWTYPE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.FlowType;exports.FLOWTYPE_TYPES=FLOWTYPE_TYPES;const FLOWBASEANNOTATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS.FlowBaseAnnotation;exports.FLOWBASEANNOTATION_TYPES=FLOWBASEANNOTATION_TYPES;const FLOWDECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS.FlowDeclaration;exports.FLOWDECLARATION_TYPES=FLOWDECLARATION_TYPES;const FLOWPREDICATE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.FlowPredicate;exports.FLOWPREDICATE_TYPES=FLOWPREDICATE_TYPES;const ENUMBODY_TYPES=_definitions.FLIPPED_ALIAS_KEYS.EnumBody;exports.ENUMBODY_TYPES=ENUMBODY_TYPES;const ENUMMEMBER_TYPES=_definitions.FLIPPED_ALIAS_KEYS.EnumMember;exports.ENUMMEMBER_TYPES=ENUMMEMBER_TYPES;const JSX_TYPES=_definitions.FLIPPED_ALIAS_KEYS.JSX;exports.JSX_TYPES=JSX_TYPES;const MISCELLANEOUS_TYPES=_definitions.FLIPPED_ALIAS_KEYS.Miscellaneous;exports.MISCELLANEOUS_TYPES=MISCELLANEOUS_TYPES;const TYPESCRIPT_TYPES=_definitions.FLIPPED_ALIAS_KEYS.TypeScript;exports.TYPESCRIPT_TYPES=TYPESCRIPT_TYPES;const TSTYPEELEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS.TSTypeElement;exports.TSTYPEELEMENT_TYPES=TSTYPEELEMENT_TYPES;const TSTYPE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.TSType;exports.TSTYPE_TYPES=TSTYPE_TYPES;const TSBASETYPE_TYPES=_definitions.FLIPPED_ALIAS_KEYS.TSBaseType;exports.TSBASETYPE_TYPES=TSBASETYPE_TYPES;const MODULEDECLARATION_TYPES=IMPORTOREXPORTDECLARATION_TYPES;exports.MODULEDECLARATION_TYPES=MODULEDECLARATION_TYPES},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UPDATE_OPERATORS=exports.UNARY_OPERATORS=exports.STRING_UNARY_OPERATORS=exports.STATEMENT_OR_BLOCK_KEYS=exports.NUMBER_UNARY_OPERATORS=exports.NUMBER_BINARY_OPERATORS=exports.NOT_LOCAL_BINDING=exports.LOGICAL_OPERATORS=exports.INHERIT_KEYS=exports.FOR_INIT_KEYS=exports.FLATTENABLE_KEYS=exports.EQUALITY_BINARY_OPERATORS=exports.COMPARISON_BINARY_OPERATORS=exports.COMMENT_KEYS=exports.BOOLEAN_UNARY_OPERATORS=exports.BOOLEAN_NUMBER_BINARY_OPERATORS=exports.BOOLEAN_BINARY_OPERATORS=exports.BLOCK_SCOPED_SYMBOL=exports.BINARY_OPERATORS=exports.ASSIGNMENT_OPERATORS=void 0;exports.STATEMENT_OR_BLOCK_KEYS=["consequent","body","alternate"];exports.FLATTENABLE_KEYS=["body","expressions"];exports.FOR_INIT_KEYS=["left","init"];exports.COMMENT_KEYS=["leadingComments","trailingComments","innerComments"];const LOGICAL_OPERATORS=["||","&&","??"];exports.LOGICAL_OPERATORS=LOGICAL_OPERATORS;exports.UPDATE_OPERATORS=["++","--"];const BOOLEAN_NUMBER_BINARY_OPERATORS=[">","<",">=","<="];exports.BOOLEAN_NUMBER_BINARY_OPERATORS=BOOLEAN_NUMBER_BINARY_OPERATORS;const EQUALITY_BINARY_OPERATORS=["==","===","!=","!=="];exports.EQUALITY_BINARY_OPERATORS=EQUALITY_BINARY_OPERATORS;const COMPARISON_BINARY_OPERATORS=[...EQUALITY_BINARY_OPERATORS,"in","instanceof"];exports.COMPARISON_BINARY_OPERATORS=COMPARISON_BINARY_OPERATORS;const BOOLEAN_BINARY_OPERATORS=[...COMPARISON_BINARY_OPERATORS,...BOOLEAN_NUMBER_BINARY_OPERATORS];exports.BOOLEAN_BINARY_OPERATORS=BOOLEAN_BINARY_OPERATORS;const NUMBER_BINARY_OPERATORS=["-","/","%","*","**","&","|",">>",">>>","<<","^"];exports.NUMBER_BINARY_OPERATORS=NUMBER_BINARY_OPERATORS;const BINARY_OPERATORS=["+",...NUMBER_BINARY_OPERATORS,...BOOLEAN_BINARY_OPERATORS,"|>"];exports.BINARY_OPERATORS=BINARY_OPERATORS;const ASSIGNMENT_OPERATORS=["=","+=",...NUMBER_BINARY_OPERATORS.map((op=>op+"=")),...LOGICAL_OPERATORS.map((op=>op+"="))];exports.ASSIGNMENT_OPERATORS=ASSIGNMENT_OPERATORS;const BOOLEAN_UNARY_OPERATORS=["delete","!"];exports.BOOLEAN_UNARY_OPERATORS=BOOLEAN_UNARY_OPERATORS;const NUMBER_UNARY_OPERATORS=["+","-","~"];exports.NUMBER_UNARY_OPERATORS=NUMBER_UNARY_OPERATORS;const STRING_UNARY_OPERATORS=["typeof"];exports.STRING_UNARY_OPERATORS=STRING_UNARY_OPERATORS;const UNARY_OPERATORS=["void","throw",...BOOLEAN_UNARY_OPERATORS,...NUMBER_UNARY_OPERATORS,...STRING_UNARY_OPERATORS];exports.UNARY_OPERATORS=UNARY_OPERATORS;exports.INHERIT_KEYS={optional:["typeAnnotation","typeParameters","returnType"],force:["start","loc","end"]};const BLOCK_SCOPED_SYMBOL=Symbol.for("var used to be block scoped");exports.BLOCK_SCOPED_SYMBOL=BLOCK_SCOPED_SYMBOL;const NOT_LOCAL_BINDING=Symbol.for("should not be considered a local binding");exports.NOT_LOCAL_BINDING=NOT_LOCAL_BINDING},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/ensureBlock.js":(__unused_webpack_module,exports,__nested_webpack_require_1362085__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,key="body"){const result=(0,_toBlock.default)(node[key],node);return node[key]=result,result};var _toBlock=__nested_webpack_require_1362085__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toBlock.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js":(__unused_webpack_module,exports,__nested_webpack_require_1362576__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function gatherSequenceExpressions(nodes,scope,declars){const exprs=[];let ensureLastUndefined=!0;for(const node of nodes)if((0,_generated.isEmptyStatement)(node)||(ensureLastUndefined=!1),(0,_generated.isExpression)(node))exprs.push(node);else if((0,_generated.isExpressionStatement)(node))exprs.push(node.expression);else if((0,_generated.isVariableDeclaration)(node)){if("var"!==node.kind)return;for(const declar of node.declarations){const bindings=(0,_getBindingIdentifiers.default)(declar);for(const key of Object.keys(bindings))declars.push({kind:node.kind,id:(0,_cloneNode.default)(bindings[key])});declar.init&&exprs.push((0,_generated2.assignmentExpression)("=",declar.id,declar.init))}ensureLastUndefined=!0}else if((0,_generated.isIfStatement)(node)){const consequent=node.consequent?gatherSequenceExpressions([node.consequent],scope,declars):scope.buildUndefinedNode(),alternate=node.alternate?gatherSequenceExpressions([node.alternate],scope,declars):scope.buildUndefinedNode();if(!consequent||!alternate)return;exprs.push((0,_generated2.conditionalExpression)(node.test,consequent,alternate))}else if((0,_generated.isBlockStatement)(node)){const body=gatherSequenceExpressions(node.body,scope,declars);if(!body)return;exprs.push(body)}else{if(!(0,_generated.isEmptyStatement)(node))return;0===nodes.indexOf(node)&&(ensureLastUndefined=!0)}ensureLastUndefined&&exprs.push(scope.buildUndefinedNode());return 1===exprs.length?exprs[0]:(0,_generated2.sequenceExpression)(exprs)};var _getBindingIdentifiers=__nested_webpack_require_1362576__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js"),_generated=__nested_webpack_require_1362576__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_generated2=__nested_webpack_require_1362576__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_cloneNode=__nested_webpack_require_1362576__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js":(__unused_webpack_module,exports,__nested_webpack_require_1364868__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(name){"eval"!==(name=(0,_toIdentifier.default)(name))&&"arguments"!==name||(name="_"+name);return name};var _toIdentifier=__nested_webpack_require_1364868__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toIdentifier.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toBlock.js":(__unused_webpack_module,exports,__nested_webpack_require_1365356__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,parent){if((0,_generated.isBlockStatement)(node))return node;let blockNodes=[];(0,_generated.isEmptyStatement)(node)?blockNodes=[]:((0,_generated.isStatement)(node)||(node=(0,_generated.isFunction)(parent)?(0,_generated2.returnStatement)(node):(0,_generated2.expressionStatement)(node)),blockNodes=[node]);return(0,_generated2.blockStatement)(blockNodes)};var _generated=__nested_webpack_require_1365356__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_generated2=__nested_webpack_require_1365356__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toComputedKey.js":(__unused_webpack_module,exports,__nested_webpack_require_1366241__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,key=node.key||node.property){!node.computed&&(0,_generated.isIdentifier)(key)&&(key=(0,_generated2.stringLiteral)(key.name));return key};var _generated=__nested_webpack_require_1366241__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_generated2=__nested_webpack_require_1366241__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toExpression.js":(__unused_webpack_module,exports,__nested_webpack_require_1366906__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _generated=__nested_webpack_require_1366906__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_default=function(node){(0,_generated.isExpressionStatement)(node)&&(node=node.expression);if((0,_generated.isExpression)(node))return node;(0,_generated.isClass)(node)?node.type="ClassExpression":(0,_generated.isFunction)(node)&&(node.type="FunctionExpression");if(!(0,_generated.isExpression)(node))throw new Error(`cannot turn ${node.type} to an expression`);return node};exports.default=_default},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toIdentifier.js":(__unused_webpack_module,exports,__nested_webpack_require_1367693__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(input){input+="";let name="";for(const c of input)name+=(0,_helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0))?c:"-";name=name.replace(/^[-0-9]+/,""),name=name.replace(/[-\s]+(.)?/g,(function(match,c){return c?c.toUpperCase():""})),(0,_isValidIdentifier.default)(name)||(name=`_${name}`);return name||"_"};var _isValidIdentifier=__nested_webpack_require_1367693__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidIdentifier.js"),_helperValidatorIdentifier=__nested_webpack_require_1367693__("./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toKeyAlias.js":(__unused_webpack_module,exports,__nested_webpack_require_1368581__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=toKeyAlias;var _generated=__nested_webpack_require_1368581__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_cloneNode=__nested_webpack_require_1368581__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js"),_removePropertiesDeep=__nested_webpack_require_1368581__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js");function toKeyAlias(node,key=node.key){let alias;return"method"===node.kind?toKeyAlias.increment()+"":(alias=(0,_generated.isIdentifier)(key)?key.name:(0,_generated.isStringLiteral)(key)?JSON.stringify(key.value):JSON.stringify((0,_removePropertiesDeep.default)((0,_cloneNode.default)(key))),node.computed&&(alias=`[${alias}]`),node.static&&(alias=`static:${alias}`),alias)}toKeyAlias.uid=0,toKeyAlias.increment=function(){return toKeyAlias.uid>=Number.MAX_SAFE_INTEGER?toKeyAlias.uid=0:toKeyAlias.uid++}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toSequenceExpression.js":(__unused_webpack_module,exports,__nested_webpack_require_1369763__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(nodes,scope){if(null==nodes||!nodes.length)return;const declars=[],result=(0,_gatherSequenceExpressions.default)(nodes,scope,declars);if(!result)return;for(const declar of declars)scope.push(declar);return result};var _gatherSequenceExpressions=__nested_webpack_require_1369763__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toStatement.js":(__unused_webpack_module,exports,__nested_webpack_require_1370391__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _generated=__nested_webpack_require_1370391__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_generated2=__nested_webpack_require_1370391__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_default=function(node,ignore){if((0,_generated.isStatement)(node))return node;let newType,mustHaveId=!1;if((0,_generated.isClass)(node))mustHaveId=!0,newType="ClassDeclaration";else if((0,_generated.isFunction)(node))mustHaveId=!0,newType="FunctionDeclaration";else if((0,_generated.isAssignmentExpression)(node))return(0,_generated2.expressionStatement)(node);mustHaveId&&!node.id&&(newType=!1);if(!newType){if(ignore)return!1;throw new Error(`cannot turn ${node.type} to a statement`)}return node.type=newType,node};exports.default=_default},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/valueToNode.js":(__unused_webpack_module,exports,__nested_webpack_require_1371455__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _isValidIdentifier=__nested_webpack_require_1371455__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidIdentifier.js"),_generated=__nested_webpack_require_1371455__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_default=function valueToNode(value){if(void 0===value)return(0,_generated.identifier)("undefined");if(!0===value||!1===value)return(0,_generated.booleanLiteral)(value);if(null===value)return(0,_generated.nullLiteral)();if("string"==typeof value)return(0,_generated.stringLiteral)(value);if("number"==typeof value){let result;if(Number.isFinite(value))result=(0,_generated.numericLiteral)(Math.abs(value));else{let numerator;numerator=Number.isNaN(value)?(0,_generated.numericLiteral)(0):(0,_generated.numericLiteral)(1),result=(0,_generated.binaryExpression)("/",numerator,(0,_generated.numericLiteral)(0))}return(value<0||Object.is(value,-0))&&(result=(0,_generated.unaryExpression)("-",result)),result}if(function(value){return"[object RegExp]"===objectToString(value)}(value)){const pattern=value.source,flags=value.toString().match(/\/([a-z]+|)$/)[1];return(0,_generated.regExpLiteral)(pattern,flags)}if(Array.isArray(value))return(0,_generated.arrayExpression)(value.map(valueToNode));if(function(value){if("object"!=typeof value||null===value||"[object Object]"!==Object.prototype.toString.call(value))return!1;const proto=Object.getPrototypeOf(value);return null===proto||null===Object.getPrototypeOf(proto)}(value)){const props=[];for(const key of Object.keys(value)){let nodeKey;nodeKey=(0,_isValidIdentifier.default)(key)?(0,_generated.identifier)(key):(0,_generated.stringLiteral)(key),props.push((0,_generated.objectProperty)(nodeKey,valueToNode(value[key])))}return(0,_generated.objectExpression)(props)}throw new Error("don't know how to turn this value into a node")};exports.default=_default;const objectToString=Function.call.bind(Object.prototype.toString)},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/core.js":(__unused_webpack_module,exports,__nested_webpack_require_1373654__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.patternLikeCommon=exports.functionTypeAnnotationCommon=exports.functionDeclarationCommon=exports.functionCommon=exports.classMethodOrPropertyCommon=exports.classMethodOrDeclareMethodCommon=void 0;var _is=__nested_webpack_require_1373654__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/is.js"),_isValidIdentifier=__nested_webpack_require_1373654__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidIdentifier.js"),_helperValidatorIdentifier=__nested_webpack_require_1373654__("./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/index.js"),_helperStringParser=__nested_webpack_require_1373654__("./node_modules/.pnpm/@babel+helper-string-parser@7.22.5/node_modules/@babel/helper-string-parser/lib/index.js"),_constants=__nested_webpack_require_1373654__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js"),_utils=__nested_webpack_require_1373654__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js");const defineType=(0,_utils.defineAliasedType)("Standardized");defineType("ArrayExpression",{fields:{elements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeOrValueType)("null","Expression","SpreadElement"))),default:process.env.BABEL_TYPES_8_BREAKING?void 0:[]}},visitor:["elements"],aliases:["Expression"]}),defineType("AssignmentExpression",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,_utils.assertValueType)("string");const identifier=(0,_utils.assertOneOf)(..._constants.ASSIGNMENT_OPERATORS),pattern=(0,_utils.assertOneOf)("=");return function(node,key,val){((0,_is.default)("Pattern",node.left)?pattern:identifier)(node,key,val)}}()},left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,_utils.assertNodeType)("Identifier","MemberExpression","ArrayPattern","ObjectPattern","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","TSNonNullExpression"):(0,_utils.assertNodeType)("LVal")},right:{validate:(0,_utils.assertNodeType)("Expression")}},builder:["operator","left","right"],visitor:["left","right"],aliases:["Expression"]}),defineType("BinaryExpression",{builder:["operator","left","right"],fields:{operator:{validate:(0,_utils.assertOneOf)(..._constants.BINARY_OPERATORS)},left:{validate:function(){const expression=(0,_utils.assertNodeType)("Expression"),inOp=(0,_utils.assertNodeType)("Expression","PrivateName");return Object.assign((function(node,key,val){("in"===node.operator?inOp:expression)(node,key,val)}),{oneOfNodeTypes:["Expression","PrivateName"]})}()},right:{validate:(0,_utils.assertNodeType)("Expression")}},visitor:["left","right"],aliases:["Binary","Expression"]}),defineType("InterpreterDirective",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}}}),defineType("Directive",{visitor:["value"],fields:{value:{validate:(0,_utils.assertNodeType)("DirectiveLiteral")}}}),defineType("DirectiveLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}}}),defineType("BlockStatement",{builder:["body","directives"],visitor:["directives","body"],fields:{directives:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Directive"))),default:[]},body:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Statement")))}},aliases:["Scopable","BlockParent","Block","Statement"]}),defineType("BreakStatement",{visitor:["label"],fields:{label:{validate:(0,_utils.assertNodeType)("Identifier"),optional:!0}},aliases:["Statement","Terminatorless","CompletionStatement"]}),defineType("CallExpression",{visitor:["callee","arguments","typeParameters","typeArguments"],builder:["callee","arguments"],aliases:["Expression"],fields:Object.assign({callee:{validate:(0,_utils.assertNodeType)("Expression","Super","V8IntrinsicIdentifier")},arguments:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression","SpreadElement","JSXNamespacedName","ArgumentPlaceholder")))}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,_utils.assertOneOf)(!0,!1),optional:!0}},{typeArguments:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation"),optional:!0},typeParameters:{validate:(0,_utils.assertNodeType)("TSTypeParameterInstantiation"),optional:!0}})}),defineType("CatchClause",{visitor:["param","body"],fields:{param:{validate:(0,_utils.assertNodeType)("Identifier","ArrayPattern","ObjectPattern"),optional:!0},body:{validate:(0,_utils.assertNodeType)("BlockStatement")}},aliases:["Scopable","BlockParent"]}),defineType("ConditionalExpression",{visitor:["test","consequent","alternate"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},consequent:{validate:(0,_utils.assertNodeType)("Expression")},alternate:{validate:(0,_utils.assertNodeType)("Expression")}},aliases:["Expression","Conditional"]}),defineType("ContinueStatement",{visitor:["label"],fields:{label:{validate:(0,_utils.assertNodeType)("Identifier"),optional:!0}},aliases:["Statement","Terminatorless","CompletionStatement"]}),defineType("DebuggerStatement",{aliases:["Statement"]}),defineType("DoWhileStatement",{visitor:["test","body"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("Statement")}},aliases:["Statement","BlockParent","Loop","While","Scopable"]}),defineType("EmptyStatement",{aliases:["Statement"]}),defineType("ExpressionStatement",{visitor:["expression"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}},aliases:["Statement","ExpressionWrapper"]}),defineType("File",{builder:["program","comments","tokens"],visitor:["program"],fields:{program:{validate:(0,_utils.assertNodeType)("Program")},comments:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,_utils.assertEach)((0,_utils.assertNodeType)("CommentBlock","CommentLine")):Object.assign((()=>{}),{each:{oneOfNodeTypes:["CommentBlock","CommentLine"]}}),optional:!0},tokens:{validate:(0,_utils.assertEach)(Object.assign((()=>{}),{type:"any"})),optional:!0}}}),defineType("ForInStatement",{visitor:["left","right","body"],aliases:["Scopable","Statement","For","BlockParent","Loop","ForXStatement"],fields:{left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,_utils.assertNodeType)("VariableDeclaration","Identifier","MemberExpression","ArrayPattern","ObjectPattern","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","TSNonNullExpression"):(0,_utils.assertNodeType)("VariableDeclaration","LVal")},right:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("Statement")}}}),defineType("ForStatement",{visitor:["init","test","update","body"],aliases:["Scopable","Statement","For","BlockParent","Loop"],fields:{init:{validate:(0,_utils.assertNodeType)("VariableDeclaration","Expression"),optional:!0},test:{validate:(0,_utils.assertNodeType)("Expression"),optional:!0},update:{validate:(0,_utils.assertNodeType)("Expression"),optional:!0},body:{validate:(0,_utils.assertNodeType)("Statement")}}});const functionCommon=()=>({params:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Identifier","Pattern","RestElement")))},generator:{default:!1},async:{default:!1}});exports.functionCommon=functionCommon;const functionTypeAnnotationCommon=()=>({returnType:{validate:(0,_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterDeclaration","TSTypeParameterDeclaration","Noop"),optional:!0}});exports.functionTypeAnnotationCommon=functionTypeAnnotationCommon;const functionDeclarationCommon=()=>Object.assign({},functionCommon(),{declare:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},id:{validate:(0,_utils.assertNodeType)("Identifier"),optional:!0}});exports.functionDeclarationCommon=functionDeclarationCommon,defineType("FunctionDeclaration",{builder:["id","params","body","generator","async"],visitor:["id","params","body","returnType","typeParameters"],fields:Object.assign({},functionDeclarationCommon(),functionTypeAnnotationCommon(),{body:{validate:(0,_utils.assertNodeType)("BlockStatement")},predicate:{validate:(0,_utils.assertNodeType)("DeclaredPredicate","InferredPredicate"),optional:!0}}),aliases:["Scopable","Function","BlockParent","FunctionParent","Statement","Pureish","Declaration"],validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return()=>{};const identifier=(0,_utils.assertNodeType)("Identifier");return function(parent,key,node){(0,_is.default)("ExportDefaultDeclaration",parent)||identifier(node,"id",node.id)}}()}),defineType("FunctionExpression",{inherits:"FunctionDeclaration",aliases:["Scopable","Function","BlockParent","FunctionParent","Expression","Pureish"],fields:Object.assign({},functionCommon(),functionTypeAnnotationCommon(),{id:{validate:(0,_utils.assertNodeType)("Identifier"),optional:!0},body:{validate:(0,_utils.assertNodeType)("BlockStatement")},predicate:{validate:(0,_utils.assertNodeType)("DeclaredPredicate","InferredPredicate"),optional:!0}})});const patternLikeCommon=()=>({typeAnnotation:{validate:(0,_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},optional:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0}});exports.patternLikeCommon=patternLikeCommon,defineType("Identifier",{builder:["name"],visitor:["typeAnnotation","decorators"],aliases:["Expression","PatternLike","LVal","TSEntityName"],fields:Object.assign({},patternLikeCommon(),{name:{validate:(0,_utils.chain)((0,_utils.assertValueType)("string"),Object.assign((function(node,key,val){if(process.env.BABEL_TYPES_8_BREAKING&&!(0,_isValidIdentifier.default)(val,!1))throw new TypeError(`"${val}" is not a valid identifier name`)}),{type:"string"}))}}),validate(parent,key,node){if(!process.env.BABEL_TYPES_8_BREAKING)return;const match=/\.(\w+)$/.exec(key);if(!match)return;const[,parentKey]=match,nonComp={computed:!1};if("property"===parentKey){if((0,_is.default)("MemberExpression",parent,nonComp))return;if((0,_is.default)("OptionalMemberExpression",parent,nonComp))return}else if("key"===parentKey){if((0,_is.default)("Property",parent,nonComp))return;if((0,_is.default)("Method",parent,nonComp))return}else if("exported"===parentKey){if((0,_is.default)("ExportSpecifier",parent))return}else if("imported"===parentKey){if((0,_is.default)("ImportSpecifier",parent,{imported:node}))return}else if("meta"===parentKey&&(0,_is.default)("MetaProperty",parent,{meta:node}))return;if(((0,_helperValidatorIdentifier.isKeyword)(node.name)||(0,_helperValidatorIdentifier.isReservedWord)(node.name,!1))&&"this"!==node.name)throw new TypeError(`"${node.name}" is not a valid identifier`)}}),defineType("IfStatement",{visitor:["test","consequent","alternate"],aliases:["Statement","Conditional"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},consequent:{validate:(0,_utils.assertNodeType)("Statement")},alternate:{optional:!0,validate:(0,_utils.assertNodeType)("Statement")}}}),defineType("LabeledStatement",{visitor:["label","body"],aliases:["Statement"],fields:{label:{validate:(0,_utils.assertNodeType)("Identifier")},body:{validate:(0,_utils.assertNodeType)("Statement")}}}),defineType("StringLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}},aliases:["Expression","Pureish","Literal","Immutable"]}),defineType("NumericLiteral",{builder:["value"],deprecatedAlias:"NumberLiteral",fields:{value:{validate:(0,_utils.assertValueType)("number")}},aliases:["Expression","Pureish","Literal","Immutable"]}),defineType("NullLiteral",{aliases:["Expression","Pureish","Literal","Immutable"]}),defineType("BooleanLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("boolean")}},aliases:["Expression","Pureish","Literal","Immutable"]}),defineType("RegExpLiteral",{builder:["pattern","flags"],deprecatedAlias:"RegexLiteral",aliases:["Expression","Pureish","Literal"],fields:{pattern:{validate:(0,_utils.assertValueType)("string")},flags:{validate:(0,_utils.chain)((0,_utils.assertValueType)("string"),Object.assign((function(node,key,val){if(!process.env.BABEL_TYPES_8_BREAKING)return;const invalid=/[^gimsuy]/.exec(val);if(invalid)throw new TypeError(`"${invalid[0]}" is not a valid RegExp flag`)}),{type:"string"})),default:""}}}),defineType("LogicalExpression",{builder:["operator","left","right"],visitor:["left","right"],aliases:["Binary","Expression"],fields:{operator:{validate:(0,_utils.assertOneOf)(..._constants.LOGICAL_OPERATORS)},left:{validate:(0,_utils.assertNodeType)("Expression")},right:{validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("MemberExpression",{builder:["object","property","computed",...process.env.BABEL_TYPES_8_BREAKING?[]:["optional"]],visitor:["object","property"],aliases:["Expression","LVal"],fields:Object.assign({object:{validate:(0,_utils.assertNodeType)("Expression","Super")},property:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier","PrivateName"),computed=(0,_utils.assertNodeType)("Expression"),validator=function(node,key,val){(node.computed?computed:normal)(node,key,val)};return validator.oneOfNodeTypes=["Expression","Identifier","PrivateName"],validator}()},computed:{default:!1}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,_utils.assertOneOf)(!0,!1),optional:!0}})}),defineType("NewExpression",{inherits:"CallExpression"}),defineType("Program",{visitor:["directives","body"],builder:["body","directives","sourceType","interpreter"],fields:{sourceFile:{validate:(0,_utils.assertValueType)("string")},sourceType:{validate:(0,_utils.assertOneOf)("script","module"),default:"script"},interpreter:{validate:(0,_utils.assertNodeType)("InterpreterDirective"),default:null,optional:!0},directives:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Directive"))),default:[]},body:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Statement")))}},aliases:["Scopable","BlockParent","Block"]}),defineType("ObjectExpression",{visitor:["properties"],aliases:["Expression"],fields:{properties:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ObjectMethod","ObjectProperty","SpreadElement")))}}}),defineType("ObjectMethod",{builder:["kind","key","params","body","computed","generator","async"],fields:Object.assign({},functionCommon(),functionTypeAnnotationCommon(),{kind:Object.assign({validate:(0,_utils.assertOneOf)("method","get","set")},process.env.BABEL_TYPES_8_BREAKING?{}:{default:"method"}),computed:{default:!1},key:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral","BigIntLiteral"),computed=(0,_utils.assertNodeType)("Expression"),validator=function(node,key,val){(node.computed?computed:normal)(node,key,val)};return validator.oneOfNodeTypes=["Expression","Identifier","StringLiteral","NumericLiteral","BigIntLiteral"],validator}()},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0},body:{validate:(0,_utils.assertNodeType)("BlockStatement")}}),visitor:["key","params","body","decorators","returnType","typeParameters"],aliases:["UserWhitespacable","Function","Scopable","BlockParent","FunctionParent","Method","ObjectMember"]}),defineType("ObjectProperty",{builder:["key","value","computed","shorthand",...process.env.BABEL_TYPES_8_BREAKING?[]:["decorators"]],fields:{computed:{default:!1},key:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral","BigIntLiteral","DecimalLiteral","PrivateName"),computed=(0,_utils.assertNodeType)("Expression");return Object.assign((function(node,key,val){(node.computed?computed:normal)(node,key,val)}),{oneOfNodeTypes:["Expression","Identifier","StringLiteral","NumericLiteral","BigIntLiteral","DecimalLiteral","PrivateName"]})}()},value:{validate:(0,_utils.assertNodeType)("Expression","PatternLike")},shorthand:{validate:(0,_utils.chain)((0,_utils.assertValueType)("boolean"),Object.assign((function(node,key,val){if(process.env.BABEL_TYPES_8_BREAKING&&val&&node.computed)throw new TypeError("Property shorthand of ObjectProperty cannot be true if computed is true")}),{type:"boolean"}),(function(node,key,val){if(process.env.BABEL_TYPES_8_BREAKING&&val&&!(0,_is.default)("Identifier",node.key))throw new TypeError("Property shorthand of ObjectProperty cannot be true if key is not an Identifier")})),default:!1},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0}},visitor:["key","value","decorators"],aliases:["UserWhitespacable","Property","ObjectMember"],validate:function(){const pattern=(0,_utils.assertNodeType)("Identifier","Pattern","TSAsExpression","TSSatisfiesExpression","TSNonNullExpression","TSTypeAssertion"),expression=(0,_utils.assertNodeType)("Expression");return function(parent,key,node){if(!process.env.BABEL_TYPES_8_BREAKING)return;((0,_is.default)("ObjectPattern",parent)?pattern:expression)(node,"value",node.value)}}()}),defineType("RestElement",{visitor:["argument","typeAnnotation"],builder:["argument"],aliases:["LVal","PatternLike"],deprecatedAlias:"RestProperty",fields:Object.assign({},patternLikeCommon(),{argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,_utils.assertNodeType)("Identifier","ArrayPattern","ObjectPattern","MemberExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","TSNonNullExpression"):(0,_utils.assertNodeType)("LVal")}}),validate(parent,key){if(!process.env.BABEL_TYPES_8_BREAKING)return;const match=/(\w+)\[(\d+)\]/.exec(key);if(!match)throw new Error("Internal Babel error: malformed key.");const[,listKey,index]=match;if(parent[listKey].length>+index+1)throw new TypeError(`RestElement must be last element of ${listKey}`)}}),defineType("ReturnStatement",{visitor:["argument"],aliases:["Statement","Terminatorless","CompletionStatement"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression"),optional:!0}}}),defineType("SequenceExpression",{visitor:["expressions"],fields:{expressions:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression")))}},aliases:["Expression"]}),defineType("ParenthesizedExpression",{visitor:["expression"],aliases:["Expression","ExpressionWrapper"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("SwitchCase",{visitor:["test","consequent"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression"),optional:!0},consequent:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Statement")))}}}),defineType("SwitchStatement",{visitor:["discriminant","cases"],aliases:["Statement","BlockParent","Scopable"],fields:{discriminant:{validate:(0,_utils.assertNodeType)("Expression")},cases:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("SwitchCase")))}}}),defineType("ThisExpression",{aliases:["Expression"]}),defineType("ThrowStatement",{visitor:["argument"],aliases:["Statement","Terminatorless","CompletionStatement"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("TryStatement",{visitor:["block","handler","finalizer"],aliases:["Statement"],fields:{block:{validate:(0,_utils.chain)((0,_utils.assertNodeType)("BlockStatement"),Object.assign((function(node){if(process.env.BABEL_TYPES_8_BREAKING&&!node.handler&&!node.finalizer)throw new TypeError("TryStatement expects either a handler or finalizer, or both")}),{oneOfNodeTypes:["BlockStatement"]}))},handler:{optional:!0,validate:(0,_utils.assertNodeType)("CatchClause")},finalizer:{optional:!0,validate:(0,_utils.assertNodeType)("BlockStatement")}}}),defineType("UnaryExpression",{builder:["operator","argument","prefix"],fields:{prefix:{default:!0},argument:{validate:(0,_utils.assertNodeType)("Expression")},operator:{validate:(0,_utils.assertOneOf)(..._constants.UNARY_OPERATORS)}},visitor:["argument"],aliases:["UnaryLike","Expression"]}),defineType("UpdateExpression",{builder:["operator","argument","prefix"],fields:{prefix:{default:!1},argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,_utils.assertNodeType)("Identifier","MemberExpression"):(0,_utils.assertNodeType)("Expression")},operator:{validate:(0,_utils.assertOneOf)(..._constants.UPDATE_OPERATORS)}},visitor:["argument"],aliases:["Expression"]}),defineType("VariableDeclaration",{builder:["kind","declarations"],visitor:["declarations"],aliases:["Statement","Declaration"],fields:{declare:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},kind:{validate:(0,_utils.assertOneOf)("var","let","const","using","await using")},declarations:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("VariableDeclarator")))}},validate(parent,key,node){if(process.env.BABEL_TYPES_8_BREAKING&&(0,_is.default)("ForXStatement",parent,{left:node})&&1!==node.declarations.length)throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`)}}),defineType("VariableDeclarator",{visitor:["id","init"],fields:{id:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,_utils.assertNodeType)("LVal");const normal=(0,_utils.assertNodeType)("Identifier","ArrayPattern","ObjectPattern"),without=(0,_utils.assertNodeType)("Identifier");return function(node,key,val){(node.init?normal:without)(node,key,val)}}()},definite:{optional:!0,validate:(0,_utils.assertValueType)("boolean")},init:{optional:!0,validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("WhileStatement",{visitor:["test","body"],aliases:["Statement","BlockParent","Loop","While","Scopable"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("Statement")}}}),defineType("WithStatement",{visitor:["object","body"],aliases:["Statement"],fields:{object:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("Statement")}}}),defineType("AssignmentPattern",{visitor:["left","right","decorators"],builder:["left","right"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},patternLikeCommon(),{left:{validate:(0,_utils.assertNodeType)("Identifier","ObjectPattern","ArrayPattern","MemberExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","TSNonNullExpression")},right:{validate:(0,_utils.assertNodeType)("Expression")},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0}})}),defineType("ArrayPattern",{visitor:["elements","typeAnnotation"],builder:["elements"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},patternLikeCommon(),{elements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeOrValueType)("null","PatternLike","LVal")))}})}),defineType("ArrowFunctionExpression",{builder:["params","body","async"],visitor:["params","body","returnType","typeParameters"],aliases:["Scopable","Function","BlockParent","FunctionParent","Expression","Pureish"],fields:Object.assign({},functionCommon(),functionTypeAnnotationCommon(),{expression:{validate:(0,_utils.assertValueType)("boolean")},body:{validate:(0,_utils.assertNodeType)("BlockStatement","Expression")},predicate:{validate:(0,_utils.assertNodeType)("DeclaredPredicate","InferredPredicate"),optional:!0}})}),defineType("ClassBody",{visitor:["body"],fields:{body:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ClassMethod","ClassPrivateMethod","ClassProperty","ClassPrivateProperty","ClassAccessorProperty","TSDeclareMethod","TSIndexSignature","StaticBlock")))}}}),defineType("ClassExpression",{builder:["id","superClass","body","decorators"],visitor:["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],aliases:["Scopable","Class","Expression"],fields:{id:{validate:(0,_utils.assertNodeType)("Identifier"),optional:!0},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterDeclaration","TSTypeParameterDeclaration","Noop"),optional:!0},body:{validate:(0,_utils.assertNodeType)("ClassBody")},superClass:{optional:!0,validate:(0,_utils.assertNodeType)("Expression")},superTypeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:!0},implements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("TSExpressionWithTypeArguments","ClassImplements"))),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0},mixins:{validate:(0,_utils.assertNodeType)("InterfaceExtends"),optional:!0}}}),defineType("ClassDeclaration",{inherits:"ClassExpression",aliases:["Scopable","Class","Statement","Declaration"],fields:{id:{validate:(0,_utils.assertNodeType)("Identifier")},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterDeclaration","TSTypeParameterDeclaration","Noop"),optional:!0},body:{validate:(0,_utils.assertNodeType)("ClassBody")},superClass:{optional:!0,validate:(0,_utils.assertNodeType)("Expression")},superTypeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:!0},implements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("TSExpressionWithTypeArguments","ClassImplements"))),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0},mixins:{validate:(0,_utils.assertNodeType)("InterfaceExtends"),optional:!0},declare:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},abstract:{validate:(0,_utils.assertValueType)("boolean"),optional:!0}},validate:function(){const identifier=(0,_utils.assertNodeType)("Identifier");return function(parent,key,node){process.env.BABEL_TYPES_8_BREAKING&&((0,_is.default)("ExportDefaultDeclaration",parent)||identifier(node,"id",node.id))}}()}),defineType("ExportAllDeclaration",{builder:["source"],visitor:["source","attributes","assertions"],aliases:["Statement","Declaration","ImportOrExportDeclaration","ExportDeclaration"],fields:{source:{validate:(0,_utils.assertNodeType)("StringLiteral")},exportKind:(0,_utils.validateOptional)((0,_utils.assertOneOf)("type","value")),attributes:{optional:!0,validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportAttribute")))},assertions:{optional:!0,validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportAttribute")))}}}),defineType("ExportDefaultDeclaration",{visitor:["declaration"],aliases:["Statement","Declaration","ImportOrExportDeclaration","ExportDeclaration"],fields:{declaration:{validate:(0,_utils.assertNodeType)("TSDeclareFunction","FunctionDeclaration","ClassDeclaration","Expression")},exportKind:(0,_utils.validateOptional)((0,_utils.assertOneOf)("value"))}}),defineType("ExportNamedDeclaration",{builder:["declaration","specifiers","source"],visitor:["declaration","specifiers","source","attributes","assertions"],aliases:["Statement","Declaration","ImportOrExportDeclaration","ExportDeclaration"],fields:{declaration:{optional:!0,validate:(0,_utils.chain)((0,_utils.assertNodeType)("Declaration"),Object.assign((function(node,key,val){if(process.env.BABEL_TYPES_8_BREAKING&&val&&node.specifiers.length)throw new TypeError("Only declaration or specifiers is allowed on ExportNamedDeclaration")}),{oneOfNodeTypes:["Declaration"]}),(function(node,key,val){if(process.env.BABEL_TYPES_8_BREAKING&&val&&node.source)throw new TypeError("Cannot export a declaration from a source")}))},attributes:{optional:!0,validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportAttribute")))},assertions:{optional:!0,validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportAttribute")))},specifiers:{default:[],validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)(function(){const sourced=(0,_utils.assertNodeType)("ExportSpecifier","ExportDefaultSpecifier","ExportNamespaceSpecifier"),sourceless=(0,_utils.assertNodeType)("ExportSpecifier");return process.env.BABEL_TYPES_8_BREAKING?function(node,key,val){(node.source?sourced:sourceless)(node,key,val)}:sourced}()))},source:{validate:(0,_utils.assertNodeType)("StringLiteral"),optional:!0},exportKind:(0,_utils.validateOptional)((0,_utils.assertOneOf)("type","value"))}}),defineType("ExportSpecifier",{visitor:["local","exported"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")},exported:{validate:(0,_utils.assertNodeType)("Identifier","StringLiteral")},exportKind:{validate:(0,_utils.assertOneOf)("type","value"),optional:!0}}}),defineType("ForOfStatement",{visitor:["left","right","body"],builder:["left","right","body","await"],aliases:["Scopable","Statement","For","BlockParent","Loop","ForXStatement"],fields:{left:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,_utils.assertNodeType)("VariableDeclaration","LVal");const declaration=(0,_utils.assertNodeType)("VariableDeclaration"),lval=(0,_utils.assertNodeType)("Identifier","MemberExpression","ArrayPattern","ObjectPattern","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","TSNonNullExpression");return function(node,key,val){(0,_is.default)("VariableDeclaration",val)?declaration(node,key,val):lval(node,key,val)}}()},right:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("Statement")},await:{default:!1}}}),defineType("ImportDeclaration",{builder:["specifiers","source"],visitor:["specifiers","source","attributes","assertions"],aliases:["Statement","Declaration","ImportOrExportDeclaration"],fields:{attributes:{optional:!0,validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportAttribute")))},assertions:{optional:!0,validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportAttribute")))},module:{optional:!0,validate:(0,_utils.assertValueType)("boolean")},specifiers:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier")))},source:{validate:(0,_utils.assertNodeType)("StringLiteral")},importKind:{validate:(0,_utils.assertOneOf)("type","typeof","value"),optional:!0}}}),defineType("ImportDefaultSpecifier",{visitor:["local"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")}}}),defineType("ImportNamespaceSpecifier",{visitor:["local"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")}}}),defineType("ImportSpecifier",{visitor:["local","imported"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")},imported:{validate:(0,_utils.assertNodeType)("Identifier","StringLiteral")},importKind:{validate:(0,_utils.assertOneOf)("type","typeof","value"),optional:!0}}}),defineType("MetaProperty",{visitor:["meta","property"],aliases:["Expression"],fields:{meta:{validate:(0,_utils.chain)((0,_utils.assertNodeType)("Identifier"),Object.assign((function(node,key,val){if(!process.env.BABEL_TYPES_8_BREAKING)return;let property;switch(val.name){case"function":property="sent";break;case"new":property="target";break;case"import":property="meta"}if(!(0,_is.default)("Identifier",node.property,{name:property}))throw new TypeError("Unrecognised MetaProperty")}),{oneOfNodeTypes:["Identifier"]}))},property:{validate:(0,_utils.assertNodeType)("Identifier")}}});const classMethodOrPropertyCommon=()=>({abstract:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},accessibility:{validate:(0,_utils.assertOneOf)("public","private","protected"),optional:!0},static:{default:!1},override:{default:!1},computed:{default:!1},optional:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},key:{validate:(0,_utils.chain)(function(){const normal=(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral"),computed=(0,_utils.assertNodeType)("Expression");return function(node,key,val){(node.computed?computed:normal)(node,key,val)}}(),(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral","BigIntLiteral","Expression"))}});exports.classMethodOrPropertyCommon=classMethodOrPropertyCommon;const classMethodOrDeclareMethodCommon=()=>Object.assign({},functionCommon(),classMethodOrPropertyCommon(),{params:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Identifier","Pattern","RestElement","TSParameterProperty")))},kind:{validate:(0,_utils.assertOneOf)("get","set","method","constructor"),default:"method"},access:{validate:(0,_utils.chain)((0,_utils.assertValueType)("string"),(0,_utils.assertOneOf)("public","private","protected")),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0}});exports.classMethodOrDeclareMethodCommon=classMethodOrDeclareMethodCommon,defineType("ClassMethod",{aliases:["Function","Scopable","BlockParent","FunctionParent","Method"],builder:["kind","key","params","body","computed","static","generator","async"],visitor:["key","params","body","decorators","returnType","typeParameters"],fields:Object.assign({},classMethodOrDeclareMethodCommon(),functionTypeAnnotationCommon(),{body:{validate:(0,_utils.assertNodeType)("BlockStatement")}})}),defineType("ObjectPattern",{visitor:["properties","typeAnnotation","decorators"],builder:["properties"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},patternLikeCommon(),{properties:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("RestElement","ObjectProperty")))}})}),defineType("SpreadElement",{visitor:["argument"],aliases:["UnaryLike"],deprecatedAlias:"SpreadProperty",fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("Super",{aliases:["Expression"]}),defineType("TaggedTemplateExpression",{visitor:["tag","quasi","typeParameters"],builder:["tag","quasi"],aliases:["Expression"],fields:{tag:{validate:(0,_utils.assertNodeType)("Expression")},quasi:{validate:(0,_utils.assertNodeType)("TemplateLiteral")},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:!0}}}),defineType("TemplateElement",{builder:["value","tail"],fields:{value:{validate:(0,_utils.chain)((0,_utils.assertShape)({raw:{validate:(0,_utils.assertValueType)("string")},cooked:{validate:(0,_utils.assertValueType)("string"),optional:!0}}),(function(node){const raw=node.value.raw;let unterminatedCalled=!1;const error=()=>{throw new Error("Internal @babel/types error.")},{str,firstInvalidLoc}=(0,_helperStringParser.readStringContents)("template",raw,0,0,0,{unterminated(){unterminatedCalled=!0},strictNumericEscape:error,invalidEscapeSequence:error,numericSeparatorInEscapeSequence:error,unexpectedNumericSeparator:error,invalidDigit:error,invalidCodePoint:error});if(!unterminatedCalled)throw new Error("Invalid raw");node.value.cooked=firstInvalidLoc?null:str}))},tail:{default:!1}}}),defineType("TemplateLiteral",{visitor:["quasis","expressions"],aliases:["Expression","Literal"],fields:{quasis:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("TemplateElement")))},expressions:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression","TSType")),(function(node,key,val){if(node.quasis.length!==val.length+1)throw new TypeError(`Number of ${node.type} quasis should be exactly one more than the number of expressions.\nExpected ${val.length+1} quasis but got ${node.quasis.length}`)}))}}}),defineType("YieldExpression",{builder:["argument","delegate"],visitor:["argument"],aliases:["Expression","Terminatorless"],fields:{delegate:{validate:(0,_utils.chain)((0,_utils.assertValueType)("boolean"),Object.assign((function(node,key,val){if(process.env.BABEL_TYPES_8_BREAKING&&val&&!node.argument)throw new TypeError("Property delegate of YieldExpression cannot be true if there is no argument")}),{type:"boolean"})),default:!1},argument:{optional:!0,validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("AwaitExpression",{builder:["argument"],visitor:["argument"],aliases:["Expression","Terminatorless"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("Import",{aliases:["Expression"]}),defineType("BigIntLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}},aliases:["Expression","Pureish","Literal","Immutable"]}),defineType("ExportNamespaceSpecifier",{visitor:["exported"],aliases:["ModuleSpecifier"],fields:{exported:{validate:(0,_utils.assertNodeType)("Identifier")}}}),defineType("OptionalMemberExpression",{builder:["object","property","computed","optional"],visitor:["object","property"],aliases:["Expression"],fields:{object:{validate:(0,_utils.assertNodeType)("Expression")},property:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier"),computed=(0,_utils.assertNodeType)("Expression");return Object.assign((function(node,key,val){(node.computed?computed:normal)(node,key,val)}),{oneOfNodeTypes:["Expression","Identifier"]})}()},computed:{default:!1},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,_utils.chain)((0,_utils.assertValueType)("boolean"),(0,_utils.assertOptionalChainStart)()):(0,_utils.assertValueType)("boolean")}}}),defineType("OptionalCallExpression",{visitor:["callee","arguments","typeParameters","typeArguments"],builder:["callee","arguments","optional"],aliases:["Expression"],fields:{callee:{validate:(0,_utils.assertNodeType)("Expression")},arguments:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression","SpreadElement","JSXNamespacedName","ArgumentPlaceholder")))},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,_utils.chain)((0,_utils.assertValueType)("boolean"),(0,_utils.assertOptionalChainStart)()):(0,_utils.assertValueType)("boolean")},typeArguments:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation"),optional:!0},typeParameters:{validate:(0,_utils.assertNodeType)("TSTypeParameterInstantiation"),optional:!0}}}),defineType("ClassProperty",{visitor:["key","value","typeAnnotation","decorators"],builder:["key","value","typeAnnotation","decorators","computed","static"],aliases:["Property"],fields:Object.assign({},classMethodOrPropertyCommon(),{value:{validate:(0,_utils.assertNodeType)("Expression"),optional:!0},definite:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},typeAnnotation:{validate:(0,_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0},readonly:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},declare:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},variance:{validate:(0,_utils.assertNodeType)("Variance"),optional:!0}})}),defineType("ClassAccessorProperty",{visitor:["key","value","typeAnnotation","decorators"],builder:["key","value","typeAnnotation","decorators","computed","static"],aliases:["Property","Accessor"],fields:Object.assign({},classMethodOrPropertyCommon(),{key:{validate:(0,_utils.chain)(function(){const normal=(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral","BigIntLiteral","PrivateName"),computed=(0,_utils.assertNodeType)("Expression");return function(node,key,val){(node.computed?computed:normal)(node,key,val)}}(),(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral","BigIntLiteral","Expression","PrivateName"))},value:{validate:(0,_utils.assertNodeType)("Expression"),optional:!0},definite:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},typeAnnotation:{validate:(0,_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0},readonly:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},declare:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},variance:{validate:(0,_utils.assertNodeType)("Variance"),optional:!0}})}),defineType("ClassPrivateProperty",{visitor:["key","value","decorators","typeAnnotation"],builder:["key","value","decorators","static"],aliases:["Property","Private"],fields:{key:{validate:(0,_utils.assertNodeType)("PrivateName")},value:{validate:(0,_utils.assertNodeType)("Expression"),optional:!0},typeAnnotation:{validate:(0,_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0},static:{validate:(0,_utils.assertValueType)("boolean"),default:!1},readonly:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},definite:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},variance:{validate:(0,_utils.assertNodeType)("Variance"),optional:!0}}}),defineType("ClassPrivateMethod",{builder:["kind","key","params","body","static"],visitor:["key","params","body","decorators","returnType","typeParameters"],aliases:["Function","Scopable","BlockParent","FunctionParent","Method","Private"],fields:Object.assign({},classMethodOrDeclareMethodCommon(),functionTypeAnnotationCommon(),{kind:{validate:(0,_utils.assertOneOf)("get","set","method"),default:"method"},key:{validate:(0,_utils.assertNodeType)("PrivateName")},body:{validate:(0,_utils.assertNodeType)("BlockStatement")}})}),defineType("PrivateName",{visitor:["id"],aliases:["Private"],fields:{id:{validate:(0,_utils.assertNodeType)("Identifier")}}}),defineType("StaticBlock",{visitor:["body"],fields:{body:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Statement")))}},aliases:["Scopable","BlockParent","FunctionParent"]})},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/deprecated-aliases.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DEPRECATED_ALIASES=void 0;exports.DEPRECATED_ALIASES={ModuleDeclaration:"ImportOrExportDeclaration"}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/experimental.js":(__unused_webpack_module,__unused_webpack_exports,__nested_webpack_require_1417635__)=>{"use strict";var _utils=__nested_webpack_require_1417635__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js");(0,_utils.default)("ArgumentPlaceholder",{}),(0,_utils.default)("BindExpression",{visitor:["object","callee"],aliases:["Expression"],fields:process.env.BABEL_TYPES_8_BREAKING?{object:{validate:(0,_utils.assertNodeType)("Expression")},callee:{validate:(0,_utils.assertNodeType)("Expression")}}:{object:{validate:Object.assign((()=>{}),{oneOfNodeTypes:["Expression"]})},callee:{validate:Object.assign((()=>{}),{oneOfNodeTypes:["Expression"]})}}}),(0,_utils.default)("ImportAttribute",{visitor:["key","value"],fields:{key:{validate:(0,_utils.assertNodeType)("Identifier","StringLiteral")},value:{validate:(0,_utils.assertNodeType)("StringLiteral")}}}),(0,_utils.default)("Decorator",{visitor:["expression"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}}}),(0,_utils.default)("DoExpression",{visitor:["body"],builder:["body","async"],aliases:["Expression"],fields:{body:{validate:(0,_utils.assertNodeType)("BlockStatement")},async:{validate:(0,_utils.assertValueType)("boolean"),default:!1}}}),(0,_utils.default)("ExportDefaultSpecifier",{visitor:["exported"],aliases:["ModuleSpecifier"],fields:{exported:{validate:(0,_utils.assertNodeType)("Identifier")}}}),(0,_utils.default)("RecordExpression",{visitor:["properties"],aliases:["Expression"],fields:{properties:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ObjectProperty","SpreadElement")))}}}),(0,_utils.default)("TupleExpression",{fields:{elements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression","SpreadElement"))),default:[]}},visitor:["elements"],aliases:["Expression"]}),(0,_utils.default)("DecimalLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}},aliases:["Expression","Pureish","Literal","Immutable"]}),(0,_utils.default)("ModuleExpression",{visitor:["body"],fields:{body:{validate:(0,_utils.assertNodeType)("Program")}},aliases:["Expression"]}),(0,_utils.default)("TopicReference",{aliases:["Expression"]}),(0,_utils.default)("PipelineTopicExpression",{builder:["expression"],visitor:["expression"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}},aliases:["Expression"]}),(0,_utils.default)("PipelineBareFunction",{builder:["callee"],visitor:["callee"],fields:{callee:{validate:(0,_utils.assertNodeType)("Expression")}},aliases:["Expression"]}),(0,_utils.default)("PipelinePrimaryTopicReference",{aliases:["Expression"]})},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/flow.js":(__unused_webpack_module,__unused_webpack_exports,__nested_webpack_require_1420450__)=>{"use strict";var _utils=__nested_webpack_require_1420450__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js");const defineType=(0,_utils.defineAliasedType)("Flow"),defineInterfaceishType=name=>{const isDeclareClass="DeclareClass"===name;defineType(name,{builder:["id","typeParameters","extends","body"],visitor:["id","typeParameters","extends",...isDeclareClass?["mixins","implements"]:[],"body"],aliases:["FlowDeclaration","Statement","Declaration"],fields:Object.assign({id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),extends:(0,_utils.validateOptional)((0,_utils.arrayOfType)("InterfaceExtends"))},isDeclareClass?{mixins:(0,_utils.validateOptional)((0,_utils.arrayOfType)("InterfaceExtends")),implements:(0,_utils.validateOptional)((0,_utils.arrayOfType)("ClassImplements"))}:{},{body:(0,_utils.validateType)("ObjectTypeAnnotation")})})};defineType("AnyTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("ArrayTypeAnnotation",{visitor:["elementType"],aliases:["FlowType"],fields:{elementType:(0,_utils.validateType)("FlowType")}}),defineType("BooleanTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("BooleanLiteralTypeAnnotation",{builder:["value"],aliases:["FlowType"],fields:{value:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("NullLiteralTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("ClassImplements",{visitor:["id","typeParameters"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterInstantiation")}}),defineInterfaceishType("DeclareClass"),defineType("DeclareFunction",{visitor:["id"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),predicate:(0,_utils.validateOptionalType)("DeclaredPredicate")}}),defineInterfaceishType("DeclareInterface"),defineType("DeclareModule",{builder:["id","body","kind"],visitor:["id","body"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)(["Identifier","StringLiteral"]),body:(0,_utils.validateType)("BlockStatement"),kind:(0,_utils.validateOptional)((0,_utils.assertOneOf)("CommonJS","ES"))}}),defineType("DeclareModuleExports",{visitor:["typeAnnotation"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{typeAnnotation:(0,_utils.validateType)("TypeAnnotation")}}),defineType("DeclareTypeAlias",{visitor:["id","typeParameters","right"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),right:(0,_utils.validateType)("FlowType")}}),defineType("DeclareOpaqueType",{visitor:["id","typeParameters","supertype"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),supertype:(0,_utils.validateOptionalType)("FlowType"),impltype:(0,_utils.validateOptionalType)("FlowType")}}),defineType("DeclareVariable",{visitor:["id"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier")}}),defineType("DeclareExportDeclaration",{visitor:["declaration","specifiers","source"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{declaration:(0,_utils.validateOptionalType)("Flow"),specifiers:(0,_utils.validateOptional)((0,_utils.arrayOfType)(["ExportSpecifier","ExportNamespaceSpecifier"])),source:(0,_utils.validateOptionalType)("StringLiteral"),default:(0,_utils.validateOptional)((0,_utils.assertValueType)("boolean"))}}),defineType("DeclareExportAllDeclaration",{visitor:["source"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{source:(0,_utils.validateType)("StringLiteral"),exportKind:(0,_utils.validateOptional)((0,_utils.assertOneOf)("type","value"))}}),defineType("DeclaredPredicate",{visitor:["value"],aliases:["FlowPredicate"],fields:{value:(0,_utils.validateType)("Flow")}}),defineType("ExistsTypeAnnotation",{aliases:["FlowType"]}),defineType("FunctionTypeAnnotation",{visitor:["typeParameters","params","rest","returnType"],aliases:["FlowType"],fields:{typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),params:(0,_utils.validate)((0,_utils.arrayOfType)("FunctionTypeParam")),rest:(0,_utils.validateOptionalType)("FunctionTypeParam"),this:(0,_utils.validateOptionalType)("FunctionTypeParam"),returnType:(0,_utils.validateType)("FlowType")}}),defineType("FunctionTypeParam",{visitor:["name","typeAnnotation"],fields:{name:(0,_utils.validateOptionalType)("Identifier"),typeAnnotation:(0,_utils.validateType)("FlowType"),optional:(0,_utils.validateOptional)((0,_utils.assertValueType)("boolean"))}}),defineType("GenericTypeAnnotation",{visitor:["id","typeParameters"],aliases:["FlowType"],fields:{id:(0,_utils.validateType)(["Identifier","QualifiedTypeIdentifier"]),typeParameters:(0,_utils.validateOptionalType)("TypeParameterInstantiation")}}),defineType("InferredPredicate",{aliases:["FlowPredicate"]}),defineType("InterfaceExtends",{visitor:["id","typeParameters"],fields:{id:(0,_utils.validateType)(["Identifier","QualifiedTypeIdentifier"]),typeParameters:(0,_utils.validateOptionalType)("TypeParameterInstantiation")}}),defineInterfaceishType("InterfaceDeclaration"),defineType("InterfaceTypeAnnotation",{visitor:["extends","body"],aliases:["FlowType"],fields:{extends:(0,_utils.validateOptional)((0,_utils.arrayOfType)("InterfaceExtends")),body:(0,_utils.validateType)("ObjectTypeAnnotation")}}),defineType("IntersectionTypeAnnotation",{visitor:["types"],aliases:["FlowType"],fields:{types:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}}),defineType("MixedTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("EmptyTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("NullableTypeAnnotation",{visitor:["typeAnnotation"],aliases:["FlowType"],fields:{typeAnnotation:(0,_utils.validateType)("FlowType")}}),defineType("NumberLiteralTypeAnnotation",{builder:["value"],aliases:["FlowType"],fields:{value:(0,_utils.validate)((0,_utils.assertValueType)("number"))}}),defineType("NumberTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("ObjectTypeAnnotation",{visitor:["properties","indexers","callProperties","internalSlots"],aliases:["FlowType"],builder:["properties","indexers","callProperties","internalSlots","exact"],fields:{properties:(0,_utils.validate)((0,_utils.arrayOfType)(["ObjectTypeProperty","ObjectTypeSpreadProperty"])),indexers:{validate:(0,_utils.arrayOfType)("ObjectTypeIndexer"),optional:!0,default:[]},callProperties:{validate:(0,_utils.arrayOfType)("ObjectTypeCallProperty"),optional:!0,default:[]},internalSlots:{validate:(0,_utils.arrayOfType)("ObjectTypeInternalSlot"),optional:!0,default:[]},exact:{validate:(0,_utils.assertValueType)("boolean"),default:!1},inexact:(0,_utils.validateOptional)((0,_utils.assertValueType)("boolean"))}}),defineType("ObjectTypeInternalSlot",{visitor:["id","value","optional","static","method"],aliases:["UserWhitespacable"],fields:{id:(0,_utils.validateType)("Identifier"),value:(0,_utils.validateType)("FlowType"),optional:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),static:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),method:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("ObjectTypeCallProperty",{visitor:["value"],aliases:["UserWhitespacable"],fields:{value:(0,_utils.validateType)("FlowType"),static:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("ObjectTypeIndexer",{visitor:["id","key","value","variance"],aliases:["UserWhitespacable"],fields:{id:(0,_utils.validateOptionalType)("Identifier"),key:(0,_utils.validateType)("FlowType"),value:(0,_utils.validateType)("FlowType"),static:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),variance:(0,_utils.validateOptionalType)("Variance")}}),defineType("ObjectTypeProperty",{visitor:["key","value","variance"],aliases:["UserWhitespacable"],fields:{key:(0,_utils.validateType)(["Identifier","StringLiteral"]),value:(0,_utils.validateType)("FlowType"),kind:(0,_utils.validate)((0,_utils.assertOneOf)("init","get","set")),static:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),proto:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),optional:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),variance:(0,_utils.validateOptionalType)("Variance"),method:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("ObjectTypeSpreadProperty",{visitor:["argument"],aliases:["UserWhitespacable"],fields:{argument:(0,_utils.validateType)("FlowType")}}),defineType("OpaqueType",{visitor:["id","typeParameters","supertype","impltype"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),supertype:(0,_utils.validateOptionalType)("FlowType"),impltype:(0,_utils.validateType)("FlowType")}}),defineType("QualifiedTypeIdentifier",{visitor:["id","qualification"],fields:{id:(0,_utils.validateType)("Identifier"),qualification:(0,_utils.validateType)(["Identifier","QualifiedTypeIdentifier"])}}),defineType("StringLiteralTypeAnnotation",{builder:["value"],aliases:["FlowType"],fields:{value:(0,_utils.validate)((0,_utils.assertValueType)("string"))}}),defineType("StringTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("SymbolTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("ThisTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("TupleTypeAnnotation",{visitor:["types"],aliases:["FlowType"],fields:{types:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}}),defineType("TypeofTypeAnnotation",{visitor:["argument"],aliases:["FlowType"],fields:{argument:(0,_utils.validateType)("FlowType")}}),defineType("TypeAlias",{visitor:["id","typeParameters","right"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),right:(0,_utils.validateType)("FlowType")}}),defineType("TypeAnnotation",{visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("FlowType")}}),defineType("TypeCastExpression",{visitor:["expression","typeAnnotation"],aliases:["ExpressionWrapper","Expression"],fields:{expression:(0,_utils.validateType)("Expression"),typeAnnotation:(0,_utils.validateType)("TypeAnnotation")}}),defineType("TypeParameter",{visitor:["bound","default","variance"],fields:{name:(0,_utils.validate)((0,_utils.assertValueType)("string")),bound:(0,_utils.validateOptionalType)("TypeAnnotation"),default:(0,_utils.validateOptionalType)("FlowType"),variance:(0,_utils.validateOptionalType)("Variance")}}),defineType("TypeParameterDeclaration",{visitor:["params"],fields:{params:(0,_utils.validate)((0,_utils.arrayOfType)("TypeParameter"))}}),defineType("TypeParameterInstantiation",{visitor:["params"],fields:{params:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}}),defineType("UnionTypeAnnotation",{visitor:["types"],aliases:["FlowType"],fields:{types:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}}),defineType("Variance",{builder:["kind"],fields:{kind:(0,_utils.validate)((0,_utils.assertOneOf)("minus","plus"))}}),defineType("VoidTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]}),defineType("EnumDeclaration",{aliases:["Statement","Declaration"],visitor:["id","body"],fields:{id:(0,_utils.validateType)("Identifier"),body:(0,_utils.validateType)(["EnumBooleanBody","EnumNumberBody","EnumStringBody","EnumSymbolBody"])}}),defineType("EnumBooleanBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicitType:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),members:(0,_utils.validateArrayOfType)("EnumBooleanMember"),hasUnknownMembers:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("EnumNumberBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicitType:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),members:(0,_utils.validateArrayOfType)("EnumNumberMember"),hasUnknownMembers:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("EnumStringBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicitType:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),members:(0,_utils.validateArrayOfType)(["EnumStringMember","EnumDefaultedMember"]),hasUnknownMembers:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("EnumSymbolBody",{aliases:["EnumBody"],visitor:["members"],fields:{members:(0,_utils.validateArrayOfType)("EnumDefaultedMember"),hasUnknownMembers:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}}),defineType("EnumBooleanMember",{aliases:["EnumMember"],visitor:["id"],fields:{id:(0,_utils.validateType)("Identifier"),init:(0,_utils.validateType)("BooleanLiteral")}}),defineType("EnumNumberMember",{aliases:["EnumMember"],visitor:["id","init"],fields:{id:(0,_utils.validateType)("Identifier"),init:(0,_utils.validateType)("NumericLiteral")}}),defineType("EnumStringMember",{aliases:["EnumMember"],visitor:["id","init"],fields:{id:(0,_utils.validateType)("Identifier"),init:(0,_utils.validateType)("StringLiteral")}}),defineType("EnumDefaultedMember",{aliases:["EnumMember"],visitor:["id"],fields:{id:(0,_utils.validateType)("Identifier")}}),defineType("IndexedAccessType",{visitor:["objectType","indexType"],aliases:["FlowType"],fields:{objectType:(0,_utils.validateType)("FlowType"),indexType:(0,_utils.validateType)("FlowType")}}),defineType("OptionalIndexedAccessType",{visitor:["objectType","indexType"],aliases:["FlowType"],fields:{objectType:(0,_utils.validateType)("FlowType"),indexType:(0,_utils.validateType)("FlowType"),optional:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}})},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1434643__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"ALIAS_KEYS",{enumerable:!0,get:function(){return _utils.ALIAS_KEYS}}),Object.defineProperty(exports,"BUILDER_KEYS",{enumerable:!0,get:function(){return _utils.BUILDER_KEYS}}),Object.defineProperty(exports,"DEPRECATED_ALIASES",{enumerable:!0,get:function(){return _deprecatedAliases.DEPRECATED_ALIASES}}),Object.defineProperty(exports,"DEPRECATED_KEYS",{enumerable:!0,get:function(){return _utils.DEPRECATED_KEYS}}),Object.defineProperty(exports,"FLIPPED_ALIAS_KEYS",{enumerable:!0,get:function(){return _utils.FLIPPED_ALIAS_KEYS}}),Object.defineProperty(exports,"NODE_FIELDS",{enumerable:!0,get:function(){return _utils.NODE_FIELDS}}),Object.defineProperty(exports,"NODE_PARENT_VALIDATIONS",{enumerable:!0,get:function(){return _utils.NODE_PARENT_VALIDATIONS}}),Object.defineProperty(exports,"PLACEHOLDERS",{enumerable:!0,get:function(){return _placeholders.PLACEHOLDERS}}),Object.defineProperty(exports,"PLACEHOLDERS_ALIAS",{enumerable:!0,get:function(){return _placeholders.PLACEHOLDERS_ALIAS}}),Object.defineProperty(exports,"PLACEHOLDERS_FLIPPED_ALIAS",{enumerable:!0,get:function(){return _placeholders.PLACEHOLDERS_FLIPPED_ALIAS}}),exports.TYPES=void 0,Object.defineProperty(exports,"VISITOR_KEYS",{enumerable:!0,get:function(){return _utils.VISITOR_KEYS}});var _toFastProperties=__nested_webpack_require_1434643__("./node_modules/.pnpm/to-fast-properties@2.0.0/node_modules/to-fast-properties/index.js");__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/core.js"),__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/flow.js"),__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/jsx.js"),__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/misc.js"),__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/experimental.js"),__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/typescript.js");var _utils=__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js"),_placeholders=__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/placeholders.js"),_deprecatedAliases=__nested_webpack_require_1434643__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/deprecated-aliases.js");Object.keys(_deprecatedAliases.DEPRECATED_ALIASES).forEach((deprecatedAlias=>{_utils.FLIPPED_ALIAS_KEYS[deprecatedAlias]=_utils.FLIPPED_ALIAS_KEYS[_deprecatedAliases.DEPRECATED_ALIASES[deprecatedAlias]]})),_toFastProperties(_utils.VISITOR_KEYS),_toFastProperties(_utils.ALIAS_KEYS),_toFastProperties(_utils.FLIPPED_ALIAS_KEYS),_toFastProperties(_utils.NODE_FIELDS),_toFastProperties(_utils.BUILDER_KEYS),_toFastProperties(_utils.DEPRECATED_KEYS),_toFastProperties(_placeholders.PLACEHOLDERS_ALIAS),_toFastProperties(_placeholders.PLACEHOLDERS_FLIPPED_ALIAS);const TYPES=[].concat(Object.keys(_utils.VISITOR_KEYS),Object.keys(_utils.FLIPPED_ALIAS_KEYS),Object.keys(_utils.DEPRECATED_KEYS));exports.TYPES=TYPES},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/jsx.js":(__unused_webpack_module,__unused_webpack_exports,__nested_webpack_require_1438119__)=>{"use strict";var _utils=__nested_webpack_require_1438119__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js");const defineType=(0,_utils.defineAliasedType)("JSX");defineType("JSXAttribute",{visitor:["name","value"],aliases:["Immutable"],fields:{name:{validate:(0,_utils.assertNodeType)("JSXIdentifier","JSXNamespacedName")},value:{optional:!0,validate:(0,_utils.assertNodeType)("JSXElement","JSXFragment","StringLiteral","JSXExpressionContainer")}}}),defineType("JSXClosingElement",{visitor:["name"],aliases:["Immutable"],fields:{name:{validate:(0,_utils.assertNodeType)("JSXIdentifier","JSXMemberExpression","JSXNamespacedName")}}}),defineType("JSXElement",{builder:["openingElement","closingElement","children","selfClosing"],visitor:["openingElement","children","closingElement"],aliases:["Immutable","Expression"],fields:Object.assign({openingElement:{validate:(0,_utils.assertNodeType)("JSXOpeningElement")},closingElement:{optional:!0,validate:(0,_utils.assertNodeType)("JSXClosingElement")},children:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("JSXText","JSXExpressionContainer","JSXSpreadChild","JSXElement","JSXFragment")))}},{selfClosing:{validate:(0,_utils.assertValueType)("boolean"),optional:!0}})}),defineType("JSXEmptyExpression",{}),defineType("JSXExpressionContainer",{visitor:["expression"],aliases:["Immutable"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression","JSXEmptyExpression")}}}),defineType("JSXSpreadChild",{visitor:["expression"],aliases:["Immutable"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("JSXIdentifier",{builder:["name"],fields:{name:{validate:(0,_utils.assertValueType)("string")}}}),defineType("JSXMemberExpression",{visitor:["object","property"],fields:{object:{validate:(0,_utils.assertNodeType)("JSXMemberExpression","JSXIdentifier")},property:{validate:(0,_utils.assertNodeType)("JSXIdentifier")}}}),defineType("JSXNamespacedName",{visitor:["namespace","name"],fields:{namespace:{validate:(0,_utils.assertNodeType)("JSXIdentifier")},name:{validate:(0,_utils.assertNodeType)("JSXIdentifier")}}}),defineType("JSXOpeningElement",{builder:["name","attributes","selfClosing"],visitor:["name","attributes"],aliases:["Immutable"],fields:{name:{validate:(0,_utils.assertNodeType)("JSXIdentifier","JSXMemberExpression","JSXNamespacedName")},selfClosing:{default:!1},attributes:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("JSXAttribute","JSXSpreadAttribute")))},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:!0}}}),defineType("JSXSpreadAttribute",{visitor:["argument"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}}),defineType("JSXText",{aliases:["Immutable"],builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}}}),defineType("JSXFragment",{builder:["openingFragment","closingFragment","children"],visitor:["openingFragment","children","closingFragment"],aliases:["Immutable","Expression"],fields:{openingFragment:{validate:(0,_utils.assertNodeType)("JSXOpeningFragment")},closingFragment:{validate:(0,_utils.assertNodeType)("JSXClosingFragment")},children:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("JSXText","JSXExpressionContainer","JSXSpreadChild","JSXElement","JSXFragment")))}}}),defineType("JSXOpeningFragment",{aliases:["Immutable"]}),defineType("JSXClosingFragment",{aliases:["Immutable"]})},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/misc.js":(__unused_webpack_module,__unused_webpack_exports,__nested_webpack_require_1441936__)=>{"use strict";var _utils=__nested_webpack_require_1441936__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js"),_placeholders=__nested_webpack_require_1441936__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/placeholders.js");const defineType=(0,_utils.defineAliasedType)("Miscellaneous");defineType("Noop",{visitor:[]}),defineType("Placeholder",{visitor:[],builder:["expectedNode","name"],fields:{name:{validate:(0,_utils.assertNodeType)("Identifier")},expectedNode:{validate:(0,_utils.assertOneOf)(..._placeholders.PLACEHOLDERS)}}}),defineType("V8IntrinsicIdentifier",{builder:["name"],fields:{name:{validate:(0,_utils.assertValueType)("string")}}})},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/placeholders.js":(__unused_webpack_module,exports,__nested_webpack_require_1442795__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PLACEHOLDERS_FLIPPED_ALIAS=exports.PLACEHOLDERS_ALIAS=exports.PLACEHOLDERS=void 0;var _utils=__nested_webpack_require_1442795__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js");const PLACEHOLDERS=["Identifier","StringLiteral","Expression","Statement","Declaration","BlockStatement","ClassBody","Pattern"];exports.PLACEHOLDERS=PLACEHOLDERS;const PLACEHOLDERS_ALIAS={Declaration:["Statement"],Pattern:["PatternLike","LVal"]};exports.PLACEHOLDERS_ALIAS=PLACEHOLDERS_ALIAS;for(const type of PLACEHOLDERS){const alias=_utils.ALIAS_KEYS[type];null!=alias&&alias.length&&(PLACEHOLDERS_ALIAS[type]=alias)}const PLACEHOLDERS_FLIPPED_ALIAS={};exports.PLACEHOLDERS_FLIPPED_ALIAS=PLACEHOLDERS_FLIPPED_ALIAS,Object.keys(PLACEHOLDERS_ALIAS).forEach((type=>{PLACEHOLDERS_ALIAS[type].forEach((alias=>{Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS,alias)||(PLACEHOLDERS_FLIPPED_ALIAS[alias]=[]),PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type)}))}))},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/typescript.js":(__unused_webpack_module,__unused_webpack_exports,__nested_webpack_require_1444012__)=>{"use strict";var _utils=__nested_webpack_require_1444012__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js"),_core=__nested_webpack_require_1444012__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/core.js"),_is=__nested_webpack_require_1444012__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/is.js");const defineType=(0,_utils.defineAliasedType)("TypeScript"),bool=(0,_utils.assertValueType)("boolean"),tSFunctionTypeAnnotationCommon=()=>({returnType:{validate:(0,_utils.assertNodeType)("TSTypeAnnotation","Noop"),optional:!0},typeParameters:{validate:(0,_utils.assertNodeType)("TSTypeParameterDeclaration","Noop"),optional:!0}});defineType("TSParameterProperty",{aliases:["LVal"],visitor:["parameter"],fields:{accessibility:{validate:(0,_utils.assertOneOf)("public","private","protected"),optional:!0},readonly:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},parameter:{validate:(0,_utils.assertNodeType)("Identifier","AssignmentPattern")},override:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:!0}}}),defineType("TSDeclareFunction",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","params","returnType"],fields:Object.assign({},(0,_core.functionDeclarationCommon)(),tSFunctionTypeAnnotationCommon())}),defineType("TSDeclareMethod",{visitor:["decorators","key","typeParameters","params","returnType"],fields:Object.assign({},(0,_core.classMethodOrDeclareMethodCommon)(),tSFunctionTypeAnnotationCommon())}),defineType("TSQualifiedName",{aliases:["TSEntityName"],visitor:["left","right"],fields:{left:(0,_utils.validateType)("TSEntityName"),right:(0,_utils.validateType)("Identifier")}});const signatureDeclarationCommon=()=>({typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterDeclaration"),parameters:(0,_utils.validateArrayOfType)(["Identifier","RestElement"]),typeAnnotation:(0,_utils.validateOptionalType)("TSTypeAnnotation")}),callConstructSignatureDeclaration={aliases:["TSTypeElement"],visitor:["typeParameters","parameters","typeAnnotation"],fields:signatureDeclarationCommon()};defineType("TSCallSignatureDeclaration",callConstructSignatureDeclaration),defineType("TSConstructSignatureDeclaration",callConstructSignatureDeclaration);const namedTypeElementCommon=()=>({key:(0,_utils.validateType)("Expression"),computed:{default:!1},optional:(0,_utils.validateOptional)(bool)});defineType("TSPropertySignature",{aliases:["TSTypeElement"],visitor:["key","typeAnnotation","initializer"],fields:Object.assign({},namedTypeElementCommon(),{readonly:(0,_utils.validateOptional)(bool),typeAnnotation:(0,_utils.validateOptionalType)("TSTypeAnnotation"),initializer:(0,_utils.validateOptionalType)("Expression"),kind:{validate:(0,_utils.assertOneOf)("get","set")}})}),defineType("TSMethodSignature",{aliases:["TSTypeElement"],visitor:["key","typeParameters","parameters","typeAnnotation"],fields:Object.assign({},signatureDeclarationCommon(),namedTypeElementCommon(),{kind:{validate:(0,_utils.assertOneOf)("method","get","set")}})}),defineType("TSIndexSignature",{aliases:["TSTypeElement"],visitor:["parameters","typeAnnotation"],fields:{readonly:(0,_utils.validateOptional)(bool),static:(0,_utils.validateOptional)(bool),parameters:(0,_utils.validateArrayOfType)("Identifier"),typeAnnotation:(0,_utils.validateOptionalType)("TSTypeAnnotation")}});const tsKeywordTypes=["TSAnyKeyword","TSBooleanKeyword","TSBigIntKeyword","TSIntrinsicKeyword","TSNeverKeyword","TSNullKeyword","TSNumberKeyword","TSObjectKeyword","TSStringKeyword","TSSymbolKeyword","TSUndefinedKeyword","TSUnknownKeyword","TSVoidKeyword"];for(const type of tsKeywordTypes)defineType(type,{aliases:["TSType","TSBaseType"],visitor:[],fields:{}});defineType("TSThisType",{aliases:["TSType","TSBaseType"],visitor:[],fields:{}});const fnOrCtrBase={aliases:["TSType"],visitor:["typeParameters","parameters","typeAnnotation"]};defineType("TSFunctionType",Object.assign({},fnOrCtrBase,{fields:signatureDeclarationCommon()})),defineType("TSConstructorType",Object.assign({},fnOrCtrBase,{fields:Object.assign({},signatureDeclarationCommon(),{abstract:(0,_utils.validateOptional)(bool)})})),defineType("TSTypeReference",{aliases:["TSType"],visitor:["typeName","typeParameters"],fields:{typeName:(0,_utils.validateType)("TSEntityName"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}}),defineType("TSTypePredicate",{aliases:["TSType"],visitor:["parameterName","typeAnnotation"],builder:["parameterName","typeAnnotation","asserts"],fields:{parameterName:(0,_utils.validateType)(["Identifier","TSThisType"]),typeAnnotation:(0,_utils.validateOptionalType)("TSTypeAnnotation"),asserts:(0,_utils.validateOptional)(bool)}}),defineType("TSTypeQuery",{aliases:["TSType"],visitor:["exprName","typeParameters"],fields:{exprName:(0,_utils.validateType)(["TSEntityName","TSImportType"]),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}}),defineType("TSTypeLiteral",{aliases:["TSType"],visitor:["members"],fields:{members:(0,_utils.validateArrayOfType)("TSTypeElement")}}),defineType("TSArrayType",{aliases:["TSType"],visitor:["elementType"],fields:{elementType:(0,_utils.validateType)("TSType")}}),defineType("TSTupleType",{aliases:["TSType"],visitor:["elementTypes"],fields:{elementTypes:(0,_utils.validateArrayOfType)(["TSType","TSNamedTupleMember"])}}),defineType("TSOptionalType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("TSType")}}),defineType("TSRestType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("TSType")}}),defineType("TSNamedTupleMember",{visitor:["label","elementType"],builder:["label","elementType","optional"],fields:{label:(0,_utils.validateType)("Identifier"),optional:{validate:bool,default:!1},elementType:(0,_utils.validateType)("TSType")}});const unionOrIntersection={aliases:["TSType"],visitor:["types"],fields:{types:(0,_utils.validateArrayOfType)("TSType")}};defineType("TSUnionType",unionOrIntersection),defineType("TSIntersectionType",unionOrIntersection),defineType("TSConditionalType",{aliases:["TSType"],visitor:["checkType","extendsType","trueType","falseType"],fields:{checkType:(0,_utils.validateType)("TSType"),extendsType:(0,_utils.validateType)("TSType"),trueType:(0,_utils.validateType)("TSType"),falseType:(0,_utils.validateType)("TSType")}}),defineType("TSInferType",{aliases:["TSType"],visitor:["typeParameter"],fields:{typeParameter:(0,_utils.validateType)("TSTypeParameter")}}),defineType("TSParenthesizedType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("TSType")}}),defineType("TSTypeOperator",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{operator:(0,_utils.validate)((0,_utils.assertValueType)("string")),typeAnnotation:(0,_utils.validateType)("TSType")}}),defineType("TSIndexedAccessType",{aliases:["TSType"],visitor:["objectType","indexType"],fields:{objectType:(0,_utils.validateType)("TSType"),indexType:(0,_utils.validateType)("TSType")}}),defineType("TSMappedType",{aliases:["TSType"],visitor:["typeParameter","typeAnnotation","nameType"],fields:{readonly:(0,_utils.validateOptional)((0,_utils.assertOneOf)(!0,!1,"+","-")),typeParameter:(0,_utils.validateType)("TSTypeParameter"),optional:(0,_utils.validateOptional)((0,_utils.assertOneOf)(!0,!1,"+","-")),typeAnnotation:(0,_utils.validateOptionalType)("TSType"),nameType:(0,_utils.validateOptionalType)("TSType")}}),defineType("TSLiteralType",{aliases:["TSType","TSBaseType"],visitor:["literal"],fields:{literal:{validate:function(){const unaryExpression=(0,_utils.assertNodeType)("NumericLiteral","BigIntLiteral"),unaryOperator=(0,_utils.assertOneOf)("-"),literal=(0,_utils.assertNodeType)("NumericLiteral","StringLiteral","BooleanLiteral","BigIntLiteral","TemplateLiteral");function validator(parent,key,node){(0,_is.default)("UnaryExpression",node)?(unaryOperator(node,"operator",node.operator),unaryExpression(node,"argument",node.argument)):literal(parent,key,node)}return validator.oneOfNodeTypes=["NumericLiteral","StringLiteral","BooleanLiteral","BigIntLiteral","TemplateLiteral","UnaryExpression"],validator}()}}}),defineType("TSExpressionWithTypeArguments",{aliases:["TSType"],visitor:["expression","typeParameters"],fields:{expression:(0,_utils.validateType)("TSEntityName"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}}),defineType("TSInterfaceDeclaration",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","extends","body"],fields:{declare:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterDeclaration"),extends:(0,_utils.validateOptional)((0,_utils.arrayOfType)("TSExpressionWithTypeArguments")),body:(0,_utils.validateType)("TSInterfaceBody")}}),defineType("TSInterfaceBody",{visitor:["body"],fields:{body:(0,_utils.validateArrayOfType)("TSTypeElement")}}),defineType("TSTypeAliasDeclaration",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","typeAnnotation"],fields:{declare:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterDeclaration"),typeAnnotation:(0,_utils.validateType)("TSType")}}),defineType("TSInstantiationExpression",{aliases:["Expression"],visitor:["expression","typeParameters"],fields:{expression:(0,_utils.validateType)("Expression"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}});const TSTypeExpression={aliases:["Expression","LVal","PatternLike"],visitor:["expression","typeAnnotation"],fields:{expression:(0,_utils.validateType)("Expression"),typeAnnotation:(0,_utils.validateType)("TSType")}};defineType("TSAsExpression",TSTypeExpression),defineType("TSSatisfiesExpression",TSTypeExpression),defineType("TSTypeAssertion",{aliases:["Expression","LVal","PatternLike"],visitor:["typeAnnotation","expression"],fields:{typeAnnotation:(0,_utils.validateType)("TSType"),expression:(0,_utils.validateType)("Expression")}}),defineType("TSEnumDeclaration",{aliases:["Statement","Declaration"],visitor:["id","members"],fields:{declare:(0,_utils.validateOptional)(bool),const:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)("Identifier"),members:(0,_utils.validateArrayOfType)("TSEnumMember"),initializer:(0,_utils.validateOptionalType)("Expression")}}),defineType("TSEnumMember",{visitor:["id","initializer"],fields:{id:(0,_utils.validateType)(["Identifier","StringLiteral"]),initializer:(0,_utils.validateOptionalType)("Expression")}}),defineType("TSModuleDeclaration",{aliases:["Statement","Declaration"],visitor:["id","body"],fields:{declare:(0,_utils.validateOptional)(bool),global:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)(["Identifier","StringLiteral"]),body:(0,_utils.validateType)(["TSModuleBlock","TSModuleDeclaration"])}}),defineType("TSModuleBlock",{aliases:["Scopable","Block","BlockParent","FunctionParent"],visitor:["body"],fields:{body:(0,_utils.validateArrayOfType)("Statement")}}),defineType("TSImportType",{aliases:["TSType"],visitor:["argument","qualifier","typeParameters"],fields:{argument:(0,_utils.validateType)("StringLiteral"),qualifier:(0,_utils.validateOptionalType)("TSEntityName"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}}),defineType("TSImportEqualsDeclaration",{aliases:["Statement"],visitor:["id","moduleReference"],fields:{isExport:(0,_utils.validate)(bool),id:(0,_utils.validateType)("Identifier"),moduleReference:(0,_utils.validateType)(["TSEntityName","TSExternalModuleReference"]),importKind:{validate:(0,_utils.assertOneOf)("type","value"),optional:!0}}}),defineType("TSExternalModuleReference",{visitor:["expression"],fields:{expression:(0,_utils.validateType)("StringLiteral")}}),defineType("TSNonNullExpression",{aliases:["Expression","LVal","PatternLike"],visitor:["expression"],fields:{expression:(0,_utils.validateType)("Expression")}}),defineType("TSExportAssignment",{aliases:["Statement"],visitor:["expression"],fields:{expression:(0,_utils.validateType)("Expression")}}),defineType("TSNamespaceExportDeclaration",{aliases:["Statement"],visitor:["id"],fields:{id:(0,_utils.validateType)("Identifier")}}),defineType("TSTypeAnnotation",{visitor:["typeAnnotation"],fields:{typeAnnotation:{validate:(0,_utils.assertNodeType)("TSType")}}}),defineType("TSTypeParameterInstantiation",{visitor:["params"],fields:{params:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("TSType")))}}}),defineType("TSTypeParameterDeclaration",{visitor:["params"],fields:{params:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("TSTypeParameter")))}}}),defineType("TSTypeParameter",{builder:["constraint","default","name"],visitor:["constraint","default"],fields:{name:{validate:(0,_utils.assertValueType)("string")},in:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},out:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},const:{validate:(0,_utils.assertValueType)("boolean"),optional:!0},constraint:{validate:(0,_utils.assertNodeType)("TSType"),optional:!0},default:{validate:(0,_utils.assertNodeType)("TSType"),optional:!0}}})},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/utils.js":(__unused_webpack_module,exports,__nested_webpack_require_1457689__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VISITOR_KEYS=exports.NODE_PARENT_VALIDATIONS=exports.NODE_FIELDS=exports.FLIPPED_ALIAS_KEYS=exports.DEPRECATED_KEYS=exports.BUILDER_KEYS=exports.ALIAS_KEYS=void 0,exports.arrayOf=arrayOf,exports.arrayOfType=arrayOfType,exports.assertEach=assertEach,exports.assertNodeOrValueType=function(...types){function validate(node,key,val){for(const type of types)if(getType(val)===type||(0,_is.default)(type,val))return void(0,_validate.validateChild)(node,key,val);throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(null==val?void 0:val.type)}`)}return validate.oneOfNodeOrValueTypes=types,validate},exports.assertNodeType=assertNodeType,exports.assertOneOf=function(...values){function validate(node,key,val){if(values.indexOf(val)<0)throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`)}return validate.oneOf=values,validate},exports.assertOptionalChainStart=function(){return function(node){var _current;let current=node;for(;node;){const{type}=current;if("OptionalCallExpression"!==type){if("OptionalMemberExpression"!==type)break;if(current.optional)return;current=current.object}else{if(current.optional)return;current=current.callee}}throw new TypeError(`Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${null==(_current=current)?void 0:_current.type}`)}},exports.assertShape=function(shape){function validate(node,key,val){const errors=[];for(const property of Object.keys(shape))try{(0,_validate.validateField)(node,property,val[property],shape[property])}catch(error){if(error instanceof TypeError){errors.push(error.message);continue}throw error}if(errors.length)throw new TypeError(`Property ${key} of ${node.type} expected to have the following:\n${errors.join("\n")}`)}return validate.shapeOf=shape,validate},exports.assertValueType=assertValueType,exports.chain=chain,exports.default=defineType,exports.defineAliasedType=function(...aliases){return(type,opts={})=>{let defined=opts.aliases;var _store$opts$inherits$;defined||(opts.inherits&&(defined=null==(_store$opts$inherits$=store[opts.inherits].aliases)?void 0:_store$opts$inherits$.slice()),null!=defined||(defined=[]),opts.aliases=defined);const additional=aliases.filter((a=>!defined.includes(a)));defined.unshift(...additional),defineType(type,opts)}},exports.typeIs=typeIs,exports.validate=validate,exports.validateArrayOfType=function(typeName){return validate(arrayOfType(typeName))},exports.validateOptional=function(validate){return{validate,optional:!0}},exports.validateOptionalType=function(typeName){return{validate:typeIs(typeName),optional:!0}},exports.validateType=function(typeName){return validate(typeIs(typeName))};var _is=__nested_webpack_require_1457689__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/is.js"),_validate=__nested_webpack_require_1457689__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/validate.js");const VISITOR_KEYS={};exports.VISITOR_KEYS=VISITOR_KEYS;const ALIAS_KEYS={};exports.ALIAS_KEYS=ALIAS_KEYS;const FLIPPED_ALIAS_KEYS={};exports.FLIPPED_ALIAS_KEYS=FLIPPED_ALIAS_KEYS;const NODE_FIELDS={};exports.NODE_FIELDS=NODE_FIELDS;const BUILDER_KEYS={};exports.BUILDER_KEYS=BUILDER_KEYS;const DEPRECATED_KEYS={};exports.DEPRECATED_KEYS=DEPRECATED_KEYS;const NODE_PARENT_VALIDATIONS={};function getType(val){return Array.isArray(val)?"array":null===val?"null":typeof val}function validate(validate){return{validate}}function typeIs(typeName){return"string"==typeof typeName?assertNodeType(typeName):assertNodeType(...typeName)}function arrayOf(elementType){return chain(assertValueType("array"),assertEach(elementType))}function arrayOfType(typeName){return arrayOf(typeIs(typeName))}function assertEach(callback){function validator(node,key,val){if(Array.isArray(val))for(let i=0;i<val.length;i++){const subkey=`${key}[${i}]`,v=val[i];callback(node,subkey,v),process.env.BABEL_TYPES_8_BREAKING&&(0,_validate.validateChild)(node,subkey,v)}}return validator.each=callback,validator}function assertNodeType(...types){function validate(node,key,val){for(const type of types)if((0,_is.default)(type,val))return void(0,_validate.validateChild)(node,key,val);throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(null==val?void 0:val.type)}`)}return validate.oneOfNodeTypes=types,validate}function assertValueType(type){function validate(node,key,val){if(!(getType(val)===type))throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`)}return validate.type=type,validate}function chain(...fns){function validate(...args){for(const fn of fns)fn(...args)}if(validate.chainOf=fns,fns.length>=2&&"type"in fns[0]&&"array"===fns[0].type&&!("each"in fns[1]))throw new Error('An assertValueType("array") validator can only be followed by an assertEach(...) validator.');return validate}exports.NODE_PARENT_VALIDATIONS=NODE_PARENT_VALIDATIONS;const validTypeOpts=["aliases","builder","deprecatedAlias","fields","inherits","visitor","validate"],validFieldKeys=["default","optional","deprecated","validate"],store={};function defineType(type,opts={}){const inherits=opts.inherits&&store[opts.inherits]||{};let fields=opts.fields;if(!fields&&(fields={},inherits.fields)){const keys=Object.getOwnPropertyNames(inherits.fields);for(const key of keys){const field=inherits.fields[key],def=field.default;if(Array.isArray(def)?def.length>0:def&&"object"==typeof def)throw new Error("field defaults can only be primitives or empty arrays currently");fields[key]={default:Array.isArray(def)?[]:def,optional:field.optional,deprecated:field.deprecated,validate:field.validate}}}const visitor=opts.visitor||inherits.visitor||[],aliases=opts.aliases||inherits.aliases||[],builder=opts.builder||inherits.builder||opts.visitor||[];for(const k of Object.keys(opts))if(-1===validTypeOpts.indexOf(k))throw new Error(`Unknown type option "${k}" on ${type}`);opts.deprecatedAlias&&(DEPRECATED_KEYS[opts.deprecatedAlias]=type);for(const key of visitor.concat(builder))fields[key]=fields[key]||{};for(const key of Object.keys(fields)){const field=fields[key];void 0!==field.default&&-1===builder.indexOf(key)&&(field.optional=!0),void 0===field.default?field.default=null:field.validate||null==field.default||(field.validate=assertValueType(getType(field.default)));for(const k of Object.keys(field))if(-1===validFieldKeys.indexOf(k))throw new Error(`Unknown field key "${k}" on ${type}.${key}`)}VISITOR_KEYS[type]=opts.visitor=visitor,BUILDER_KEYS[type]=opts.builder=builder,NODE_FIELDS[type]=opts.fields=fields,ALIAS_KEYS[type]=opts.aliases=aliases,aliases.forEach((alias=>{FLIPPED_ALIAS_KEYS[alias]=FLIPPED_ALIAS_KEYS[alias]||[],FLIPPED_ALIAS_KEYS[alias].push(type)})),opts.validate&&(NODE_PARENT_VALIDATIONS[type]=opts.validate),store[type]=opts}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1464913__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _exportNames={react:!0,assertNode:!0,createTypeAnnotationBasedOnTypeof:!0,createUnionTypeAnnotation:!0,createFlowUnionType:!0,createTSUnionType:!0,cloneNode:!0,clone:!0,cloneDeep:!0,cloneDeepWithoutLoc:!0,cloneWithoutLoc:!0,addComment:!0,addComments:!0,inheritInnerComments:!0,inheritLeadingComments:!0,inheritsComments:!0,inheritTrailingComments:!0,removeComments:!0,ensureBlock:!0,toBindingIdentifierName:!0,toBlock:!0,toComputedKey:!0,toExpression:!0,toIdentifier:!0,toKeyAlias:!0,toSequenceExpression:!0,toStatement:!0,valueToNode:!0,appendToMemberExpression:!0,inherits:!0,prependToMemberExpression:!0,removeProperties:!0,removePropertiesDeep:!0,removeTypeDuplicates:!0,getBindingIdentifiers:!0,getOuterBindingIdentifiers:!0,traverse:!0,traverseFast:!0,shallowEqual:!0,is:!0,isBinding:!0,isBlockScoped:!0,isImmutable:!0,isLet:!0,isNode:!0,isNodesEquivalent:!0,isPlaceholderType:!0,isReferenced:!0,isScope:!0,isSpecifierDefault:!0,isType:!0,isValidES3Identifier:!0,isValidIdentifier:!0,isVar:!0,matchesPattern:!0,validate:!0,buildMatchMemberExpression:!0,__internal__deprecationWarning:!0};Object.defineProperty(exports,"__internal__deprecationWarning",{enumerable:!0,get:function(){return _deprecationWarning.default}}),Object.defineProperty(exports,"addComment",{enumerable:!0,get:function(){return _addComment.default}}),Object.defineProperty(exports,"addComments",{enumerable:!0,get:function(){return _addComments.default}}),Object.defineProperty(exports,"appendToMemberExpression",{enumerable:!0,get:function(){return _appendToMemberExpression.default}}),Object.defineProperty(exports,"assertNode",{enumerable:!0,get:function(){return _assertNode.default}}),Object.defineProperty(exports,"buildMatchMemberExpression",{enumerable:!0,get:function(){return _buildMatchMemberExpression.default}}),Object.defineProperty(exports,"clone",{enumerable:!0,get:function(){return _clone.default}}),Object.defineProperty(exports,"cloneDeep",{enumerable:!0,get:function(){return _cloneDeep.default}}),Object.defineProperty(exports,"cloneDeepWithoutLoc",{enumerable:!0,get:function(){return _cloneDeepWithoutLoc.default}}),Object.defineProperty(exports,"cloneNode",{enumerable:!0,get:function(){return _cloneNode.default}}),Object.defineProperty(exports,"cloneWithoutLoc",{enumerable:!0,get:function(){return _cloneWithoutLoc.default}}),Object.defineProperty(exports,"createFlowUnionType",{enumerable:!0,get:function(){return _createFlowUnionType.default}}),Object.defineProperty(exports,"createTSUnionType",{enumerable:!0,get:function(){return _createTSUnionType.default}}),Object.defineProperty(exports,"createTypeAnnotationBasedOnTypeof",{enumerable:!0,get:function(){return _createTypeAnnotationBasedOnTypeof.default}}),Object.defineProperty(exports,"createUnionTypeAnnotation",{enumerable:!0,get:function(){return _createFlowUnionType.default}}),Object.defineProperty(exports,"ensureBlock",{enumerable:!0,get:function(){return _ensureBlock.default}}),Object.defineProperty(exports,"getBindingIdentifiers",{enumerable:!0,get:function(){return _getBindingIdentifiers.default}}),Object.defineProperty(exports,"getOuterBindingIdentifiers",{enumerable:!0,get:function(){return _getOuterBindingIdentifiers.default}}),Object.defineProperty(exports,"inheritInnerComments",{enumerable:!0,get:function(){return _inheritInnerComments.default}}),Object.defineProperty(exports,"inheritLeadingComments",{enumerable:!0,get:function(){return _inheritLeadingComments.default}}),Object.defineProperty(exports,"inheritTrailingComments",{enumerable:!0,get:function(){return _inheritTrailingComments.default}}),Object.defineProperty(exports,"inherits",{enumerable:!0,get:function(){return _inherits.default}}),Object.defineProperty(exports,"inheritsComments",{enumerable:!0,get:function(){return _inheritsComments.default}}),Object.defineProperty(exports,"is",{enumerable:!0,get:function(){return _is.default}}),Object.defineProperty(exports,"isBinding",{enumerable:!0,get:function(){return _isBinding.default}}),Object.defineProperty(exports,"isBlockScoped",{enumerable:!0,get:function(){return _isBlockScoped.default}}),Object.defineProperty(exports,"isImmutable",{enumerable:!0,get:function(){return _isImmutable.default}}),Object.defineProperty(exports,"isLet",{enumerable:!0,get:function(){return _isLet.default}}),Object.defineProperty(exports,"isNode",{enumerable:!0,get:function(){return _isNode.default}}),Object.defineProperty(exports,"isNodesEquivalent",{enumerable:!0,get:function(){return _isNodesEquivalent.default}}),Object.defineProperty(exports,"isPlaceholderType",{enumerable:!0,get:function(){return _isPlaceholderType.default}}),Object.defineProperty(exports,"isReferenced",{enumerable:!0,get:function(){return _isReferenced.default}}),Object.defineProperty(exports,"isScope",{enumerable:!0,get:function(){return _isScope.default}}),Object.defineProperty(exports,"isSpecifierDefault",{enumerable:!0,get:function(){return _isSpecifierDefault.default}}),Object.defineProperty(exports,"isType",{enumerable:!0,get:function(){return _isType.default}}),Object.defineProperty(exports,"isValidES3Identifier",{enumerable:!0,get:function(){return _isValidES3Identifier.default}}),Object.defineProperty(exports,"isValidIdentifier",{enumerable:!0,get:function(){return _isValidIdentifier.default}}),Object.defineProperty(exports,"isVar",{enumerable:!0,get:function(){return _isVar.default}}),Object.defineProperty(exports,"matchesPattern",{enumerable:!0,get:function(){return _matchesPattern.default}}),Object.defineProperty(exports,"prependToMemberExpression",{enumerable:!0,get:function(){return _prependToMemberExpression.default}}),exports.react=void 0,Object.defineProperty(exports,"removeComments",{enumerable:!0,get:function(){return _removeComments.default}}),Object.defineProperty(exports,"removeProperties",{enumerable:!0,get:function(){return _removeProperties.default}}),Object.defineProperty(exports,"removePropertiesDeep",{enumerable:!0,get:function(){return _removePropertiesDeep.default}}),Object.defineProperty(exports,"removeTypeDuplicates",{enumerable:!0,get:function(){return _removeTypeDuplicates.default}}),Object.defineProperty(exports,"shallowEqual",{enumerable:!0,get:function(){return _shallowEqual.default}}),Object.defineProperty(exports,"toBindingIdentifierName",{enumerable:!0,get:function(){return _toBindingIdentifierName.default}}),Object.defineProperty(exports,"toBlock",{enumerable:!0,get:function(){return _toBlock.default}}),Object.defineProperty(exports,"toComputedKey",{enumerable:!0,get:function(){return _toComputedKey.default}}),Object.defineProperty(exports,"toExpression",{enumerable:!0,get:function(){return _toExpression.default}}),Object.defineProperty(exports,"toIdentifier",{enumerable:!0,get:function(){return _toIdentifier.default}}),Object.defineProperty(exports,"toKeyAlias",{enumerable:!0,get:function(){return _toKeyAlias.default}}),Object.defineProperty(exports,"toSequenceExpression",{enumerable:!0,get:function(){return _toSequenceExpression.default}}),Object.defineProperty(exports,"toStatement",{enumerable:!0,get:function(){return _toStatement.default}}),Object.defineProperty(exports,"traverse",{enumerable:!0,get:function(){return _traverse.default}}),Object.defineProperty(exports,"traverseFast",{enumerable:!0,get:function(){return _traverseFast.default}}),Object.defineProperty(exports,"validate",{enumerable:!0,get:function(){return _validate.default}}),Object.defineProperty(exports,"valueToNode",{enumerable:!0,get:function(){return _valueToNode.default}});var _isReactComponent=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/react/isReactComponent.js"),_isCompatTag=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/react/isCompatTag.js"),_buildChildren=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/react/buildChildren.js"),_assertNode=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/asserts/assertNode.js"),_generated=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/asserts/generated/index.js");Object.keys(_generated).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_generated[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _generated[key]}}))}));var _createTypeAnnotationBasedOnTypeof=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js"),_createFlowUnionType=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js"),_createTSUnionType=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js"),_generated2=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js");Object.keys(_generated2).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_generated2[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _generated2[key]}}))}));var _uppercase=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/uppercase.js");Object.keys(_uppercase).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_uppercase[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _uppercase[key]}}))}));var _cloneNode=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneNode.js"),_clone=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/clone.js"),_cloneDeep=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneDeep.js"),_cloneDeepWithoutLoc=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js"),_cloneWithoutLoc=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js"),_addComment=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/addComment.js"),_addComments=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/addComments.js"),_inheritInnerComments=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritInnerComments.js"),_inheritLeadingComments=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritLeadingComments.js"),_inheritsComments=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritsComments.js"),_inheritTrailingComments=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritTrailingComments.js"),_removeComments=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/removeComments.js"),_generated3=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/generated/index.js");Object.keys(_generated3).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_generated3[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _generated3[key]}}))}));var _constants=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js");Object.keys(_constants).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_constants[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _constants[key]}}))}));var _ensureBlock=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/ensureBlock.js"),_toBindingIdentifierName=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js"),_toBlock=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toBlock.js"),_toComputedKey=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toComputedKey.js"),_toExpression=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toExpression.js"),_toIdentifier=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toIdentifier.js"),_toKeyAlias=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toKeyAlias.js"),_toSequenceExpression=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toSequenceExpression.js"),_toStatement=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/toStatement.js"),_valueToNode=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/converters/valueToNode.js"),_definitions=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js");Object.keys(_definitions).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_definitions[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _definitions[key]}}))}));var _appendToMemberExpression=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js"),_inherits=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/inherits.js"),_prependToMemberExpression=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js"),_removeProperties=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/removeProperties.js"),_removePropertiesDeep=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js"),_removeTypeDuplicates=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js"),_getBindingIdentifiers=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js"),_getOuterBindingIdentifiers=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js"),_traverse=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/traverse/traverse.js");Object.keys(_traverse).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_traverse[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _traverse[key]}}))}));var _traverseFast=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/traverse/traverseFast.js"),_shallowEqual=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/shallowEqual.js"),_is=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/is.js"),_isBinding=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isBinding.js"),_isBlockScoped=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isBlockScoped.js"),_isImmutable=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isImmutable.js"),_isLet=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isLet.js"),_isNode=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isNode.js"),_isNodesEquivalent=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isNodesEquivalent.js"),_isPlaceholderType=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isPlaceholderType.js"),_isReferenced=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isReferenced.js"),_isScope=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isScope.js"),_isSpecifierDefault=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isSpecifierDefault.js"),_isType=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isType.js"),_isValidES3Identifier=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidES3Identifier.js"),_isValidIdentifier=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidIdentifier.js"),_isVar=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isVar.js"),_matchesPattern=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/matchesPattern.js"),_validate=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/validate.js"),_buildMatchMemberExpression=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js"),_generated4=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js");Object.keys(_generated4).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_generated4[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _generated4[key]}}))}));var _deprecationWarning=__nested_webpack_require_1464913__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/deprecationWarning.js");const react={isReactComponent:_isReactComponent.default,isCompatTag:_isCompatTag.default,buildChildren:_buildChildren.default};exports.react=react},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js":(__unused_webpack_module,exports,__nested_webpack_require_1484291__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(member,append,computed=!1){return member.object=(0,_generated.memberExpression)(member.object,member.property,member.computed),member.property=append,member.computed=!!computed,member};var _generated=__nested_webpack_require_1484291__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js":(__unused_webpack_module,exports,__nested_webpack_require_1484879__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function removeTypeDuplicates(nodesIn){const nodes=Array.from(nodesIn),generics=new Map,bases=new Map,typeGroups=new Set,types=[];for(let i=0;i<nodes.length;i++){const node=nodes[i];if(node&&!(types.indexOf(node)>=0)){if((0,_generated.isAnyTypeAnnotation)(node))return[node];if((0,_generated.isFlowBaseAnnotation)(node))bases.set(node.type,node);else if((0,_generated.isUnionTypeAnnotation)(node))typeGroups.has(node.types)||(nodes.push(...node.types),typeGroups.add(node.types));else if((0,_generated.isGenericTypeAnnotation)(node)){const name=getQualifiedName(node.id);if(generics.has(name)){let existing=generics.get(name);existing.typeParameters?node.typeParameters&&(existing.typeParameters.params.push(...node.typeParameters.params),existing.typeParameters.params=removeTypeDuplicates(existing.typeParameters.params)):existing=node.typeParameters}else generics.set(name,node)}else types.push(node)}}for(const[,baseType]of bases)types.push(baseType);for(const[,genericName]of generics)types.push(genericName);return types};var _generated=__nested_webpack_require_1484879__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js");function getQualifiedName(node){return(0,_generated.isIdentifier)(node)?node.name:`${node.id.name}.${getQualifiedName(node.qualification)}`}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/inherits.js":(__unused_webpack_module,exports,__nested_webpack_require_1486427__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(child,parent){if(!child||!parent)return child;for(const key of _constants.INHERIT_KEYS.optional)null==child[key]&&(child[key]=parent[key]);for(const key of Object.keys(parent))"_"===key[0]&&"__clone"!==key&&(child[key]=parent[key]);for(const key of _constants.INHERIT_KEYS.force)child[key]=parent[key];return(0,_inheritsComments.default)(child,parent),child};var _constants=__nested_webpack_require_1486427__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js"),_inheritsComments=__nested_webpack_require_1486427__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/comments/inheritsComments.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js":(__unused_webpack_module,exports,__nested_webpack_require_1487321__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(member,prepend){if((0,_.isSuper)(member.object))throw new Error("Cannot prepend node to super property access (`super.foo`).");return member.object=(0,_generated.memberExpression)(prepend,member.object),member};var _generated=__nested_webpack_require_1487321__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_=__nested_webpack_require_1487321__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/removeProperties.js":(__unused_webpack_module,exports,__nested_webpack_require_1488031__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,opts={}){const map=opts.preserveComments?CLEAR_KEYS:CLEAR_KEYS_PLUS_COMMENTS;for(const key of map)null!=node[key]&&(node[key]=void 0);for(const key of Object.keys(node))"_"===key[0]&&null!=node[key]&&(node[key]=void 0);const symbols=Object.getOwnPropertySymbols(node);for(const sym of symbols)node[sym]=null};var _constants=__nested_webpack_require_1488031__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js");const CLEAR_KEYS=["tokens","start","end","loc","raw","rawValue"],CLEAR_KEYS_PLUS_COMMENTS=[..._constants.COMMENT_KEYS,"comments",...CLEAR_KEYS]},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js":(__unused_webpack_module,exports,__nested_webpack_require_1488878__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(tree,opts){return(0,_traverseFast.default)(tree,_removeProperties.default,opts),tree};var _traverseFast=__nested_webpack_require_1488878__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/traverse/traverseFast.js"),_removeProperties=__nested_webpack_require_1488878__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/removeProperties.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js":(__unused_webpack_module,exports,__nested_webpack_require_1489519__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function removeTypeDuplicates(nodesIn){const nodes=Array.from(nodesIn),generics=new Map,bases=new Map,typeGroups=new Set,types=[];for(let i=0;i<nodes.length;i++){const node=nodes[i];if(node&&!(types.indexOf(node)>=0)){if((0,_generated.isTSAnyKeyword)(node))return[node];if((0,_generated.isTSBaseType)(node))bases.set(node.type,node);else if((0,_generated.isTSUnionType)(node))typeGroups.has(node.types)||(nodes.push(...node.types),typeGroups.add(node.types));else if((0,_generated.isTSTypeReference)(node)&&node.typeParameters){const name=getQualifiedName(node.typeName);if(generics.has(name)){let existing=generics.get(name);existing.typeParameters?node.typeParameters&&(existing.typeParameters.params.push(...node.typeParameters.params),existing.typeParameters.params=removeTypeDuplicates(existing.typeParameters.params)):existing=node.typeParameters}else generics.set(name,node)}else types.push(node)}}for(const[,baseType]of bases)types.push(baseType);for(const[,genericName]of generics)types.push(genericName);return types};var _generated=__nested_webpack_require_1489519__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js");function getQualifiedName(node){return(0,_generated.isIdentifier)(node)?node.name:`${node.right.name}.${getQualifiedName(node.left)}`}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js":(__unused_webpack_module,exports,__nested_webpack_require_1491071__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=getBindingIdentifiers;var _generated=__nested_webpack_require_1491071__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js");function getBindingIdentifiers(node,duplicates,outerOnly){const search=[].concat(node),ids=Object.create(null);for(;search.length;){const id=search.shift();if(!id)continue;const keys=getBindingIdentifiers.keys[id.type];if((0,_generated.isIdentifier)(id))if(duplicates){(ids[id.name]=ids[id.name]||[]).push(id)}else ids[id.name]=id;else if(!(0,_generated.isExportDeclaration)(id)||(0,_generated.isExportAllDeclaration)(id)){if(outerOnly){if((0,_generated.isFunctionDeclaration)(id)){search.push(id.id);continue}if((0,_generated.isFunctionExpression)(id))continue}if(keys)for(let i=0;i<keys.length;i++){const nodes=id[keys[i]];nodes&&(Array.isArray(nodes)?search.push(...nodes):search.push(nodes))}}else(0,_generated.isDeclaration)(id.declaration)&&search.push(id.declaration)}return ids}getBindingIdentifiers.keys={DeclareClass:["id"],DeclareFunction:["id"],DeclareModule:["id"],DeclareVariable:["id"],DeclareInterface:["id"],DeclareTypeAlias:["id"],DeclareOpaqueType:["id"],InterfaceDeclaration:["id"],TypeAlias:["id"],OpaqueType:["id"],CatchClause:["param"],LabeledStatement:["label"],UnaryExpression:["argument"],AssignmentExpression:["left"],ImportSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportDefaultSpecifier:["local"],ImportDeclaration:["specifiers"],ExportSpecifier:["exported"],ExportNamespaceSpecifier:["exported"],ExportDefaultSpecifier:["exported"],FunctionDeclaration:["id","params"],FunctionExpression:["id","params"],ArrowFunctionExpression:["params"],ObjectMethod:["params"],ClassMethod:["params"],ClassPrivateMethod:["params"],ForInStatement:["left"],ForOfStatement:["left"],ClassDeclaration:["id"],ClassExpression:["id"],RestElement:["argument"],UpdateExpression:["argument"],ObjectProperty:["value"],AssignmentPattern:["left"],ArrayPattern:["elements"],ObjectPattern:["properties"],VariableDeclaration:["declarations"],VariableDeclarator:["id"]}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js":(__unused_webpack_module,exports,__nested_webpack_require_1493366__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _getBindingIdentifiers=__nested_webpack_require_1493366__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js"),_default=function(node,duplicates){return(0,_getBindingIdentifiers.default)(node,duplicates,!0)};exports.default=_default},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/traverse/traverse.js":(__unused_webpack_module,exports,__nested_webpack_require_1493887__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,handlers,state){"function"==typeof handlers&&(handlers={enter:handlers});const{enter,exit}=handlers;traverseSimpleImpl(node,enter,exit,state,[])};var _definitions=__nested_webpack_require_1493887__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js");function traverseSimpleImpl(node,enter,exit,state,ancestors){const keys=_definitions.VISITOR_KEYS[node.type];if(keys){enter&&enter(node,ancestors,state);for(const key of keys){const subNode=node[key];if(Array.isArray(subNode))for(let i=0;i<subNode.length;i++){const child=subNode[i];child&&(ancestors.push({node,key,index:i}),traverseSimpleImpl(child,enter,exit,state,ancestors),ancestors.pop())}else subNode&&(ancestors.push({node,key}),traverseSimpleImpl(subNode,enter,exit,state,ancestors),ancestors.pop())}exit&&exit(node,ancestors,state)}}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/traverse/traverseFast.js":(__unused_webpack_module,exports,__nested_webpack_require_1494963__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function traverseFast(node,enter,opts){if(!node)return;const keys=_definitions.VISITOR_KEYS[node.type];if(!keys)return;enter(node,opts=opts||{});for(const key of keys){const subNode=node[key];if(Array.isArray(subNode))for(const node of subNode)traverseFast(node,enter,opts);else traverseFast(subNode,enter,opts)}};var _definitions=__nested_webpack_require_1494963__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/deprecationWarning.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(oldName,newName,prefix=""){if(warnings.has(oldName))return;warnings.add(oldName);const{internal,trace}=function(skip,length){const{stackTraceLimit,prepareStackTrace}=Error;let stackTrace;if(Error.stackTraceLimit=1+skip+length,Error.prepareStackTrace=function(err,stack){stackTrace=stack},(new Error).stack,Error.stackTraceLimit=stackTraceLimit,Error.prepareStackTrace=prepareStackTrace,!stackTrace)return{internal:!1,trace:""};const shortStackTrace=stackTrace.slice(1+skip,1+skip+length);return{internal:/[\\/]@babel[\\/]/.test(shortStackTrace[1].getFileName()),trace:shortStackTrace.map((frame=>`    at ${frame}`)).join("\n")}}(1,2);if(internal)return;console.warn(`${prefix}\`${oldName}\` has been deprecated, please migrate to \`${newName}\`\n${trace}`)};const warnings=new Set},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/inherit.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(key,child,parent){child&&parent&&(child[key]=Array.from(new Set([].concat(child[key],parent[key]).filter(Boolean))))}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js":(__unused_webpack_module,exports,__nested_webpack_require_1497016__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(child,args){const lines=child.value.split(/\r\n|\n|\r/);let lastNonEmptyLine=0;for(let i=0;i<lines.length;i++)lines[i].match(/[^ \t]/)&&(lastNonEmptyLine=i);let str="";for(let i=0;i<lines.length;i++){const line=lines[i],isFirstLine=0===i,isLastLine=i===lines.length-1,isLastNonEmptyLine=i===lastNonEmptyLine;let trimmedLine=line.replace(/\t/g," ");isFirstLine||(trimmedLine=trimmedLine.replace(/^[ ]+/,"")),isLastLine||(trimmedLine=trimmedLine.replace(/[ ]+$/,"")),trimmedLine&&(isLastNonEmptyLine||(trimmedLine+=" "),str+=trimmedLine)}str&&args.push((0,_.inherits)((0,_generated.stringLiteral)(str),child))};var _generated=__nested_webpack_require_1497016__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/builders/generated/index.js"),_=__nested_webpack_require_1497016__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/shallowEqual.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(actual,expected){const keys=Object.keys(expected);for(const key of keys)if(actual[key]!==expected[key])return!1;return!0}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js":(__unused_webpack_module,exports,__nested_webpack_require_1498478__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(match,allowPartial){const parts=match.split(".");return member=>(0,_matchesPattern.default)(member,parts,allowPartial)};var _matchesPattern=__nested_webpack_require_1498478__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/matchesPattern.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js":(__unused_webpack_module,exports,__nested_webpack_require_1498994__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isAccessor=function(node,opts){if(!node)return!1;if("ClassAccessorProperty"!==node.type)return!1;return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isAnyTypeAnnotation=function(node,opts){return!!node&&("AnyTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isArgumentPlaceholder=function(node,opts){return!!node&&("ArgumentPlaceholder"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isArrayExpression=function(node,opts){return!!node&&("ArrayExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isArrayPattern=function(node,opts){return!!node&&("ArrayPattern"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isArrayTypeAnnotation=function(node,opts){return!!node&&("ArrayTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isArrowFunctionExpression=function(node,opts){return!!node&&("ArrowFunctionExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isAssignmentExpression=function(node,opts){return!!node&&("AssignmentExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isAssignmentPattern=function(node,opts){return!!node&&("AssignmentPattern"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isAwaitExpression=function(node,opts){return!!node&&("AwaitExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBigIntLiteral=function(node,opts){return!!node&&("BigIntLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBinary=function(node,opts){if(!node)return!1;switch(node.type){case"BinaryExpression":case"LogicalExpression":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isBinaryExpression=function(node,opts){return!!node&&("BinaryExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBindExpression=function(node,opts){return!!node&&("BindExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBlock=function(node,opts){if(!node)return!1;switch(node.type){case"BlockStatement":case"Program":case"TSModuleBlock":break;case"Placeholder":if("BlockStatement"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isBlockParent=function(node,opts){if(!node)return!1;switch(node.type){case"BlockStatement":case"CatchClause":case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"FunctionDeclaration":case"FunctionExpression":case"Program":case"ObjectMethod":case"SwitchStatement":case"WhileStatement":case"ArrowFunctionExpression":case"ForOfStatement":case"ClassMethod":case"ClassPrivateMethod":case"StaticBlock":case"TSModuleBlock":break;case"Placeholder":if("BlockStatement"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isBlockStatement=function(node,opts){return!!node&&("BlockStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBooleanLiteral=function(node,opts){return!!node&&("BooleanLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBooleanLiteralTypeAnnotation=function(node,opts){return!!node&&("BooleanLiteralTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBooleanTypeAnnotation=function(node,opts){return!!node&&("BooleanTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isBreakStatement=function(node,opts){return!!node&&("BreakStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isCallExpression=function(node,opts){return!!node&&("CallExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isCatchClause=function(node,opts){return!!node&&("CatchClause"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClass=function(node,opts){if(!node)return!1;switch(node.type){case"ClassExpression":case"ClassDeclaration":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isClassAccessorProperty=function(node,opts){return!!node&&("ClassAccessorProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassBody=function(node,opts){return!!node&&("ClassBody"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassDeclaration=function(node,opts){return!!node&&("ClassDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassExpression=function(node,opts){return!!node&&("ClassExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassImplements=function(node,opts){return!!node&&("ClassImplements"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassMethod=function(node,opts){return!!node&&("ClassMethod"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassPrivateMethod=function(node,opts){return!!node&&("ClassPrivateMethod"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassPrivateProperty=function(node,opts){return!!node&&("ClassPrivateProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isClassProperty=function(node,opts){return!!node&&("ClassProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isCompletionStatement=function(node,opts){if(!node)return!1;switch(node.type){case"BreakStatement":case"ContinueStatement":case"ReturnStatement":case"ThrowStatement":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isConditional=function(node,opts){if(!node)return!1;switch(node.type){case"ConditionalExpression":case"IfStatement":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isConditionalExpression=function(node,opts){return!!node&&("ConditionalExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isContinueStatement=function(node,opts){return!!node&&("ContinueStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDebuggerStatement=function(node,opts){return!!node&&("DebuggerStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDecimalLiteral=function(node,opts){return!!node&&("DecimalLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclaration=function(node,opts){if(!node)return!1;switch(node.type){case"FunctionDeclaration":case"VariableDeclaration":case"ClassDeclaration":case"ExportAllDeclaration":case"ExportDefaultDeclaration":case"ExportNamedDeclaration":case"ImportDeclaration":case"DeclareClass":case"DeclareFunction":case"DeclareInterface":case"DeclareModule":case"DeclareModuleExports":case"DeclareTypeAlias":case"DeclareOpaqueType":case"DeclareVariable":case"DeclareExportDeclaration":case"DeclareExportAllDeclaration":case"InterfaceDeclaration":case"OpaqueType":case"TypeAlias":case"EnumDeclaration":case"TSDeclareFunction":case"TSInterfaceDeclaration":case"TSTypeAliasDeclaration":case"TSEnumDeclaration":case"TSModuleDeclaration":break;case"Placeholder":if("Declaration"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isDeclareClass=function(node,opts){return!!node&&("DeclareClass"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareExportAllDeclaration=function(node,opts){return!!node&&("DeclareExportAllDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareExportDeclaration=function(node,opts){return!!node&&("DeclareExportDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareFunction=function(node,opts){return!!node&&("DeclareFunction"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareInterface=function(node,opts){return!!node&&("DeclareInterface"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareModule=function(node,opts){return!!node&&("DeclareModule"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareModuleExports=function(node,opts){return!!node&&("DeclareModuleExports"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareOpaqueType=function(node,opts){return!!node&&("DeclareOpaqueType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareTypeAlias=function(node,opts){return!!node&&("DeclareTypeAlias"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclareVariable=function(node,opts){return!!node&&("DeclareVariable"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDeclaredPredicate=function(node,opts){return!!node&&("DeclaredPredicate"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDecorator=function(node,opts){return!!node&&("Decorator"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDirective=function(node,opts){return!!node&&("Directive"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDirectiveLiteral=function(node,opts){return!!node&&("DirectiveLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDoExpression=function(node,opts){return!!node&&("DoExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isDoWhileStatement=function(node,opts){return!!node&&("DoWhileStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEmptyStatement=function(node,opts){return!!node&&("EmptyStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEmptyTypeAnnotation=function(node,opts){return!!node&&("EmptyTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumBody=function(node,opts){if(!node)return!1;switch(node.type){case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isEnumBooleanBody=function(node,opts){return!!node&&("EnumBooleanBody"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumBooleanMember=function(node,opts){return!!node&&("EnumBooleanMember"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumDeclaration=function(node,opts){return!!node&&("EnumDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumDefaultedMember=function(node,opts){return!!node&&("EnumDefaultedMember"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumMember=function(node,opts){if(!node)return!1;switch(node.type){case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":case"EnumDefaultedMember":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isEnumNumberBody=function(node,opts){return!!node&&("EnumNumberBody"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumNumberMember=function(node,opts){return!!node&&("EnumNumberMember"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumStringBody=function(node,opts){return!!node&&("EnumStringBody"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumStringMember=function(node,opts){return!!node&&("EnumStringMember"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isEnumSymbolBody=function(node,opts){return!!node&&("EnumSymbolBody"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExistsTypeAnnotation=function(node,opts){return!!node&&("ExistsTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExportAllDeclaration=function(node,opts){return!!node&&("ExportAllDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExportDeclaration=function(node,opts){if(!node)return!1;switch(node.type){case"ExportAllDeclaration":case"ExportDefaultDeclaration":case"ExportNamedDeclaration":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isExportDefaultDeclaration=function(node,opts){return!!node&&("ExportDefaultDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExportDefaultSpecifier=function(node,opts){return!!node&&("ExportDefaultSpecifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExportNamedDeclaration=function(node,opts){return!!node&&("ExportNamedDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExportNamespaceSpecifier=function(node,opts){return!!node&&("ExportNamespaceSpecifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExportSpecifier=function(node,opts){return!!node&&("ExportSpecifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExpression=function(node,opts){if(!node)return!1;switch(node.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"StringLiteral":case"NumericLiteral":case"NullLiteral":case"BooleanLiteral":case"RegExpLiteral":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ParenthesizedExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":case"ArrowFunctionExpression":case"ClassExpression":case"MetaProperty":case"Super":case"TaggedTemplateExpression":case"TemplateLiteral":case"YieldExpression":case"AwaitExpression":case"Import":case"BigIntLiteral":case"OptionalMemberExpression":case"OptionalCallExpression":case"TypeCastExpression":case"JSXElement":case"JSXFragment":case"BindExpression":case"DoExpression":case"RecordExpression":case"TupleExpression":case"DecimalLiteral":case"ModuleExpression":case"TopicReference":case"PipelineTopicExpression":case"PipelineBareFunction":case"PipelinePrimaryTopicReference":case"TSInstantiationExpression":case"TSAsExpression":case"TSSatisfiesExpression":case"TSTypeAssertion":case"TSNonNullExpression":break;case"Placeholder":switch(node.expectedNode){case"Expression":case"Identifier":case"StringLiteral":break;default:return!1}break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isExpressionStatement=function(node,opts){return!!node&&("ExpressionStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isExpressionWrapper=function(node,opts){if(!node)return!1;switch(node.type){case"ExpressionStatement":case"ParenthesizedExpression":case"TypeCastExpression":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFile=function(node,opts){return!!node&&("File"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isFlow=function(node,opts){if(!node)return!1;switch(node.type){case"AnyTypeAnnotation":case"ArrayTypeAnnotation":case"BooleanTypeAnnotation":case"BooleanLiteralTypeAnnotation":case"NullLiteralTypeAnnotation":case"ClassImplements":case"DeclareClass":case"DeclareFunction":case"DeclareInterface":case"DeclareModule":case"DeclareModuleExports":case"DeclareTypeAlias":case"DeclareOpaqueType":case"DeclareVariable":case"DeclareExportDeclaration":case"DeclareExportAllDeclaration":case"DeclaredPredicate":case"ExistsTypeAnnotation":case"FunctionTypeAnnotation":case"FunctionTypeParam":case"GenericTypeAnnotation":case"InferredPredicate":case"InterfaceExtends":case"InterfaceDeclaration":case"InterfaceTypeAnnotation":case"IntersectionTypeAnnotation":case"MixedTypeAnnotation":case"EmptyTypeAnnotation":case"NullableTypeAnnotation":case"NumberLiteralTypeAnnotation":case"NumberTypeAnnotation":case"ObjectTypeAnnotation":case"ObjectTypeInternalSlot":case"ObjectTypeCallProperty":case"ObjectTypeIndexer":case"ObjectTypeProperty":case"ObjectTypeSpreadProperty":case"OpaqueType":case"QualifiedTypeIdentifier":case"StringLiteralTypeAnnotation":case"StringTypeAnnotation":case"SymbolTypeAnnotation":case"ThisTypeAnnotation":case"TupleTypeAnnotation":case"TypeofTypeAnnotation":case"TypeAlias":case"TypeAnnotation":case"TypeCastExpression":case"TypeParameter":case"TypeParameterDeclaration":case"TypeParameterInstantiation":case"UnionTypeAnnotation":case"Variance":case"VoidTypeAnnotation":case"EnumDeclaration":case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":case"EnumDefaultedMember":case"IndexedAccessType":case"OptionalIndexedAccessType":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFlowBaseAnnotation=function(node,opts){if(!node)return!1;switch(node.type){case"AnyTypeAnnotation":case"BooleanTypeAnnotation":case"NullLiteralTypeAnnotation":case"MixedTypeAnnotation":case"EmptyTypeAnnotation":case"NumberTypeAnnotation":case"StringTypeAnnotation":case"SymbolTypeAnnotation":case"ThisTypeAnnotation":case"VoidTypeAnnotation":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFlowDeclaration=function(node,opts){if(!node)return!1;switch(node.type){case"DeclareClass":case"DeclareFunction":case"DeclareInterface":case"DeclareModule":case"DeclareModuleExports":case"DeclareTypeAlias":case"DeclareOpaqueType":case"DeclareVariable":case"DeclareExportDeclaration":case"DeclareExportAllDeclaration":case"InterfaceDeclaration":case"OpaqueType":case"TypeAlias":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFlowPredicate=function(node,opts){if(!node)return!1;switch(node.type){case"DeclaredPredicate":case"InferredPredicate":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFlowType=function(node,opts){if(!node)return!1;switch(node.type){case"AnyTypeAnnotation":case"ArrayTypeAnnotation":case"BooleanTypeAnnotation":case"BooleanLiteralTypeAnnotation":case"NullLiteralTypeAnnotation":case"ExistsTypeAnnotation":case"FunctionTypeAnnotation":case"GenericTypeAnnotation":case"InterfaceTypeAnnotation":case"IntersectionTypeAnnotation":case"MixedTypeAnnotation":case"EmptyTypeAnnotation":case"NullableTypeAnnotation":case"NumberLiteralTypeAnnotation":case"NumberTypeAnnotation":case"ObjectTypeAnnotation":case"StringLiteralTypeAnnotation":case"StringTypeAnnotation":case"SymbolTypeAnnotation":case"ThisTypeAnnotation":case"TupleTypeAnnotation":case"TypeofTypeAnnotation":case"UnionTypeAnnotation":case"VoidTypeAnnotation":case"IndexedAccessType":case"OptionalIndexedAccessType":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFor=function(node,opts){if(!node)return!1;switch(node.type){case"ForInStatement":case"ForStatement":case"ForOfStatement":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isForInStatement=function(node,opts){return!!node&&("ForInStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isForOfStatement=function(node,opts){return!!node&&("ForOfStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isForStatement=function(node,opts){return!!node&&("ForStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isForXStatement=function(node,opts){if(!node)return!1;switch(node.type){case"ForInStatement":case"ForOfStatement":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFunction=function(node,opts){if(!node)return!1;switch(node.type){case"FunctionDeclaration":case"FunctionExpression":case"ObjectMethod":case"ArrowFunctionExpression":case"ClassMethod":case"ClassPrivateMethod":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFunctionDeclaration=function(node,opts){return!!node&&("FunctionDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isFunctionExpression=function(node,opts){return!!node&&("FunctionExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isFunctionParent=function(node,opts){if(!node)return!1;switch(node.type){case"FunctionDeclaration":case"FunctionExpression":case"ObjectMethod":case"ArrowFunctionExpression":case"ClassMethod":case"ClassPrivateMethod":case"StaticBlock":case"TSModuleBlock":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isFunctionTypeAnnotation=function(node,opts){return!!node&&("FunctionTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isFunctionTypeParam=function(node,opts){return!!node&&("FunctionTypeParam"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isGenericTypeAnnotation=function(node,opts){return!!node&&("GenericTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isIdentifier=function(node,opts){return!!node&&("Identifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isIfStatement=function(node,opts){return!!node&&("IfStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isImmutable=function(node,opts){if(!node)return!1;switch(node.type){case"StringLiteral":case"NumericLiteral":case"NullLiteral":case"BooleanLiteral":case"BigIntLiteral":case"JSXAttribute":case"JSXClosingElement":case"JSXElement":case"JSXExpressionContainer":case"JSXSpreadChild":case"JSXOpeningElement":case"JSXText":case"JSXFragment":case"JSXOpeningFragment":case"JSXClosingFragment":case"DecimalLiteral":break;case"Placeholder":if("StringLiteral"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isImport=function(node,opts){return!!node&&("Import"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isImportAttribute=function(node,opts){return!!node&&("ImportAttribute"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isImportDeclaration=function(node,opts){return!!node&&("ImportDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isImportDefaultSpecifier=function(node,opts){return!!node&&("ImportDefaultSpecifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isImportNamespaceSpecifier=function(node,opts){return!!node&&("ImportNamespaceSpecifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isImportOrExportDeclaration=isImportOrExportDeclaration,exports.isImportSpecifier=function(node,opts){return!!node&&("ImportSpecifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isIndexedAccessType=function(node,opts){return!!node&&("IndexedAccessType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isInferredPredicate=function(node,opts){return!!node&&("InferredPredicate"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isInterfaceDeclaration=function(node,opts){return!!node&&("InterfaceDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isInterfaceExtends=function(node,opts){return!!node&&("InterfaceExtends"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isInterfaceTypeAnnotation=function(node,opts){return!!node&&("InterfaceTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isInterpreterDirective=function(node,opts){return!!node&&("InterpreterDirective"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isIntersectionTypeAnnotation=function(node,opts){return!!node&&("IntersectionTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSX=function(node,opts){if(!node)return!1;switch(node.type){case"JSXAttribute":case"JSXClosingElement":case"JSXElement":case"JSXEmptyExpression":case"JSXExpressionContainer":case"JSXSpreadChild":case"JSXIdentifier":case"JSXMemberExpression":case"JSXNamespacedName":case"JSXOpeningElement":case"JSXSpreadAttribute":case"JSXText":case"JSXFragment":case"JSXOpeningFragment":case"JSXClosingFragment":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isJSXAttribute=function(node,opts){return!!node&&("JSXAttribute"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXClosingElement=function(node,opts){return!!node&&("JSXClosingElement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXClosingFragment=function(node,opts){return!!node&&("JSXClosingFragment"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXElement=function(node,opts){return!!node&&("JSXElement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXEmptyExpression=function(node,opts){return!!node&&("JSXEmptyExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXExpressionContainer=function(node,opts){return!!node&&("JSXExpressionContainer"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXFragment=function(node,opts){return!!node&&("JSXFragment"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXIdentifier=function(node,opts){return!!node&&("JSXIdentifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXMemberExpression=function(node,opts){return!!node&&("JSXMemberExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXNamespacedName=function(node,opts){return!!node&&("JSXNamespacedName"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXOpeningElement=function(node,opts){return!!node&&("JSXOpeningElement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXOpeningFragment=function(node,opts){return!!node&&("JSXOpeningFragment"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXSpreadAttribute=function(node,opts){return!!node&&("JSXSpreadAttribute"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXSpreadChild=function(node,opts){return!!node&&("JSXSpreadChild"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isJSXText=function(node,opts){return!!node&&("JSXText"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isLVal=function(node,opts){if(!node)return!1;switch(node.type){case"Identifier":case"MemberExpression":case"RestElement":case"AssignmentPattern":case"ArrayPattern":case"ObjectPattern":case"TSParameterProperty":case"TSAsExpression":case"TSSatisfiesExpression":case"TSTypeAssertion":case"TSNonNullExpression":break;case"Placeholder":switch(node.expectedNode){case"Pattern":case"Identifier":break;default:return!1}break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isLabeledStatement=function(node,opts){return!!node&&("LabeledStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isLiteral=function(node,opts){if(!node)return!1;switch(node.type){case"StringLiteral":case"NumericLiteral":case"NullLiteral":case"BooleanLiteral":case"RegExpLiteral":case"TemplateLiteral":case"BigIntLiteral":case"DecimalLiteral":break;case"Placeholder":if("StringLiteral"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isLogicalExpression=function(node,opts){return!!node&&("LogicalExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isLoop=function(node,opts){if(!node)return!1;switch(node.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":case"ForOfStatement":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isMemberExpression=function(node,opts){return!!node&&("MemberExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isMetaProperty=function(node,opts){return!!node&&("MetaProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isMethod=function(node,opts){if(!node)return!1;switch(node.type){case"ObjectMethod":case"ClassMethod":case"ClassPrivateMethod":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isMiscellaneous=function(node,opts){if(!node)return!1;switch(node.type){case"Noop":case"Placeholder":case"V8IntrinsicIdentifier":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isMixedTypeAnnotation=function(node,opts){return!!node&&("MixedTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isModuleDeclaration=function(node,opts){return(0,_deprecationWarning.default)("isModuleDeclaration","isImportOrExportDeclaration"),isImportOrExportDeclaration(node,opts)},exports.isModuleExpression=function(node,opts){return!!node&&("ModuleExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isModuleSpecifier=function(node,opts){if(!node)return!1;switch(node.type){case"ExportSpecifier":case"ImportDefaultSpecifier":case"ImportNamespaceSpecifier":case"ImportSpecifier":case"ExportNamespaceSpecifier":case"ExportDefaultSpecifier":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isNewExpression=function(node,opts){return!!node&&("NewExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNoop=function(node,opts){return!!node&&("Noop"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNullLiteral=function(node,opts){return!!node&&("NullLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNullLiteralTypeAnnotation=function(node,opts){return!!node&&("NullLiteralTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNullableTypeAnnotation=function(node,opts){return!!node&&("NullableTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNumberLiteral=function(node,opts){return(0,_deprecationWarning.default)("isNumberLiteral","isNumericLiteral"),!!node&&("NumberLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNumberLiteralTypeAnnotation=function(node,opts){return!!node&&("NumberLiteralTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNumberTypeAnnotation=function(node,opts){return!!node&&("NumberTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isNumericLiteral=function(node,opts){return!!node&&("NumericLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectExpression=function(node,opts){return!!node&&("ObjectExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectMember=function(node,opts){if(!node)return!1;switch(node.type){case"ObjectMethod":case"ObjectProperty":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isObjectMethod=function(node,opts){return!!node&&("ObjectMethod"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectPattern=function(node,opts){return!!node&&("ObjectPattern"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectProperty=function(node,opts){return!!node&&("ObjectProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectTypeAnnotation=function(node,opts){return!!node&&("ObjectTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectTypeCallProperty=function(node,opts){return!!node&&("ObjectTypeCallProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectTypeIndexer=function(node,opts){return!!node&&("ObjectTypeIndexer"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectTypeInternalSlot=function(node,opts){return!!node&&("ObjectTypeInternalSlot"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectTypeProperty=function(node,opts){return!!node&&("ObjectTypeProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isObjectTypeSpreadProperty=function(node,opts){return!!node&&("ObjectTypeSpreadProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isOpaqueType=function(node,opts){return!!node&&("OpaqueType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isOptionalCallExpression=function(node,opts){return!!node&&("OptionalCallExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isOptionalIndexedAccessType=function(node,opts){return!!node&&("OptionalIndexedAccessType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isOptionalMemberExpression=function(node,opts){return!!node&&("OptionalMemberExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isParenthesizedExpression=function(node,opts){return!!node&&("ParenthesizedExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isPattern=function(node,opts){if(!node)return!1;switch(node.type){case"AssignmentPattern":case"ArrayPattern":case"ObjectPattern":break;case"Placeholder":if("Pattern"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isPatternLike=function(node,opts){if(!node)return!1;switch(node.type){case"Identifier":case"RestElement":case"AssignmentPattern":case"ArrayPattern":case"ObjectPattern":case"TSAsExpression":case"TSSatisfiesExpression":case"TSTypeAssertion":case"TSNonNullExpression":break;case"Placeholder":switch(node.expectedNode){case"Pattern":case"Identifier":break;default:return!1}break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isPipelineBareFunction=function(node,opts){return!!node&&("PipelineBareFunction"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isPipelinePrimaryTopicReference=function(node,opts){return!!node&&("PipelinePrimaryTopicReference"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isPipelineTopicExpression=function(node,opts){return!!node&&("PipelineTopicExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isPlaceholder=function(node,opts){return!!node&&("Placeholder"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isPrivate=function(node,opts){if(!node)return!1;switch(node.type){case"ClassPrivateProperty":case"ClassPrivateMethod":case"PrivateName":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isPrivateName=function(node,opts){return!!node&&("PrivateName"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isProgram=function(node,opts){return!!node&&("Program"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isProperty=function(node,opts){if(!node)return!1;switch(node.type){case"ObjectProperty":case"ClassProperty":case"ClassAccessorProperty":case"ClassPrivateProperty":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isPureish=function(node,opts){if(!node)return!1;switch(node.type){case"FunctionDeclaration":case"FunctionExpression":case"StringLiteral":case"NumericLiteral":case"NullLiteral":case"BooleanLiteral":case"RegExpLiteral":case"ArrowFunctionExpression":case"BigIntLiteral":case"DecimalLiteral":break;case"Placeholder":if("StringLiteral"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isQualifiedTypeIdentifier=function(node,opts){return!!node&&("QualifiedTypeIdentifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isRecordExpression=function(node,opts){return!!node&&("RecordExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isRegExpLiteral=function(node,opts){return!!node&&("RegExpLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isRegexLiteral=function(node,opts){return(0,_deprecationWarning.default)("isRegexLiteral","isRegExpLiteral"),!!node&&("RegexLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isRestElement=function(node,opts){return!!node&&("RestElement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isRestProperty=function(node,opts){return(0,_deprecationWarning.default)("isRestProperty","isRestElement"),!!node&&("RestProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isReturnStatement=function(node,opts){return!!node&&("ReturnStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isScopable=function(node,opts){if(!node)return!1;switch(node.type){case"BlockStatement":case"CatchClause":case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"FunctionDeclaration":case"FunctionExpression":case"Program":case"ObjectMethod":case"SwitchStatement":case"WhileStatement":case"ArrowFunctionExpression":case"ClassExpression":case"ClassDeclaration":case"ForOfStatement":case"ClassMethod":case"ClassPrivateMethod":case"StaticBlock":case"TSModuleBlock":break;case"Placeholder":if("BlockStatement"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isSequenceExpression=function(node,opts){return!!node&&("SequenceExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isSpreadElement=function(node,opts){return!!node&&("SpreadElement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isSpreadProperty=function(node,opts){return(0,_deprecationWarning.default)("isSpreadProperty","isSpreadElement"),!!node&&("SpreadProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isStandardized=function(node,opts){if(!node)return!1;switch(node.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"InterpreterDirective":case"Directive":case"DirectiveLiteral":case"BlockStatement":case"BreakStatement":case"CallExpression":case"CatchClause":case"ConditionalExpression":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"File":case"ForInStatement":case"ForStatement":case"FunctionDeclaration":case"FunctionExpression":case"Identifier":case"IfStatement":case"LabeledStatement":case"StringLiteral":case"NumericLiteral":case"NullLiteral":case"BooleanLiteral":case"RegExpLiteral":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"Program":case"ObjectExpression":case"ObjectMethod":case"ObjectProperty":case"RestElement":case"ReturnStatement":case"SequenceExpression":case"ParenthesizedExpression":case"SwitchCase":case"SwitchStatement":case"ThisExpression":case"ThrowStatement":case"TryStatement":case"UnaryExpression":case"UpdateExpression":case"VariableDeclaration":case"VariableDeclarator":case"WhileStatement":case"WithStatement":case"AssignmentPattern":case"ArrayPattern":case"ArrowFunctionExpression":case"ClassBody":case"ClassExpression":case"ClassDeclaration":case"ExportAllDeclaration":case"ExportDefaultDeclaration":case"ExportNamedDeclaration":case"ExportSpecifier":case"ForOfStatement":case"ImportDeclaration":case"ImportDefaultSpecifier":case"ImportNamespaceSpecifier":case"ImportSpecifier":case"MetaProperty":case"ClassMethod":case"ObjectPattern":case"SpreadElement":case"Super":case"TaggedTemplateExpression":case"TemplateElement":case"TemplateLiteral":case"YieldExpression":case"AwaitExpression":case"Import":case"BigIntLiteral":case"ExportNamespaceSpecifier":case"OptionalMemberExpression":case"OptionalCallExpression":case"ClassProperty":case"ClassAccessorProperty":case"ClassPrivateProperty":case"ClassPrivateMethod":case"PrivateName":case"StaticBlock":break;case"Placeholder":switch(node.expectedNode){case"Identifier":case"StringLiteral":case"BlockStatement":case"ClassBody":break;default:return!1}break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isStatement=function(node,opts){if(!node)return!1;switch(node.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"FunctionDeclaration":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":case"ClassDeclaration":case"ExportAllDeclaration":case"ExportDefaultDeclaration":case"ExportNamedDeclaration":case"ForOfStatement":case"ImportDeclaration":case"DeclareClass":case"DeclareFunction":case"DeclareInterface":case"DeclareModule":case"DeclareModuleExports":case"DeclareTypeAlias":case"DeclareOpaqueType":case"DeclareVariable":case"DeclareExportDeclaration":case"DeclareExportAllDeclaration":case"InterfaceDeclaration":case"OpaqueType":case"TypeAlias":case"EnumDeclaration":case"TSDeclareFunction":case"TSInterfaceDeclaration":case"TSTypeAliasDeclaration":case"TSEnumDeclaration":case"TSModuleDeclaration":case"TSImportEqualsDeclaration":case"TSExportAssignment":case"TSNamespaceExportDeclaration":break;case"Placeholder":switch(node.expectedNode){case"Statement":case"Declaration":case"BlockStatement":break;default:return!1}break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isStaticBlock=function(node,opts){return!!node&&("StaticBlock"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isStringLiteral=function(node,opts){return!!node&&("StringLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isStringLiteralTypeAnnotation=function(node,opts){return!!node&&("StringLiteralTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isStringTypeAnnotation=function(node,opts){return!!node&&("StringTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isSuper=function(node,opts){return!!node&&("Super"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isSwitchCase=function(node,opts){return!!node&&("SwitchCase"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isSwitchStatement=function(node,opts){return!!node&&("SwitchStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isSymbolTypeAnnotation=function(node,opts){return!!node&&("SymbolTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSAnyKeyword=function(node,opts){return!!node&&("TSAnyKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSArrayType=function(node,opts){return!!node&&("TSArrayType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSAsExpression=function(node,opts){return!!node&&("TSAsExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSBaseType=function(node,opts){if(!node)return!1;switch(node.type){case"TSAnyKeyword":case"TSBooleanKeyword":case"TSBigIntKeyword":case"TSIntrinsicKeyword":case"TSNeverKeyword":case"TSNullKeyword":case"TSNumberKeyword":case"TSObjectKeyword":case"TSStringKeyword":case"TSSymbolKeyword":case"TSUndefinedKeyword":case"TSUnknownKeyword":case"TSVoidKeyword":case"TSThisType":case"TSLiteralType":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isTSBigIntKeyword=function(node,opts){return!!node&&("TSBigIntKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSBooleanKeyword=function(node,opts){return!!node&&("TSBooleanKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSCallSignatureDeclaration=function(node,opts){return!!node&&("TSCallSignatureDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSConditionalType=function(node,opts){return!!node&&("TSConditionalType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSConstructSignatureDeclaration=function(node,opts){return!!node&&("TSConstructSignatureDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSConstructorType=function(node,opts){return!!node&&("TSConstructorType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSDeclareFunction=function(node,opts){return!!node&&("TSDeclareFunction"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSDeclareMethod=function(node,opts){return!!node&&("TSDeclareMethod"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSEntityName=function(node,opts){if(!node)return!1;switch(node.type){case"Identifier":case"TSQualifiedName":break;case"Placeholder":if("Identifier"===node.expectedNode)break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isTSEnumDeclaration=function(node,opts){return!!node&&("TSEnumDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSEnumMember=function(node,opts){return!!node&&("TSEnumMember"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSExportAssignment=function(node,opts){return!!node&&("TSExportAssignment"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSExpressionWithTypeArguments=function(node,opts){return!!node&&("TSExpressionWithTypeArguments"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSExternalModuleReference=function(node,opts){return!!node&&("TSExternalModuleReference"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSFunctionType=function(node,opts){return!!node&&("TSFunctionType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSImportEqualsDeclaration=function(node,opts){return!!node&&("TSImportEqualsDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSImportType=function(node,opts){return!!node&&("TSImportType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSIndexSignature=function(node,opts){return!!node&&("TSIndexSignature"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSIndexedAccessType=function(node,opts){return!!node&&("TSIndexedAccessType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSInferType=function(node,opts){return!!node&&("TSInferType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSInstantiationExpression=function(node,opts){return!!node&&("TSInstantiationExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSInterfaceBody=function(node,opts){return!!node&&("TSInterfaceBody"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSInterfaceDeclaration=function(node,opts){return!!node&&("TSInterfaceDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSIntersectionType=function(node,opts){return!!node&&("TSIntersectionType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSIntrinsicKeyword=function(node,opts){return!!node&&("TSIntrinsicKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSLiteralType=function(node,opts){return!!node&&("TSLiteralType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSMappedType=function(node,opts){return!!node&&("TSMappedType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSMethodSignature=function(node,opts){return!!node&&("TSMethodSignature"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSModuleBlock=function(node,opts){return!!node&&("TSModuleBlock"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSModuleDeclaration=function(node,opts){return!!node&&("TSModuleDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSNamedTupleMember=function(node,opts){return!!node&&("TSNamedTupleMember"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSNamespaceExportDeclaration=function(node,opts){return!!node&&("TSNamespaceExportDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSNeverKeyword=function(node,opts){return!!node&&("TSNeverKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSNonNullExpression=function(node,opts){return!!node&&("TSNonNullExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSNullKeyword=function(node,opts){return!!node&&("TSNullKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSNumberKeyword=function(node,opts){return!!node&&("TSNumberKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSObjectKeyword=function(node,opts){return!!node&&("TSObjectKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSOptionalType=function(node,opts){return!!node&&("TSOptionalType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSParameterProperty=function(node,opts){return!!node&&("TSParameterProperty"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSParenthesizedType=function(node,opts){return!!node&&("TSParenthesizedType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSPropertySignature=function(node,opts){return!!node&&("TSPropertySignature"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSQualifiedName=function(node,opts){return!!node&&("TSQualifiedName"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSRestType=function(node,opts){return!!node&&("TSRestType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSSatisfiesExpression=function(node,opts){return!!node&&("TSSatisfiesExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSStringKeyword=function(node,opts){return!!node&&("TSStringKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSSymbolKeyword=function(node,opts){return!!node&&("TSSymbolKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSThisType=function(node,opts){return!!node&&("TSThisType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTupleType=function(node,opts){return!!node&&("TSTupleType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSType=function(node,opts){if(!node)return!1;switch(node.type){case"TSAnyKeyword":case"TSBooleanKeyword":case"TSBigIntKeyword":case"TSIntrinsicKeyword":case"TSNeverKeyword":case"TSNullKeyword":case"TSNumberKeyword":case"TSObjectKeyword":case"TSStringKeyword":case"TSSymbolKeyword":case"TSUndefinedKeyword":case"TSUnknownKeyword":case"TSVoidKeyword":case"TSThisType":case"TSFunctionType":case"TSConstructorType":case"TSTypeReference":case"TSTypePredicate":case"TSTypeQuery":case"TSTypeLiteral":case"TSArrayType":case"TSTupleType":case"TSOptionalType":case"TSRestType":case"TSUnionType":case"TSIntersectionType":case"TSConditionalType":case"TSInferType":case"TSParenthesizedType":case"TSTypeOperator":case"TSIndexedAccessType":case"TSMappedType":case"TSLiteralType":case"TSExpressionWithTypeArguments":case"TSImportType":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isTSTypeAliasDeclaration=function(node,opts){return!!node&&("TSTypeAliasDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeAnnotation=function(node,opts){return!!node&&("TSTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeAssertion=function(node,opts){return!!node&&("TSTypeAssertion"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeElement=function(node,opts){if(!node)return!1;switch(node.type){case"TSCallSignatureDeclaration":case"TSConstructSignatureDeclaration":case"TSPropertySignature":case"TSMethodSignature":case"TSIndexSignature":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isTSTypeLiteral=function(node,opts){return!!node&&("TSTypeLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeOperator=function(node,opts){return!!node&&("TSTypeOperator"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeParameter=function(node,opts){return!!node&&("TSTypeParameter"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeParameterDeclaration=function(node,opts){return!!node&&("TSTypeParameterDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeParameterInstantiation=function(node,opts){return!!node&&("TSTypeParameterInstantiation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypePredicate=function(node,opts){return!!node&&("TSTypePredicate"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeQuery=function(node,opts){return!!node&&("TSTypeQuery"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSTypeReference=function(node,opts){return!!node&&("TSTypeReference"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSUndefinedKeyword=function(node,opts){return!!node&&("TSUndefinedKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSUnionType=function(node,opts){return!!node&&("TSUnionType"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSUnknownKeyword=function(node,opts){return!!node&&("TSUnknownKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTSVoidKeyword=function(node,opts){return!!node&&("TSVoidKeyword"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTaggedTemplateExpression=function(node,opts){return!!node&&("TaggedTemplateExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTemplateElement=function(node,opts){return!!node&&("TemplateElement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTemplateLiteral=function(node,opts){return!!node&&("TemplateLiteral"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTerminatorless=function(node,opts){if(!node)return!1;switch(node.type){case"BreakStatement":case"ContinueStatement":case"ReturnStatement":case"ThrowStatement":case"YieldExpression":case"AwaitExpression":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isThisExpression=function(node,opts){return!!node&&("ThisExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isThisTypeAnnotation=function(node,opts){return!!node&&("ThisTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isThrowStatement=function(node,opts){return!!node&&("ThrowStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTopicReference=function(node,opts){return!!node&&("TopicReference"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTryStatement=function(node,opts){return!!node&&("TryStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTupleExpression=function(node,opts){return!!node&&("TupleExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTupleTypeAnnotation=function(node,opts){return!!node&&("TupleTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTypeAlias=function(node,opts){return!!node&&("TypeAlias"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTypeAnnotation=function(node,opts){return!!node&&("TypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTypeCastExpression=function(node,opts){return!!node&&("TypeCastExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTypeParameter=function(node,opts){return!!node&&("TypeParameter"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTypeParameterDeclaration=function(node,opts){return!!node&&("TypeParameterDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTypeParameterInstantiation=function(node,opts){return!!node&&("TypeParameterInstantiation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isTypeScript=function(node,opts){if(!node)return!1;switch(node.type){case"TSParameterProperty":case"TSDeclareFunction":case"TSDeclareMethod":case"TSQualifiedName":case"TSCallSignatureDeclaration":case"TSConstructSignatureDeclaration":case"TSPropertySignature":case"TSMethodSignature":case"TSIndexSignature":case"TSAnyKeyword":case"TSBooleanKeyword":case"TSBigIntKeyword":case"TSIntrinsicKeyword":case"TSNeverKeyword":case"TSNullKeyword":case"TSNumberKeyword":case"TSObjectKeyword":case"TSStringKeyword":case"TSSymbolKeyword":case"TSUndefinedKeyword":case"TSUnknownKeyword":case"TSVoidKeyword":case"TSThisType":case"TSFunctionType":case"TSConstructorType":case"TSTypeReference":case"TSTypePredicate":case"TSTypeQuery":case"TSTypeLiteral":case"TSArrayType":case"TSTupleType":case"TSOptionalType":case"TSRestType":case"TSNamedTupleMember":case"TSUnionType":case"TSIntersectionType":case"TSConditionalType":case"TSInferType":case"TSParenthesizedType":case"TSTypeOperator":case"TSIndexedAccessType":case"TSMappedType":case"TSLiteralType":case"TSExpressionWithTypeArguments":case"TSInterfaceDeclaration":case"TSInterfaceBody":case"TSTypeAliasDeclaration":case"TSInstantiationExpression":case"TSAsExpression":case"TSSatisfiesExpression":case"TSTypeAssertion":case"TSEnumDeclaration":case"TSEnumMember":case"TSModuleDeclaration":case"TSModuleBlock":case"TSImportType":case"TSImportEqualsDeclaration":case"TSExternalModuleReference":case"TSNonNullExpression":case"TSExportAssignment":case"TSNamespaceExportDeclaration":case"TSTypeAnnotation":case"TSTypeParameterInstantiation":case"TSTypeParameterDeclaration":case"TSTypeParameter":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isTypeofTypeAnnotation=function(node,opts){return!!node&&("TypeofTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isUnaryExpression=function(node,opts){return!!node&&("UnaryExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isUnaryLike=function(node,opts){if(!node)return!1;switch(node.type){case"UnaryExpression":case"SpreadElement":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isUnionTypeAnnotation=function(node,opts){return!!node&&("UnionTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isUpdateExpression=function(node,opts){return!!node&&("UpdateExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isUserWhitespacable=function(node,opts){if(!node)return!1;switch(node.type){case"ObjectMethod":case"ObjectProperty":case"ObjectTypeInternalSlot":case"ObjectTypeCallProperty":case"ObjectTypeIndexer":case"ObjectTypeProperty":case"ObjectTypeSpreadProperty":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isV8IntrinsicIdentifier=function(node,opts){return!!node&&("V8IntrinsicIdentifier"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isVariableDeclaration=function(node,opts){return!!node&&("VariableDeclaration"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isVariableDeclarator=function(node,opts){return!!node&&("VariableDeclarator"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isVariance=function(node,opts){return!!node&&("Variance"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isVoidTypeAnnotation=function(node,opts){return!!node&&("VoidTypeAnnotation"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isWhile=function(node,opts){if(!node)return!1;switch(node.type){case"DoWhileStatement":case"WhileStatement":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)},exports.isWhileStatement=function(node,opts){return!!node&&("WhileStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isWithStatement=function(node,opts){return!!node&&("WithStatement"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))},exports.isYieldExpression=function(node,opts){return!!node&&("YieldExpression"===node.type&&(null==opts||(0,_shallowEqual.default)(node,opts)))};var _shallowEqual=__nested_webpack_require_1498994__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/shallowEqual.js"),_deprecationWarning=__nested_webpack_require_1498994__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/deprecationWarning.js");function isImportOrExportDeclaration(node,opts){if(!node)return!1;switch(node.type){case"ExportAllDeclaration":case"ExportDefaultDeclaration":case"ExportNamedDeclaration":case"ImportDeclaration":break;default:return!1}return null==opts||(0,_shallowEqual.default)(node,opts)}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/is.js":(__unused_webpack_module,exports,__nested_webpack_require_1561583__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(type,node,opts){if(!node)return!1;if(!(0,_isType.default)(node.type,type))return!opts&&"Placeholder"===node.type&&type in _definitions.FLIPPED_ALIAS_KEYS&&(0,_isPlaceholderType.default)(node.expectedNode,type);return void 0===opts||(0,_shallowEqual.default)(node,opts)};var _shallowEqual=__nested_webpack_require_1561583__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/utils/shallowEqual.js"),_isType=__nested_webpack_require_1561583__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isType.js"),_isPlaceholderType=__nested_webpack_require_1561583__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isPlaceholderType.js"),_definitions=__nested_webpack_require_1561583__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isBinding.js":(__unused_webpack_module,exports,__nested_webpack_require_1562630__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,parent,grandparent){if(grandparent&&"Identifier"===node.type&&"ObjectProperty"===parent.type&&"ObjectExpression"===grandparent.type)return!1;const keys=_getBindingIdentifiers.default.keys[parent.type];if(keys)for(let i=0;i<keys.length;i++){const val=parent[keys[i]];if(Array.isArray(val)){if(val.indexOf(node)>=0)return!0}else if(val===node)return!0}return!1};var _getBindingIdentifiers=__nested_webpack_require_1562630__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isBlockScoped.js":(__unused_webpack_module,exports,__nested_webpack_require_1563403__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return(0,_generated.isFunctionDeclaration)(node)||(0,_generated.isClassDeclaration)(node)||(0,_isLet.default)(node)};var _generated=__nested_webpack_require_1563403__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_isLet=__nested_webpack_require_1563403__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isLet.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isImmutable.js":(__unused_webpack_module,exports,__nested_webpack_require_1564035__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){if((0,_isType.default)(node.type,"Immutable"))return!0;if((0,_generated.isIdentifier)(node))return"undefined"===node.name;return!1};var _isType=__nested_webpack_require_1564035__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isType.js"),_generated=__nested_webpack_require_1564035__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isLet.js":(__unused_webpack_module,exports,__nested_webpack_require_1564678__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return(0,_generated.isVariableDeclaration)(node)&&("var"!==node.kind||node[_constants.BLOCK_SCOPED_SYMBOL])};var _generated=__nested_webpack_require_1564678__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_constants=__nested_webpack_require_1564678__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isNode.js":(__unused_webpack_module,exports,__nested_webpack_require_1565300__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return!(!node||!_definitions.VISITOR_KEYS[node.type])};var _definitions=__nested_webpack_require_1565300__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isNodesEquivalent.js":(__unused_webpack_module,exports,__nested_webpack_require_1565748__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function isNodesEquivalent(a,b){if("object"!=typeof a||"object"!=typeof b||null==a||null==b)return a===b;if(a.type!==b.type)return!1;const fields=Object.keys(_definitions.NODE_FIELDS[a.type]||a.type),visitorKeys=_definitions.VISITOR_KEYS[a.type];for(const field of fields){const val_a=a[field],val_b=b[field];if(typeof val_a!=typeof val_b)return!1;if(null!=val_a||null!=val_b){if(null==val_a||null==val_b)return!1;if(Array.isArray(val_a)){if(!Array.isArray(val_b))return!1;if(val_a.length!==val_b.length)return!1;for(let i=0;i<val_a.length;i++)if(!isNodesEquivalent(val_a[i],val_b[i]))return!1}else if("object"!=typeof val_a||null!=visitorKeys&&visitorKeys.includes(field)){if(!isNodesEquivalent(val_a,val_b))return!1}else for(const key of Object.keys(val_a))if(val_a[key]!==val_b[key])return!1}}return!0};var _definitions=__nested_webpack_require_1565748__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isPlaceholderType.js":(__unused_webpack_module,exports,__nested_webpack_require_1566932__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(placeholderType,targetType){if(placeholderType===targetType)return!0;const aliases=_definitions.PLACEHOLDERS_ALIAS[placeholderType];if(aliases)for(const alias of aliases)if(targetType===alias)return!0;return!1};var _definitions=__nested_webpack_require_1566932__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isReferenced.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,parent,grandparent){switch(parent.type){case"MemberExpression":case"OptionalMemberExpression":return parent.property===node?!!parent.computed:parent.object===node;case"JSXMemberExpression":return parent.object===node;case"VariableDeclarator":return parent.init===node;case"ArrowFunctionExpression":return parent.body===node;case"PrivateName":case"LabeledStatement":case"CatchClause":case"RestElement":case"BreakStatement":case"ContinueStatement":case"FunctionDeclaration":case"FunctionExpression":case"ExportNamespaceSpecifier":case"ExportDefaultSpecifier":case"ImportDefaultSpecifier":case"ImportNamespaceSpecifier":case"ImportSpecifier":case"ImportAttribute":case"JSXAttribute":case"ObjectPattern":case"ArrayPattern":case"MetaProperty":return!1;case"ClassMethod":case"ClassPrivateMethod":case"ObjectMethod":return parent.key===node&&!!parent.computed;case"ObjectProperty":return parent.key===node?!!parent.computed:!grandparent||"ObjectPattern"!==grandparent.type;case"ClassProperty":case"ClassAccessorProperty":case"TSPropertySignature":return parent.key!==node||!!parent.computed;case"ClassPrivateProperty":case"ObjectTypeProperty":return parent.key!==node;case"ClassDeclaration":case"ClassExpression":return parent.superClass===node;case"AssignmentExpression":case"AssignmentPattern":return parent.right===node;case"ExportSpecifier":return(null==grandparent||!grandparent.source)&&parent.local===node;case"TSEnumMember":return parent.id!==node}return!0}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isScope.js":(__unused_webpack_module,exports,__nested_webpack_require_1569214__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,parent){if((0,_generated.isBlockStatement)(node)&&((0,_generated.isFunction)(parent)||(0,_generated.isCatchClause)(parent)))return!1;if((0,_generated.isPattern)(node)&&((0,_generated.isFunction)(parent)||(0,_generated.isCatchClause)(parent)))return!0;return(0,_generated.isScopable)(node)};var _generated=__nested_webpack_require_1569214__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isSpecifierDefault.js":(__unused_webpack_module,exports,__nested_webpack_require_1569904__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(specifier){return(0,_generated.isImportDefaultSpecifier)(specifier)||(0,_generated.isIdentifier)(specifier.imported||specifier.exported,{name:"default"})};var _generated=__nested_webpack_require_1569904__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isType.js":(__unused_webpack_module,exports,__nested_webpack_require_1570442__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(nodeType,targetType){if(nodeType===targetType)return!0;if(_definitions.ALIAS_KEYS[targetType])return!1;const aliases=_definitions.FLIPPED_ALIAS_KEYS[targetType];if(aliases){if(aliases[0]===nodeType)return!0;for(const alias of aliases)if(nodeType===alias)return!0}return!1};var _definitions=__nested_webpack_require_1570442__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidES3Identifier.js":(__unused_webpack_module,exports,__nested_webpack_require_1571105__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(name){return(0,_isValidIdentifier.default)(name)&&!RESERVED_WORDS_ES3_ONLY.has(name)};var _isValidIdentifier=__nested_webpack_require_1571105__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidIdentifier.js");const RESERVED_WORDS_ES3_ONLY=new Set(["abstract","boolean","byte","char","double","enum","final","float","goto","implements","int","interface","long","native","package","private","protected","public","short","static","synchronized","throws","transient","volatile"])},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isValidIdentifier.js":(__unused_webpack_module,exports,__nested_webpack_require_1571862__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(name,reserved=!0){if("string"!=typeof name)return!1;if(reserved&&((0,_helperValidatorIdentifier.isKeyword)(name)||(0,_helperValidatorIdentifier.isStrictReservedWord)(name,!0)))return!1;return(0,_helperValidatorIdentifier.isIdentifierName)(name)};var _helperValidatorIdentifier=__nested_webpack_require_1571862__("./node_modules/.pnpm/@babel+helper-validator-identifier@7.22.5/node_modules/@babel/helper-validator-identifier/lib/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/isVar.js":(__unused_webpack_module,exports,__nested_webpack_require_1572529__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node){return(0,_generated.isVariableDeclaration)(node,{kind:"var"})&&!node[_constants.BLOCK_SCOPED_SYMBOL]};var _generated=__nested_webpack_require_1572529__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js"),_constants=__nested_webpack_require_1572529__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/constants/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/matchesPattern.js":(__unused_webpack_module,exports,__nested_webpack_require_1573152__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(member,match,allowPartial){if(!(0,_generated.isMemberExpression)(member))return!1;const parts=Array.isArray(match)?match:match.split("."),nodes=[];let node;for(node=member;(0,_generated.isMemberExpression)(node);node=node.object)nodes.push(node.property);if(nodes.push(node),nodes.length<parts.length)return!1;if(!allowPartial&&nodes.length>parts.length)return!1;for(let i=0,j=nodes.length-1;i<parts.length;i++,j--){const node=nodes[j];let value;if((0,_generated.isIdentifier)(node))value=node.name;else if((0,_generated.isStringLiteral)(node))value=node.value;else{if(!(0,_generated.isThisExpression)(node))return!1;value="this"}if(parts[i]!==value)return!1}return!0};var _generated=__nested_webpack_require_1573152__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/generated/index.js")},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/react/isCompatTag.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(tagName){return!!tagName&&/^[a-z]/.test(tagName)}},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/react/isReactComponent.js":(__unused_webpack_module,exports,__nested_webpack_require_1574505__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=(0,__nested_webpack_require_1574505__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js").default)("React.Component");exports.default=_default},"./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/validators/validate.js":(__unused_webpack_module,exports,__nested_webpack_require_1574953__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(node,key,val){if(!node)return;const fields=_definitions.NODE_FIELDS[node.type];if(!fields)return;const field=fields[key];validateField(node,key,val,field),validateChild(node,key,val)},exports.validateChild=validateChild,exports.validateField=validateField;var _definitions=__nested_webpack_require_1574953__("./node_modules/.pnpm/@babel+types@7.22.5/node_modules/@babel/types/lib/definitions/index.js");function validateField(node,key,val,field){null!=field&&field.validate&&(field.optional&&null==val||field.validate(node,key,val))}function validateChild(node,key,val){if(null==val)return;const validate=_definitions.NODE_PARENT_VALIDATIONS[val.type];validate&&validate(node,key,val)}},"./node_modules/.pnpm/json5@2.2.3/node_modules/json5/dist/index.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__nested_webpack_require_1575867__)=>{"use strict";__nested_webpack_require_1575867__.r(__webpack_exports__),__nested_webpack_require_1575867__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var unicode={Space_Separator:/[\u1680\u2000-\u200A\u202F\u205F\u3000]/,ID_Start:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/,ID_Continue:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},util={isSpaceSeparator:c=>"string"==typeof c&&unicode.Space_Separator.test(c),isIdStartChar:c=>"string"==typeof c&&(c>="a"&&c<="z"||c>="A"&&c<="Z"||"$"===c||"_"===c||unicode.ID_Start.test(c)),isIdContinueChar:c=>"string"==typeof c&&(c>="a"&&c<="z"||c>="A"&&c<="Z"||c>="0"&&c<="9"||"$"===c||"_"===c||"‌"===c||"‍"===c||unicode.ID_Continue.test(c)),isDigit:c=>"string"==typeof c&&/[0-9]/.test(c),isHexDigit:c=>"string"==typeof c&&/[0-9A-Fa-f]/.test(c)};let source,parseState,stack,pos,line,column,token,key,root;function internalize(holder,name,reviver){const value=holder[name];if(null!=value&&"object"==typeof value)if(Array.isArray(value))for(let i=0;i<value.length;i++){const key=String(i),replacement=internalize(value,key,reviver);void 0===replacement?delete value[key]:Object.defineProperty(value,key,{value:replacement,writable:!0,enumerable:!0,configurable:!0})}else for(const key in value){const replacement=internalize(value,key,reviver);void 0===replacement?delete value[key]:Object.defineProperty(value,key,{value:replacement,writable:!0,enumerable:!0,configurable:!0})}return reviver.call(holder,name,value)}let lexState,buffer,doubleQuote,sign,c;function lex(){for(lexState="default",buffer="",doubleQuote=!1,sign=1;;){c=peek();const token=lexStates[lexState]();if(token)return token}}function peek(){if(source[pos])return String.fromCodePoint(source.codePointAt(pos))}function read(){const c=peek();return"\n"===c?(line++,column=0):c?column+=c.length:column++,c&&(pos+=c.length),c}const lexStates={default(){switch(c){case"\t":case"\v":case"\f":case" ":case" ":case"\ufeff":case"\n":case"\r":case"\u2028":case"\u2029":return void read();case"/":return read(),void(lexState="comment");case void 0:return read(),newToken("eof")}if(!util.isSpaceSeparator(c))return lexStates[parseState]();read()},comment(){switch(c){case"*":return read(),void(lexState="multiLineComment");case"/":return read(),void(lexState="singleLineComment")}throw invalidChar(read())},multiLineComment(){switch(c){case"*":return read(),void(lexState="multiLineCommentAsterisk");case void 0:throw invalidChar(read())}read()},multiLineCommentAsterisk(){switch(c){case"*":return void read();case"/":return read(),void(lexState="default");case void 0:throw invalidChar(read())}read(),lexState="multiLineComment"},singleLineComment(){switch(c){case"\n":case"\r":case"\u2028":case"\u2029":return read(),void(lexState="default");case void 0:return read(),newToken("eof")}read()},value(){switch(c){case"{":case"[":return newToken("punctuator",read());case"n":return read(),literal("ull"),newToken("null",null);case"t":return read(),literal("rue"),newToken("boolean",!0);case"f":return read(),literal("alse"),newToken("boolean",!1);case"-":case"+":return"-"===read()&&(sign=-1),void(lexState="sign");case".":return buffer=read(),void(lexState="decimalPointLeading");case"0":return buffer=read(),void(lexState="zero");case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return buffer=read(),void(lexState="decimalInteger");case"I":return read(),literal("nfinity"),newToken("numeric",1/0);case"N":return read(),literal("aN"),newToken("numeric",NaN);case'"':case"'":return doubleQuote='"'===read(),buffer="",void(lexState="string")}throw invalidChar(read())},identifierNameStartEscape(){if("u"!==c)throw invalidChar(read());read();const u=unicodeEscape();switch(u){case"$":case"_":break;default:if(!util.isIdStartChar(u))throw invalidIdentifier()}buffer+=u,lexState="identifierName"},identifierName(){switch(c){case"$":case"_":case"‌":case"‍":return void(buffer+=read());case"\\":return read(),void(lexState="identifierNameEscape")}if(!util.isIdContinueChar(c))return newToken("identifier",buffer);buffer+=read()},identifierNameEscape(){if("u"!==c)throw invalidChar(read());read();const u=unicodeEscape();switch(u){case"$":case"_":case"‌":case"‍":break;default:if(!util.isIdContinueChar(u))throw invalidIdentifier()}buffer+=u,lexState="identifierName"},sign(){switch(c){case".":return buffer=read(),void(lexState="decimalPointLeading");case"0":return buffer=read(),void(lexState="zero");case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return buffer=read(),void(lexState="decimalInteger");case"I":return read(),literal("nfinity"),newToken("numeric",sign*(1/0));case"N":return read(),literal("aN"),newToken("numeric",NaN)}throw invalidChar(read())},zero(){switch(c){case".":return buffer+=read(),void(lexState="decimalPoint");case"e":case"E":return buffer+=read(),void(lexState="decimalExponent");case"x":case"X":return buffer+=read(),void(lexState="hexadecimal")}return newToken("numeric",0*sign)},decimalInteger(){switch(c){case".":return buffer+=read(),void(lexState="decimalPoint");case"e":case"E":return buffer+=read(),void(lexState="decimalExponent")}if(!util.isDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},decimalPointLeading(){if(util.isDigit(c))return buffer+=read(),void(lexState="decimalFraction");throw invalidChar(read())},decimalPoint(){switch(c){case"e":case"E":return buffer+=read(),void(lexState="decimalExponent")}return util.isDigit(c)?(buffer+=read(),void(lexState="decimalFraction")):newToken("numeric",sign*Number(buffer))},decimalFraction(){switch(c){case"e":case"E":return buffer+=read(),void(lexState="decimalExponent")}if(!util.isDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},decimalExponent(){switch(c){case"+":case"-":return buffer+=read(),void(lexState="decimalExponentSign")}if(util.isDigit(c))return buffer+=read(),void(lexState="decimalExponentInteger");throw invalidChar(read())},decimalExponentSign(){if(util.isDigit(c))return buffer+=read(),void(lexState="decimalExponentInteger");throw invalidChar(read())},decimalExponentInteger(){if(!util.isDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},hexadecimal(){if(util.isHexDigit(c))return buffer+=read(),void(lexState="hexadecimalInteger");throw invalidChar(read())},hexadecimalInteger(){if(!util.isHexDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},string(){switch(c){case"\\":return read(),void(buffer+=function(){switch(peek()){case"b":return read(),"\b";case"f":return read(),"\f";case"n":return read(),"\n";case"r":return read(),"\r";case"t":return read(),"\t";case"v":return read(),"\v";case"0":if(read(),util.isDigit(peek()))throw invalidChar(read());return"\0";case"x":return read(),function(){let buffer="",c=peek();if(!util.isHexDigit(c))throw invalidChar(read());if(buffer+=read(),c=peek(),!util.isHexDigit(c))throw invalidChar(read());return buffer+=read(),String.fromCodePoint(parseInt(buffer,16))}();case"u":return read(),unicodeEscape();case"\n":case"\u2028":case"\u2029":return read(),"";case"\r":return read(),"\n"===peek()&&read(),"";case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case void 0:throw invalidChar(read())}return read()}());case'"':return doubleQuote?(read(),newToken("string",buffer)):void(buffer+=read());case"'":return doubleQuote?void(buffer+=read()):(read(),newToken("string",buffer));case"\n":case"\r":throw invalidChar(read());case"\u2028":case"\u2029":!function(c){console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`)}(c);break;case void 0:throw invalidChar(read())}buffer+=read()},start(){switch(c){case"{":case"[":return newToken("punctuator",read())}lexState="value"},beforePropertyName(){switch(c){case"$":case"_":return buffer=read(),void(lexState="identifierName");case"\\":return read(),void(lexState="identifierNameStartEscape");case"}":return newToken("punctuator",read());case'"':case"'":return doubleQuote='"'===read(),void(lexState="string")}if(util.isIdStartChar(c))return buffer+=read(),void(lexState="identifierName");throw invalidChar(read())},afterPropertyName(){if(":"===c)return newToken("punctuator",read());throw invalidChar(read())},beforePropertyValue(){lexState="value"},afterPropertyValue(){switch(c){case",":case"}":return newToken("punctuator",read())}throw invalidChar(read())},beforeArrayValue(){if("]"===c)return newToken("punctuator",read());lexState="value"},afterArrayValue(){switch(c){case",":case"]":return newToken("punctuator",read())}throw invalidChar(read())},end(){throw invalidChar(read())}};function newToken(type,value){return{type,value,line,column}}function literal(s){for(const c of s){if(peek()!==c)throw invalidChar(read());read()}}function unicodeEscape(){let buffer="",count=4;for(;count-- >0;){const c=peek();if(!util.isHexDigit(c))throw invalidChar(read());buffer+=read()}return String.fromCodePoint(parseInt(buffer,16))}const parseStates={start(){if("eof"===token.type)throw invalidEOF();push()},beforePropertyName(){switch(token.type){case"identifier":case"string":return key=token.value,void(parseState="afterPropertyName");case"punctuator":return void pop();case"eof":throw invalidEOF()}},afterPropertyName(){if("eof"===token.type)throw invalidEOF();parseState="beforePropertyValue"},beforePropertyValue(){if("eof"===token.type)throw invalidEOF();push()},beforeArrayValue(){if("eof"===token.type)throw invalidEOF();"punctuator"!==token.type||"]"!==token.value?push():pop()},afterPropertyValue(){if("eof"===token.type)throw invalidEOF();switch(token.value){case",":return void(parseState="beforePropertyName");case"}":pop()}},afterArrayValue(){if("eof"===token.type)throw invalidEOF();switch(token.value){case",":return void(parseState="beforeArrayValue");case"]":pop()}},end(){}};function push(){let value;switch(token.type){case"punctuator":switch(token.value){case"{":value={};break;case"[":value=[]}break;case"null":case"boolean":case"numeric":case"string":value=token.value}if(void 0===root)root=value;else{const parent=stack[stack.length-1];Array.isArray(parent)?parent.push(value):Object.defineProperty(parent,key,{value,writable:!0,enumerable:!0,configurable:!0})}if(null!==value&&"object"==typeof value)stack.push(value),parseState=Array.isArray(value)?"beforeArrayValue":"beforePropertyName";else{const current=stack[stack.length-1];parseState=null==current?"end":Array.isArray(current)?"afterArrayValue":"afterPropertyValue"}}function pop(){stack.pop();const current=stack[stack.length-1];parseState=null==current?"end":Array.isArray(current)?"afterArrayValue":"afterPropertyValue"}function invalidChar(c){return syntaxError(void 0===c?`JSON5: invalid end of input at ${line}:${column}`:`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)}function invalidEOF(){return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)}function invalidIdentifier(){return column-=5,syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)}function formatChar(c){const replacements={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"};if(replacements[c])return replacements[c];if(c<" "){const hexString=c.charCodeAt(0).toString(16);return"\\x"+("00"+hexString).substring(hexString.length)}return c}function syntaxError(message){const err=new SyntaxError(message);return err.lineNumber=line,err.columnNumber=column,err}const JSON5={parse:function(text,reviver){source=String(text),parseState="start",stack=[],pos=0,line=1,column=0,token=void 0,key=void 0,root=void 0;do{token=lex(),parseStates[parseState]()}while("eof"!==token.type);return"function"==typeof reviver?internalize({"":root},"",reviver):root},stringify:function(value,replacer,space){const stack=[];let propertyList,replacerFunc,quote,indent="",gap="";if(null==replacer||"object"!=typeof replacer||Array.isArray(replacer)||(space=replacer.space,quote=replacer.quote,replacer=replacer.replacer),"function"==typeof replacer)replacerFunc=replacer;else if(Array.isArray(replacer)){propertyList=[];for(const v of replacer){let item;"string"==typeof v?item=v:("number"==typeof v||v instanceof String||v instanceof Number)&&(item=String(v)),void 0!==item&&propertyList.indexOf(item)<0&&propertyList.push(item)}}return space instanceof Number?space=Number(space):space instanceof String&&(space=String(space)),"number"==typeof space?space>0&&(space=Math.min(10,Math.floor(space)),gap="          ".substr(0,space)):"string"==typeof space&&(gap=space.substr(0,10)),serializeProperty("",{"":value});function serializeProperty(key,holder){let value=holder[key];switch(null!=value&&("function"==typeof value.toJSON5?value=value.toJSON5(key):"function"==typeof value.toJSON&&(value=value.toJSON(key))),replacerFunc&&(value=replacerFunc.call(holder,key,value)),value instanceof Number?value=Number(value):value instanceof String?value=String(value):value instanceof Boolean&&(value=value.valueOf()),value){case null:return"null";case!0:return"true";case!1:return"false"}return"string"==typeof value?quoteString(value):"number"==typeof value?String(value):"object"==typeof value?Array.isArray(value)?function(value){if(stack.indexOf(value)>=0)throw TypeError("Converting circular structure to JSON5");stack.push(value);let stepback=indent;indent+=gap;let final,partial=[];for(let i=0;i<value.length;i++){const propertyString=serializeProperty(String(i),value);partial.push(void 0!==propertyString?propertyString:"null")}if(0===partial.length)final="[]";else if(""===gap){final="["+partial.join(",")+"]"}else{let separator=",\n"+indent,properties=partial.join(separator);final="[\n"+indent+properties+",\n"+stepback+"]"}return stack.pop(),indent=stepback,final}(value):function(value){if(stack.indexOf(value)>=0)throw TypeError("Converting circular structure to JSON5");stack.push(value);let stepback=indent;indent+=gap;let final,keys=propertyList||Object.keys(value),partial=[];for(const key of keys){const propertyString=serializeProperty(key,value);if(void 0!==propertyString){let member=serializeKey(key)+":";""!==gap&&(member+=" "),member+=propertyString,partial.push(member)}}if(0===partial.length)final="{}";else{let properties;if(""===gap)properties=partial.join(","),final="{"+properties+"}";else{let separator=",\n"+indent;properties=partial.join(separator),final="{\n"+indent+properties+",\n"+stepback+"}"}}return stack.pop(),indent=stepback,final}(value):void 0}function quoteString(value){const quotes={"'":.1,'"':.2},replacements={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"};let product="";for(let i=0;i<value.length;i++){const c=value[i];switch(c){case"'":case'"':quotes[c]++,product+=c;continue;case"\0":if(util.isDigit(value[i+1])){product+="\\x00";continue}}if(replacements[c])product+=replacements[c];else if(c<" "){let hexString=c.charCodeAt(0).toString(16);product+="\\x"+("00"+hexString).substring(hexString.length)}else product+=c}const quoteChar=quote||Object.keys(quotes).reduce(((a,b)=>quotes[a]<quotes[b]?a:b));return product=product.replace(new RegExp(quoteChar,"g"),replacements[quoteChar]),quoteChar+product+quoteChar}function serializeKey(key){if(0===key.length)return quoteString(key);const firstChar=String.fromCodePoint(key.codePointAt(0));if(!util.isIdStartChar(firstChar))return quoteString(key);for(let i=firstChar.length;i<key.length;i++)if(!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i))))return quoteString(key);return key}}};const __WEBPACK_DEFAULT_EXPORT__=JSON5},"./node_modules/.pnpm/@babel+preset-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/preset-typescript/package.json":module=>{"use strict";module.exports=JSON.parse('{"name":"@babel/preset-typescript","version":"7.22.5","description":"Babel preset for TypeScript.","repository":{"type":"git","url":"https://github.com/babel/babel.git","directory":"packages/babel-preset-typescript"},"license":"MIT","publishConfig":{"access":"public"},"main":"./lib/index.js","keywords":["babel-preset","typescript"],"dependencies":{"@babel/helper-plugin-utils":"^7.22.5","@babel/helper-validator-option":"^7.22.5","@babel/plugin-syntax-jsx":"^7.22.5","@babel/plugin-transform-modules-commonjs":"^7.22.5","@babel/plugin-transform-typescript":"^7.22.5"},"peerDependencies":{"@babel/core":"^7.0.0-0"},"devDependencies":{"@babel/core":"^7.22.5","@babel/helper-plugin-test-runner":"^7.22.5"},"homepage":"https://babel.dev/docs/en/next/babel-preset-typescript","bugs":"https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22area%3A%20typescript%22+is%3Aopen","engines":{"node":">=6.9.0"},"author":"The Babel Team (https://babel.dev/team)","type":"commonjs"}')},"./node_modules/.pnpm/globals@11.12.0/node_modules/globals/globals.json":module=>{"use strict";module.exports=JSON.parse('{"builtin":{"Array":false,"ArrayBuffer":false,"Atomics":false,"BigInt":false,"BigInt64Array":false,"BigUint64Array":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,"Function":false,"globalThis":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"SharedArrayBuffer":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"es5":{"Array":false,"Boolean":false,"constructor":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"propertyIsEnumerable":false,"RangeError":false,"ReferenceError":false,"RegExp":false,"String":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false},"es2015":{"Array":false,"ArrayBuffer":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"es2017":{"Array":false,"ArrayBuffer":false,"Atomics":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"SharedArrayBuffer":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"browser":{"AbortController":false,"AbortSignal":false,"addEventListener":false,"alert":false,"AnalyserNode":false,"Animation":false,"AnimationEffectReadOnly":false,"AnimationEffectTiming":false,"AnimationEffectTimingReadOnly":false,"AnimationEvent":false,"AnimationPlaybackEvent":false,"AnimationTimeline":false,"applicationCache":false,"ApplicationCache":false,"ApplicationCacheErrorEvent":false,"atob":false,"Attr":false,"Audio":false,"AudioBuffer":false,"AudioBufferSourceNode":false,"AudioContext":false,"AudioDestinationNode":false,"AudioListener":false,"AudioNode":false,"AudioParam":false,"AudioProcessingEvent":false,"AudioScheduledSourceNode":false,"AudioWorkletGlobalScope ":false,"AudioWorkletNode":false,"AudioWorkletProcessor":false,"BarProp":false,"BaseAudioContext":false,"BatteryManager":false,"BeforeUnloadEvent":false,"BiquadFilterNode":false,"Blob":false,"BlobEvent":false,"blur":false,"BroadcastChannel":false,"btoa":false,"BudgetService":false,"ByteLengthQueuingStrategy":false,"Cache":false,"caches":false,"CacheStorage":false,"cancelAnimationFrame":false,"cancelIdleCallback":false,"CanvasCaptureMediaStreamTrack":false,"CanvasGradient":false,"CanvasPattern":false,"CanvasRenderingContext2D":false,"ChannelMergerNode":false,"ChannelSplitterNode":false,"CharacterData":false,"clearInterval":false,"clearTimeout":false,"clientInformation":false,"ClipboardEvent":false,"close":false,"closed":false,"CloseEvent":false,"Comment":false,"CompositionEvent":false,"confirm":false,"console":false,"ConstantSourceNode":false,"ConvolverNode":false,"CountQueuingStrategy":false,"createImageBitmap":false,"Credential":false,"CredentialsContainer":false,"crypto":false,"Crypto":false,"CryptoKey":false,"CSS":false,"CSSConditionRule":false,"CSSFontFaceRule":false,"CSSGroupingRule":false,"CSSImportRule":false,"CSSKeyframeRule":false,"CSSKeyframesRule":false,"CSSMediaRule":false,"CSSNamespaceRule":false,"CSSPageRule":false,"CSSRule":false,"CSSRuleList":false,"CSSStyleDeclaration":false,"CSSStyleRule":false,"CSSStyleSheet":false,"CSSSupportsRule":false,"CustomElementRegistry":false,"customElements":false,"CustomEvent":false,"DataTransfer":false,"DataTransferItem":false,"DataTransferItemList":false,"defaultstatus":false,"defaultStatus":false,"DelayNode":false,"DeviceMotionEvent":false,"DeviceOrientationEvent":false,"devicePixelRatio":false,"dispatchEvent":false,"document":false,"Document":false,"DocumentFragment":false,"DocumentType":false,"DOMError":false,"DOMException":false,"DOMImplementation":false,"DOMMatrix":false,"DOMMatrixReadOnly":false,"DOMParser":false,"DOMPoint":false,"DOMPointReadOnly":false,"DOMQuad":false,"DOMRect":false,"DOMRectReadOnly":false,"DOMStringList":false,"DOMStringMap":false,"DOMTokenList":false,"DragEvent":false,"DynamicsCompressorNode":false,"Element":false,"ErrorEvent":false,"event":false,"Event":false,"EventSource":false,"EventTarget":false,"external":false,"fetch":false,"File":false,"FileList":false,"FileReader":false,"find":false,"focus":false,"FocusEvent":false,"FontFace":false,"FontFaceSetLoadEvent":false,"FormData":false,"frameElement":false,"frames":false,"GainNode":false,"Gamepad":false,"GamepadButton":false,"GamepadEvent":false,"getComputedStyle":false,"getSelection":false,"HashChangeEvent":false,"Headers":false,"history":false,"History":false,"HTMLAllCollection":false,"HTMLAnchorElement":false,"HTMLAreaElement":false,"HTMLAudioElement":false,"HTMLBaseElement":false,"HTMLBodyElement":false,"HTMLBRElement":false,"HTMLButtonElement":false,"HTMLCanvasElement":false,"HTMLCollection":false,"HTMLContentElement":false,"HTMLDataElement":false,"HTMLDataListElement":false,"HTMLDetailsElement":false,"HTMLDialogElement":false,"HTMLDirectoryElement":false,"HTMLDivElement":false,"HTMLDListElement":false,"HTMLDocument":false,"HTMLElement":false,"HTMLEmbedElement":false,"HTMLFieldSetElement":false,"HTMLFontElement":false,"HTMLFormControlsCollection":false,"HTMLFormElement":false,"HTMLFrameElement":false,"HTMLFrameSetElement":false,"HTMLHeadElement":false,"HTMLHeadingElement":false,"HTMLHRElement":false,"HTMLHtmlElement":false,"HTMLIFrameElement":false,"HTMLImageElement":false,"HTMLInputElement":false,"HTMLLabelElement":false,"HTMLLegendElement":false,"HTMLLIElement":false,"HTMLLinkElement":false,"HTMLMapElement":false,"HTMLMarqueeElement":false,"HTMLMediaElement":false,"HTMLMenuElement":false,"HTMLMetaElement":false,"HTMLMeterElement":false,"HTMLModElement":false,"HTMLObjectElement":false,"HTMLOListElement":false,"HTMLOptGroupElement":false,"HTMLOptionElement":false,"HTMLOptionsCollection":false,"HTMLOutputElement":false,"HTMLParagraphElement":false,"HTMLParamElement":false,"HTMLPictureElement":false,"HTMLPreElement":false,"HTMLProgressElement":false,"HTMLQuoteElement":false,"HTMLScriptElement":false,"HTMLSelectElement":false,"HTMLShadowElement":false,"HTMLSlotElement":false,"HTMLSourceElement":false,"HTMLSpanElement":false,"HTMLStyleElement":false,"HTMLTableCaptionElement":false,"HTMLTableCellElement":false,"HTMLTableColElement":false,"HTMLTableElement":false,"HTMLTableRowElement":false,"HTMLTableSectionElement":false,"HTMLTemplateElement":false,"HTMLTextAreaElement":false,"HTMLTimeElement":false,"HTMLTitleElement":false,"HTMLTrackElement":false,"HTMLUListElement":false,"HTMLUnknownElement":false,"HTMLVideoElement":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"IdleDeadline":false,"IIRFilterNode":false,"Image":false,"ImageBitmap":false,"ImageBitmapRenderingContext":false,"ImageCapture":false,"ImageData":false,"indexedDB":false,"innerHeight":false,"innerWidth":false,"InputEvent":false,"IntersectionObserver":false,"IntersectionObserverEntry":false,"Intl":false,"isSecureContext":false,"KeyboardEvent":false,"KeyframeEffect":false,"KeyframeEffectReadOnly":false,"length":false,"localStorage":false,"location":true,"Location":false,"locationbar":false,"matchMedia":false,"MediaDeviceInfo":false,"MediaDevices":false,"MediaElementAudioSourceNode":false,"MediaEncryptedEvent":false,"MediaError":false,"MediaKeyMessageEvent":false,"MediaKeySession":false,"MediaKeyStatusMap":false,"MediaKeySystemAccess":false,"MediaList":false,"MediaQueryList":false,"MediaQueryListEvent":false,"MediaRecorder":false,"MediaSettingsRange":false,"MediaSource":false,"MediaStream":false,"MediaStreamAudioDestinationNode":false,"MediaStreamAudioSourceNode":false,"MediaStreamEvent":false,"MediaStreamTrack":false,"MediaStreamTrackEvent":false,"menubar":false,"MessageChannel":false,"MessageEvent":false,"MessagePort":false,"MIDIAccess":false,"MIDIConnectionEvent":false,"MIDIInput":false,"MIDIInputMap":false,"MIDIMessageEvent":false,"MIDIOutput":false,"MIDIOutputMap":false,"MIDIPort":false,"MimeType":false,"MimeTypeArray":false,"MouseEvent":false,"moveBy":false,"moveTo":false,"MutationEvent":false,"MutationObserver":false,"MutationRecord":false,"name":false,"NamedNodeMap":false,"NavigationPreloadManager":false,"navigator":false,"Navigator":false,"NetworkInformation":false,"Node":false,"NodeFilter":false,"NodeIterator":false,"NodeList":false,"Notification":false,"OfflineAudioCompletionEvent":false,"OfflineAudioContext":false,"offscreenBuffering":false,"OffscreenCanvas":true,"onabort":true,"onafterprint":true,"onanimationend":true,"onanimationiteration":true,"onanimationstart":true,"onappinstalled":true,"onauxclick":true,"onbeforeinstallprompt":true,"onbeforeprint":true,"onbeforeunload":true,"onblur":true,"oncancel":true,"oncanplay":true,"oncanplaythrough":true,"onchange":true,"onclick":true,"onclose":true,"oncontextmenu":true,"oncuechange":true,"ondblclick":true,"ondevicemotion":true,"ondeviceorientation":true,"ondeviceorientationabsolute":true,"ondrag":true,"ondragend":true,"ondragenter":true,"ondragleave":true,"ondragover":true,"ondragstart":true,"ondrop":true,"ondurationchange":true,"onemptied":true,"onended":true,"onerror":true,"onfocus":true,"ongotpointercapture":true,"onhashchange":true,"oninput":true,"oninvalid":true,"onkeydown":true,"onkeypress":true,"onkeyup":true,"onlanguagechange":true,"onload":true,"onloadeddata":true,"onloadedmetadata":true,"onloadstart":true,"onlostpointercapture":true,"onmessage":true,"onmessageerror":true,"onmousedown":true,"onmouseenter":true,"onmouseleave":true,"onmousemove":true,"onmouseout":true,"onmouseover":true,"onmouseup":true,"onmousewheel":true,"onoffline":true,"ononline":true,"onpagehide":true,"onpageshow":true,"onpause":true,"onplay":true,"onplaying":true,"onpointercancel":true,"onpointerdown":true,"onpointerenter":true,"onpointerleave":true,"onpointermove":true,"onpointerout":true,"onpointerover":true,"onpointerup":true,"onpopstate":true,"onprogress":true,"onratechange":true,"onrejectionhandled":true,"onreset":true,"onresize":true,"onscroll":true,"onsearch":true,"onseeked":true,"onseeking":true,"onselect":true,"onstalled":true,"onstorage":true,"onsubmit":true,"onsuspend":true,"ontimeupdate":true,"ontoggle":true,"ontransitionend":true,"onunhandledrejection":true,"onunload":true,"onvolumechange":true,"onwaiting":true,"onwheel":true,"open":false,"openDatabase":false,"opener":false,"Option":false,"origin":false,"OscillatorNode":false,"outerHeight":false,"outerWidth":false,"PageTransitionEvent":false,"pageXOffset":false,"pageYOffset":false,"PannerNode":false,"parent":false,"Path2D":false,"PaymentAddress":false,"PaymentRequest":false,"PaymentRequestUpdateEvent":false,"PaymentResponse":false,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceLongTaskTiming":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceNavigationTiming":false,"PerformanceObserver":false,"PerformanceObserverEntryList":false,"PerformancePaintTiming":false,"PerformanceResourceTiming":false,"PerformanceTiming":false,"PeriodicWave":false,"Permissions":false,"PermissionStatus":false,"personalbar":false,"PhotoCapabilities":false,"Plugin":false,"PluginArray":false,"PointerEvent":false,"PopStateEvent":false,"postMessage":false,"Presentation":false,"PresentationAvailability":false,"PresentationConnection":false,"PresentationConnectionAvailableEvent":false,"PresentationConnectionCloseEvent":false,"PresentationConnectionList":false,"PresentationReceiver":false,"PresentationRequest":false,"print":false,"ProcessingInstruction":false,"ProgressEvent":false,"PromiseRejectionEvent":false,"prompt":false,"PushManager":false,"PushSubscription":false,"PushSubscriptionOptions":false,"queueMicrotask":false,"RadioNodeList":false,"Range":false,"ReadableStream":false,"registerProcessor":false,"RemotePlayback":false,"removeEventListener":false,"Request":false,"requestAnimationFrame":false,"requestIdleCallback":false,"resizeBy":false,"ResizeObserver":false,"ResizeObserverEntry":false,"resizeTo":false,"Response":false,"RTCCertificate":false,"RTCDataChannel":false,"RTCDataChannelEvent":false,"RTCDtlsTransport":false,"RTCIceCandidate":false,"RTCIceGatherer":false,"RTCIceTransport":false,"RTCPeerConnection":false,"RTCPeerConnectionIceEvent":false,"RTCRtpContributingSource":false,"RTCRtpReceiver":false,"RTCRtpSender":false,"RTCSctpTransport":false,"RTCSessionDescription":false,"RTCStatsReport":false,"RTCTrackEvent":false,"screen":false,"Screen":false,"screenLeft":false,"ScreenOrientation":false,"screenTop":false,"screenX":false,"screenY":false,"ScriptProcessorNode":false,"scroll":false,"scrollbars":false,"scrollBy":false,"scrollTo":false,"scrollX":false,"scrollY":false,"SecurityPolicyViolationEvent":false,"Selection":false,"self":false,"ServiceWorker":false,"ServiceWorkerContainer":false,"ServiceWorkerRegistration":false,"sessionStorage":false,"setInterval":false,"setTimeout":false,"ShadowRoot":false,"SharedWorker":false,"SourceBuffer":false,"SourceBufferList":false,"speechSynthesis":false,"SpeechSynthesisEvent":false,"SpeechSynthesisUtterance":false,"StaticRange":false,"status":false,"statusbar":false,"StereoPannerNode":false,"stop":false,"Storage":false,"StorageEvent":false,"StorageManager":false,"styleMedia":false,"StyleSheet":false,"StyleSheetList":false,"SubtleCrypto":false,"SVGAElement":false,"SVGAngle":false,"SVGAnimatedAngle":false,"SVGAnimatedBoolean":false,"SVGAnimatedEnumeration":false,"SVGAnimatedInteger":false,"SVGAnimatedLength":false,"SVGAnimatedLengthList":false,"SVGAnimatedNumber":false,"SVGAnimatedNumberList":false,"SVGAnimatedPreserveAspectRatio":false,"SVGAnimatedRect":false,"SVGAnimatedString":false,"SVGAnimatedTransformList":false,"SVGAnimateElement":false,"SVGAnimateMotionElement":false,"SVGAnimateTransformElement":false,"SVGAnimationElement":false,"SVGCircleElement":false,"SVGClipPathElement":false,"SVGComponentTransferFunctionElement":false,"SVGDefsElement":false,"SVGDescElement":false,"SVGDiscardElement":false,"SVGElement":false,"SVGEllipseElement":false,"SVGFEBlendElement":false,"SVGFEColorMatrixElement":false,"SVGFEComponentTransferElement":false,"SVGFECompositeElement":false,"SVGFEConvolveMatrixElement":false,"SVGFEDiffuseLightingElement":false,"SVGFEDisplacementMapElement":false,"SVGFEDistantLightElement":false,"SVGFEDropShadowElement":false,"SVGFEFloodElement":false,"SVGFEFuncAElement":false,"SVGFEFuncBElement":false,"SVGFEFuncGElement":false,"SVGFEFuncRElement":false,"SVGFEGaussianBlurElement":false,"SVGFEImageElement":false,"SVGFEMergeElement":false,"SVGFEMergeNodeElement":false,"SVGFEMorphologyElement":false,"SVGFEOffsetElement":false,"SVGFEPointLightElement":false,"SVGFESpecularLightingElement":false,"SVGFESpotLightElement":false,"SVGFETileElement":false,"SVGFETurbulenceElement":false,"SVGFilterElement":false,"SVGForeignObjectElement":false,"SVGGElement":false,"SVGGeometryElement":false,"SVGGradientElement":false,"SVGGraphicsElement":false,"SVGImageElement":false,"SVGLength":false,"SVGLengthList":false,"SVGLinearGradientElement":false,"SVGLineElement":false,"SVGMarkerElement":false,"SVGMaskElement":false,"SVGMatrix":false,"SVGMetadataElement":false,"SVGMPathElement":false,"SVGNumber":false,"SVGNumberList":false,"SVGPathElement":false,"SVGPatternElement":false,"SVGPoint":false,"SVGPointList":false,"SVGPolygonElement":false,"SVGPolylineElement":false,"SVGPreserveAspectRatio":false,"SVGRadialGradientElement":false,"SVGRect":false,"SVGRectElement":false,"SVGScriptElement":false,"SVGSetElement":false,"SVGStopElement":false,"SVGStringList":false,"SVGStyleElement":false,"SVGSVGElement":false,"SVGSwitchElement":false,"SVGSymbolElement":false,"SVGTextContentElement":false,"SVGTextElement":false,"SVGTextPathElement":false,"SVGTextPositioningElement":false,"SVGTitleElement":false,"SVGTransform":false,"SVGTransformList":false,"SVGTSpanElement":false,"SVGUnitTypes":false,"SVGUseElement":false,"SVGViewElement":false,"TaskAttributionTiming":false,"Text":false,"TextDecoder":false,"TextEncoder":false,"TextEvent":false,"TextMetrics":false,"TextTrack":false,"TextTrackCue":false,"TextTrackCueList":false,"TextTrackList":false,"TimeRanges":false,"toolbar":false,"top":false,"Touch":false,"TouchEvent":false,"TouchList":false,"TrackEvent":false,"TransitionEvent":false,"TreeWalker":false,"UIEvent":false,"URL":false,"URLSearchParams":false,"ValidityState":false,"visualViewport":false,"VisualViewport":false,"VTTCue":false,"WaveShaperNode":false,"WebAssembly":false,"WebGL2RenderingContext":false,"WebGLActiveInfo":false,"WebGLBuffer":false,"WebGLContextEvent":false,"WebGLFramebuffer":false,"WebGLProgram":false,"WebGLQuery":false,"WebGLRenderbuffer":false,"WebGLRenderingContext":false,"WebGLSampler":false,"WebGLShader":false,"WebGLShaderPrecisionFormat":false,"WebGLSync":false,"WebGLTexture":false,"WebGLTransformFeedback":false,"WebGLUniformLocation":false,"WebGLVertexArrayObject":false,"WebSocket":false,"WheelEvent":false,"window":false,"Window":false,"Worker":false,"WritableStream":false,"XMLDocument":false,"XMLHttpRequest":false,"XMLHttpRequestEventTarget":false,"XMLHttpRequestUpload":false,"XMLSerializer":false,"XPathEvaluator":false,"XPathExpression":false,"XPathResult":false,"XSLTProcessor":false},"worker":{"addEventListener":false,"applicationCache":false,"atob":false,"Blob":false,"BroadcastChannel":false,"btoa":false,"Cache":false,"caches":false,"clearInterval":false,"clearTimeout":false,"close":true,"console":false,"fetch":false,"FileReaderSync":false,"FormData":false,"Headers":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"ImageData":false,"importScripts":true,"indexedDB":false,"location":false,"MessageChannel":false,"MessagePort":false,"name":false,"navigator":false,"Notification":false,"onclose":true,"onconnect":true,"onerror":true,"onlanguagechange":true,"onmessage":true,"onoffline":true,"ononline":true,"onrejectionhandled":true,"onunhandledrejection":true,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceResourceTiming":false,"PerformanceTiming":false,"postMessage":true,"Promise":false,"queueMicrotask":false,"removeEventListener":false,"Request":false,"Response":false,"self":true,"ServiceWorkerRegistration":false,"setInterval":false,"setTimeout":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false,"WebSocket":false,"Worker":false,"WorkerGlobalScope":false,"XMLHttpRequest":false},"node":{"__dirname":false,"__filename":false,"Buffer":false,"clearImmediate":false,"clearInterval":false,"clearTimeout":false,"console":false,"exports":true,"global":false,"Intl":false,"module":false,"process":false,"queueMicrotask":false,"require":false,"setImmediate":false,"setInterval":false,"setTimeout":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false},"commonjs":{"exports":true,"global":false,"module":false,"require":false},"amd":{"define":false,"require":false},"mocha":{"after":false,"afterEach":false,"before":false,"beforeEach":false,"context":false,"describe":false,"it":false,"mocha":false,"run":false,"setup":false,"specify":false,"suite":false,"suiteSetup":false,"suiteTeardown":false,"teardown":false,"test":false,"xcontext":false,"xdescribe":false,"xit":false,"xspecify":false},"jasmine":{"afterAll":false,"afterEach":false,"beforeAll":false,"beforeEach":false,"describe":false,"expect":false,"fail":false,"fdescribe":false,"fit":false,"it":false,"jasmine":false,"pending":false,"runs":false,"spyOn":false,"spyOnProperty":false,"waits":false,"waitsFor":false,"xdescribe":false,"xit":false},"jest":{"afterAll":false,"afterEach":false,"beforeAll":false,"beforeEach":false,"describe":false,"expect":false,"fdescribe":false,"fit":false,"it":false,"jest":false,"pit":false,"require":false,"test":false,"xdescribe":false,"xit":false,"xtest":false},"qunit":{"asyncTest":false,"deepEqual":false,"equal":false,"expect":false,"module":false,"notDeepEqual":false,"notEqual":false,"notOk":false,"notPropEqual":false,"notStrictEqual":false,"ok":false,"propEqual":false,"QUnit":false,"raises":false,"start":false,"stop":false,"strictEqual":false,"test":false,"throws":false},"phantomjs":{"console":true,"exports":true,"phantom":true,"require":true,"WebPage":true},"couch":{"emit":false,"exports":false,"getRow":false,"log":false,"module":false,"provides":false,"require":false,"respond":false,"send":false,"start":false,"sum":false},"rhino":{"defineClass":false,"deserialize":false,"gc":false,"help":false,"importClass":false,"importPackage":false,"java":false,"load":false,"loadClass":false,"Packages":false,"print":false,"quit":false,"readFile":false,"readUrl":false,"runCommand":false,"seal":false,"serialize":false,"spawn":false,"sync":false,"toint32":false,"version":false},"nashorn":{"__DIR__":false,"__FILE__":false,"__LINE__":false,"com":false,"edu":false,"exit":false,"java":false,"Java":false,"javafx":false,"JavaImporter":false,"javax":false,"JSAdapter":false,"load":false,"loadWithNewGlobal":false,"org":false,"Packages":false,"print":false,"quit":false},"wsh":{"ActiveXObject":true,"Enumerator":true,"GetObject":true,"ScriptEngine":true,"ScriptEngineBuildVersion":true,"ScriptEngineMajorVersion":true,"ScriptEngineMinorVersion":true,"VBArray":true,"WScript":true,"WSH":true,"XDomainRequest":true},"jquery":{"$":false,"jQuery":false},"yui":{"YAHOO":false,"YAHOO_config":false,"YUI":false,"YUI_config":false},"shelljs":{"cat":false,"cd":false,"chmod":false,"config":false,"cp":false,"dirs":false,"echo":false,"env":false,"error":false,"exec":false,"exit":false,"find":false,"grep":false,"ln":false,"ls":false,"mkdir":false,"mv":false,"popd":false,"pushd":false,"pwd":false,"rm":false,"sed":false,"set":false,"target":false,"tempdir":false,"test":false,"touch":false,"which":false},"prototypejs":{"$":false,"$$":false,"$A":false,"$break":false,"$continue":false,"$F":false,"$H":false,"$R":false,"$w":false,"Abstract":false,"Ajax":false,"Autocompleter":false,"Builder":false,"Class":false,"Control":false,"Draggable":false,"Draggables":false,"Droppables":false,"Effect":false,"Element":false,"Enumerable":false,"Event":false,"Field":false,"Form":false,"Hash":false,"Insertion":false,"ObjectRange":false,"PeriodicalExecuter":false,"Position":false,"Prototype":false,"Scriptaculous":false,"Selector":false,"Sortable":false,"SortableObserver":false,"Sound":false,"Template":false,"Toggle":false,"Try":false},"meteor":{"_":false,"$":false,"Accounts":false,"AccountsClient":false,"AccountsCommon":false,"AccountsServer":false,"App":false,"Assets":false,"Blaze":false,"check":false,"Cordova":false,"DDP":false,"DDPRateLimiter":false,"DDPServer":false,"Deps":false,"EJSON":false,"Email":false,"HTTP":false,"Log":false,"Match":false,"Meteor":false,"Mongo":false,"MongoInternals":false,"Npm":false,"Package":false,"Plugin":false,"process":false,"Random":false,"ReactiveDict":false,"ReactiveVar":false,"Router":false,"ServiceConfiguration":false,"Session":false,"share":false,"Spacebars":false,"Template":false,"Tinytest":false,"Tracker":false,"UI":false,"Utils":false,"WebApp":false,"WebAppInternals":false},"mongo":{"_isWindows":false,"_rand":false,"BulkWriteResult":false,"cat":false,"cd":false,"connect":false,"db":false,"getHostName":false,"getMemInfo":false,"hostname":false,"ISODate":false,"listFiles":false,"load":false,"ls":false,"md5sumFile":false,"mkdir":false,"Mongo":false,"NumberInt":false,"NumberLong":false,"ObjectId":false,"PlanCache":false,"print":false,"printjson":false,"pwd":false,"quit":false,"removeFile":false,"rs":false,"sh":false,"UUID":false,"version":false,"WriteResult":false},"applescript":{"$":false,"Application":false,"Automation":false,"console":false,"delay":false,"Library":false,"ObjC":false,"ObjectSpecifier":false,"Path":false,"Progress":false,"Ref":false},"serviceworker":{"addEventListener":false,"applicationCache":false,"atob":false,"Blob":false,"BroadcastChannel":false,"btoa":false,"Cache":false,"caches":false,"CacheStorage":false,"clearInterval":false,"clearTimeout":false,"Client":false,"clients":false,"Clients":false,"close":true,"console":false,"ExtendableEvent":false,"ExtendableMessageEvent":false,"fetch":false,"FetchEvent":false,"FileReaderSync":false,"FormData":false,"Headers":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"ImageData":false,"importScripts":false,"indexedDB":false,"location":false,"MessageChannel":false,"MessagePort":false,"name":false,"navigator":false,"Notification":false,"onclose":true,"onconnect":true,"onerror":true,"onfetch":true,"oninstall":true,"onlanguagechange":true,"onmessage":true,"onmessageerror":true,"onnotificationclick":true,"onnotificationclose":true,"onoffline":true,"ononline":true,"onpush":true,"onpushsubscriptionchange":true,"onrejectionhandled":true,"onsync":true,"onunhandledrejection":true,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceResourceTiming":false,"PerformanceTiming":false,"postMessage":true,"Promise":false,"queueMicrotask":false,"registration":false,"removeEventListener":false,"Request":false,"Response":false,"self":false,"ServiceWorker":false,"ServiceWorkerContainer":false,"ServiceWorkerGlobalScope":false,"ServiceWorkerMessageEvent":false,"ServiceWorkerRegistration":false,"setInterval":false,"setTimeout":false,"skipWaiting":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false,"WebSocket":false,"WindowClient":false,"Worker":false,"WorkerGlobalScope":false,"XMLHttpRequest":false},"atomtest":{"advanceClock":false,"fakeClearInterval":false,"fakeClearTimeout":false,"fakeSetInterval":false,"fakeSetTimeout":false,"resetTimeouts":false,"waitsForPromise":false},"embertest":{"andThen":false,"click":false,"currentPath":false,"currentRouteName":false,"currentURL":false,"fillIn":false,"find":false,"findAll":false,"findWithAssert":false,"keyEvent":false,"pauseTest":false,"resumeTest":false,"triggerEvent":false,"visit":false,"wait":false},"protractor":{"$":false,"$$":false,"browser":false,"by":false,"By":false,"DartObject":false,"element":false,"protractor":false},"shared-node-browser":{"clearInterval":false,"clearTimeout":false,"console":false,"setInterval":false,"setTimeout":false,"URL":false,"URLSearchParams":false},"webextensions":{"browser":false,"chrome":false,"opr":false},"greasemonkey":{"cloneInto":false,"createObjectIn":false,"exportFunction":false,"GM":false,"GM_addStyle":false,"GM_deleteValue":false,"GM_getResourceText":false,"GM_getResourceURL":false,"GM_getValue":false,"GM_info":false,"GM_listValues":false,"GM_log":false,"GM_openInTab":false,"GM_registerMenuCommand":false,"GM_setClipboard":false,"GM_setValue":false,"GM_xmlhttpRequest":false,"unsafeWindow":false},"devtools":{"$":false,"$_":false,"$$":false,"$0":false,"$1":false,"$2":false,"$3":false,"$4":false,"$x":false,"chrome":false,"clear":false,"copy":false,"debug":false,"dir":false,"dirxml":false,"getEventListeners":false,"inspect":false,"keys":false,"monitor":false,"monitorEvents":false,"profile":false,"profileEnd":false,"queryObjects":false,"table":false,"undebug":false,"unmonitor":false,"unmonitorEvents":false,"values":false}}')}},__webpack_module_cache__={};function __nested_webpack_require_1638749__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__nested_webpack_require_1638749__),module.exports}__nested_webpack_require_1638749__.d=(exports,definition)=>{for(var key in definition)__nested_webpack_require_1638749__.o(definition,key)&&!__nested_webpack_require_1638749__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__nested_webpack_require_1638749__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__nested_webpack_require_1638749__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{"use strict";__nested_webpack_require_1638749__.d(__webpack_exports__,{default:()=>transform});var lib=__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+core@7.22.6/node_modules/@babel/core/lib/index.js"),external_url_=__nested_webpack_require_1638749__("url"),template_lib=__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+template@7.22.5/node_modules/@babel/template/lib/index.js");function TransformImportMetaPlugin(_ctx,opts){return{name:"transform-import-meta",visitor:{Program(path){const metas=[];if(path.traverse({MemberExpression(memberExpPath){const{node}=memberExpPath;"MetaProperty"===node.object.type&&"import"===node.object.meta.name&&"meta"===node.object.property.name&&"Identifier"===node.property.type&&"url"===node.property.name&&metas.push(memberExpPath)}}),0!==metas.length)for(const meta of metas)meta.replaceWith(template_lib.smart.ast`${opts.filename?JSON.stringify((0,external_url_.pathToFileURL)(opts.filename)):"require('url').pathToFileURL(__filename).toString()"}`)}}}}const replaceEnvForRuntime=(template,property)=>template.expression.ast(`process.env.${property}`);function importMetaEnvPlugin({template,types}){return{name:"@import-meta-env/babel",visitor:{Identifier(path){types.isIdentifier(path)&&types.isMemberExpression(path.parentPath)&&types.isMemberExpression(path.parentPath.node)&&types.isMemberExpression(path.parentPath.node.object)&&(path.parentPath.computed||types.isIdentifier(path.parentPath.node.property)&&types.isIdentifier(path.parentPath.node.object.property)&&"env"===path.parentPath.node.object.property.name&&types.isMetaProperty(path.parentPath.node.object.object)&&"meta"===path.parentPath.node.object.object.property.name&&"import"===path.parentPath.node.object.object.meta.name&&path.parentPath.replaceWith(replaceEnvForRuntime(template,path.parentPath.node.property.name)))}}}}function transform(opts){var _a,_b,_c,_d,_e,_f;const _opts=Object.assign(Object.assign({babelrc:!1,configFile:!1,compact:!1,retainLines:"boolean"!=typeof opts.retainLines||opts.retainLines,filename:"",cwd:"/"},opts.babel),{plugins:[[__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-transform-modules-commonjs@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-modules-commonjs/lib/index.js"),{allowTopLevelThis:!0}],[__nested_webpack_require_1638749__("./node_modules/.pnpm/babel-plugin-dynamic-import-node@2.3.3/node_modules/babel-plugin-dynamic-import-node/lib/index.js"),{noInterop:!0}],[TransformImportMetaPlugin,{filename:opts.filename}],[__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-syntax-class-properties@7.12.13_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-class-properties/lib/index.js")],[__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-proposal-export-namespace-from@7.18.9_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-export-namespace-from/lib/index.js")],[importMetaEnvPlugin]]});opts.ts&&(_opts.plugins.push([__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-transform-typescript@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-transform-typescript/lib/index.js"),{allowDeclareFields:!0}]),_opts.plugins.unshift([__nested_webpack_require_1638749__("./node_modules/.pnpm/babel-plugin-transform-typescript-metadata@0.3.2_@babel+core@7.22.6/node_modules/babel-plugin-transform-typescript-metadata/lib/plugin.js")],[__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-proposal-decorators@7.22.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-decorators/lib/index.js"),{legacy:!0}]),_opts.plugins.push(__nested_webpack_require_1638749__("./node_modules/.pnpm/babel-plugin-parameter-decorator@1.0.16/node_modules/babel-plugin-parameter-decorator/lib/index.js")),_opts.plugins.push(__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-syntax-import-assertions@7.22.5_@babel+core@7.22.6/node_modules/@babel/plugin-syntax-import-assertions/lib/index.js"))),opts.legacy&&(_opts.plugins.push(__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-proposal-nullish-coalescing-operator@7.18.6_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-nullish-coalescing-operator/lib/index.js")),_opts.plugins.push(__nested_webpack_require_1638749__("./node_modules/.pnpm/@babel+plugin-proposal-optional-chaining@7.21.0_@babel+core@7.22.6/node_modules/@babel/plugin-proposal-optional-chaining/lib/index.js"))),opts.babel&&Array.isArray(opts.babel.plugins)&&(null===(_a=_opts.plugins)||void 0===_a||_a.push(...opts.babel.plugins));try{return{code:(null===(_b=(0,lib.transformSync)(opts.source,_opts))||void 0===_b?void 0:_b.code)||""}}catch(error){return{error,code:"exports.__JITI_ERROR__ = "+JSON.stringify({filename:opts.filename,line:(null===(_c=error.loc)||void 0===_c?void 0:_c.line)||0,column:(null===(_d=error.loc)||void 0===_d?void 0:_d.column)||0,code:null===(_e=error.code)||void 0===_e?void 0:_e.replace("BABEL_","").replace("PARSE_ERROR","ParseError"),message:null===(_f=error.message)||void 0===_f?void 0:_f.replace("/: ","").replace(/\(.+\)\s*$/,"")})}}}})(),module.exports=__webpack_exports__.default})();

/***/ }),

/***/ 1613:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(()=>{var __webpack_modules__={"./node_modules/.pnpm/create-require@1.1.1/node_modules/create-require/create-require.js":(module,__unused_webpack_exports,__nested_webpack_require_154__)=>{const nativeModule=__nested_webpack_require_154__("module"),path=__nested_webpack_require_154__("path"),fs=__nested_webpack_require_154__("fs");module.exports=function(filename){return filename||(filename=process.cwd()),function(path){try{return fs.lstatSync(path).isDirectory()}catch(e){return!1}}(filename)&&(filename=path.join(filename,"index.js")),nativeModule.createRequire?nativeModule.createRequire(filename):nativeModule.createRequireFromPath?nativeModule.createRequireFromPath(filename):function(filename){const mod=new nativeModule.Module(filename,null);return mod.filename=filename,mod.paths=nativeModule.Module._nodeModulePaths(path.dirname(filename)),mod._compile("module.exports = require;",filename),mod.exports}(filename)}},"./node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js":(module,__unused_webpack_exports,__nested_webpack_require_988__)=>{"use strict";const Yallist=__nested_webpack_require_988__("./node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js"),MAX=Symbol("max"),LENGTH=Symbol("length"),LENGTH_CALCULATOR=Symbol("lengthCalculator"),ALLOW_STALE=Symbol("allowStale"),MAX_AGE=Symbol("maxAge"),DISPOSE=Symbol("dispose"),NO_DISPOSE_ON_SET=Symbol("noDisposeOnSet"),LRU_LIST=Symbol("lruList"),CACHE=Symbol("cache"),UPDATE_AGE_ON_GET=Symbol("updateAgeOnGet"),naiveLength=()=>1;const get=(self,key,doUse)=>{const node=self[CACHE].get(key);if(node){const hit=node.value;if(isStale(self,hit)){if(del(self,node),!self[ALLOW_STALE])return}else doUse&&(self[UPDATE_AGE_ON_GET]&&(node.value.now=Date.now()),self[LRU_LIST].unshiftNode(node));return hit.value}},isStale=(self,hit)=>{if(!hit||!hit.maxAge&&!self[MAX_AGE])return!1;const diff=Date.now()-hit.now;return hit.maxAge?diff>hit.maxAge:self[MAX_AGE]&&diff>self[MAX_AGE]},trim=self=>{if(self[LENGTH]>self[MAX])for(let walker=self[LRU_LIST].tail;self[LENGTH]>self[MAX]&&null!==walker;){const prev=walker.prev;del(self,walker),walker=prev}},del=(self,node)=>{if(node){const hit=node.value;self[DISPOSE]&&self[DISPOSE](hit.key,hit.value),self[LENGTH]-=hit.length,self[CACHE].delete(hit.key),self[LRU_LIST].removeNode(node)}};class Entry{constructor(key,value,length,now,maxAge){this.key=key,this.value=value,this.length=length,this.now=now,this.maxAge=maxAge||0}}const forEachStep=(self,fn,node,thisp)=>{let hit=node.value;isStale(self,hit)&&(del(self,node),self[ALLOW_STALE]||(hit=void 0)),hit&&fn.call(thisp,hit.value,hit.key,self)};module.exports=class{constructor(options){if("number"==typeof options&&(options={max:options}),options||(options={}),options.max&&("number"!=typeof options.max||options.max<0))throw new TypeError("max must be a non-negative number");this[MAX]=options.max||1/0;const lc=options.length||naiveLength;if(this[LENGTH_CALCULATOR]="function"!=typeof lc?naiveLength:lc,this[ALLOW_STALE]=options.stale||!1,options.maxAge&&"number"!=typeof options.maxAge)throw new TypeError("maxAge must be a number");this[MAX_AGE]=options.maxAge||0,this[DISPOSE]=options.dispose,this[NO_DISPOSE_ON_SET]=options.noDisposeOnSet||!1,this[UPDATE_AGE_ON_GET]=options.updateAgeOnGet||!1,this.reset()}set max(mL){if("number"!=typeof mL||mL<0)throw new TypeError("max must be a non-negative number");this[MAX]=mL||1/0,trim(this)}get max(){return this[MAX]}set allowStale(allowStale){this[ALLOW_STALE]=!!allowStale}get allowStale(){return this[ALLOW_STALE]}set maxAge(mA){if("number"!=typeof mA)throw new TypeError("maxAge must be a non-negative number");this[MAX_AGE]=mA,trim(this)}get maxAge(){return this[MAX_AGE]}set lengthCalculator(lC){"function"!=typeof lC&&(lC=naiveLength),lC!==this[LENGTH_CALCULATOR]&&(this[LENGTH_CALCULATOR]=lC,this[LENGTH]=0,this[LRU_LIST].forEach((hit=>{hit.length=this[LENGTH_CALCULATOR](hit.value,hit.key),this[LENGTH]+=hit.length}))),trim(this)}get lengthCalculator(){return this[LENGTH_CALCULATOR]}get length(){return this[LENGTH]}get itemCount(){return this[LRU_LIST].length}rforEach(fn,thisp){thisp=thisp||this;for(let walker=this[LRU_LIST].tail;null!==walker;){const prev=walker.prev;forEachStep(this,fn,walker,thisp),walker=prev}}forEach(fn,thisp){thisp=thisp||this;for(let walker=this[LRU_LIST].head;null!==walker;){const next=walker.next;forEachStep(this,fn,walker,thisp),walker=next}}keys(){return this[LRU_LIST].toArray().map((k=>k.key))}values(){return this[LRU_LIST].toArray().map((k=>k.value))}reset(){this[DISPOSE]&&this[LRU_LIST]&&this[LRU_LIST].length&&this[LRU_LIST].forEach((hit=>this[DISPOSE](hit.key,hit.value))),this[CACHE]=new Map,this[LRU_LIST]=new Yallist,this[LENGTH]=0}dump(){return this[LRU_LIST].map((hit=>!isStale(this,hit)&&{k:hit.key,v:hit.value,e:hit.now+(hit.maxAge||0)})).toArray().filter((h=>h))}dumpLru(){return this[LRU_LIST]}set(key,value,maxAge){if((maxAge=maxAge||this[MAX_AGE])&&"number"!=typeof maxAge)throw new TypeError("maxAge must be a number");const now=maxAge?Date.now():0,len=this[LENGTH_CALCULATOR](value,key);if(this[CACHE].has(key)){if(len>this[MAX])return del(this,this[CACHE].get(key)),!1;const item=this[CACHE].get(key).value;return this[DISPOSE]&&(this[NO_DISPOSE_ON_SET]||this[DISPOSE](key,item.value)),item.now=now,item.maxAge=maxAge,item.value=value,this[LENGTH]+=len-item.length,item.length=len,this.get(key),trim(this),!0}const hit=new Entry(key,value,len,now,maxAge);return hit.length>this[MAX]?(this[DISPOSE]&&this[DISPOSE](key,value),!1):(this[LENGTH]+=hit.length,this[LRU_LIST].unshift(hit),this[CACHE].set(key,this[LRU_LIST].head),trim(this),!0)}has(key){if(!this[CACHE].has(key))return!1;const hit=this[CACHE].get(key).value;return!isStale(this,hit)}get(key){return get(this,key,!0)}peek(key){return get(this,key,!1)}pop(){const node=this[LRU_LIST].tail;return node?(del(this,node),node.value):null}del(key){del(this,this[CACHE].get(key))}load(arr){this.reset();const now=Date.now();for(let l=arr.length-1;l>=0;l--){const hit=arr[l],expiresAt=hit.e||0;if(0===expiresAt)this.set(hit.k,hit.v);else{const maxAge=expiresAt-now;maxAge>0&&this.set(hit.k,hit.v,maxAge)}}}prune(){this[CACHE].forEach(((value,key)=>get(this,key,!1)))}}},"./node_modules/.pnpm/mlly@1.4.0/node_modules/mlly/dist lazy recursive":module=>{function webpackEmptyAsyncContext(req){return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=()=>[],webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./node_modules/.pnpm/mlly@1.4.0/node_modules/mlly/dist lazy recursive",module.exports=webpackEmptyAsyncContext},"./node_modules/.pnpm/object-hash@3.0.0/node_modules/object-hash/index.js":(module,exports,__nested_webpack_require_6716__)=>{"use strict";var crypto=__nested_webpack_require_6716__("crypto");function objectHash(object,options){return function(object,options){var hashingStream;hashingStream="passthrough"!==options.algorithm?crypto.createHash(options.algorithm):new PassThrough;void 0===hashingStream.write&&(hashingStream.write=hashingStream.update,hashingStream.end=hashingStream.update);var hasher=typeHasher(options,hashingStream);hasher.dispatch(object),hashingStream.update||hashingStream.end("");if(hashingStream.digest)return hashingStream.digest("buffer"===options.encoding?void 0:options.encoding);var buf=hashingStream.read();if("buffer"===options.encoding)return buf;return buf.toString(options.encoding)}(object,options=applyDefaults(object,options))}(exports=module.exports=objectHash).sha1=function(object){return objectHash(object)},exports.keys=function(object){return objectHash(object,{excludeValues:!0,algorithm:"sha1",encoding:"hex"})},exports.MD5=function(object){return objectHash(object,{algorithm:"md5",encoding:"hex"})},exports.keysMD5=function(object){return objectHash(object,{algorithm:"md5",encoding:"hex",excludeValues:!0})};var hashes=crypto.getHashes?crypto.getHashes().slice():["sha1","md5"];hashes.push("passthrough");var encodings=["buffer","hex","binary","base64"];function applyDefaults(object,sourceOptions){sourceOptions=sourceOptions||{};var options={};if(options.algorithm=sourceOptions.algorithm||"sha1",options.encoding=sourceOptions.encoding||"hex",options.excludeValues=!!sourceOptions.excludeValues,options.algorithm=options.algorithm.toLowerCase(),options.encoding=options.encoding.toLowerCase(),options.ignoreUnknown=!0===sourceOptions.ignoreUnknown,options.respectType=!1!==sourceOptions.respectType,options.respectFunctionNames=!1!==sourceOptions.respectFunctionNames,options.respectFunctionProperties=!1!==sourceOptions.respectFunctionProperties,options.unorderedArrays=!0===sourceOptions.unorderedArrays,options.unorderedSets=!1!==sourceOptions.unorderedSets,options.unorderedObjects=!1!==sourceOptions.unorderedObjects,options.replacer=sourceOptions.replacer||void 0,options.excludeKeys=sourceOptions.excludeKeys||void 0,void 0===object)throw new Error("Object argument required.");for(var i=0;i<hashes.length;++i)hashes[i].toLowerCase()===options.algorithm.toLowerCase()&&(options.algorithm=hashes[i]);if(-1===hashes.indexOf(options.algorithm))throw new Error('Algorithm "'+options.algorithm+'"  not supported. supported values: '+hashes.join(", "));if(-1===encodings.indexOf(options.encoding)&&"passthrough"!==options.algorithm)throw new Error('Encoding "'+options.encoding+'"  not supported. supported values: '+encodings.join(", "));return options}function isNativeFunction(f){if("function"!=typeof f)return!1;return null!=/^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i.exec(Function.prototype.toString.call(f))}function typeHasher(options,writeTo,context){context=context||[];var write=function(str){return writeTo.update?writeTo.update(str,"utf8"):writeTo.write(str,"utf8")};return{dispatch:function(value){options.replacer&&(value=options.replacer(value));var type=typeof value;return null===value&&(type="null"),this["_"+type](value)},_object:function(object){var objString=Object.prototype.toString.call(object),objType=/\[object (.*)\]/i.exec(objString);objType=(objType=objType?objType[1]:"unknown:["+objString+"]").toLowerCase();var objectNumber;if((objectNumber=context.indexOf(object))>=0)return this.dispatch("[CIRCULAR:"+objectNumber+"]");if(context.push(object),"undefined"!=typeof Buffer&&Buffer.isBuffer&&Buffer.isBuffer(object))return write("buffer:"),write(object);if("object"===objType||"function"===objType||"asyncfunction"===objType){var keys=Object.keys(object);options.unorderedObjects&&(keys=keys.sort()),!1===options.respectType||isNativeFunction(object)||keys.splice(0,0,"prototype","__proto__","constructor"),options.excludeKeys&&(keys=keys.filter((function(key){return!options.excludeKeys(key)}))),write("object:"+keys.length+":");var self=this;return keys.forEach((function(key){self.dispatch(key),write(":"),options.excludeValues||self.dispatch(object[key]),write(",")}))}if(!this["_"+objType]){if(options.ignoreUnknown)return write("["+objType+"]");throw new Error('Unknown object type "'+objType+'"')}this["_"+objType](object)},_array:function(arr,unordered){unordered=void 0!==unordered?unordered:!1!==options.unorderedArrays;var self=this;if(write("array:"+arr.length+":"),!unordered||arr.length<=1)return arr.forEach((function(entry){return self.dispatch(entry)}));var contextAdditions=[],entries=arr.map((function(entry){var strm=new PassThrough,localContext=context.slice();return typeHasher(options,strm,localContext).dispatch(entry),contextAdditions=contextAdditions.concat(localContext.slice(context.length)),strm.read().toString()}));return context=context.concat(contextAdditions),entries.sort(),this._array(entries,!1)},_date:function(date){return write("date:"+date.toJSON())},_symbol:function(sym){return write("symbol:"+sym.toString())},_error:function(err){return write("error:"+err.toString())},_boolean:function(bool){return write("bool:"+bool.toString())},_string:function(string){write("string:"+string.length+":"),write(string.toString())},_function:function(fn){write("fn:"),isNativeFunction(fn)?this.dispatch("[native]"):this.dispatch(fn.toString()),!1!==options.respectFunctionNames&&this.dispatch("function-name:"+String(fn.name)),options.respectFunctionProperties&&this._object(fn)},_number:function(number){return write("number:"+number.toString())},_xml:function(xml){return write("xml:"+xml.toString())},_null:function(){return write("Null")},_undefined:function(){return write("Undefined")},_regexp:function(regex){return write("regex:"+regex.toString())},_uint8array:function(arr){return write("uint8array:"),this.dispatch(Array.prototype.slice.call(arr))},_uint8clampedarray:function(arr){return write("uint8clampedarray:"),this.dispatch(Array.prototype.slice.call(arr))},_int8array:function(arr){return write("int8array:"),this.dispatch(Array.prototype.slice.call(arr))},_uint16array:function(arr){return write("uint16array:"),this.dispatch(Array.prototype.slice.call(arr))},_int16array:function(arr){return write("int16array:"),this.dispatch(Array.prototype.slice.call(arr))},_uint32array:function(arr){return write("uint32array:"),this.dispatch(Array.prototype.slice.call(arr))},_int32array:function(arr){return write("int32array:"),this.dispatch(Array.prototype.slice.call(arr))},_float32array:function(arr){return write("float32array:"),this.dispatch(Array.prototype.slice.call(arr))},_float64array:function(arr){return write("float64array:"),this.dispatch(Array.prototype.slice.call(arr))},_arraybuffer:function(arr){return write("arraybuffer:"),this.dispatch(new Uint8Array(arr))},_url:function(url){return write("url:"+url.toString())},_map:function(map){write("map:");var arr=Array.from(map);return this._array(arr,!1!==options.unorderedSets)},_set:function(set){write("set:");var arr=Array.from(set);return this._array(arr,!1!==options.unorderedSets)},_file:function(file){return write("file:"),this.dispatch([file.name,file.size,file.type,file.lastModfied])},_blob:function(){if(options.ignoreUnknown)return write("[blob]");throw Error('Hashing Blob objects is currently not supported\n(see https://github.com/puleos/object-hash/issues/26)\nUse "options.replacer" or "options.ignoreUnknown"\n')},_domwindow:function(){return write("domwindow")},_bigint:function(number){return write("bigint:"+number.toString())},_process:function(){return write("process")},_timer:function(){return write("timer")},_pipe:function(){return write("pipe")},_tcp:function(){return write("tcp")},_udp:function(){return write("udp")},_tty:function(){return write("tty")},_statwatcher:function(){return write("statwatcher")},_securecontext:function(){return write("securecontext")},_connection:function(){return write("connection")},_zlib:function(){return write("zlib")},_context:function(){return write("context")},_nodescript:function(){return write("nodescript")},_httpparser:function(){return write("httpparser")},_dataview:function(){return write("dataview")},_signal:function(){return write("signal")},_fsevent:function(){return write("fsevent")},_tlswrap:function(){return write("tlswrap")}}}function PassThrough(){return{buf:"",write:function(b){this.buf+=b},end:function(b){this.buf+=b},read:function(){return this.buf}}}exports.writeToStream=function(object,options,stream){return void 0===stream&&(stream=options,options={}),typeHasher(options=applyDefaults(object,options),stream).dispatch(object)}},"./node_modules/.pnpm/pirates@4.0.6/node_modules/pirates/lib/index.js":(module,exports,__nested_webpack_require_15419__)=>{"use strict";module=__nested_webpack_require_15419__.nmd(module),Object.defineProperty(exports,"__esModule",{value:!0}),exports.addHook=function(hook,opts={}){let reverted=!1;const loaders=[],oldLoaders=[];let exts;const originalJSLoader=Module._extensions[".js"],matcher=opts.matcher||null,ignoreNodeModules=!1!==opts.ignoreNodeModules;exts=opts.extensions||opts.exts||opts.extension||opts.ext||[".js"],Array.isArray(exts)||(exts=[exts]);return exts.forEach((ext=>{if("string"!=typeof ext)throw new TypeError(`Invalid Extension: ${ext}`);const oldLoader=Module._extensions[ext]||originalJSLoader;oldLoaders[ext]=Module._extensions[ext],loaders[ext]=Module._extensions[ext]=function(mod,filename){let compile;reverted||function(filename,exts,matcher,ignoreNodeModules){if("string"!=typeof filename)return!1;if(-1===exts.indexOf(_path.default.extname(filename)))return!1;const resolvedFilename=_path.default.resolve(filename);if(ignoreNodeModules&&nodeModulesRegex.test(resolvedFilename))return!1;if(matcher&&"function"==typeof matcher)return!!matcher(resolvedFilename);return!0}(filename,exts,matcher,ignoreNodeModules)&&(compile=mod._compile,mod._compile=function(code){mod._compile=compile;const newCode=hook(code,filename);if("string"!=typeof newCode)throw new Error(HOOK_RETURNED_NOTHING_ERROR_MESSAGE);return mod._compile(newCode,filename)}),oldLoader(mod,filename)}})),function(){reverted||(reverted=!0,exts.forEach((ext=>{Module._extensions[ext]===loaders[ext]&&(oldLoaders[ext]?Module._extensions[ext]=oldLoaders[ext]:delete Module._extensions[ext])})))}};var _module=_interopRequireDefault(__nested_webpack_require_15419__("module")),_path=_interopRequireDefault(__nested_webpack_require_15419__("path"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const nodeModulesRegex=/^(?:.*[\\/])?node_modules(?:[\\/].*)?$/,Module=module.constructor.length>1?module.constructor:_module.default,HOOK_RETURNED_NOTHING_ERROR_MESSAGE="[Pirates] A hook returned a non-string, or nothing at all! This is a violation of intergalactic law!\n--------------------\nIf you have no idea what this means or what Pirates is, let me explain: Pirates is a module that makes is easy to implement require hooks. One of the require hooks you're using uses it. One of these require hooks didn't return anything from it's handler, so we don't know what to do. You might want to debug this."},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/comparator.js":(module,__unused_webpack_exports,__nested_webpack_require_17921__)=>{const ANY=Symbol("SemVer ANY");class Comparator{static get ANY(){return ANY}constructor(comp,options){if(options=parseOptions(options),comp instanceof Comparator){if(comp.loose===!!options.loose)return comp;comp=comp.value}comp=comp.trim().split(/\s+/).join(" "),debug("comparator",comp,options),this.options=options,this.loose=!!options.loose,this.parse(comp),this.semver===ANY?this.value="":this.value=this.operator+this.semver.version,debug("comp",this)}parse(comp){const r=this.options.loose?re[t.COMPARATORLOOSE]:re[t.COMPARATOR],m=comp.match(r);if(!m)throw new TypeError(`Invalid comparator: ${comp}`);this.operator=void 0!==m[1]?m[1]:"","="===this.operator&&(this.operator=""),m[2]?this.semver=new SemVer(m[2],this.options.loose):this.semver=ANY}toString(){return this.value}test(version){if(debug("Comparator.test",version,this.options.loose),this.semver===ANY||version===ANY)return!0;if("string"==typeof version)try{version=new SemVer(version,this.options)}catch(er){return!1}return cmp(version,this.operator,this.semver,this.options)}intersects(comp,options){if(!(comp instanceof Comparator))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new Range(comp.value,options).test(this.value):""===comp.operator?""===comp.value||new Range(this.value,options).test(comp.semver):(!(options=parseOptions(options)).includePrerelease||"<0.0.0-0"!==this.value&&"<0.0.0-0"!==comp.value)&&(!(!options.includePrerelease&&(this.value.startsWith("<0.0.0")||comp.value.startsWith("<0.0.0")))&&(!(!this.operator.startsWith(">")||!comp.operator.startsWith(">"))||(!(!this.operator.startsWith("<")||!comp.operator.startsWith("<"))||(!(this.semver.version!==comp.semver.version||!this.operator.includes("=")||!comp.operator.includes("="))||(!!(cmp(this.semver,"<",comp.semver,options)&&this.operator.startsWith(">")&&comp.operator.startsWith("<"))||!!(cmp(this.semver,">",comp.semver,options)&&this.operator.startsWith("<")&&comp.operator.startsWith(">")))))))}}module.exports=Comparator;const parseOptions=__nested_webpack_require_17921__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/parse-options.js"),{safeRe:re,t}=__nested_webpack_require_17921__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/re.js"),cmp=__nested_webpack_require_17921__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/cmp.js"),debug=__nested_webpack_require_17921__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/debug.js"),SemVer=__nested_webpack_require_17921__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),Range=__nested_webpack_require_17921__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js")},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js":(module,__unused_webpack_exports,__nested_webpack_require_20698__)=>{class Range{constructor(range,options){if(options=parseOptions(options),range instanceof Range)return range.loose===!!options.loose&&range.includePrerelease===!!options.includePrerelease?range:new Range(range.raw,options);if(range instanceof Comparator)return this.raw=range.value,this.set=[[range]],this.format(),this;if(this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease,this.raw=range.trim().split(/\s+/).join(" "),this.set=this.raw.split("||").map((r=>this.parseRange(r))).filter((c=>c.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const first=this.set[0];if(this.set=this.set.filter((c=>!isNullSet(c[0]))),0===this.set.length)this.set=[first];else if(this.set.length>1)for(const c of this.set)if(1===c.length&&isAny(c[0])){this.set=[c];break}}this.format()}format(){return this.range=this.set.map((comps=>comps.join(" ").trim())).join("||").trim(),this.range}toString(){return this.range}parseRange(range){const memoKey=((this.options.includePrerelease&&FLAG_INCLUDE_PRERELEASE)|(this.options.loose&&FLAG_LOOSE))+":"+range,cached=cache.get(memoKey);if(cached)return cached;const loose=this.options.loose,hr=loose?re[t.HYPHENRANGELOOSE]:re[t.HYPHENRANGE];range=range.replace(hr,hyphenReplace(this.options.includePrerelease)),debug("hyphen replace",range),range=range.replace(re[t.COMPARATORTRIM],comparatorTrimReplace),debug("comparator trim",range),range=range.replace(re[t.TILDETRIM],tildeTrimReplace),debug("tilde trim",range),range=range.replace(re[t.CARETTRIM],caretTrimReplace),debug("caret trim",range);let rangeList=range.split(" ").map((comp=>parseComparator(comp,this.options))).join(" ").split(/\s+/).map((comp=>replaceGTE0(comp,this.options)));loose&&(rangeList=rangeList.filter((comp=>(debug("loose invalid filter",comp,this.options),!!comp.match(re[t.COMPARATORLOOSE]))))),debug("range list",rangeList);const rangeMap=new Map,comparators=rangeList.map((comp=>new Comparator(comp,this.options)));for(const comp of comparators){if(isNullSet(comp))return[comp];rangeMap.set(comp.value,comp)}rangeMap.size>1&&rangeMap.has("")&&rangeMap.delete("");const result=[...rangeMap.values()];return cache.set(memoKey,result),result}intersects(range,options){if(!(range instanceof Range))throw new TypeError("a Range is required");return this.set.some((thisComparators=>isSatisfiable(thisComparators,options)&&range.set.some((rangeComparators=>isSatisfiable(rangeComparators,options)&&thisComparators.every((thisComparator=>rangeComparators.every((rangeComparator=>thisComparator.intersects(rangeComparator,options)))))))))}test(version){if(!version)return!1;if("string"==typeof version)try{version=new SemVer(version,this.options)}catch(er){return!1}for(let i=0;i<this.set.length;i++)if(testSet(this.set[i],version,this.options))return!0;return!1}}module.exports=Range;const cache=new(__nested_webpack_require_20698__("./node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js"))({max:1e3}),parseOptions=__nested_webpack_require_20698__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/parse-options.js"),Comparator=__nested_webpack_require_20698__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/comparator.js"),debug=__nested_webpack_require_20698__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/debug.js"),SemVer=__nested_webpack_require_20698__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),{safeRe:re,t,comparatorTrimReplace,tildeTrimReplace,caretTrimReplace}=__nested_webpack_require_20698__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/re.js"),{FLAG_INCLUDE_PRERELEASE,FLAG_LOOSE}=__nested_webpack_require_20698__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/constants.js"),isNullSet=c=>"<0.0.0-0"===c.value,isAny=c=>""===c.value,isSatisfiable=(comparators,options)=>{let result=!0;const remainingComparators=comparators.slice();let testComparator=remainingComparators.pop();for(;result&&remainingComparators.length;)result=remainingComparators.every((otherComparator=>testComparator.intersects(otherComparator,options))),testComparator=remainingComparators.pop();return result},parseComparator=(comp,options)=>(debug("comp",comp,options),comp=replaceCarets(comp,options),debug("caret",comp),comp=replaceTildes(comp,options),debug("tildes",comp),comp=replaceXRanges(comp,options),debug("xrange",comp),comp=replaceStars(comp,options),debug("stars",comp),comp),isX=id=>!id||"x"===id.toLowerCase()||"*"===id,replaceTildes=(comp,options)=>comp.trim().split(/\s+/).map((c=>replaceTilde(c,options))).join(" "),replaceTilde=(comp,options)=>{const r=options.loose?re[t.TILDELOOSE]:re[t.TILDE];return comp.replace(r,((_,M,m,p,pr)=>{let ret;return debug("tilde",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=`>=${M}.0.0 <${+M+1}.0.0-0`:isX(p)?ret=`>=${M}.${m}.0 <${M}.${+m+1}.0-0`:pr?(debug("replaceTilde pr",pr),ret=`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`):ret=`>=${M}.${m}.${p} <${M}.${+m+1}.0-0`,debug("tilde return",ret),ret}))},replaceCarets=(comp,options)=>comp.trim().split(/\s+/).map((c=>replaceCaret(c,options))).join(" "),replaceCaret=(comp,options)=>{debug("caret",comp,options);const r=options.loose?re[t.CARETLOOSE]:re[t.CARET],z=options.includePrerelease?"-0":"";return comp.replace(r,((_,M,m,p,pr)=>{let ret;return debug("caret",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=`>=${M}.0.0${z} <${+M+1}.0.0-0`:isX(p)?ret="0"===M?`>=${M}.${m}.0${z} <${M}.${+m+1}.0-0`:`>=${M}.${m}.0${z} <${+M+1}.0.0-0`:pr?(debug("replaceCaret pr",pr),ret="0"===M?"0"===m?`>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p+1}-0`:`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`:`>=${M}.${m}.${p}-${pr} <${+M+1}.0.0-0`):(debug("no pr"),ret="0"===M?"0"===m?`>=${M}.${m}.${p}${z} <${M}.${m}.${+p+1}-0`:`>=${M}.${m}.${p}${z} <${M}.${+m+1}.0-0`:`>=${M}.${m}.${p} <${+M+1}.0.0-0`),debug("caret return",ret),ret}))},replaceXRanges=(comp,options)=>(debug("replaceXRanges",comp,options),comp.split(/\s+/).map((c=>replaceXRange(c,options))).join(" ")),replaceXRange=(comp,options)=>{comp=comp.trim();const r=options.loose?re[t.XRANGELOOSE]:re[t.XRANGE];return comp.replace(r,((ret,gtlt,M,m,p,pr)=>{debug("xRange",comp,ret,gtlt,M,m,p,pr);const xM=isX(M),xm=xM||isX(m),xp=xm||isX(p),anyX=xp;return"="===gtlt&&anyX&&(gtlt=""),pr=options.includePrerelease?"-0":"",xM?ret=">"===gtlt||"<"===gtlt?"<0.0.0-0":"*":gtlt&&anyX?(xm&&(m=0),p=0,">"===gtlt?(gtlt=">=",xm?(M=+M+1,m=0,p=0):(m=+m+1,p=0)):"<="===gtlt&&(gtlt="<",xm?M=+M+1:m=+m+1),"<"===gtlt&&(pr="-0"),ret=`${gtlt+M}.${m}.${p}${pr}`):xm?ret=`>=${M}.0.0${pr} <${+M+1}.0.0-0`:xp&&(ret=`>=${M}.${m}.0${pr} <${M}.${+m+1}.0-0`),debug("xRange return",ret),ret}))},replaceStars=(comp,options)=>(debug("replaceStars",comp,options),comp.trim().replace(re[t.STAR],"")),replaceGTE0=(comp,options)=>(debug("replaceGTE0",comp,options),comp.trim().replace(re[options.includePrerelease?t.GTE0PRE:t.GTE0],"")),hyphenReplace=incPr=>($0,from,fM,fm,fp,fpr,fb,to,tM,tm,tp,tpr,tb)=>`${from=isX(fM)?"":isX(fm)?`>=${fM}.0.0${incPr?"-0":""}`:isX(fp)?`>=${fM}.${fm}.0${incPr?"-0":""}`:fpr?`>=${from}`:`>=${from}${incPr?"-0":""}`} ${to=isX(tM)?"":isX(tm)?`<${+tM+1}.0.0-0`:isX(tp)?`<${tM}.${+tm+1}.0-0`:tpr?`<=${tM}.${tm}.${tp}-${tpr}`:incPr?`<${tM}.${tm}.${+tp+1}-0`:`<=${to}`}`.trim(),testSet=(set,version,options)=>{for(let i=0;i<set.length;i++)if(!set[i].test(version))return!1;if(version.prerelease.length&&!options.includePrerelease){for(let i=0;i<set.length;i++)if(debug(set[i].semver),set[i].semver!==Comparator.ANY&&set[i].semver.prerelease.length>0){const allowed=set[i].semver;if(allowed.major===version.major&&allowed.minor===version.minor&&allowed.patch===version.patch)return!0}return!1}return!0}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js":(module,__unused_webpack_exports,__nested_webpack_require_28468__)=>{const debug=__nested_webpack_require_28468__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/debug.js"),{MAX_LENGTH,MAX_SAFE_INTEGER}=__nested_webpack_require_28468__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/constants.js"),{safeRe:re,t}=__nested_webpack_require_28468__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/re.js"),parseOptions=__nested_webpack_require_28468__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/parse-options.js"),{compareIdentifiers}=__nested_webpack_require_28468__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/identifiers.js");class SemVer{constructor(version,options){if(options=parseOptions(options),version instanceof SemVer){if(version.loose===!!options.loose&&version.includePrerelease===!!options.includePrerelease)return version;version=version.version}else if("string"!=typeof version)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version}".`);if(version.length>MAX_LENGTH)throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);debug("SemVer",version,options),this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease;const m=version.trim().match(options.loose?re[t.LOOSE]:re[t.FULL]);if(!m)throw new TypeError(`Invalid Version: ${version}`);if(this.raw=version,this.major=+m[1],this.minor=+m[2],this.patch=+m[3],this.major>MAX_SAFE_INTEGER||this.major<0)throw new TypeError("Invalid major version");if(this.minor>MAX_SAFE_INTEGER||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>MAX_SAFE_INTEGER||this.patch<0)throw new TypeError("Invalid patch version");m[4]?this.prerelease=m[4].split(".").map((id=>{if(/^[0-9]+$/.test(id)){const num=+id;if(num>=0&&num<MAX_SAFE_INTEGER)return num}return id})):this.prerelease=[],this.build=m[5]?m[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(other){if(debug("SemVer.compare",this.version,this.options,other),!(other instanceof SemVer)){if("string"==typeof other&&other===this.version)return 0;other=new SemVer(other,this.options)}return other.version===this.version?0:this.compareMain(other)||this.comparePre(other)}compareMain(other){return other instanceof SemVer||(other=new SemVer(other,this.options)),compareIdentifiers(this.major,other.major)||compareIdentifiers(this.minor,other.minor)||compareIdentifiers(this.patch,other.patch)}comparePre(other){if(other instanceof SemVer||(other=new SemVer(other,this.options)),this.prerelease.length&&!other.prerelease.length)return-1;if(!this.prerelease.length&&other.prerelease.length)return 1;if(!this.prerelease.length&&!other.prerelease.length)return 0;let i=0;do{const a=this.prerelease[i],b=other.prerelease[i];if(debug("prerelease compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)}compareBuild(other){other instanceof SemVer||(other=new SemVer(other,this.options));let i=0;do{const a=this.build[i],b=other.build[i];if(debug("prerelease compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)}inc(release,identifier,identifierBase){switch(release){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",identifier,identifierBase);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",identifier,identifierBase);break;case"prepatch":this.prerelease.length=0,this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const base=Number(identifierBase)?1:0;if(!identifier&&!1===identifierBase)throw new Error("invalid increment argument: identifier is empty");if(0===this.prerelease.length)this.prerelease=[base];else{let i=this.prerelease.length;for(;--i>=0;)"number"==typeof this.prerelease[i]&&(this.prerelease[i]++,i=-2);if(-1===i){if(identifier===this.prerelease.join(".")&&!1===identifierBase)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(base)}}if(identifier){let prerelease=[identifier,base];!1===identifierBase&&(prerelease=[identifier]),0===compareIdentifiers(this.prerelease[0],identifier)?isNaN(this.prerelease[1])&&(this.prerelease=prerelease):this.prerelease=prerelease}break}default:throw new Error(`invalid increment argument: ${release}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}module.exports=SemVer},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/clean.js":(module,__unused_webpack_exports,__nested_webpack_require_33718__)=>{const parse=__nested_webpack_require_33718__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/parse.js");module.exports=(version,options)=>{const s=parse(version.trim().replace(/^[=v]+/,""),options);return s?s.version:null}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/cmp.js":(module,__unused_webpack_exports,__nested_webpack_require_34075__)=>{const eq=__nested_webpack_require_34075__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/eq.js"),neq=__nested_webpack_require_34075__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/neq.js"),gt=__nested_webpack_require_34075__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gt.js"),gte=__nested_webpack_require_34075__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gte.js"),lt=__nested_webpack_require_34075__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lt.js"),lte=__nested_webpack_require_34075__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lte.js");module.exports=(a,op,b,loose)=>{switch(op){case"===":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a===b;case"!==":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a!==b;case"":case"=":case"==":return eq(a,b,loose);case"!=":return neq(a,b,loose);case">":return gt(a,b,loose);case">=":return gte(a,b,loose);case"<":return lt(a,b,loose);case"<=":return lte(a,b,loose);default:throw new TypeError(`Invalid operator: ${op}`)}}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/coerce.js":(module,__unused_webpack_exports,__nested_webpack_require_35272__)=>{const SemVer=__nested_webpack_require_35272__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),parse=__nested_webpack_require_35272__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/parse.js"),{safeRe:re,t}=__nested_webpack_require_35272__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/re.js");module.exports=(version,options)=>{if(version instanceof SemVer)return version;if("number"==typeof version&&(version=String(version)),"string"!=typeof version)return null;let match=null;if((options=options||{}).rtl){let next;for(;(next=re[t.COERCERTL].exec(version))&&(!match||match.index+match[0].length!==version.length);)match&&next.index+next[0].length===match.index+match[0].length||(match=next),re[t.COERCERTL].lastIndex=next.index+next[1].length+next[2].length;re[t.COERCERTL].lastIndex=-1}else match=version.match(re[t.COERCE]);return null===match?null:parse(`${match[2]}.${match[3]||"0"}.${match[4]||"0"}`,options)}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare-build.js":(module,__unused_webpack_exports,__nested_webpack_require_36353__)=>{const SemVer=__nested_webpack_require_36353__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js");module.exports=(a,b,loose)=>{const versionA=new SemVer(a,loose),versionB=new SemVer(b,loose);return versionA.compare(versionB)||versionA.compareBuild(versionB)}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare-loose.js":(module,__unused_webpack_exports,__nested_webpack_require_36762__)=>{const compare=__nested_webpack_require_36762__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b)=>compare(a,b,!0)},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js":(module,__unused_webpack_exports,__nested_webpack_require_37046__)=>{const SemVer=__nested_webpack_require_37046__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js");module.exports=(a,b,loose)=>new SemVer(a,loose).compare(new SemVer(b,loose))},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/diff.js":(module,__unused_webpack_exports,__nested_webpack_require_37362__)=>{const parse=__nested_webpack_require_37362__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/parse.js");module.exports=(version1,version2)=>{const v1=parse(version1,null,!0),v2=parse(version2,null,!0),comparison=v1.compare(v2);if(0===comparison)return null;const v1Higher=comparison>0,highVersion=v1Higher?v1:v2,lowVersion=v1Higher?v2:v1,highHasPre=!!highVersion.prerelease.length;if(!!lowVersion.prerelease.length&&!highHasPre)return lowVersion.patch||lowVersion.minor?highVersion.patch?"patch":highVersion.minor?"minor":"major":"major";const prefix=highHasPre?"pre":"";return v1.major!==v2.major?prefix+"major":v1.minor!==v2.minor?prefix+"minor":v1.patch!==v2.patch?prefix+"patch":"prerelease"}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/eq.js":(module,__unused_webpack_exports,__nested_webpack_require_38192__)=>{const compare=__nested_webpack_require_38192__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>0===compare(a,b,loose)},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gt.js":(module,__unused_webpack_exports,__nested_webpack_require_38484__)=>{const compare=__nested_webpack_require_38484__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)>0},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gte.js":(module,__unused_webpack_exports,__nested_webpack_require_38775__)=>{const compare=__nested_webpack_require_38775__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)>=0},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/inc.js":(module,__unused_webpack_exports,__nested_webpack_require_39067__)=>{const SemVer=__nested_webpack_require_39067__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js");module.exports=(version,release,options,identifier,identifierBase)=>{"string"==typeof options&&(identifierBase=identifier,identifier=options,options=void 0);try{return new SemVer(version instanceof SemVer?version.version:version,options).inc(release,identifier,identifierBase).version}catch(er){return null}}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lt.js":(module,__unused_webpack_exports,__nested_webpack_require_39613__)=>{const compare=__nested_webpack_require_39613__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)<0},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lte.js":(module,__unused_webpack_exports,__nested_webpack_require_39904__)=>{const compare=__nested_webpack_require_39904__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)<=0},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/major.js":(module,__unused_webpack_exports,__nested_webpack_require_40198__)=>{const SemVer=__nested_webpack_require_40198__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js");module.exports=(a,loose)=>new SemVer(a,loose).major},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/minor.js":(module,__unused_webpack_exports,__nested_webpack_require_40490__)=>{const SemVer=__nested_webpack_require_40490__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js");module.exports=(a,loose)=>new SemVer(a,loose).minor},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/neq.js":(module,__unused_webpack_exports,__nested_webpack_require_40780__)=>{const compare=__nested_webpack_require_40780__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>0!==compare(a,b,loose)},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/parse.js":(module,__unused_webpack_exports,__nested_webpack_require_41075__)=>{const SemVer=__nested_webpack_require_41075__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js");module.exports=(version,options,throwErrors=!1)=>{if(version instanceof SemVer)return version;try{return new SemVer(version,options)}catch(er){if(!throwErrors)return null;throw er}}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/patch.js":(module,__unused_webpack_exports,__nested_webpack_require_41497__)=>{const SemVer=__nested_webpack_require_41497__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js");module.exports=(a,loose)=>new SemVer(a,loose).patch},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/prerelease.js":(module,__unused_webpack_exports,__nested_webpack_require_41794__)=>{const parse=__nested_webpack_require_41794__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/parse.js");module.exports=(version,options)=>{const parsed=parse(version,options);return parsed&&parsed.prerelease.length?parsed.prerelease:null}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/rcompare.js":(module,__unused_webpack_exports,__nested_webpack_require_42172__)=>{const compare=__nested_webpack_require_42172__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(b,a,loose)},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/rsort.js":(module,__unused_webpack_exports,__nested_webpack_require_42463__)=>{const compareBuild=__nested_webpack_require_42463__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare-build.js");module.exports=(list,loose)=>list.sort(((a,b)=>compareBuild(b,a,loose)))},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/satisfies.js":(module,__unused_webpack_exports,__nested_webpack_require_42795__)=>{const Range=__nested_webpack_require_42795__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js");module.exports=(version,range,options)=>{try{range=new Range(range,options)}catch(er){return!1}return range.test(version)}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/sort.js":(module,__unused_webpack_exports,__nested_webpack_require_43155__)=>{const compareBuild=__nested_webpack_require_43155__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare-build.js");module.exports=(list,loose)=>list.sort(((a,b)=>compareBuild(a,b,loose)))},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/valid.js":(module,__unused_webpack_exports,__nested_webpack_require_43483__)=>{const parse=__nested_webpack_require_43483__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/parse.js");module.exports=(version,options)=>{const v=parse(version,options);return v?v.version:null}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/index.js":(module,__unused_webpack_exports,__nested_webpack_require_43804__)=>{const internalRe=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/re.js"),constants=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/constants.js"),SemVer=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),identifiers=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/identifiers.js"),parse=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/parse.js"),valid=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/valid.js"),clean=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/clean.js"),inc=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/inc.js"),diff=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/diff.js"),major=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/major.js"),minor=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/minor.js"),patch=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/patch.js"),prerelease=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/prerelease.js"),compare=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js"),rcompare=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/rcompare.js"),compareLoose=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare-loose.js"),compareBuild=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare-build.js"),sort=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/sort.js"),rsort=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/rsort.js"),gt=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gt.js"),lt=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lt.js"),eq=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/eq.js"),neq=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/neq.js"),gte=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gte.js"),lte=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lte.js"),cmp=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/cmp.js"),coerce=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/coerce.js"),Comparator=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/comparator.js"),Range=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js"),satisfies=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/satisfies.js"),toComparators=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/to-comparators.js"),maxSatisfying=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/max-satisfying.js"),minSatisfying=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/min-satisfying.js"),minVersion=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/min-version.js"),validRange=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/valid.js"),outside=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/outside.js"),gtr=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/gtr.js"),ltr=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/ltr.js"),intersects=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/intersects.js"),simplifyRange=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/simplify.js"),subset=__nested_webpack_require_43804__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/subset.js");module.exports={parse,valid,clean,inc,diff,major,minor,patch,prerelease,compare,rcompare,compareLoose,compareBuild,sort,rsort,gt,lt,eq,neq,gte,lte,cmp,coerce,Comparator,Range,satisfies,toComparators,maxSatisfying,minSatisfying,minVersion,validRange,outside,gtr,ltr,intersects,simplifyRange,subset,SemVer,re:internalRe.re,src:internalRe.src,tokens:internalRe.t,SEMVER_SPEC_VERSION:constants.SEMVER_SPEC_VERSION,RELEASE_TYPES:constants.RELEASE_TYPES,compareIdentifiers:identifiers.compareIdentifiers,rcompareIdentifiers:identifiers.rcompareIdentifiers}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/constants.js":module=>{const MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991;module.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/debug.js":module=>{const debug="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...args)=>console.error("SEMVER",...args):()=>{};module.exports=debug},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/identifiers.js":module=>{const numeric=/^[0-9]+$/,compareIdentifiers=(a,b)=>{const anum=numeric.test(a),bnum=numeric.test(b);return anum&&bnum&&(a=+a,b=+b),a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1};module.exports={compareIdentifiers,rcompareIdentifiers:(a,b)=>compareIdentifiers(b,a)}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/parse-options.js":module=>{const looseOption=Object.freeze({loose:!0}),emptyOpts=Object.freeze({});module.exports=options=>options?"object"!=typeof options?looseOption:options:emptyOpts},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/re.js":(module,exports,__nested_webpack_require_50039__)=>{const{MAX_SAFE_COMPONENT_LENGTH,MAX_SAFE_BUILD_LENGTH}=__nested_webpack_require_50039__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/constants.js"),debug=__nested_webpack_require_50039__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/internal/debug.js"),re=(exports=module.exports={}).re=[],safeRe=exports.safeRe=[],src=exports.src=[],t=exports.t={};let R=0;const safeRegexReplacements=[["\\s",1],["\\d",MAX_SAFE_COMPONENT_LENGTH],["[a-zA-Z0-9-]",MAX_SAFE_BUILD_LENGTH]],createToken=(name,value,isGlobal)=>{const safe=(value=>{for(const[token,max]of safeRegexReplacements)value=value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);return value})(value),index=R++;debug(name,index,value),t[name]=index,src[index]=value,re[index]=new RegExp(value,isGlobal?"g":void 0),safeRe[index]=new RegExp(safe,isGlobal?"g":void 0)};createToken("NUMERICIDENTIFIER","0|[1-9]\\d*"),createToken("NUMERICIDENTIFIERLOOSE","\\d+"),createToken("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),createToken("MAINVERSION",`(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})`),createToken("MAINVERSIONLOOSE",`(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`),createToken("PRERELEASEIDENTIFIER",`(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`),createToken("PRERELEASEIDENTIFIERLOOSE",`(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`),createToken("PRERELEASE",`(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`),createToken("PRERELEASELOOSE",`(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`),createToken("BUILDIDENTIFIER","[a-zA-Z0-9-]+"),createToken("BUILD",`(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`),createToken("FULLPLAIN",`v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`),createToken("FULL",`^${src[t.FULLPLAIN]}$`),createToken("LOOSEPLAIN",`[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`),createToken("LOOSE",`^${src[t.LOOSEPLAIN]}$`),createToken("GTLT","((?:<|>)?=?)"),createToken("XRANGEIDENTIFIERLOOSE",`${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),createToken("XRANGEIDENTIFIER",`${src[t.NUMERICIDENTIFIER]}|x|X|\\*`),createToken("XRANGEPLAIN",`[v=\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`),createToken("XRANGEPLAINLOOSE",`[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`),createToken("XRANGE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`),createToken("XRANGELOOSE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`),createToken("COERCE",`(^|[^\\d])(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:$|[^\\d])`),createToken("COERCERTL",src[t.COERCE],!0),createToken("LONETILDE","(?:~>?)"),createToken("TILDETRIM",`(\\s*)${src[t.LONETILDE]}\\s+`,!0),exports.tildeTrimReplace="$1~",createToken("TILDE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`),createToken("TILDELOOSE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`),createToken("LONECARET","(?:\\^)"),createToken("CARETTRIM",`(\\s*)${src[t.LONECARET]}\\s+`,!0),exports.caretTrimReplace="$1^",createToken("CARET",`^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`),createToken("CARETLOOSE",`^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`),createToken("COMPARATORLOOSE",`^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`),createToken("COMPARATOR",`^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`),createToken("COMPARATORTRIM",`(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`,!0),exports.comparatorTrimReplace="$1$2$3",createToken("HYPHENRANGE",`^\\s*(${src[t.XRANGEPLAIN]})\\s+-\\s+(${src[t.XRANGEPLAIN]})\\s*$`),createToken("HYPHENRANGELOOSE",`^\\s*(${src[t.XRANGEPLAINLOOSE]})\\s+-\\s+(${src[t.XRANGEPLAINLOOSE]})\\s*$`),createToken("STAR","(<|>)?=?\\s*\\*"),createToken("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),createToken("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/gtr.js":(module,__unused_webpack_exports,__nested_webpack_require_54411__)=>{const outside=__nested_webpack_require_54411__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/outside.js");module.exports=(version,range,options)=>outside(version,range,">",options)},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/intersects.js":(module,__unused_webpack_exports,__nested_webpack_require_54729__)=>{const Range=__nested_webpack_require_54729__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js");module.exports=(r1,r2,options)=>(r1=new Range(r1,options),r2=new Range(r2,options),r1.intersects(r2,options))},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/ltr.js":(module,__unused_webpack_exports,__nested_webpack_require_55072__)=>{const outside=__nested_webpack_require_55072__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/outside.js");module.exports=(version,range,options)=>outside(version,range,"<",options)},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/max-satisfying.js":(module,__unused_webpack_exports,__nested_webpack_require_55394__)=>{const SemVer=__nested_webpack_require_55394__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),Range=__nested_webpack_require_55394__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js");module.exports=(versions,range,options)=>{let max=null,maxSV=null,rangeObj=null;try{rangeObj=new Range(range,options)}catch(er){return null}return versions.forEach((v=>{rangeObj.test(v)&&(max&&-1!==maxSV.compare(v)||(max=v,maxSV=new SemVer(max,options)))})),max}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/min-satisfying.js":(module,__unused_webpack_exports,__nested_webpack_require_56003__)=>{const SemVer=__nested_webpack_require_56003__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),Range=__nested_webpack_require_56003__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js");module.exports=(versions,range,options)=>{let min=null,minSV=null,rangeObj=null;try{rangeObj=new Range(range,options)}catch(er){return null}return versions.forEach((v=>{rangeObj.test(v)&&(min&&1!==minSV.compare(v)||(min=v,minSV=new SemVer(min,options)))})),min}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/min-version.js":(module,__unused_webpack_exports,__nested_webpack_require_56608__)=>{const SemVer=__nested_webpack_require_56608__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),Range=__nested_webpack_require_56608__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js"),gt=__nested_webpack_require_56608__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gt.js");module.exports=(range,loose)=>{range=new Range(range,loose);let minver=new SemVer("0.0.0");if(range.test(minver))return minver;if(minver=new SemVer("0.0.0-0"),range.test(minver))return minver;minver=null;for(let i=0;i<range.set.length;++i){const comparators=range.set[i];let setMin=null;comparators.forEach((comparator=>{const compver=new SemVer(comparator.semver.version);switch(comparator.operator){case">":0===compver.prerelease.length?compver.patch++:compver.prerelease.push(0),compver.raw=compver.format();case"":case">=":setMin&&!gt(compver,setMin)||(setMin=compver);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${comparator.operator}`)}})),!setMin||minver&&!gt(minver,setMin)||(minver=setMin)}return minver&&range.test(minver)?minver:null}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/outside.js":(module,__unused_webpack_exports,__nested_webpack_require_57821__)=>{const SemVer=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/semver.js"),Comparator=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/comparator.js"),{ANY}=Comparator,Range=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js"),satisfies=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/satisfies.js"),gt=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gt.js"),lt=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lt.js"),lte=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/lte.js"),gte=__nested_webpack_require_57821__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/gte.js");module.exports=(version,range,hilo,options)=>{let gtfn,ltefn,ltfn,comp,ecomp;switch(version=new SemVer(version,options),range=new Range(range,options),hilo){case">":gtfn=gt,ltefn=lte,ltfn=lt,comp=">",ecomp=">=";break;case"<":gtfn=lt,ltefn=gte,ltfn=gt,comp="<",ecomp="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(satisfies(version,range,options))return!1;for(let i=0;i<range.set.length;++i){const comparators=range.set[i];let high=null,low=null;if(comparators.forEach((comparator=>{comparator.semver===ANY&&(comparator=new Comparator(">=0.0.0")),high=high||comparator,low=low||comparator,gtfn(comparator.semver,high.semver,options)?high=comparator:ltfn(comparator.semver,low.semver,options)&&(low=comparator)})),high.operator===comp||high.operator===ecomp)return!1;if((!low.operator||low.operator===comp)&&ltefn(version,low.semver))return!1;if(low.operator===ecomp&&ltfn(version,low.semver))return!1}return!0}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/simplify.js":(module,__unused_webpack_exports,__nested_webpack_require_59732__)=>{const satisfies=__nested_webpack_require_59732__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/satisfies.js"),compare=__nested_webpack_require_59732__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js");module.exports=(versions,range,options)=>{const set=[];let first=null,prev=null;const v=versions.sort(((a,b)=>compare(a,b,options)));for(const version of v){satisfies(version,range,options)?(prev=version,first||(first=version)):(prev&&set.push([first,prev]),prev=null,first=null)}first&&set.push([first,null]);const ranges=[];for(const[min,max]of set)min===max?ranges.push(min):max||min!==v[0]?max?min===v[0]?ranges.push(`<=${max}`):ranges.push(`${min} - ${max}`):ranges.push(`>=${min}`):ranges.push("*");const simplified=ranges.join(" || "),original="string"==typeof range.raw?range.raw:String(range);return simplified.length<original.length?simplified:range}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/subset.js":(module,__unused_webpack_exports,__nested_webpack_require_60745__)=>{const Range=__nested_webpack_require_60745__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js"),Comparator=__nested_webpack_require_60745__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/comparator.js"),{ANY}=Comparator,satisfies=__nested_webpack_require_60745__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/satisfies.js"),compare=__nested_webpack_require_60745__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/functions/compare.js"),minimumVersionWithPreRelease=[new Comparator(">=0.0.0-0")],minimumVersion=[new Comparator(">=0.0.0")],simpleSubset=(sub,dom,options)=>{if(sub===dom)return!0;if(1===sub.length&&sub[0].semver===ANY){if(1===dom.length&&dom[0].semver===ANY)return!0;sub=options.includePrerelease?minimumVersionWithPreRelease:minimumVersion}if(1===dom.length&&dom[0].semver===ANY){if(options.includePrerelease)return!0;dom=minimumVersion}const eqSet=new Set;let gt,lt,gtltComp,higher,lower,hasDomLT,hasDomGT;for(const c of sub)">"===c.operator||">="===c.operator?gt=higherGT(gt,c,options):"<"===c.operator||"<="===c.operator?lt=lowerLT(lt,c,options):eqSet.add(c.semver);if(eqSet.size>1)return null;if(gt&&lt){if(gtltComp=compare(gt.semver,lt.semver,options),gtltComp>0)return null;if(0===gtltComp&&(">="!==gt.operator||"<="!==lt.operator))return null}for(const eq of eqSet){if(gt&&!satisfies(eq,String(gt),options))return null;if(lt&&!satisfies(eq,String(lt),options))return null;for(const c of dom)if(!satisfies(eq,String(c),options))return!1;return!0}let needDomLTPre=!(!lt||options.includePrerelease||!lt.semver.prerelease.length)&&lt.semver,needDomGTPre=!(!gt||options.includePrerelease||!gt.semver.prerelease.length)&&gt.semver;needDomLTPre&&1===needDomLTPre.prerelease.length&&"<"===lt.operator&&0===needDomLTPre.prerelease[0]&&(needDomLTPre=!1);for(const c of dom){if(hasDomGT=hasDomGT||">"===c.operator||">="===c.operator,hasDomLT=hasDomLT||"<"===c.operator||"<="===c.operator,gt)if(needDomGTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomGTPre.major&&c.semver.minor===needDomGTPre.minor&&c.semver.patch===needDomGTPre.patch&&(needDomGTPre=!1),">"===c.operator||">="===c.operator){if(higher=higherGT(gt,c,options),higher===c&&higher!==gt)return!1}else if(">="===gt.operator&&!satisfies(gt.semver,String(c),options))return!1;if(lt)if(needDomLTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomLTPre.major&&c.semver.minor===needDomLTPre.minor&&c.semver.patch===needDomLTPre.patch&&(needDomLTPre=!1),"<"===c.operator||"<="===c.operator){if(lower=lowerLT(lt,c,options),lower===c&&lower!==lt)return!1}else if("<="===lt.operator&&!satisfies(lt.semver,String(c),options))return!1;if(!c.operator&&(lt||gt)&&0!==gtltComp)return!1}return!(gt&&hasDomLT&&!lt&&0!==gtltComp)&&(!(lt&&hasDomGT&&!gt&&0!==gtltComp)&&(!needDomGTPre&&!needDomLTPre))},higherGT=(a,b,options)=>{if(!a)return b;const comp=compare(a.semver,b.semver,options);return comp>0?a:comp<0||">"===b.operator&&">="===a.operator?b:a},lowerLT=(a,b,options)=>{if(!a)return b;const comp=compare(a.semver,b.semver,options);return comp<0?a:comp>0||"<"===b.operator&&"<="===a.operator?b:a};module.exports=(sub,dom,options={})=>{if(sub===dom)return!0;sub=new Range(sub,options),dom=new Range(dom,options);let sawNonNull=!1;OUTER:for(const simpleSub of sub.set){for(const simpleDom of dom.set){const isSub=simpleSubset(simpleSub,simpleDom,options);if(sawNonNull=sawNonNull||null!==isSub,isSub)continue OUTER}if(sawNonNull)return!1}return!0}},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/to-comparators.js":(module,__unused_webpack_exports,__nested_webpack_require_64360__)=>{const Range=__nested_webpack_require_64360__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js");module.exports=(range,options)=>new Range(range,options).set.map((comp=>comp.map((c=>c.value)).join(" ").trim().split(" ")))},"./node_modules/.pnpm/semver@7.5.3/node_modules/semver/ranges/valid.js":(module,__unused_webpack_exports,__nested_webpack_require_64720__)=>{const Range=__nested_webpack_require_64720__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/classes/range.js");module.exports=(range,options)=>{try{return new Range(range,options).range||"*"}catch(er){return null}}},"./node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js":module=>{"use strict";module.exports=function(Yallist){Yallist.prototype[Symbol.iterator]=function*(){for(let walker=this.head;walker;walker=walker.next)yield walker.value}}},"./node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js":(module,__unused_webpack_exports,__nested_webpack_require_65301__)=>{"use strict";function Yallist(list){var self=this;if(self instanceof Yallist||(self=new Yallist),self.tail=null,self.head=null,self.length=0,list&&"function"==typeof list.forEach)list.forEach((function(item){self.push(item)}));else if(arguments.length>0)for(var i=0,l=arguments.length;i<l;i++)self.push(arguments[i]);return self}function insert(self,node,value){var inserted=node===self.head?new Node(value,null,node,self):new Node(value,node,node.next,self);return null===inserted.next&&(self.tail=inserted),null===inserted.prev&&(self.head=inserted),self.length++,inserted}function push(self,item){self.tail=new Node(item,self.tail,null,self),self.head||(self.head=self.tail),self.length++}function unshift(self,item){self.head=new Node(item,null,self.head,self),self.tail||(self.tail=self.head),self.length++}function Node(value,prev,next,list){if(!(this instanceof Node))return new Node(value,prev,next,list);this.list=list,this.value=value,prev?(prev.next=this,this.prev=prev):this.prev=null,next?(next.prev=this,this.next=next):this.next=null}module.exports=Yallist,Yallist.Node=Node,Yallist.create=Yallist,Yallist.prototype.removeNode=function(node){if(node.list!==this)throw new Error("removing node which does not belong to this list");var next=node.next,prev=node.prev;return next&&(next.prev=prev),prev&&(prev.next=next),node===this.head&&(this.head=next),node===this.tail&&(this.tail=prev),node.list.length--,node.next=null,node.prev=null,node.list=null,next},Yallist.prototype.unshiftNode=function(node){if(node!==this.head){node.list&&node.list.removeNode(node);var head=this.head;node.list=this,node.next=head,head&&(head.prev=node),this.head=node,this.tail||(this.tail=node),this.length++}},Yallist.prototype.pushNode=function(node){if(node!==this.tail){node.list&&node.list.removeNode(node);var tail=this.tail;node.list=this,node.prev=tail,tail&&(tail.next=node),this.tail=node,this.head||(this.head=node),this.length++}},Yallist.prototype.push=function(){for(var i=0,l=arguments.length;i<l;i++)push(this,arguments[i]);return this.length},Yallist.prototype.unshift=function(){for(var i=0,l=arguments.length;i<l;i++)unshift(this,arguments[i]);return this.length},Yallist.prototype.pop=function(){if(this.tail){var res=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,res}},Yallist.prototype.shift=function(){if(this.head){var res=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,res}},Yallist.prototype.forEach=function(fn,thisp){thisp=thisp||this;for(var walker=this.head,i=0;null!==walker;i++)fn.call(thisp,walker.value,i,this),walker=walker.next},Yallist.prototype.forEachReverse=function(fn,thisp){thisp=thisp||this;for(var walker=this.tail,i=this.length-1;null!==walker;i--)fn.call(thisp,walker.value,i,this),walker=walker.prev},Yallist.prototype.get=function(n){for(var i=0,walker=this.head;null!==walker&&i<n;i++)walker=walker.next;if(i===n&&null!==walker)return walker.value},Yallist.prototype.getReverse=function(n){for(var i=0,walker=this.tail;null!==walker&&i<n;i++)walker=walker.prev;if(i===n&&null!==walker)return walker.value},Yallist.prototype.map=function(fn,thisp){thisp=thisp||this;for(var res=new Yallist,walker=this.head;null!==walker;)res.push(fn.call(thisp,walker.value,this)),walker=walker.next;return res},Yallist.prototype.mapReverse=function(fn,thisp){thisp=thisp||this;for(var res=new Yallist,walker=this.tail;null!==walker;)res.push(fn.call(thisp,walker.value,this)),walker=walker.prev;return res},Yallist.prototype.reduce=function(fn,initial){var acc,walker=this.head;if(arguments.length>1)acc=initial;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");walker=this.head.next,acc=this.head.value}for(var i=0;null!==walker;i++)acc=fn(acc,walker.value,i),walker=walker.next;return acc},Yallist.prototype.reduceReverse=function(fn,initial){var acc,walker=this.tail;if(arguments.length>1)acc=initial;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");walker=this.tail.prev,acc=this.tail.value}for(var i=this.length-1;null!==walker;i--)acc=fn(acc,walker.value,i),walker=walker.prev;return acc},Yallist.prototype.toArray=function(){for(var arr=new Array(this.length),i=0,walker=this.head;null!==walker;i++)arr[i]=walker.value,walker=walker.next;return arr},Yallist.prototype.toArrayReverse=function(){for(var arr=new Array(this.length),i=0,walker=this.tail;null!==walker;i++)arr[i]=walker.value,walker=walker.prev;return arr},Yallist.prototype.slice=function(from,to){(to=to||this.length)<0&&(to+=this.length),(from=from||0)<0&&(from+=this.length);var ret=new Yallist;if(to<from||to<0)return ret;from<0&&(from=0),to>this.length&&(to=this.length);for(var i=0,walker=this.head;null!==walker&&i<from;i++)walker=walker.next;for(;null!==walker&&i<to;i++,walker=walker.next)ret.push(walker.value);return ret},Yallist.prototype.sliceReverse=function(from,to){(to=to||this.length)<0&&(to+=this.length),(from=from||0)<0&&(from+=this.length);var ret=new Yallist;if(to<from||to<0)return ret;from<0&&(from=0),to>this.length&&(to=this.length);for(var i=this.length,walker=this.tail;null!==walker&&i>to;i--)walker=walker.prev;for(;null!==walker&&i>from;i--,walker=walker.prev)ret.push(walker.value);return ret},Yallist.prototype.splice=function(start,deleteCount,...nodes){start>this.length&&(start=this.length-1),start<0&&(start=this.length+start);for(var i=0,walker=this.head;null!==walker&&i<start;i++)walker=walker.next;var ret=[];for(i=0;walker&&i<deleteCount;i++)ret.push(walker.value),walker=this.removeNode(walker);null===walker&&(walker=this.tail),walker!==this.head&&walker!==this.tail&&(walker=walker.prev);for(i=0;i<nodes.length;i++)walker=insert(this,walker,nodes[i]);return ret},Yallist.prototype.reverse=function(){for(var head=this.head,tail=this.tail,walker=head;null!==walker;walker=walker.prev){var p=walker.prev;walker.prev=walker.next,walker.next=p}return this.head=tail,this.tail=head,this};try{__nested_webpack_require_65301__("./node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js")(Yallist)}catch(er){}},crypto:module=>{"use strict";module.exports=__nccwpck_require__(6113)},fs:module=>{"use strict";module.exports=__nccwpck_require__(7147)},module:module=>{"use strict";module.exports=__nccwpck_require__(8188)},path:module=>{"use strict";module.exports=__nccwpck_require__(1017)}},__webpack_module_cache__={};function __nested_webpack_require_71731__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={id:moduleId,loaded:!1,exports:{}};return __webpack_modules__[moduleId](module,module.exports,__nested_webpack_require_71731__),module.loaded=!0,module.exports}__nested_webpack_require_71731__.n=module=>{var getter=module&&module.__esModule?()=>module.default:()=>module;return __nested_webpack_require_71731__.d(getter,{a:getter}),getter},__nested_webpack_require_71731__.d=(exports,definition)=>{for(var key in definition)__nested_webpack_require_71731__.o(definition,key)&&!__nested_webpack_require_71731__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__nested_webpack_require_71731__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__nested_webpack_require_71731__.nmd=module=>(module.paths=[],module.children||(module.children=[]),module);var __webpack_exports__={};(()=>{"use strict";__nested_webpack_require_71731__.d(__webpack_exports__,{default:()=>createJITI});var external_fs_=__nested_webpack_require_71731__("fs"),external_module_=__nested_webpack_require_71731__("module");const external_perf_hooks_namespaceObject=__nccwpck_require__(4074),external_os_namespaceObject=__nccwpck_require__(2037),external_vm_namespaceObject=__nccwpck_require__(6144);var external_vm_default=__nested_webpack_require_71731__.n(external_vm_namespaceObject);const external_url_namespaceObject=__nccwpck_require__(7310);function normalizeWindowsPath(input=""){return input&&input.includes("\\")?input.replace(/\\/g,"/"):input}const _UNC_REGEX=/^[/\\]{2}/,_IS_ABSOLUTE_RE=/^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/,_DRIVE_LETTER_RE=/^[A-Za-z]:$/,pathe_92c04245_normalize=function(path){if(0===path.length)return".";const isUNCPath=(path=normalizeWindowsPath(path)).match(_UNC_REGEX),isPathAbsolute=isAbsolute(path),trailingSeparator="/"===path[path.length-1];return 0===(path=normalizeString(path,!isPathAbsolute)).length?isPathAbsolute?"/":trailingSeparator?"./":".":(trailingSeparator&&(path+="/"),_DRIVE_LETTER_RE.test(path)&&(path+="/"),isUNCPath?isPathAbsolute?`//${path}`:`//./${path}`:isPathAbsolute&&!isAbsolute(path)?`/${path}`:path)},join=function(...arguments_){if(0===arguments_.length)return".";let joined;for(const argument of arguments_)argument&&argument.length>0&&(void 0===joined?joined=argument:joined+=`/${argument}`);return void 0===joined?".":pathe_92c04245_normalize(joined.replace(/\/\/+/g,"/"))};function normalizeString(path,allowAboveRoot){let res="",lastSegmentLength=0,lastSlash=-1,dots=0,char=null;for(let index=0;index<=path.length;++index){if(index<path.length)char=path[index];else{if("/"===char)break;char="/"}if("/"===char){if(lastSlash===index-1||1===dots);else if(2===dots){if(res.length<2||2!==lastSegmentLength||"."!==res[res.length-1]||"."!==res[res.length-2]){if(res.length>2){const lastSlashIndex=res.lastIndexOf("/");-1===lastSlashIndex?(res="",lastSegmentLength=0):(res=res.slice(0,lastSlashIndex),lastSegmentLength=res.length-1-res.lastIndexOf("/")),lastSlash=index,dots=0;continue}if(res.length>0){res="",lastSegmentLength=0,lastSlash=index,dots=0;continue}}allowAboveRoot&&(res+=res.length>0?"/..":"..",lastSegmentLength=2)}else res.length>0?res+=`/${path.slice(lastSlash+1,index)}`:res=path.slice(lastSlash+1,index),lastSegmentLength=index-lastSlash-1;lastSlash=index,dots=0}else"."===char&&-1!==dots?++dots:dots=-1}return res}const isAbsolute=function(p){return _IS_ABSOLUTE_RE.test(p)},_EXTNAME_RE=/.(\.[^./]+)$/,extname=function(p){const match=_EXTNAME_RE.exec(normalizeWindowsPath(p));return match&&match[1]||""},pathe_92c04245_dirname=function(p){const segments=normalizeWindowsPath(p).replace(/\/$/,"").split("/").slice(0,-1);return 1===segments.length&&_DRIVE_LETTER_RE.test(segments[0])&&(segments[0]+="/"),segments.join("/")||(isAbsolute(p)?"/":".")},basename=function(p,extension){const lastSegment=normalizeWindowsPath(p).split("/").pop();return extension&&lastSegment.endsWith(extension)?lastSegment.slice(0,-extension.length):lastSegment},suspectProtoRx=/"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/,suspectConstructorRx=/"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/,JsonSigRx=/^\s*["[{]|^\s*-?\d[\d.]{0,14}\s*$/;function jsonParseTransform(key,value){if(!("__proto__"===key||"constructor"===key&&value&&"object"==typeof value&&"prototype"in value))return value;!function(key){console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`)}(key)}function destr(value,options={}){if("string"!=typeof value)return value;const _value=value.trim();if('"'===value[0]&&'"'===value[value.length-1])return _value.slice(1,-1);const _lval=_value.toLowerCase();if("true"===_lval)return!0;if("false"===_lval)return!1;if("undefined"!==_lval){if("null"===_lval)return null;if("nan"===_lval)return Number.NaN;if("infinity"===_lval)return Number.POSITIVE_INFINITY;if("-infinity"===_lval)return Number.NEGATIVE_INFINITY;if(!JsonSigRx.test(value)){if(options.strict)throw new SyntaxError("[destr] Invalid JSON");return value}try{if(suspectProtoRx.test(value)||suspectConstructorRx.test(value)){if(options.strict)throw new Error("[destr] Possible prototype pollution");return JSON.parse(value,jsonParseTransform)}return JSON.parse(value)}catch(error){if(options.strict)throw error;return value}}}function escapeStringRegexp(string){if("string"!=typeof string)throw new TypeError("Expected a string");return string.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}var create_require=__nested_webpack_require_71731__("./node_modules/.pnpm/create-require@1.1.1/node_modules/create-require/create-require.js"),create_require_default=__nested_webpack_require_71731__.n(create_require),semver=__nested_webpack_require_71731__("./node_modules/.pnpm/semver@7.5.3/node_modules/semver/index.js");const pathSeparators=new Set(["/","\\",void 0]),normalizedAliasSymbol=Symbol.for("pathe:normalizedAlias");function normalizeAliases(_aliases){if(_aliases[normalizedAliasSymbol])return _aliases;const aliases=Object.fromEntries(Object.entries(_aliases).sort((([a],[b])=>function(a,b){return b.split("/").length-a.split("/").length}(a,b))));for(const key in aliases)for(const alias in aliases)alias===key||key.startsWith(alias)||aliases[key].startsWith(alias)&&pathSeparators.has(aliases[key][alias.length])&&(aliases[key]=aliases[alias]+aliases[key].slice(alias.length));return Object.defineProperty(aliases,normalizedAliasSymbol,{value:!0,enumerable:!1}),aliases}var lib=__nested_webpack_require_71731__("./node_modules/.pnpm/pirates@4.0.6/node_modules/pirates/lib/index.js"),object_hash=__nested_webpack_require_71731__("./node_modules/.pnpm/object-hash@3.0.0/node_modules/object-hash/index.js"),object_hash_default=__nested_webpack_require_71731__.n(object_hash),astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239],astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191],nonASCIIidentifierStartChars="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",reservedWords={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},ecma5AndLessKeywords="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",keywords$1={5:ecma5AndLessKeywords,"5module":ecma5AndLessKeywords+" export import",6:ecma5AndLessKeywords+" const class extends export import super"},keywordRelationalOperator=/^in(stanceof)?$/,nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]"),nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+"‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿]");function isInAstralSet(code,set){for(var pos=65536,i=0;i<set.length;i+=2){if((pos+=set[i])>code)return!1;if((pos+=set[i+1])>=code)return!0}return!1}function isIdentifierStart(code,astral){return code<65?36===code:code<91||(code<97?95===code:code<123||(code<=65535?code>=170&&nonASCIIidentifierStart.test(String.fromCharCode(code)):!1!==astral&&isInAstralSet(code,astralIdentifierStartCodes)))}function isIdentifierChar(code,astral){return code<48?36===code:code<58||!(code<65)&&(code<91||(code<97?95===code:code<123||(code<=65535?code>=170&&nonASCIIidentifier.test(String.fromCharCode(code)):!1!==astral&&(isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes)))))}var TokenType=function(label,conf){void 0===conf&&(conf={}),this.label=label,this.keyword=conf.keyword,this.beforeExpr=!!conf.beforeExpr,this.startsExpr=!!conf.startsExpr,this.isLoop=!!conf.isLoop,this.isAssign=!!conf.isAssign,this.prefix=!!conf.prefix,this.postfix=!!conf.postfix,this.binop=conf.binop||null,this.updateContext=null};function binop(name,prec){return new TokenType(name,{beforeExpr:!0,binop:prec})}var beforeExpr={beforeExpr:!0},startsExpr={startsExpr:!0},keywords={};function kw(name,options){return void 0===options&&(options={}),options.keyword=name,keywords[name]=new TokenType(name,options)}var types$1={num:new TokenType("num",startsExpr),regexp:new TokenType("regexp",startsExpr),string:new TokenType("string",startsExpr),name:new TokenType("name",startsExpr),privateId:new TokenType("privateId",startsExpr),eof:new TokenType("eof"),bracketL:new TokenType("[",{beforeExpr:!0,startsExpr:!0}),bracketR:new TokenType("]"),braceL:new TokenType("{",{beforeExpr:!0,startsExpr:!0}),braceR:new TokenType("}"),parenL:new TokenType("(",{beforeExpr:!0,startsExpr:!0}),parenR:new TokenType(")"),comma:new TokenType(",",beforeExpr),semi:new TokenType(";",beforeExpr),colon:new TokenType(":",beforeExpr),dot:new TokenType("."),question:new TokenType("?",beforeExpr),questionDot:new TokenType("?."),arrow:new TokenType("=>",beforeExpr),template:new TokenType("template"),invalidTemplate:new TokenType("invalidTemplate"),ellipsis:new TokenType("...",beforeExpr),backQuote:new TokenType("`",startsExpr),dollarBraceL:new TokenType("${",{beforeExpr:!0,startsExpr:!0}),eq:new TokenType("=",{beforeExpr:!0,isAssign:!0}),assign:new TokenType("_=",{beforeExpr:!0,isAssign:!0}),incDec:new TokenType("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new TokenType("!/~",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:binop("||",1),logicalAND:binop("&&",2),bitwiseOR:binop("|",3),bitwiseXOR:binop("^",4),bitwiseAND:binop("&",5),equality:binop("==/!=/===/!==",6),relational:binop("</>/<=/>=",7),bitShift:binop("<</>>/>>>",8),plusMin:new TokenType("+/-",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:binop("%",10),star:binop("*",10),slash:binop("/",10),starstar:new TokenType("**",{beforeExpr:!0}),coalesce:binop("??",1),_break:kw("break"),_case:kw("case",beforeExpr),_catch:kw("catch"),_continue:kw("continue"),_debugger:kw("debugger"),_default:kw("default",beforeExpr),_do:kw("do",{isLoop:!0,beforeExpr:!0}),_else:kw("else",beforeExpr),_finally:kw("finally"),_for:kw("for",{isLoop:!0}),_function:kw("function",startsExpr),_if:kw("if"),_return:kw("return",beforeExpr),_switch:kw("switch"),_throw:kw("throw",beforeExpr),_try:kw("try"),_var:kw("var"),_const:kw("const"),_while:kw("while",{isLoop:!0}),_with:kw("with"),_new:kw("new",{beforeExpr:!0,startsExpr:!0}),_this:kw("this",startsExpr),_super:kw("super",startsExpr),_class:kw("class",startsExpr),_extends:kw("extends",beforeExpr),_export:kw("export"),_import:kw("import",startsExpr),_null:kw("null",startsExpr),_true:kw("true",startsExpr),_false:kw("false",startsExpr),_in:kw("in",{beforeExpr:!0,binop:7}),_instanceof:kw("instanceof",{beforeExpr:!0,binop:7}),_typeof:kw("typeof",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:kw("void",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:kw("delete",{beforeExpr:!0,prefix:!0,startsExpr:!0})},lineBreak=/\r\n?|\n|\u2028|\u2029/,lineBreakG=new RegExp(lineBreak.source,"g");function isNewLine(code){return 10===code||13===code||8232===code||8233===code}function nextLineBreak(code,from,end){void 0===end&&(end=code.length);for(var i=from;i<end;i++){var next=code.charCodeAt(i);if(isNewLine(next))return i<end-1&&13===next&&10===code.charCodeAt(i+1)?i+2:i+1}return-1}var nonASCIIwhitespace=/[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/,skipWhiteSpace=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,ref=Object.prototype,acorn_hasOwnProperty=ref.hasOwnProperty,acorn_toString=ref.toString,hasOwn=Object.hasOwn||function(obj,propName){return acorn_hasOwnProperty.call(obj,propName)},isArray=Array.isArray||function(obj){return"[object Array]"===acorn_toString.call(obj)};function wordsRegexp(words){return new RegExp("^(?:"+words.replace(/ /g,"|")+")$")}function codePointToString(code){return code<=65535?String.fromCharCode(code):(code-=65536,String.fromCharCode(55296+(code>>10),56320+(1023&code)))}var loneSurrogate=/(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,Position=function(line,col){this.line=line,this.column=col};Position.prototype.offset=function(n){return new Position(this.line,this.column+n)};var SourceLocation=function(p,start,end){this.start=start,this.end=end,null!==p.sourceFile&&(this.source=p.sourceFile)};function getLineInfo(input,offset){for(var line=1,cur=0;;){var nextBreak=nextLineBreak(input,cur,offset);if(nextBreak<0)return new Position(line,offset-cur);++line,cur=nextBreak}}var defaultOptions={ecmaVersion:null,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:null,allowSuperOutsideMethod:null,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1},warnedAboutEcmaVersion=!1;function getOptions(opts){var options={};for(var opt in defaultOptions)options[opt]=opts&&hasOwn(opts,opt)?opts[opt]:defaultOptions[opt];if("latest"===options.ecmaVersion?options.ecmaVersion=1e8:null==options.ecmaVersion?(!warnedAboutEcmaVersion&&"object"==typeof console&&console.warn&&(warnedAboutEcmaVersion=!0,console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.")),options.ecmaVersion=11):options.ecmaVersion>=2015&&(options.ecmaVersion-=2009),null==options.allowReserved&&(options.allowReserved=options.ecmaVersion<5),opts&&null!=opts.allowHashBang||(options.allowHashBang=options.ecmaVersion>=14),isArray(options.onToken)){var tokens=options.onToken;options.onToken=function(token){return tokens.push(token)}}return isArray(options.onComment)&&(options.onComment=function(options,array){return function(block,text,start,end,startLoc,endLoc){var comment={type:block?"Block":"Line",value:text,start,end};options.locations&&(comment.loc=new SourceLocation(this,startLoc,endLoc)),options.ranges&&(comment.range=[start,end]),array.push(comment)}}(options,options.onComment)),options}function functionFlags(async,generator){return 2|(async?4:0)|(generator?8:0)}var Parser=function(options,input,startPos){this.options=options=getOptions(options),this.sourceFile=options.sourceFile,this.keywords=wordsRegexp(keywords$1[options.ecmaVersion>=6?6:"module"===options.sourceType?"5module":5]);var reserved="";!0!==options.allowReserved&&(reserved=reservedWords[options.ecmaVersion>=6?6:5===options.ecmaVersion?5:3],"module"===options.sourceType&&(reserved+=" await")),this.reservedWords=wordsRegexp(reserved);var reservedStrict=(reserved?reserved+" ":"")+reservedWords.strict;this.reservedWordsStrict=wordsRegexp(reservedStrict),this.reservedWordsStrictBind=wordsRegexp(reservedStrict+" "+reservedWords.strictBind),this.input=String(input),this.containsEsc=!1,startPos?(this.pos=startPos,this.lineStart=this.input.lastIndexOf("\n",startPos-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(lineBreak).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=types$1.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule="module"===options.sourceType,this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.potentialArrowInForAwait=!1,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports=Object.create(null),0===this.pos&&options.allowHashBang&&"#!"===this.input.slice(0,2)&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(1),this.regexpState=null,this.privateNameStack=[]},prototypeAccessors={inFunction:{configurable:!0},inGenerator:{configurable:!0},inAsync:{configurable:!0},canAwait:{configurable:!0},allowSuper:{configurable:!0},allowDirectSuper:{configurable:!0},treatFunctionsAsVar:{configurable:!0},allowNewDotTarget:{configurable:!0},inClassStaticBlock:{configurable:!0}};Parser.prototype.parse=function(){var node=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(node)},prototypeAccessors.inFunction.get=function(){return(2&this.currentVarScope().flags)>0},prototypeAccessors.inGenerator.get=function(){return(8&this.currentVarScope().flags)>0&&!this.currentVarScope().inClassFieldInit},prototypeAccessors.inAsync.get=function(){return(4&this.currentVarScope().flags)>0&&!this.currentVarScope().inClassFieldInit},prototypeAccessors.canAwait.get=function(){for(var i=this.scopeStack.length-1;i>=0;i--){var scope=this.scopeStack[i];if(scope.inClassFieldInit||256&scope.flags)return!1;if(2&scope.flags)return(4&scope.flags)>0}return this.inModule&&this.options.ecmaVersion>=13||this.options.allowAwaitOutsideFunction},prototypeAccessors.allowSuper.get=function(){var ref=this.currentThisScope(),flags=ref.flags,inClassFieldInit=ref.inClassFieldInit;return(64&flags)>0||inClassFieldInit||this.options.allowSuperOutsideMethod},prototypeAccessors.allowDirectSuper.get=function(){return(128&this.currentThisScope().flags)>0},prototypeAccessors.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())},prototypeAccessors.allowNewDotTarget.get=function(){var ref=this.currentThisScope(),flags=ref.flags,inClassFieldInit=ref.inClassFieldInit;return(258&flags)>0||inClassFieldInit},prototypeAccessors.inClassStaticBlock.get=function(){return(256&this.currentVarScope().flags)>0},Parser.extend=function(){for(var plugins=[],len=arguments.length;len--;)plugins[len]=arguments[len];for(var cls=this,i=0;i<plugins.length;i++)cls=plugins[i](cls);return cls},Parser.parse=function(input,options){return new this(options,input).parse()},Parser.parseExpressionAt=function(input,pos,options){var parser=new this(options,input,pos);return parser.nextToken(),parser.parseExpression()},Parser.tokenizer=function(input,options){return new this(options,input)},Object.defineProperties(Parser.prototype,prototypeAccessors);var pp$9=Parser.prototype,literal=/^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;pp$9.strictDirective=function(start){if(this.options.ecmaVersion<5)return!1;for(;;){skipWhiteSpace.lastIndex=start,start+=skipWhiteSpace.exec(this.input)[0].length;var match=literal.exec(this.input.slice(start));if(!match)return!1;if("use strict"===(match[1]||match[2])){skipWhiteSpace.lastIndex=start+match[0].length;var spaceAfter=skipWhiteSpace.exec(this.input),end=spaceAfter.index+spaceAfter[0].length,next=this.input.charAt(end);return";"===next||"}"===next||lineBreak.test(spaceAfter[0])&&!(/[(`.[+\-/*%<>=,?^&]/.test(next)||"!"===next&&"="===this.input.charAt(end+1))}start+=match[0].length,skipWhiteSpace.lastIndex=start,start+=skipWhiteSpace.exec(this.input)[0].length,";"===this.input[start]&&start++}},pp$9.eat=function(type){return this.type===type&&(this.next(),!0)},pp$9.isContextual=function(name){return this.type===types$1.name&&this.value===name&&!this.containsEsc},pp$9.eatContextual=function(name){return!!this.isContextual(name)&&(this.next(),!0)},pp$9.expectContextual=function(name){this.eatContextual(name)||this.unexpected()},pp$9.canInsertSemicolon=function(){return this.type===types$1.eof||this.type===types$1.braceR||lineBreak.test(this.input.slice(this.lastTokEnd,this.start))},pp$9.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0},pp$9.semicolon=function(){this.eat(types$1.semi)||this.insertSemicolon()||this.unexpected()},pp$9.afterTrailingComma=function(tokType,notNext){if(this.type===tokType)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),notNext||this.next(),!0},pp$9.expect=function(type){this.eat(type)||this.unexpected()},pp$9.unexpected=function(pos){this.raise(null!=pos?pos:this.start,"Unexpected token")};var DestructuringErrors=function(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1};pp$9.checkPatternErrors=function(refDestructuringErrors,isAssign){if(refDestructuringErrors){refDestructuringErrors.trailingComma>-1&&this.raiseRecoverable(refDestructuringErrors.trailingComma,"Comma is not permitted after the rest element");var parens=isAssign?refDestructuringErrors.parenthesizedAssign:refDestructuringErrors.parenthesizedBind;parens>-1&&this.raiseRecoverable(parens,isAssign?"Assigning to rvalue":"Parenthesized pattern")}},pp$9.checkExpressionErrors=function(refDestructuringErrors,andThrow){if(!refDestructuringErrors)return!1;var shorthandAssign=refDestructuringErrors.shorthandAssign,doubleProto=refDestructuringErrors.doubleProto;if(!andThrow)return shorthandAssign>=0||doubleProto>=0;shorthandAssign>=0&&this.raise(shorthandAssign,"Shorthand property assignments are valid only in destructuring patterns"),doubleProto>=0&&this.raiseRecoverable(doubleProto,"Redefinition of __proto__ property")},pp$9.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value")},pp$9.isSimpleAssignTarget=function(expr){return"ParenthesizedExpression"===expr.type?this.isSimpleAssignTarget(expr.expression):"Identifier"===expr.type||"MemberExpression"===expr.type};var pp$8=Parser.prototype;pp$8.parseTopLevel=function(node){var exports=Object.create(null);for(node.body||(node.body=[]);this.type!==types$1.eof;){var stmt=this.parseStatement(null,!0,exports);node.body.push(stmt)}if(this.inModule)for(var i=0,list=Object.keys(this.undefinedExports);i<list.length;i+=1){var name=list[i];this.raiseRecoverable(this.undefinedExports[name].start,"Export '"+name+"' is not defined")}return this.adaptDirectivePrologue(node.body),this.next(),node.sourceType=this.options.sourceType,this.finishNode(node,"Program")};var loopLabel={kind:"loop"},switchLabel={kind:"switch"};pp$8.isLet=function(context){if(this.options.ecmaVersion<6||!this.isContextual("let"))return!1;skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(91===nextCh||92===nextCh)return!0;if(context)return!1;if(123===nextCh||nextCh>55295&&nextCh<56320)return!0;if(isIdentifierStart(nextCh,!0)){for(var pos=next+1;isIdentifierChar(nextCh=this.input.charCodeAt(pos),!0);)++pos;if(92===nextCh||nextCh>55295&&nextCh<56320)return!0;var ident=this.input.slice(next,pos);if(!keywordRelationalOperator.test(ident))return!0}return!1},pp$8.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return!1;skipWhiteSpace.lastIndex=this.pos;var after,skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length;return!(lineBreak.test(this.input.slice(this.pos,next))||"function"!==this.input.slice(next,next+8)||next+8!==this.input.length&&(isIdentifierChar(after=this.input.charCodeAt(next+8))||after>55295&&after<56320))},pp$8.parseStatement=function(context,topLevel,exports){var kind,starttype=this.type,node=this.startNode();switch(this.isLet(context)&&(starttype=types$1._var,kind="let"),starttype){case types$1._break:case types$1._continue:return this.parseBreakContinueStatement(node,starttype.keyword);case types$1._debugger:return this.parseDebuggerStatement(node);case types$1._do:return this.parseDoStatement(node);case types$1._for:return this.parseForStatement(node);case types$1._function:return context&&(this.strict||"if"!==context&&"label"!==context)&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(node,!1,!context);case types$1._class:return context&&this.unexpected(),this.parseClass(node,!0);case types$1._if:return this.parseIfStatement(node);case types$1._return:return this.parseReturnStatement(node);case types$1._switch:return this.parseSwitchStatement(node);case types$1._throw:return this.parseThrowStatement(node);case types$1._try:return this.parseTryStatement(node);case types$1._const:case types$1._var:return kind=kind||this.value,context&&"var"!==kind&&this.unexpected(),this.parseVarStatement(node,kind);case types$1._while:return this.parseWhileStatement(node);case types$1._with:return this.parseWithStatement(node);case types$1.braceL:return this.parseBlock(!0,node);case types$1.semi:return this.parseEmptyStatement(node);case types$1._export:case types$1._import:if(this.options.ecmaVersion>10&&starttype===types$1._import){skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(40===nextCh||46===nextCh)return this.parseExpressionStatement(node,this.parseExpression())}return this.options.allowImportExportEverywhere||(topLevel||this.raise(this.start,"'import' and 'export' may only appear at the top level"),this.inModule||this.raise(this.start,"'import' and 'export' may appear only with 'sourceType: module'")),starttype===types$1._import?this.parseImport(node):this.parseExport(node,exports);default:if(this.isAsyncFunction())return context&&this.unexpected(),this.next(),this.parseFunctionStatement(node,!0,!context);var maybeName=this.value,expr=this.parseExpression();return starttype===types$1.name&&"Identifier"===expr.type&&this.eat(types$1.colon)?this.parseLabeledStatement(node,maybeName,expr,context):this.parseExpressionStatement(node,expr)}},pp$8.parseBreakContinueStatement=function(node,keyword){var isBreak="break"===keyword;this.next(),this.eat(types$1.semi)||this.insertSemicolon()?node.label=null:this.type!==types$1.name?this.unexpected():(node.label=this.parseIdent(),this.semicolon());for(var i=0;i<this.labels.length;++i){var lab=this.labels[i];if(null==node.label||lab.name===node.label.name){if(null!=lab.kind&&(isBreak||"loop"===lab.kind))break;if(node.label&&isBreak)break}}return i===this.labels.length&&this.raise(node.start,"Unsyntactic "+keyword),this.finishNode(node,isBreak?"BreakStatement":"ContinueStatement")},pp$8.parseDebuggerStatement=function(node){return this.next(),this.semicolon(),this.finishNode(node,"DebuggerStatement")},pp$8.parseDoStatement=function(node){return this.next(),this.labels.push(loopLabel),node.body=this.parseStatement("do"),this.labels.pop(),this.expect(types$1._while),node.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(types$1.semi):this.semicolon(),this.finishNode(node,"DoWhileStatement")},pp$8.parseForStatement=function(node){this.next();var awaitAt=this.options.ecmaVersion>=9&&this.canAwait&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(loopLabel),this.enterScope(0),this.expect(types$1.parenL),this.type===types$1.semi)return awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,null);var isLet=this.isLet();if(this.type===types$1._var||this.type===types$1._const||isLet){var init$1=this.startNode(),kind=isLet?"let":this.value;return this.next(),this.parseVar(init$1,!0,kind),this.finishNode(init$1,"VariableDeclaration"),(this.type===types$1._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&1===init$1.declarations.length?(this.options.ecmaVersion>=9&&(this.type===types$1._in?awaitAt>-1&&this.unexpected(awaitAt):node.await=awaitAt>-1),this.parseForIn(node,init$1)):(awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,init$1))}var startsWithLet=this.isContextual("let"),isForOf=!1,refDestructuringErrors=new DestructuringErrors,init=this.parseExpression(!(awaitAt>-1)||"await",refDestructuringErrors);return this.type===types$1._in||(isForOf=this.options.ecmaVersion>=6&&this.isContextual("of"))?(this.options.ecmaVersion>=9&&(this.type===types$1._in?awaitAt>-1&&this.unexpected(awaitAt):node.await=awaitAt>-1),startsWithLet&&isForOf&&this.raise(init.start,"The left-hand side of a for-of loop may not start with 'let'."),this.toAssignable(init,!1,refDestructuringErrors),this.checkLValPattern(init),this.parseForIn(node,init)):(this.checkExpressionErrors(refDestructuringErrors,!0),awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,init))},pp$8.parseFunctionStatement=function(node,isAsync,declarationPosition){return this.next(),this.parseFunction(node,FUNC_STATEMENT|(declarationPosition?0:FUNC_HANGING_STATEMENT),!1,isAsync)},pp$8.parseIfStatement=function(node){return this.next(),node.test=this.parseParenExpression(),node.consequent=this.parseStatement("if"),node.alternate=this.eat(types$1._else)?this.parseStatement("if"):null,this.finishNode(node,"IfStatement")},pp$8.parseReturnStatement=function(node){return this.inFunction||this.options.allowReturnOutsideFunction||this.raise(this.start,"'return' outside of function"),this.next(),this.eat(types$1.semi)||this.insertSemicolon()?node.argument=null:(node.argument=this.parseExpression(),this.semicolon()),this.finishNode(node,"ReturnStatement")},pp$8.parseSwitchStatement=function(node){var cur;this.next(),node.discriminant=this.parseParenExpression(),node.cases=[],this.expect(types$1.braceL),this.labels.push(switchLabel),this.enterScope(0);for(var sawDefault=!1;this.type!==types$1.braceR;)if(this.type===types$1._case||this.type===types$1._default){var isCase=this.type===types$1._case;cur&&this.finishNode(cur,"SwitchCase"),node.cases.push(cur=this.startNode()),cur.consequent=[],this.next(),isCase?cur.test=this.parseExpression():(sawDefault&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),sawDefault=!0,cur.test=null),this.expect(types$1.colon)}else cur||this.unexpected(),cur.consequent.push(this.parseStatement(null));return this.exitScope(),cur&&this.finishNode(cur,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(node,"SwitchStatement")},pp$8.parseThrowStatement=function(node){return this.next(),lineBreak.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),node.argument=this.parseExpression(),this.semicolon(),this.finishNode(node,"ThrowStatement")};var empty$1=[];pp$8.parseCatchClauseParam=function(){var param=this.parseBindingAtom(),simple="Identifier"===param.type;return this.enterScope(simple?32:0),this.checkLValPattern(param,simple?4:2),this.expect(types$1.parenR),param},pp$8.parseTryStatement=function(node){if(this.next(),node.block=this.parseBlock(),node.handler=null,this.type===types$1._catch){var clause=this.startNode();this.next(),this.eat(types$1.parenL)?clause.param=this.parseCatchClauseParam():(this.options.ecmaVersion<10&&this.unexpected(),clause.param=null,this.enterScope(0)),clause.body=this.parseBlock(!1),this.exitScope(),node.handler=this.finishNode(clause,"CatchClause")}return node.finalizer=this.eat(types$1._finally)?this.parseBlock():null,node.handler||node.finalizer||this.raise(node.start,"Missing catch or finally clause"),this.finishNode(node,"TryStatement")},pp$8.parseVarStatement=function(node,kind,allowMissingInitializer){return this.next(),this.parseVar(node,!1,kind,allowMissingInitializer),this.semicolon(),this.finishNode(node,"VariableDeclaration")},pp$8.parseWhileStatement=function(node){return this.next(),node.test=this.parseParenExpression(),this.labels.push(loopLabel),node.body=this.parseStatement("while"),this.labels.pop(),this.finishNode(node,"WhileStatement")},pp$8.parseWithStatement=function(node){return this.strict&&this.raise(this.start,"'with' in strict mode"),this.next(),node.object=this.parseParenExpression(),node.body=this.parseStatement("with"),this.finishNode(node,"WithStatement")},pp$8.parseEmptyStatement=function(node){return this.next(),this.finishNode(node,"EmptyStatement")},pp$8.parseLabeledStatement=function(node,maybeName,expr,context){for(var i$1=0,list=this.labels;i$1<list.length;i$1+=1){list[i$1].name===maybeName&&this.raise(expr.start,"Label '"+maybeName+"' is already declared")}for(var kind=this.type.isLoop?"loop":this.type===types$1._switch?"switch":null,i=this.labels.length-1;i>=0;i--){var label$1=this.labels[i];if(label$1.statementStart!==node.start)break;label$1.statementStart=this.start,label$1.kind=kind}return this.labels.push({name:maybeName,kind,statementStart:this.start}),node.body=this.parseStatement(context?-1===context.indexOf("label")?context+"label":context:"label"),this.labels.pop(),node.label=expr,this.finishNode(node,"LabeledStatement")},pp$8.parseExpressionStatement=function(node,expr){return node.expression=expr,this.semicolon(),this.finishNode(node,"ExpressionStatement")},pp$8.parseBlock=function(createNewLexicalScope,node,exitStrict){for(void 0===createNewLexicalScope&&(createNewLexicalScope=!0),void 0===node&&(node=this.startNode()),node.body=[],this.expect(types$1.braceL),createNewLexicalScope&&this.enterScope(0);this.type!==types$1.braceR;){var stmt=this.parseStatement(null);node.body.push(stmt)}return exitStrict&&(this.strict=!1),this.next(),createNewLexicalScope&&this.exitScope(),this.finishNode(node,"BlockStatement")},pp$8.parseFor=function(node,init){return node.init=init,this.expect(types$1.semi),node.test=this.type===types$1.semi?null:this.parseExpression(),this.expect(types$1.semi),node.update=this.type===types$1.parenR?null:this.parseExpression(),this.expect(types$1.parenR),node.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(node,"ForStatement")},pp$8.parseForIn=function(node,init){var isForIn=this.type===types$1._in;return this.next(),"VariableDeclaration"===init.type&&null!=init.declarations[0].init&&(!isForIn||this.options.ecmaVersion<8||this.strict||"var"!==init.kind||"Identifier"!==init.declarations[0].id.type)&&this.raise(init.start,(isForIn?"for-in":"for-of")+" loop variable declaration may not have an initializer"),node.left=init,node.right=isForIn?this.parseExpression():this.parseMaybeAssign(),this.expect(types$1.parenR),node.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(node,isForIn?"ForInStatement":"ForOfStatement")},pp$8.parseVar=function(node,isFor,kind,allowMissingInitializer){for(node.declarations=[],node.kind=kind;;){var decl=this.startNode();if(this.parseVarId(decl,kind),this.eat(types$1.eq)?decl.init=this.parseMaybeAssign(isFor):allowMissingInitializer||"const"!==kind||this.type===types$1._in||this.options.ecmaVersion>=6&&this.isContextual("of")?allowMissingInitializer||"Identifier"===decl.id.type||isFor&&(this.type===types$1._in||this.isContextual("of"))?decl.init=null:this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):this.unexpected(),node.declarations.push(this.finishNode(decl,"VariableDeclarator")),!this.eat(types$1.comma))break}return node},pp$8.parseVarId=function(decl,kind){decl.id=this.parseBindingAtom(),this.checkLValPattern(decl.id,"var"===kind?1:2,!1)};var FUNC_STATEMENT=1,FUNC_HANGING_STATEMENT=2;function isPrivateNameConflicted(privateNameMap,element){var name=element.key.name,curr=privateNameMap[name],next="true";return"MethodDefinition"!==element.type||"get"!==element.kind&&"set"!==element.kind||(next=(element.static?"s":"i")+element.kind),"iget"===curr&&"iset"===next||"iset"===curr&&"iget"===next||"sget"===curr&&"sset"===next||"sset"===curr&&"sget"===next?(privateNameMap[name]="true",!1):!!curr||(privateNameMap[name]=next,!1)}function checkKeyName(node,name){var computed=node.computed,key=node.key;return!computed&&("Identifier"===key.type&&key.name===name||"Literal"===key.type&&key.value===name)}pp$8.parseFunction=function(node,statement,allowExpressionBody,isAsync,forInit){this.initFunction(node),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!isAsync)&&(this.type===types$1.star&&statement&FUNC_HANGING_STATEMENT&&this.unexpected(),node.generator=this.eat(types$1.star)),this.options.ecmaVersion>=8&&(node.async=!!isAsync),statement&FUNC_STATEMENT&&(node.id=4&statement&&this.type!==types$1.name?null:this.parseIdent(),!node.id||statement&FUNC_HANGING_STATEMENT||this.checkLValSimple(node.id,this.strict||node.generator||node.async?this.treatFunctionsAsVar?1:2:3));var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(functionFlags(node.async,node.generator)),statement&FUNC_STATEMENT||(node.id=this.type===types$1.name?this.parseIdent():null),this.parseFunctionParams(node),this.parseFunctionBody(node,allowExpressionBody,!1,forInit),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,statement&FUNC_STATEMENT?"FunctionDeclaration":"FunctionExpression")},pp$8.parseFunctionParams=function(node){this.expect(types$1.parenL),node.params=this.parseBindingList(types$1.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams()},pp$8.parseClass=function(node,isStatement){this.next();var oldStrict=this.strict;this.strict=!0,this.parseClassId(node,isStatement),this.parseClassSuper(node);var privateNameMap=this.enterClassBody(),classBody=this.startNode(),hadConstructor=!1;for(classBody.body=[],this.expect(types$1.braceL);this.type!==types$1.braceR;){var element=this.parseClassElement(null!==node.superClass);element&&(classBody.body.push(element),"MethodDefinition"===element.type&&"constructor"===element.kind?(hadConstructor&&this.raiseRecoverable(element.start,"Duplicate constructor in the same class"),hadConstructor=!0):element.key&&"PrivateIdentifier"===element.key.type&&isPrivateNameConflicted(privateNameMap,element)&&this.raiseRecoverable(element.key.start,"Identifier '#"+element.key.name+"' has already been declared"))}return this.strict=oldStrict,this.next(),node.body=this.finishNode(classBody,"ClassBody"),this.exitClassBody(),this.finishNode(node,isStatement?"ClassDeclaration":"ClassExpression")},pp$8.parseClassElement=function(constructorAllowsSuper){if(this.eat(types$1.semi))return null;var ecmaVersion=this.options.ecmaVersion,node=this.startNode(),keyName="",isGenerator=!1,isAsync=!1,kind="method",isStatic=!1;if(this.eatContextual("static")){if(ecmaVersion>=13&&this.eat(types$1.braceL))return this.parseClassStaticBlock(node),node;this.isClassElementNameStart()||this.type===types$1.star?isStatic=!0:keyName="static"}if(node.static=isStatic,!keyName&&ecmaVersion>=8&&this.eatContextual("async")&&(!this.isClassElementNameStart()&&this.type!==types$1.star||this.canInsertSemicolon()?keyName="async":isAsync=!0),!keyName&&(ecmaVersion>=9||!isAsync)&&this.eat(types$1.star)&&(isGenerator=!0),!keyName&&!isAsync&&!isGenerator){var lastValue=this.value;(this.eatContextual("get")||this.eatContextual("set"))&&(this.isClassElementNameStart()?kind=lastValue:keyName=lastValue)}if(keyName?(node.computed=!1,node.key=this.startNodeAt(this.lastTokStart,this.lastTokStartLoc),node.key.name=keyName,this.finishNode(node.key,"Identifier")):this.parseClassElementName(node),ecmaVersion<13||this.type===types$1.parenL||"method"!==kind||isGenerator||isAsync){var isConstructor=!node.static&&checkKeyName(node,"constructor"),allowsDirectSuper=isConstructor&&constructorAllowsSuper;isConstructor&&"method"!==kind&&this.raise(node.key.start,"Constructor can't have get/set modifier"),node.kind=isConstructor?"constructor":kind,this.parseClassMethod(node,isGenerator,isAsync,allowsDirectSuper)}else this.parseClassField(node);return node},pp$8.isClassElementNameStart=function(){return this.type===types$1.name||this.type===types$1.privateId||this.type===types$1.num||this.type===types$1.string||this.type===types$1.bracketL||this.type.keyword},pp$8.parseClassElementName=function(element){this.type===types$1.privateId?("constructor"===this.value&&this.raise(this.start,"Classes can't have an element named '#constructor'"),element.computed=!1,element.key=this.parsePrivateIdent()):this.parsePropertyName(element)},pp$8.parseClassMethod=function(method,isGenerator,isAsync,allowsDirectSuper){var key=method.key;"constructor"===method.kind?(isGenerator&&this.raise(key.start,"Constructor can't be a generator"),isAsync&&this.raise(key.start,"Constructor can't be an async method")):method.static&&checkKeyName(method,"prototype")&&this.raise(key.start,"Classes may not have a static property named prototype");var value=method.value=this.parseMethod(isGenerator,isAsync,allowsDirectSuper);return"get"===method.kind&&0!==value.params.length&&this.raiseRecoverable(value.start,"getter should have no params"),"set"===method.kind&&1!==value.params.length&&this.raiseRecoverable(value.start,"setter should have exactly one param"),"set"===method.kind&&"RestElement"===value.params[0].type&&this.raiseRecoverable(value.params[0].start,"Setter cannot use rest params"),this.finishNode(method,"MethodDefinition")},pp$8.parseClassField=function(field){if(checkKeyName(field,"constructor")?this.raise(field.key.start,"Classes can't have a field named 'constructor'"):field.static&&checkKeyName(field,"prototype")&&this.raise(field.key.start,"Classes can't have a static field named 'prototype'"),this.eat(types$1.eq)){var scope=this.currentThisScope(),inClassFieldInit=scope.inClassFieldInit;scope.inClassFieldInit=!0,field.value=this.parseMaybeAssign(),scope.inClassFieldInit=inClassFieldInit}else field.value=null;return this.semicolon(),this.finishNode(field,"PropertyDefinition")},pp$8.parseClassStaticBlock=function(node){node.body=[];var oldLabels=this.labels;for(this.labels=[],this.enterScope(320);this.type!==types$1.braceR;){var stmt=this.parseStatement(null);node.body.push(stmt)}return this.next(),this.exitScope(),this.labels=oldLabels,this.finishNode(node,"StaticBlock")},pp$8.parseClassId=function(node,isStatement){this.type===types$1.name?(node.id=this.parseIdent(),isStatement&&this.checkLValSimple(node.id,2,!1)):(!0===isStatement&&this.unexpected(),node.id=null)},pp$8.parseClassSuper=function(node){node.superClass=this.eat(types$1._extends)?this.parseExprSubscripts(null,!1):null},pp$8.enterClassBody=function(){var element={declared:Object.create(null),used:[]};return this.privateNameStack.push(element),element.declared},pp$8.exitClassBody=function(){for(var ref=this.privateNameStack.pop(),declared=ref.declared,used=ref.used,len=this.privateNameStack.length,parent=0===len?null:this.privateNameStack[len-1],i=0;i<used.length;++i){var id=used[i];hasOwn(declared,id.name)||(parent?parent.used.push(id):this.raiseRecoverable(id.start,"Private field '#"+id.name+"' must be declared in an enclosing class"))}},pp$8.parseExportAllDeclaration=function(node,exports){return this.options.ecmaVersion>=11&&(this.eatContextual("as")?(node.exported=this.parseModuleExportName(),this.checkExport(exports,node.exported,this.lastTokStart)):node.exported=null),this.expectContextual("from"),this.type!==types$1.string&&this.unexpected(),node.source=this.parseExprAtom(),this.semicolon(),this.finishNode(node,"ExportAllDeclaration")},pp$8.parseExport=function(node,exports){if(this.next(),this.eat(types$1.star))return this.parseExportAllDeclaration(node,exports);if(this.eat(types$1._default))return this.checkExport(exports,"default",this.lastTokStart),node.declaration=this.parseExportDefaultDeclaration(),this.finishNode(node,"ExportDefaultDeclaration");if(this.shouldParseExportStatement())node.declaration=this.parseExportDeclaration(node),"VariableDeclaration"===node.declaration.type?this.checkVariableExport(exports,node.declaration.declarations):this.checkExport(exports,node.declaration.id,node.declaration.id.start),node.specifiers=[],node.source=null;else{if(node.declaration=null,node.specifiers=this.parseExportSpecifiers(exports),this.eatContextual("from"))this.type!==types$1.string&&this.unexpected(),node.source=this.parseExprAtom();else{for(var i=0,list=node.specifiers;i<list.length;i+=1){var spec=list[i];this.checkUnreserved(spec.local),this.checkLocalExport(spec.local),"Literal"===spec.local.type&&this.raise(spec.local.start,"A string literal cannot be used as an exported binding without `from`.")}node.source=null}this.semicolon()}return this.finishNode(node,"ExportNamedDeclaration")},pp$8.parseExportDeclaration=function(node){return this.parseStatement(null)},pp$8.parseExportDefaultDeclaration=function(){var isAsync;if(this.type===types$1._function||(isAsync=this.isAsyncFunction())){var fNode=this.startNode();return this.next(),isAsync&&this.next(),this.parseFunction(fNode,4|FUNC_STATEMENT,!1,isAsync)}if(this.type===types$1._class){var cNode=this.startNode();return this.parseClass(cNode,"nullableID")}var declaration=this.parseMaybeAssign();return this.semicolon(),declaration},pp$8.checkExport=function(exports,name,pos){exports&&("string"!=typeof name&&(name="Identifier"===name.type?name.name:name.value),hasOwn(exports,name)&&this.raiseRecoverable(pos,"Duplicate export '"+name+"'"),exports[name]=!0)},pp$8.checkPatternExport=function(exports,pat){var type=pat.type;if("Identifier"===type)this.checkExport(exports,pat,pat.start);else if("ObjectPattern"===type)for(var i=0,list=pat.properties;i<list.length;i+=1){var prop=list[i];this.checkPatternExport(exports,prop)}else if("ArrayPattern"===type)for(var i$1=0,list$1=pat.elements;i$1<list$1.length;i$1+=1){var elt=list$1[i$1];elt&&this.checkPatternExport(exports,elt)}else"Property"===type?this.checkPatternExport(exports,pat.value):"AssignmentPattern"===type?this.checkPatternExport(exports,pat.left):"RestElement"===type?this.checkPatternExport(exports,pat.argument):"ParenthesizedExpression"===type&&this.checkPatternExport(exports,pat.expression)},pp$8.checkVariableExport=function(exports,decls){if(exports)for(var i=0,list=decls;i<list.length;i+=1){var decl=list[i];this.checkPatternExport(exports,decl.id)}},pp$8.shouldParseExportStatement=function(){return"var"===this.type.keyword||"const"===this.type.keyword||"class"===this.type.keyword||"function"===this.type.keyword||this.isLet()||this.isAsyncFunction()},pp$8.parseExportSpecifier=function(exports){var node=this.startNode();return node.local=this.parseModuleExportName(),node.exported=this.eatContextual("as")?this.parseModuleExportName():node.local,this.checkExport(exports,node.exported,node.exported.start),this.finishNode(node,"ExportSpecifier")},pp$8.parseExportSpecifiers=function(exports){var nodes=[],first=!0;for(this.expect(types$1.braceL);!this.eat(types$1.braceR);){if(first)first=!1;else if(this.expect(types$1.comma),this.afterTrailingComma(types$1.braceR))break;nodes.push(this.parseExportSpecifier(exports))}return nodes},pp$8.parseImport=function(node){return this.next(),this.type===types$1.string?(node.specifiers=empty$1,node.source=this.parseExprAtom()):(node.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),node.source=this.type===types$1.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(node,"ImportDeclaration")},pp$8.parseImportSpecifier=function(){var node=this.startNode();return node.imported=this.parseModuleExportName(),this.eatContextual("as")?node.local=this.parseIdent():(this.checkUnreserved(node.imported),node.local=node.imported),this.checkLValSimple(node.local,2),this.finishNode(node,"ImportSpecifier")},pp$8.parseImportDefaultSpecifier=function(){var node=this.startNode();return node.local=this.parseIdent(),this.checkLValSimple(node.local,2),this.finishNode(node,"ImportDefaultSpecifier")},pp$8.parseImportNamespaceSpecifier=function(){var node=this.startNode();return this.next(),this.expectContextual("as"),node.local=this.parseIdent(),this.checkLValSimple(node.local,2),this.finishNode(node,"ImportNamespaceSpecifier")},pp$8.parseImportSpecifiers=function(){var nodes=[],first=!0;if(this.type===types$1.name&&(nodes.push(this.parseImportDefaultSpecifier()),!this.eat(types$1.comma)))return nodes;if(this.type===types$1.star)return nodes.push(this.parseImportNamespaceSpecifier()),nodes;for(this.expect(types$1.braceL);!this.eat(types$1.braceR);){if(first)first=!1;else if(this.expect(types$1.comma),this.afterTrailingComma(types$1.braceR))break;nodes.push(this.parseImportSpecifier())}return nodes},pp$8.parseModuleExportName=function(){if(this.options.ecmaVersion>=13&&this.type===types$1.string){var stringLiteral=this.parseLiteral(this.value);return loneSurrogate.test(stringLiteral.value)&&this.raise(stringLiteral.start,"An export name cannot include a lone surrogate."),stringLiteral}return this.parseIdent(!0)},pp$8.adaptDirectivePrologue=function(statements){for(var i=0;i<statements.length&&this.isDirectiveCandidate(statements[i]);++i)statements[i].directive=statements[i].expression.raw.slice(1,-1)},pp$8.isDirectiveCandidate=function(statement){return this.options.ecmaVersion>=5&&"ExpressionStatement"===statement.type&&"Literal"===statement.expression.type&&"string"==typeof statement.expression.value&&('"'===this.input[statement.start]||"'"===this.input[statement.start])};var pp$7=Parser.prototype;pp$7.toAssignable=function(node,isBinding,refDestructuringErrors){if(this.options.ecmaVersion>=6&&node)switch(node.type){case"Identifier":this.inAsync&&"await"===node.name&&this.raise(node.start,"Cannot use 'await' as identifier inside an async function");break;case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":case"RestElement":break;case"ObjectExpression":node.type="ObjectPattern",refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0);for(var i=0,list=node.properties;i<list.length;i+=1){var prop=list[i];this.toAssignable(prop,isBinding),"RestElement"!==prop.type||"ArrayPattern"!==prop.argument.type&&"ObjectPattern"!==prop.argument.type||this.raise(prop.argument.start,"Unexpected token")}break;case"Property":"init"!==node.kind&&this.raise(node.key.start,"Object pattern can't contain getter or setter"),this.toAssignable(node.value,isBinding);break;case"ArrayExpression":node.type="ArrayPattern",refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0),this.toAssignableList(node.elements,isBinding);break;case"SpreadElement":node.type="RestElement",this.toAssignable(node.argument,isBinding),"AssignmentPattern"===node.argument.type&&this.raise(node.argument.start,"Rest elements cannot have a default value");break;case"AssignmentExpression":"="!==node.operator&&this.raise(node.left.end,"Only '=' operator can be used for specifying default value."),node.type="AssignmentPattern",delete node.operator,this.toAssignable(node.left,isBinding);break;case"ParenthesizedExpression":this.toAssignable(node.expression,isBinding,refDestructuringErrors);break;case"ChainExpression":this.raiseRecoverable(node.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":if(!isBinding)break;default:this.raise(node.start,"Assigning to rvalue")}else refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0);return node},pp$7.toAssignableList=function(exprList,isBinding){for(var end=exprList.length,i=0;i<end;i++){var elt=exprList[i];elt&&this.toAssignable(elt,isBinding)}if(end){var last=exprList[end-1];6===this.options.ecmaVersion&&isBinding&&last&&"RestElement"===last.type&&"Identifier"!==last.argument.type&&this.unexpected(last.argument.start)}return exprList},pp$7.parseSpread=function(refDestructuringErrors){var node=this.startNode();return this.next(),node.argument=this.parseMaybeAssign(!1,refDestructuringErrors),this.finishNode(node,"SpreadElement")},pp$7.parseRestBinding=function(){var node=this.startNode();return this.next(),6===this.options.ecmaVersion&&this.type!==types$1.name&&this.unexpected(),node.argument=this.parseBindingAtom(),this.finishNode(node,"RestElement")},pp$7.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case types$1.bracketL:var node=this.startNode();return this.next(),node.elements=this.parseBindingList(types$1.bracketR,!0,!0),this.finishNode(node,"ArrayPattern");case types$1.braceL:return this.parseObj(!0)}return this.parseIdent()},pp$7.parseBindingList=function(close,allowEmpty,allowTrailingComma,allowModifiers){for(var elts=[],first=!0;!this.eat(close);)if(first?first=!1:this.expect(types$1.comma),allowEmpty&&this.type===types$1.comma)elts.push(null);else{if(allowTrailingComma&&this.afterTrailingComma(close))break;if(this.type===types$1.ellipsis){var rest=this.parseRestBinding();this.parseBindingListItem(rest),elts.push(rest),this.type===types$1.comma&&this.raiseRecoverable(this.start,"Comma is not permitted after the rest element"),this.expect(close);break}elts.push(this.parseAssignableListItem(allowModifiers))}return elts},pp$7.parseAssignableListItem=function(allowModifiers){var elem=this.parseMaybeDefault(this.start,this.startLoc);return this.parseBindingListItem(elem),elem},pp$7.parseBindingListItem=function(param){return param},pp$7.parseMaybeDefault=function(startPos,startLoc,left){if(left=left||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(types$1.eq))return left;var node=this.startNodeAt(startPos,startLoc);return node.left=left,node.right=this.parseMaybeAssign(),this.finishNode(node,"AssignmentPattern")},pp$7.checkLValSimple=function(expr,bindingType,checkClashes){void 0===bindingType&&(bindingType=0);var isBind=0!==bindingType;switch(expr.type){case"Identifier":this.strict&&this.reservedWordsStrictBind.test(expr.name)&&this.raiseRecoverable(expr.start,(isBind?"Binding ":"Assigning to ")+expr.name+" in strict mode"),isBind&&(2===bindingType&&"let"===expr.name&&this.raiseRecoverable(expr.start,"let is disallowed as a lexically bound name"),checkClashes&&(hasOwn(checkClashes,expr.name)&&this.raiseRecoverable(expr.start,"Argument name clash"),checkClashes[expr.name]=!0),5!==bindingType&&this.declareName(expr.name,bindingType,expr.start));break;case"ChainExpression":this.raiseRecoverable(expr.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":isBind&&this.raiseRecoverable(expr.start,"Binding member expression");break;case"ParenthesizedExpression":return isBind&&this.raiseRecoverable(expr.start,"Binding parenthesized expression"),this.checkLValSimple(expr.expression,bindingType,checkClashes);default:this.raise(expr.start,(isBind?"Binding":"Assigning to")+" rvalue")}},pp$7.checkLValPattern=function(expr,bindingType,checkClashes){switch(void 0===bindingType&&(bindingType=0),expr.type){case"ObjectPattern":for(var i=0,list=expr.properties;i<list.length;i+=1){var prop=list[i];this.checkLValInnerPattern(prop,bindingType,checkClashes)}break;case"ArrayPattern":for(var i$1=0,list$1=expr.elements;i$1<list$1.length;i$1+=1){var elem=list$1[i$1];elem&&this.checkLValInnerPattern(elem,bindingType,checkClashes)}break;default:this.checkLValSimple(expr,bindingType,checkClashes)}},pp$7.checkLValInnerPattern=function(expr,bindingType,checkClashes){switch(void 0===bindingType&&(bindingType=0),expr.type){case"Property":this.checkLValInnerPattern(expr.value,bindingType,checkClashes);break;case"AssignmentPattern":this.checkLValPattern(expr.left,bindingType,checkClashes);break;case"RestElement":this.checkLValPattern(expr.argument,bindingType,checkClashes);break;default:this.checkLValPattern(expr,bindingType,checkClashes)}};var TokContext=function(token,isExpr,preserveSpace,override,generator){this.token=token,this.isExpr=!!isExpr,this.preserveSpace=!!preserveSpace,this.override=override,this.generator=!!generator},types={b_stat:new TokContext("{",!1),b_expr:new TokContext("{",!0),b_tmpl:new TokContext("${",!1),p_stat:new TokContext("(",!1),p_expr:new TokContext("(",!0),q_tmpl:new TokContext("`",!0,!0,(function(p){return p.tryReadTemplateToken()})),f_stat:new TokContext("function",!1),f_expr:new TokContext("function",!0),f_expr_gen:new TokContext("function",!0,!1,null,!0),f_gen:new TokContext("function",!1,!1,null,!0)},pp$6=Parser.prototype;pp$6.initialContext=function(){return[types.b_stat]},pp$6.curContext=function(){return this.context[this.context.length-1]},pp$6.braceIsBlock=function(prevType){var parent=this.curContext();return parent===types.f_expr||parent===types.f_stat||(prevType!==types$1.colon||parent!==types.b_stat&&parent!==types.b_expr?prevType===types$1._return||prevType===types$1.name&&this.exprAllowed?lineBreak.test(this.input.slice(this.lastTokEnd,this.start)):prevType===types$1._else||prevType===types$1.semi||prevType===types$1.eof||prevType===types$1.parenR||prevType===types$1.arrow||(prevType===types$1.braceL?parent===types.b_stat:prevType!==types$1._var&&prevType!==types$1._const&&prevType!==types$1.name&&!this.exprAllowed):!parent.isExpr)},pp$6.inGeneratorContext=function(){for(var i=this.context.length-1;i>=1;i--){var context=this.context[i];if("function"===context.token)return context.generator}return!1},pp$6.updateContext=function(prevType){var update,type=this.type;type.keyword&&prevType===types$1.dot?this.exprAllowed=!1:(update=type.updateContext)?update.call(this,prevType):this.exprAllowed=type.beforeExpr},pp$6.overrideContext=function(tokenCtx){this.curContext()!==tokenCtx&&(this.context[this.context.length-1]=tokenCtx)},types$1.parenR.updateContext=types$1.braceR.updateContext=function(){if(1!==this.context.length){var out=this.context.pop();out===types.b_stat&&"function"===this.curContext().token&&(out=this.context.pop()),this.exprAllowed=!out.isExpr}else this.exprAllowed=!0},types$1.braceL.updateContext=function(prevType){this.context.push(this.braceIsBlock(prevType)?types.b_stat:types.b_expr),this.exprAllowed=!0},types$1.dollarBraceL.updateContext=function(){this.context.push(types.b_tmpl),this.exprAllowed=!0},types$1.parenL.updateContext=function(prevType){var statementParens=prevType===types$1._if||prevType===types$1._for||prevType===types$1._with||prevType===types$1._while;this.context.push(statementParens?types.p_stat:types.p_expr),this.exprAllowed=!0},types$1.incDec.updateContext=function(){},types$1._function.updateContext=types$1._class.updateContext=function(prevType){!prevType.beforeExpr||prevType===types$1._else||prevType===types$1.semi&&this.curContext()!==types.p_stat||prevType===types$1._return&&lineBreak.test(this.input.slice(this.lastTokEnd,this.start))||(prevType===types$1.colon||prevType===types$1.braceL)&&this.curContext()===types.b_stat?this.context.push(types.f_stat):this.context.push(types.f_expr),this.exprAllowed=!1},types$1.backQuote.updateContext=function(){this.curContext()===types.q_tmpl?this.context.pop():this.context.push(types.q_tmpl),this.exprAllowed=!1},types$1.star.updateContext=function(prevType){if(prevType===types$1._function){var index=this.context.length-1;this.context[index]===types.f_expr?this.context[index]=types.f_expr_gen:this.context[index]=types.f_gen}this.exprAllowed=!0},types$1.name.updateContext=function(prevType){var allowed=!1;this.options.ecmaVersion>=6&&prevType!==types$1.dot&&("of"===this.value&&!this.exprAllowed||"yield"===this.value&&this.inGeneratorContext())&&(allowed=!0),this.exprAllowed=allowed};var pp$5=Parser.prototype;function isPrivateFieldAccess(node){return"MemberExpression"===node.type&&"PrivateIdentifier"===node.property.type||"ChainExpression"===node.type&&isPrivateFieldAccess(node.expression)}pp$5.checkPropClash=function(prop,propHash,refDestructuringErrors){if(!(this.options.ecmaVersion>=9&&"SpreadElement"===prop.type||this.options.ecmaVersion>=6&&(prop.computed||prop.method||prop.shorthand))){var name,key=prop.key;switch(key.type){case"Identifier":name=key.name;break;case"Literal":name=String(key.value);break;default:return}var kind=prop.kind;if(this.options.ecmaVersion>=6)"__proto__"===name&&"init"===kind&&(propHash.proto&&(refDestructuringErrors?refDestructuringErrors.doubleProto<0&&(refDestructuringErrors.doubleProto=key.start):this.raiseRecoverable(key.start,"Redefinition of __proto__ property")),propHash.proto=!0);else{var other=propHash[name="$"+name];if(other)("init"===kind?this.strict&&other.init||other.get||other.set:other.init||other[kind])&&this.raiseRecoverable(key.start,"Redefinition of property");else other=propHash[name]={init:!1,get:!1,set:!1};other[kind]=!0}}},pp$5.parseExpression=function(forInit,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseMaybeAssign(forInit,refDestructuringErrors);if(this.type===types$1.comma){var node=this.startNodeAt(startPos,startLoc);for(node.expressions=[expr];this.eat(types$1.comma);)node.expressions.push(this.parseMaybeAssign(forInit,refDestructuringErrors));return this.finishNode(node,"SequenceExpression")}return expr},pp$5.parseMaybeAssign=function(forInit,refDestructuringErrors,afterLeftParse){if(this.isContextual("yield")){if(this.inGenerator)return this.parseYield(forInit);this.exprAllowed=!1}var ownDestructuringErrors=!1,oldParenAssign=-1,oldTrailingComma=-1,oldDoubleProto=-1;refDestructuringErrors?(oldParenAssign=refDestructuringErrors.parenthesizedAssign,oldTrailingComma=refDestructuringErrors.trailingComma,oldDoubleProto=refDestructuringErrors.doubleProto,refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=-1):(refDestructuringErrors=new DestructuringErrors,ownDestructuringErrors=!0);var startPos=this.start,startLoc=this.startLoc;this.type!==types$1.parenL&&this.type!==types$1.name||(this.potentialArrowAt=this.start,this.potentialArrowInForAwait="await"===forInit);var left=this.parseMaybeConditional(forInit,refDestructuringErrors);if(afterLeftParse&&(left=afterLeftParse.call(this,left,startPos,startLoc)),this.type.isAssign){var node=this.startNodeAt(startPos,startLoc);return node.operator=this.value,this.type===types$1.eq&&(left=this.toAssignable(left,!1,refDestructuringErrors)),ownDestructuringErrors||(refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=refDestructuringErrors.doubleProto=-1),refDestructuringErrors.shorthandAssign>=left.start&&(refDestructuringErrors.shorthandAssign=-1),this.type===types$1.eq?this.checkLValPattern(left):this.checkLValSimple(left),node.left=left,this.next(),node.right=this.parseMaybeAssign(forInit),oldDoubleProto>-1&&(refDestructuringErrors.doubleProto=oldDoubleProto),this.finishNode(node,"AssignmentExpression")}return ownDestructuringErrors&&this.checkExpressionErrors(refDestructuringErrors,!0),oldParenAssign>-1&&(refDestructuringErrors.parenthesizedAssign=oldParenAssign),oldTrailingComma>-1&&(refDestructuringErrors.trailingComma=oldTrailingComma),left},pp$5.parseMaybeConditional=function(forInit,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseExprOps(forInit,refDestructuringErrors);if(this.checkExpressionErrors(refDestructuringErrors))return expr;if(this.eat(types$1.question)){var node=this.startNodeAt(startPos,startLoc);return node.test=expr,node.consequent=this.parseMaybeAssign(),this.expect(types$1.colon),node.alternate=this.parseMaybeAssign(forInit),this.finishNode(node,"ConditionalExpression")}return expr},pp$5.parseExprOps=function(forInit,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseMaybeUnary(refDestructuringErrors,!1,!1,forInit);return this.checkExpressionErrors(refDestructuringErrors)||expr.start===startPos&&"ArrowFunctionExpression"===expr.type?expr:this.parseExprOp(expr,startPos,startLoc,-1,forInit)},pp$5.parseExprOp=function(left,leftStartPos,leftStartLoc,minPrec,forInit){var prec=this.type.binop;if(null!=prec&&(!forInit||this.type!==types$1._in)&&prec>minPrec){var logical=this.type===types$1.logicalOR||this.type===types$1.logicalAND,coalesce=this.type===types$1.coalesce;coalesce&&(prec=types$1.logicalAND.binop);var op=this.value;this.next();var startPos=this.start,startLoc=this.startLoc,right=this.parseExprOp(this.parseMaybeUnary(null,!1,!1,forInit),startPos,startLoc,prec,forInit),node=this.buildBinary(leftStartPos,leftStartLoc,left,right,op,logical||coalesce);return(logical&&this.type===types$1.coalesce||coalesce&&(this.type===types$1.logicalOR||this.type===types$1.logicalAND))&&this.raiseRecoverable(this.start,"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"),this.parseExprOp(node,leftStartPos,leftStartLoc,minPrec,forInit)}return left},pp$5.buildBinary=function(startPos,startLoc,left,right,op,logical){"PrivateIdentifier"===right.type&&this.raise(right.start,"Private identifier can only be left side of binary expression");var node=this.startNodeAt(startPos,startLoc);return node.left=left,node.operator=op,node.right=right,this.finishNode(node,logical?"LogicalExpression":"BinaryExpression")},pp$5.parseMaybeUnary=function(refDestructuringErrors,sawUnary,incDec,forInit){var expr,startPos=this.start,startLoc=this.startLoc;if(this.isContextual("await")&&this.canAwait)expr=this.parseAwait(forInit),sawUnary=!0;else if(this.type.prefix){var node=this.startNode(),update=this.type===types$1.incDec;node.operator=this.value,node.prefix=!0,this.next(),node.argument=this.parseMaybeUnary(null,!0,update,forInit),this.checkExpressionErrors(refDestructuringErrors,!0),update?this.checkLValSimple(node.argument):this.strict&&"delete"===node.operator&&"Identifier"===node.argument.type?this.raiseRecoverable(node.start,"Deleting local variable in strict mode"):"delete"===node.operator&&isPrivateFieldAccess(node.argument)?this.raiseRecoverable(node.start,"Private fields can not be deleted"):sawUnary=!0,expr=this.finishNode(node,update?"UpdateExpression":"UnaryExpression")}else if(sawUnary||this.type!==types$1.privateId){if(expr=this.parseExprSubscripts(refDestructuringErrors,forInit),this.checkExpressionErrors(refDestructuringErrors))return expr;for(;this.type.postfix&&!this.canInsertSemicolon();){var node$1=this.startNodeAt(startPos,startLoc);node$1.operator=this.value,node$1.prefix=!1,node$1.argument=expr,this.checkLValSimple(expr),this.next(),expr=this.finishNode(node$1,"UpdateExpression")}}else(forInit||0===this.privateNameStack.length)&&this.unexpected(),expr=this.parsePrivateIdent(),this.type!==types$1._in&&this.unexpected();return incDec||!this.eat(types$1.starstar)?expr:sawUnary?void this.unexpected(this.lastTokStart):this.buildBinary(startPos,startLoc,expr,this.parseMaybeUnary(null,!1,!1,forInit),"**",!1)},pp$5.parseExprSubscripts=function(refDestructuringErrors,forInit){var startPos=this.start,startLoc=this.startLoc,expr=this.parseExprAtom(refDestructuringErrors,forInit);if("ArrowFunctionExpression"===expr.type&&")"!==this.input.slice(this.lastTokStart,this.lastTokEnd))return expr;var result=this.parseSubscripts(expr,startPos,startLoc,!1,forInit);return refDestructuringErrors&&"MemberExpression"===result.type&&(refDestructuringErrors.parenthesizedAssign>=result.start&&(refDestructuringErrors.parenthesizedAssign=-1),refDestructuringErrors.parenthesizedBind>=result.start&&(refDestructuringErrors.parenthesizedBind=-1),refDestructuringErrors.trailingComma>=result.start&&(refDestructuringErrors.trailingComma=-1)),result},pp$5.parseSubscripts=function(base,startPos,startLoc,noCalls,forInit){for(var maybeAsyncArrow=this.options.ecmaVersion>=8&&"Identifier"===base.type&&"async"===base.name&&this.lastTokEnd===base.end&&!this.canInsertSemicolon()&&base.end-base.start==5&&this.potentialArrowAt===base.start,optionalChained=!1;;){var element=this.parseSubscript(base,startPos,startLoc,noCalls,maybeAsyncArrow,optionalChained,forInit);if(element.optional&&(optionalChained=!0),element===base||"ArrowFunctionExpression"===element.type){if(optionalChained){var chainNode=this.startNodeAt(startPos,startLoc);chainNode.expression=element,element=this.finishNode(chainNode,"ChainExpression")}return element}base=element}},pp$5.shouldParseAsyncArrow=function(){return!this.canInsertSemicolon()&&this.eat(types$1.arrow)},pp$5.parseSubscriptAsyncArrow=function(startPos,startLoc,exprList,forInit){return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList,!0,forInit)},pp$5.parseSubscript=function(base,startPos,startLoc,noCalls,maybeAsyncArrow,optionalChained,forInit){var optionalSupported=this.options.ecmaVersion>=11,optional=optionalSupported&&this.eat(types$1.questionDot);noCalls&&optional&&this.raise(this.lastTokStart,"Optional chaining cannot appear in the callee of new expressions");var computed=this.eat(types$1.bracketL);if(computed||optional&&this.type!==types$1.parenL&&this.type!==types$1.backQuote||this.eat(types$1.dot)){var node=this.startNodeAt(startPos,startLoc);node.object=base,computed?(node.property=this.parseExpression(),this.expect(types$1.bracketR)):this.type===types$1.privateId&&"Super"!==base.type?node.property=this.parsePrivateIdent():node.property=this.parseIdent("never"!==this.options.allowReserved),node.computed=!!computed,optionalSupported&&(node.optional=optional),base=this.finishNode(node,"MemberExpression")}else if(!noCalls&&this.eat(types$1.parenL)){var refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var exprList=this.parseExprList(types$1.parenR,this.options.ecmaVersion>=8,!1,refDestructuringErrors);if(maybeAsyncArrow&&!optional&&this.shouldParseAsyncArrow())return this.checkPatternErrors(refDestructuringErrors,!1),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,"Cannot use 'await' as identifier inside an async function"),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.parseSubscriptAsyncArrow(startPos,startLoc,exprList,forInit);this.checkExpressionErrors(refDestructuringErrors,!0),this.yieldPos=oldYieldPos||this.yieldPos,this.awaitPos=oldAwaitPos||this.awaitPos,this.awaitIdentPos=oldAwaitIdentPos||this.awaitIdentPos;var node$1=this.startNodeAt(startPos,startLoc);node$1.callee=base,node$1.arguments=exprList,optionalSupported&&(node$1.optional=optional),base=this.finishNode(node$1,"CallExpression")}else if(this.type===types$1.backQuote){(optional||optionalChained)&&this.raise(this.start,"Optional chaining cannot appear in the tag of tagged template expressions");var node$2=this.startNodeAt(startPos,startLoc);node$2.tag=base,node$2.quasi=this.parseTemplate({isTagged:!0}),base=this.finishNode(node$2,"TaggedTemplateExpression")}return base},pp$5.parseExprAtom=function(refDestructuringErrors,forInit,forNew){this.type===types$1.slash&&this.readRegexp();var node,canBeArrow=this.potentialArrowAt===this.start;switch(this.type){case types$1._super:return this.allowSuper||this.raise(this.start,"'super' keyword outside a method"),node=this.startNode(),this.next(),this.type!==types$1.parenL||this.allowDirectSuper||this.raise(node.start,"super() call outside constructor of a subclass"),this.type!==types$1.dot&&this.type!==types$1.bracketL&&this.type!==types$1.parenL&&this.unexpected(),this.finishNode(node,"Super");case types$1._this:return node=this.startNode(),this.next(),this.finishNode(node,"ThisExpression");case types$1.name:var startPos=this.start,startLoc=this.startLoc,containsEsc=this.containsEsc,id=this.parseIdent(!1);if(this.options.ecmaVersion>=8&&!containsEsc&&"async"===id.name&&!this.canInsertSemicolon()&&this.eat(types$1._function))return this.overrideContext(types.f_expr),this.parseFunction(this.startNodeAt(startPos,startLoc),0,!1,!0,forInit);if(canBeArrow&&!this.canInsertSemicolon()){if(this.eat(types$1.arrow))return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],!1,forInit);if(this.options.ecmaVersion>=8&&"async"===id.name&&this.type===types$1.name&&!containsEsc&&(!this.potentialArrowInForAwait||"of"!==this.value||this.containsEsc))return id=this.parseIdent(!1),!this.canInsertSemicolon()&&this.eat(types$1.arrow)||this.unexpected(),this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],!0,forInit)}return id;case types$1.regexp:var value=this.value;return(node=this.parseLiteral(value.value)).regex={pattern:value.pattern,flags:value.flags},node;case types$1.num:case types$1.string:return this.parseLiteral(this.value);case types$1._null:case types$1._true:case types$1._false:return(node=this.startNode()).value=this.type===types$1._null?null:this.type===types$1._true,node.raw=this.type.keyword,this.next(),this.finishNode(node,"Literal");case types$1.parenL:var start=this.start,expr=this.parseParenAndDistinguishExpression(canBeArrow,forInit);return refDestructuringErrors&&(refDestructuringErrors.parenthesizedAssign<0&&!this.isSimpleAssignTarget(expr)&&(refDestructuringErrors.parenthesizedAssign=start),refDestructuringErrors.parenthesizedBind<0&&(refDestructuringErrors.parenthesizedBind=start)),expr;case types$1.bracketL:return node=this.startNode(),this.next(),node.elements=this.parseExprList(types$1.bracketR,!0,!0,refDestructuringErrors),this.finishNode(node,"ArrayExpression");case types$1.braceL:return this.overrideContext(types.b_expr),this.parseObj(!1,refDestructuringErrors);case types$1._function:return node=this.startNode(),this.next(),this.parseFunction(node,0);case types$1._class:return this.parseClass(this.startNode(),!1);case types$1._new:return this.parseNew();case types$1.backQuote:return this.parseTemplate();case types$1._import:return this.options.ecmaVersion>=11?this.parseExprImport(forNew):this.unexpected();default:return this.parseExprAtomDefault()}},pp$5.parseExprAtomDefault=function(){this.unexpected()},pp$5.parseExprImport=function(forNew){var node=this.startNode();this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword import");var meta=this.parseIdent(!0);return this.type!==types$1.parenL||forNew?this.type===types$1.dot?(node.meta=meta,this.parseImportMeta(node)):void this.unexpected():this.parseDynamicImport(node)},pp$5.parseDynamicImport=function(node){if(this.next(),node.source=this.parseMaybeAssign(),!this.eat(types$1.parenR)){var errorPos=this.start;this.eat(types$1.comma)&&this.eat(types$1.parenR)?this.raiseRecoverable(errorPos,"Trailing comma is not allowed in import()"):this.unexpected(errorPos)}return this.finishNode(node,"ImportExpression")},pp$5.parseImportMeta=function(node){this.next();var containsEsc=this.containsEsc;return node.property=this.parseIdent(!0),"meta"!==node.property.name&&this.raiseRecoverable(node.property.start,"The only valid meta property for import is 'import.meta'"),containsEsc&&this.raiseRecoverable(node.start,"'import.meta' must not contain escaped characters"),"module"===this.options.sourceType||this.options.allowImportExportEverywhere||this.raiseRecoverable(node.start,"Cannot use 'import.meta' outside a module"),this.finishNode(node,"MetaProperty")},pp$5.parseLiteral=function(value){var node=this.startNode();return node.value=value,node.raw=this.input.slice(this.start,this.end),110===node.raw.charCodeAt(node.raw.length-1)&&(node.bigint=node.raw.slice(0,-1).replace(/_/g,"")),this.next(),this.finishNode(node,"Literal")},pp$5.parseParenExpression=function(){this.expect(types$1.parenL);var val=this.parseExpression();return this.expect(types$1.parenR),val},pp$5.shouldParseArrow=function(exprList){return!this.canInsertSemicolon()},pp$5.parseParenAndDistinguishExpression=function(canBeArrow,forInit){var val,startPos=this.start,startLoc=this.startLoc,allowTrailingComma=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var spreadStart,innerStartPos=this.start,innerStartLoc=this.startLoc,exprList=[],first=!0,lastIsComma=!1,refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos;for(this.yieldPos=0,this.awaitPos=0;this.type!==types$1.parenR;){if(first?first=!1:this.expect(types$1.comma),allowTrailingComma&&this.afterTrailingComma(types$1.parenR,!0)){lastIsComma=!0;break}if(this.type===types$1.ellipsis){spreadStart=this.start,exprList.push(this.parseParenItem(this.parseRestBinding())),this.type===types$1.comma&&this.raiseRecoverable(this.start,"Comma is not permitted after the rest element");break}exprList.push(this.parseMaybeAssign(!1,refDestructuringErrors,this.parseParenItem))}var innerEndPos=this.lastTokEnd,innerEndLoc=this.lastTokEndLoc;if(this.expect(types$1.parenR),canBeArrow&&this.shouldParseArrow(exprList)&&this.eat(types$1.arrow))return this.checkPatternErrors(refDestructuringErrors,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.parseParenArrowList(startPos,startLoc,exprList,forInit);exprList.length&&!lastIsComma||this.unexpected(this.lastTokStart),spreadStart&&this.unexpected(spreadStart),this.checkExpressionErrors(refDestructuringErrors,!0),this.yieldPos=oldYieldPos||this.yieldPos,this.awaitPos=oldAwaitPos||this.awaitPos,exprList.length>1?((val=this.startNodeAt(innerStartPos,innerStartLoc)).expressions=exprList,this.finishNodeAt(val,"SequenceExpression",innerEndPos,innerEndLoc)):val=exprList[0]}else val=this.parseParenExpression();if(this.options.preserveParens){var par=this.startNodeAt(startPos,startLoc);return par.expression=val,this.finishNode(par,"ParenthesizedExpression")}return val},pp$5.parseParenItem=function(item){return item},pp$5.parseParenArrowList=function(startPos,startLoc,exprList,forInit){return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList,!1,forInit)};var empty=[];pp$5.parseNew=function(){this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword new");var node=this.startNode(),meta=this.parseIdent(!0);if(this.options.ecmaVersion>=6&&this.eat(types$1.dot)){node.meta=meta;var containsEsc=this.containsEsc;return node.property=this.parseIdent(!0),"target"!==node.property.name&&this.raiseRecoverable(node.property.start,"The only valid meta property for new is 'new.target'"),containsEsc&&this.raiseRecoverable(node.start,"'new.target' must not contain escaped characters"),this.allowNewDotTarget||this.raiseRecoverable(node.start,"'new.target' can only be used in functions and class static block"),this.finishNode(node,"MetaProperty")}var startPos=this.start,startLoc=this.startLoc;return node.callee=this.parseSubscripts(this.parseExprAtom(null,!1,!0),startPos,startLoc,!0,!1),this.eat(types$1.parenL)?node.arguments=this.parseExprList(types$1.parenR,this.options.ecmaVersion>=8,!1):node.arguments=empty,this.finishNode(node,"NewExpression")},pp$5.parseTemplateElement=function(ref){var isTagged=ref.isTagged,elem=this.startNode();return this.type===types$1.invalidTemplate?(isTagged||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),elem.value={raw:this.value,cooked:null}):elem.value={raw:this.input.slice(this.start,this.end).replace(/\r\n?/g,"\n"),cooked:this.value},this.next(),elem.tail=this.type===types$1.backQuote,this.finishNode(elem,"TemplateElement")},pp$5.parseTemplate=function(ref){void 0===ref&&(ref={});var isTagged=ref.isTagged;void 0===isTagged&&(isTagged=!1);var node=this.startNode();this.next(),node.expressions=[];var curElt=this.parseTemplateElement({isTagged});for(node.quasis=[curElt];!curElt.tail;)this.type===types$1.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(types$1.dollarBraceL),node.expressions.push(this.parseExpression()),this.expect(types$1.braceR),node.quasis.push(curElt=this.parseTemplateElement({isTagged}));return this.next(),this.finishNode(node,"TemplateLiteral")},pp$5.isAsyncProp=function(prop){return!prop.computed&&"Identifier"===prop.key.type&&"async"===prop.key.name&&(this.type===types$1.name||this.type===types$1.num||this.type===types$1.string||this.type===types$1.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===types$1.star)&&!lineBreak.test(this.input.slice(this.lastTokEnd,this.start))},pp$5.parseObj=function(isPattern,refDestructuringErrors){var node=this.startNode(),first=!0,propHash={};for(node.properties=[],this.next();!this.eat(types$1.braceR);){if(first)first=!1;else if(this.expect(types$1.comma),this.options.ecmaVersion>=5&&this.afterTrailingComma(types$1.braceR))break;var prop=this.parseProperty(isPattern,refDestructuringErrors);isPattern||this.checkPropClash(prop,propHash,refDestructuringErrors),node.properties.push(prop)}return this.finishNode(node,isPattern?"ObjectPattern":"ObjectExpression")},pp$5.parseProperty=function(isPattern,refDestructuringErrors){var isGenerator,isAsync,startPos,startLoc,prop=this.startNode();if(this.options.ecmaVersion>=9&&this.eat(types$1.ellipsis))return isPattern?(prop.argument=this.parseIdent(!1),this.type===types$1.comma&&this.raiseRecoverable(this.start,"Comma is not permitted after the rest element"),this.finishNode(prop,"RestElement")):(prop.argument=this.parseMaybeAssign(!1,refDestructuringErrors),this.type===types$1.comma&&refDestructuringErrors&&refDestructuringErrors.trailingComma<0&&(refDestructuringErrors.trailingComma=this.start),this.finishNode(prop,"SpreadElement"));this.options.ecmaVersion>=6&&(prop.method=!1,prop.shorthand=!1,(isPattern||refDestructuringErrors)&&(startPos=this.start,startLoc=this.startLoc),isPattern||(isGenerator=this.eat(types$1.star)));var containsEsc=this.containsEsc;return this.parsePropertyName(prop),!isPattern&&!containsEsc&&this.options.ecmaVersion>=8&&!isGenerator&&this.isAsyncProp(prop)?(isAsync=!0,isGenerator=this.options.ecmaVersion>=9&&this.eat(types$1.star),this.parsePropertyName(prop)):isAsync=!1,this.parsePropertyValue(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc),this.finishNode(prop,"Property")},pp$5.parseGetterSetter=function(prop){prop.kind=prop.key.name,this.parsePropertyName(prop),prop.value=this.parseMethod(!1);var paramCount="get"===prop.kind?0:1;if(prop.value.params.length!==paramCount){var start=prop.value.start;"get"===prop.kind?this.raiseRecoverable(start,"getter should have no params"):this.raiseRecoverable(start,"setter should have exactly one param")}else"set"===prop.kind&&"RestElement"===prop.value.params[0].type&&this.raiseRecoverable(prop.value.params[0].start,"Setter cannot use rest params")},pp$5.parsePropertyValue=function(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc){(isGenerator||isAsync)&&this.type===types$1.colon&&this.unexpected(),this.eat(types$1.colon)?(prop.value=isPattern?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,refDestructuringErrors),prop.kind="init"):this.options.ecmaVersion>=6&&this.type===types$1.parenL?(isPattern&&this.unexpected(),prop.kind="init",prop.method=!0,prop.value=this.parseMethod(isGenerator,isAsync)):isPattern||containsEsc||!(this.options.ecmaVersion>=5)||prop.computed||"Identifier"!==prop.key.type||"get"!==prop.key.name&&"set"!==prop.key.name||this.type===types$1.comma||this.type===types$1.braceR||this.type===types$1.eq?this.options.ecmaVersion>=6&&!prop.computed&&"Identifier"===prop.key.type?((isGenerator||isAsync)&&this.unexpected(),this.checkUnreserved(prop.key),"await"!==prop.key.name||this.awaitIdentPos||(this.awaitIdentPos=startPos),prop.kind="init",isPattern?prop.value=this.parseMaybeDefault(startPos,startLoc,this.copyNode(prop.key)):this.type===types$1.eq&&refDestructuringErrors?(refDestructuringErrors.shorthandAssign<0&&(refDestructuringErrors.shorthandAssign=this.start),prop.value=this.parseMaybeDefault(startPos,startLoc,this.copyNode(prop.key))):prop.value=this.copyNode(prop.key),prop.shorthand=!0):this.unexpected():((isGenerator||isAsync)&&this.unexpected(),this.parseGetterSetter(prop))},pp$5.parsePropertyName=function(prop){if(this.options.ecmaVersion>=6){if(this.eat(types$1.bracketL))return prop.computed=!0,prop.key=this.parseMaybeAssign(),this.expect(types$1.bracketR),prop.key;prop.computed=!1}return prop.key=this.type===types$1.num||this.type===types$1.string?this.parseExprAtom():this.parseIdent("never"!==this.options.allowReserved)},pp$5.initFunction=function(node){node.id=null,this.options.ecmaVersion>=6&&(node.generator=node.expression=!1),this.options.ecmaVersion>=8&&(node.async=!1)},pp$5.parseMethod=function(isGenerator,isAsync,allowDirectSuper){var node=this.startNode(),oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.initFunction(node),this.options.ecmaVersion>=6&&(node.generator=isGenerator),this.options.ecmaVersion>=8&&(node.async=!!isAsync),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(64|functionFlags(isAsync,node.generator)|(allowDirectSuper?128:0)),this.expect(types$1.parenL),node.params=this.parseBindingList(types$1.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(node,!1,!0,!1),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,"FunctionExpression")},pp$5.parseArrowExpression=function(node,params,isAsync,forInit){var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.enterScope(16|functionFlags(isAsync,!1)),this.initFunction(node),this.options.ecmaVersion>=8&&(node.async=!!isAsync),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,node.params=this.toAssignableList(params,!0),this.parseFunctionBody(node,!0,!1,forInit),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,"ArrowFunctionExpression")},pp$5.parseFunctionBody=function(node,isArrowFunction,isMethod,forInit){var isExpression=isArrowFunction&&this.type!==types$1.braceL,oldStrict=this.strict,useStrict=!1;if(isExpression)node.body=this.parseMaybeAssign(forInit),node.expression=!0,this.checkParams(node,!1);else{var nonSimple=this.options.ecmaVersion>=7&&!this.isSimpleParamList(node.params);oldStrict&&!nonSimple||(useStrict=this.strictDirective(this.end))&&nonSimple&&this.raiseRecoverable(node.start,"Illegal 'use strict' directive in function with non-simple parameter list");var oldLabels=this.labels;this.labels=[],useStrict&&(this.strict=!0),this.checkParams(node,!oldStrict&&!useStrict&&!isArrowFunction&&!isMethod&&this.isSimpleParamList(node.params)),this.strict&&node.id&&this.checkLValSimple(node.id,5),node.body=this.parseBlock(!1,void 0,useStrict&&!oldStrict),node.expression=!1,this.adaptDirectivePrologue(node.body.body),this.labels=oldLabels}this.exitScope()},pp$5.isSimpleParamList=function(params){for(var i=0,list=params;i<list.length;i+=1){if("Identifier"!==list[i].type)return!1}return!0},pp$5.checkParams=function(node,allowDuplicates){for(var nameHash=Object.create(null),i=0,list=node.params;i<list.length;i+=1){var param=list[i];this.checkLValInnerPattern(param,1,allowDuplicates?null:nameHash)}},pp$5.parseExprList=function(close,allowTrailingComma,allowEmpty,refDestructuringErrors){for(var elts=[],first=!0;!this.eat(close);){if(first)first=!1;else if(this.expect(types$1.comma),allowTrailingComma&&this.afterTrailingComma(close))break;var elt=void 0;allowEmpty&&this.type===types$1.comma?elt=null:this.type===types$1.ellipsis?(elt=this.parseSpread(refDestructuringErrors),refDestructuringErrors&&this.type===types$1.comma&&refDestructuringErrors.trailingComma<0&&(refDestructuringErrors.trailingComma=this.start)):elt=this.parseMaybeAssign(!1,refDestructuringErrors),elts.push(elt)}return elts},pp$5.checkUnreserved=function(ref){var start=ref.start,end=ref.end,name=ref.name;(this.inGenerator&&"yield"===name&&this.raiseRecoverable(start,"Cannot use 'yield' as identifier inside a generator"),this.inAsync&&"await"===name&&this.raiseRecoverable(start,"Cannot use 'await' as identifier inside an async function"),this.currentThisScope().inClassFieldInit&&"arguments"===name&&this.raiseRecoverable(start,"Cannot use 'arguments' in class field initializer"),!this.inClassStaticBlock||"arguments"!==name&&"await"!==name||this.raise(start,"Cannot use "+name+" in class static initialization block"),this.keywords.test(name)&&this.raise(start,"Unexpected keyword '"+name+"'"),this.options.ecmaVersion<6&&-1!==this.input.slice(start,end).indexOf("\\"))||(this.strict?this.reservedWordsStrict:this.reservedWords).test(name)&&(this.inAsync||"await"!==name||this.raiseRecoverable(start,"Cannot use keyword 'await' outside an async function"),this.raiseRecoverable(start,"The keyword '"+name+"' is reserved"))},pp$5.parseIdent=function(liberal){var node=this.parseIdentNode();return this.next(!!liberal),this.finishNode(node,"Identifier"),liberal||(this.checkUnreserved(node),"await"!==node.name||this.awaitIdentPos||(this.awaitIdentPos=node.start)),node},pp$5.parseIdentNode=function(){var node=this.startNode();return this.type===types$1.name?node.name=this.value:this.type.keyword?(node.name=this.type.keyword,"class"!==node.name&&"function"!==node.name||this.lastTokEnd===this.lastTokStart+1&&46===this.input.charCodeAt(this.lastTokStart)||this.context.pop()):this.unexpected(),node},pp$5.parsePrivateIdent=function(){var node=this.startNode();return this.type===types$1.privateId?node.name=this.value:this.unexpected(),this.next(),this.finishNode(node,"PrivateIdentifier"),0===this.privateNameStack.length?this.raise(node.start,"Private field '#"+node.name+"' must be declared in an enclosing class"):this.privateNameStack[this.privateNameStack.length-1].used.push(node),node},pp$5.parseYield=function(forInit){this.yieldPos||(this.yieldPos=this.start);var node=this.startNode();return this.next(),this.type===types$1.semi||this.canInsertSemicolon()||this.type!==types$1.star&&!this.type.startsExpr?(node.delegate=!1,node.argument=null):(node.delegate=this.eat(types$1.star),node.argument=this.parseMaybeAssign(forInit)),this.finishNode(node,"YieldExpression")},pp$5.parseAwait=function(forInit){this.awaitPos||(this.awaitPos=this.start);var node=this.startNode();return this.next(),node.argument=this.parseMaybeUnary(null,!0,!1,forInit),this.finishNode(node,"AwaitExpression")};var pp$4=Parser.prototype;pp$4.raise=function(pos,message){var loc=getLineInfo(this.input,pos);message+=" ("+loc.line+":"+loc.column+")";var err=new SyntaxError(message);throw err.pos=pos,err.loc=loc,err.raisedAt=this.pos,err},pp$4.raiseRecoverable=pp$4.raise,pp$4.curPosition=function(){if(this.options.locations)return new Position(this.curLine,this.pos-this.lineStart)};var pp$3=Parser.prototype,Scope=function(flags){this.flags=flags,this.var=[],this.lexical=[],this.functions=[],this.inClassFieldInit=!1};pp$3.enterScope=function(flags){this.scopeStack.push(new Scope(flags))},pp$3.exitScope=function(){this.scopeStack.pop()},pp$3.treatFunctionsAsVarInScope=function(scope){return 2&scope.flags||!this.inModule&&1&scope.flags},pp$3.declareName=function(name,bindingType,pos){var redeclared=!1;if(2===bindingType){var scope=this.currentScope();redeclared=scope.lexical.indexOf(name)>-1||scope.functions.indexOf(name)>-1||scope.var.indexOf(name)>-1,scope.lexical.push(name),this.inModule&&1&scope.flags&&delete this.undefinedExports[name]}else if(4===bindingType){this.currentScope().lexical.push(name)}else if(3===bindingType){var scope$2=this.currentScope();redeclared=this.treatFunctionsAsVar?scope$2.lexical.indexOf(name)>-1:scope$2.lexical.indexOf(name)>-1||scope$2.var.indexOf(name)>-1,scope$2.functions.push(name)}else for(var i=this.scopeStack.length-1;i>=0;--i){var scope$3=this.scopeStack[i];if(scope$3.lexical.indexOf(name)>-1&&!(32&scope$3.flags&&scope$3.lexical[0]===name)||!this.treatFunctionsAsVarInScope(scope$3)&&scope$3.functions.indexOf(name)>-1){redeclared=!0;break}if(scope$3.var.push(name),this.inModule&&1&scope$3.flags&&delete this.undefinedExports[name],259&scope$3.flags)break}redeclared&&this.raiseRecoverable(pos,"Identifier '"+name+"' has already been declared")},pp$3.checkLocalExport=function(id){-1===this.scopeStack[0].lexical.indexOf(id.name)&&-1===this.scopeStack[0].var.indexOf(id.name)&&(this.undefinedExports[id.name]=id)},pp$3.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]},pp$3.currentVarScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(259&scope.flags)return scope}},pp$3.currentThisScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(259&scope.flags&&!(16&scope.flags))return scope}};var Node=function(parser,pos,loc){this.type="",this.start=pos,this.end=0,parser.options.locations&&(this.loc=new SourceLocation(parser,loc)),parser.options.directSourceFile&&(this.sourceFile=parser.options.directSourceFile),parser.options.ranges&&(this.range=[pos,0])},pp$2=Parser.prototype;function finishNodeAt(node,type,pos,loc){return node.type=type,node.end=pos,this.options.locations&&(node.loc.end=loc),this.options.ranges&&(node.range[1]=pos),node}pp$2.startNode=function(){return new Node(this,this.start,this.startLoc)},pp$2.startNodeAt=function(pos,loc){return new Node(this,pos,loc)},pp$2.finishNode=function(node,type){return finishNodeAt.call(this,node,type,this.lastTokEnd,this.lastTokEndLoc)},pp$2.finishNodeAt=function(node,type,pos,loc){return finishNodeAt.call(this,node,type,pos,loc)},pp$2.copyNode=function(node){var newNode=new Node(this,node.start,this.startLoc);for(var prop in node)newNode[prop]=node[prop];return newNode};var ecma9BinaryProperties="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",ecma10BinaryProperties=ecma9BinaryProperties+" Extended_Pictographic",ecma12BinaryProperties=ecma10BinaryProperties+" EBase EComp EMod EPres ExtPict",unicodeBinaryProperties={9:ecma9BinaryProperties,10:ecma10BinaryProperties,11:ecma10BinaryProperties,12:ecma12BinaryProperties,13:ecma12BinaryProperties,14:ecma12BinaryProperties},unicodeBinaryPropertiesOfStrings={9:"",10:"",11:"",12:"",13:"",14:"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji"},unicodeGeneralCategoryValues="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",ecma9ScriptValues="Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",ecma10ScriptValues=ecma9ScriptValues+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",ecma11ScriptValues=ecma10ScriptValues+" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho",ecma12ScriptValues=ecma11ScriptValues+" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi",ecma13ScriptValues=ecma12ScriptValues+" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith",unicodeScriptValues={9:ecma9ScriptValues,10:ecma10ScriptValues,11:ecma11ScriptValues,12:ecma12ScriptValues,13:ecma13ScriptValues,14:ecma13ScriptValues+" Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz"},data={};function buildUnicodeData(ecmaVersion){var d=data[ecmaVersion]={binary:wordsRegexp(unicodeBinaryProperties[ecmaVersion]+" "+unicodeGeneralCategoryValues),binaryOfStrings:wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),nonBinary:{General_Category:wordsRegexp(unicodeGeneralCategoryValues),Script:wordsRegexp(unicodeScriptValues[ecmaVersion])}};d.nonBinary.Script_Extensions=d.nonBinary.Script,d.nonBinary.gc=d.nonBinary.General_Category,d.nonBinary.sc=d.nonBinary.Script,d.nonBinary.scx=d.nonBinary.Script_Extensions}for(var i=0,list=[9,10,11,12,13,14];i<list.length;i+=1){buildUnicodeData(list[i])}var pp$1=Parser.prototype,RegExpValidationState=function(parser){this.parser=parser,this.validFlags="gim"+(parser.options.ecmaVersion>=6?"uy":"")+(parser.options.ecmaVersion>=9?"s":"")+(parser.options.ecmaVersion>=13?"d":"")+(parser.options.ecmaVersion>=15?"v":""),this.unicodeProperties=data[parser.options.ecmaVersion>=14?14:parser.options.ecmaVersion],this.source="",this.flags="",this.start=0,this.switchU=!1,this.switchV=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=[],this.backReferenceNames=[]};function isSyntaxCharacter(ch){return 36===ch||ch>=40&&ch<=43||46===ch||63===ch||ch>=91&&ch<=94||ch>=123&&ch<=125}function isControlLetter(ch){return ch>=65&&ch<=90||ch>=97&&ch<=122}RegExpValidationState.prototype.reset=function(start,pattern,flags){var unicodeSets=-1!==flags.indexOf("v"),unicode=-1!==flags.indexOf("u");this.start=0|start,this.source=pattern+"",this.flags=flags,unicodeSets&&this.parser.options.ecmaVersion>=15?(this.switchU=!0,this.switchV=!0,this.switchN=!0):(this.switchU=unicode&&this.parser.options.ecmaVersion>=6,this.switchV=!1,this.switchN=unicode&&this.parser.options.ecmaVersion>=9)},RegExpValidationState.prototype.raise=function(message){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+message)},RegExpValidationState.prototype.at=function(i,forceU){void 0===forceU&&(forceU=!1);var s=this.source,l=s.length;if(i>=l)return-1;var c=s.charCodeAt(i);if(!forceU&&!this.switchU||c<=55295||c>=57344||i+1>=l)return c;var next=s.charCodeAt(i+1);return next>=56320&&next<=57343?(c<<10)+next-56613888:c},RegExpValidationState.prototype.nextIndex=function(i,forceU){void 0===forceU&&(forceU=!1);var s=this.source,l=s.length;if(i>=l)return l;var next,c=s.charCodeAt(i);return!forceU&&!this.switchU||c<=55295||c>=57344||i+1>=l||(next=s.charCodeAt(i+1))<56320||next>57343?i+1:i+2},RegExpValidationState.prototype.current=function(forceU){return void 0===forceU&&(forceU=!1),this.at(this.pos,forceU)},RegExpValidationState.prototype.lookahead=function(forceU){return void 0===forceU&&(forceU=!1),this.at(this.nextIndex(this.pos,forceU),forceU)},RegExpValidationState.prototype.advance=function(forceU){void 0===forceU&&(forceU=!1),this.pos=this.nextIndex(this.pos,forceU)},RegExpValidationState.prototype.eat=function(ch,forceU){return void 0===forceU&&(forceU=!1),this.current(forceU)===ch&&(this.advance(forceU),!0)},RegExpValidationState.prototype.eatChars=function(chs,forceU){void 0===forceU&&(forceU=!1);for(var pos=this.pos,i=0,list=chs;i<list.length;i+=1){var ch=list[i],current=this.at(pos,forceU);if(-1===current||current!==ch)return!1;pos=this.nextIndex(pos,forceU)}return this.pos=pos,!0},pp$1.validateRegExpFlags=function(state){for(var validFlags=state.validFlags,flags=state.flags,u=!1,v=!1,i=0;i<flags.length;i++){var flag=flags.charAt(i);-1===validFlags.indexOf(flag)&&this.raise(state.start,"Invalid regular expression flag"),flags.indexOf(flag,i+1)>-1&&this.raise(state.start,"Duplicate regular expression flag"),"u"===flag&&(u=!0),"v"===flag&&(v=!0)}this.options.ecmaVersion>=15&&u&&v&&this.raise(state.start,"Invalid regular expression flag")},pp$1.validateRegExpPattern=function(state){this.regexp_pattern(state),!state.switchN&&this.options.ecmaVersion>=9&&state.groupNames.length>0&&(state.switchN=!0,this.regexp_pattern(state))},pp$1.regexp_pattern=function(state){state.pos=0,state.lastIntValue=0,state.lastStringValue="",state.lastAssertionIsQuantifiable=!1,state.numCapturingParens=0,state.maxBackReference=0,state.groupNames.length=0,state.backReferenceNames.length=0,this.regexp_disjunction(state),state.pos!==state.source.length&&(state.eat(41)&&state.raise("Unmatched ')'"),(state.eat(93)||state.eat(125))&&state.raise("Lone quantifier brackets")),state.maxBackReference>state.numCapturingParens&&state.raise("Invalid escape");for(var i=0,list=state.backReferenceNames;i<list.length;i+=1){var name=list[i];-1===state.groupNames.indexOf(name)&&state.raise("Invalid named capture referenced")}},pp$1.regexp_disjunction=function(state){for(this.regexp_alternative(state);state.eat(124);)this.regexp_alternative(state);this.regexp_eatQuantifier(state,!0)&&state.raise("Nothing to repeat"),state.eat(123)&&state.raise("Lone quantifier brackets")},pp$1.regexp_alternative=function(state){for(;state.pos<state.source.length&&this.regexp_eatTerm(state););},pp$1.regexp_eatTerm=function(state){return this.regexp_eatAssertion(state)?(state.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(state)&&state.switchU&&state.raise("Invalid quantifier"),!0):!!(state.switchU?this.regexp_eatAtom(state):this.regexp_eatExtendedAtom(state))&&(this.regexp_eatQuantifier(state),!0)},pp$1.regexp_eatAssertion=function(state){var start=state.pos;if(state.lastAssertionIsQuantifiable=!1,state.eat(94)||state.eat(36))return!0;if(state.eat(92)){if(state.eat(66)||state.eat(98))return!0;state.pos=start}if(state.eat(40)&&state.eat(63)){var lookbehind=!1;if(this.options.ecmaVersion>=9&&(lookbehind=state.eat(60)),state.eat(61)||state.eat(33))return this.regexp_disjunction(state),state.eat(41)||state.raise("Unterminated group"),state.lastAssertionIsQuantifiable=!lookbehind,!0}return state.pos=start,!1},pp$1.regexp_eatQuantifier=function(state,noError){return void 0===noError&&(noError=!1),!!this.regexp_eatQuantifierPrefix(state,noError)&&(state.eat(63),!0)},pp$1.regexp_eatQuantifierPrefix=function(state,noError){return state.eat(42)||state.eat(43)||state.eat(63)||this.regexp_eatBracedQuantifier(state,noError)},pp$1.regexp_eatBracedQuantifier=function(state,noError){var start=state.pos;if(state.eat(123)){var min=0,max=-1;if(this.regexp_eatDecimalDigits(state)&&(min=state.lastIntValue,state.eat(44)&&this.regexp_eatDecimalDigits(state)&&(max=state.lastIntValue),state.eat(125)))return-1!==max&&max<min&&!noError&&state.raise("numbers out of order in {} quantifier"),!0;state.switchU&&!noError&&state.raise("Incomplete quantifier"),state.pos=start}return!1},pp$1.regexp_eatAtom=function(state){return this.regexp_eatPatternCharacters(state)||state.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state)||this.regexp_eatCharacterClass(state)||this.regexp_eatUncapturingGroup(state)||this.regexp_eatCapturingGroup(state)},pp$1.regexp_eatReverseSolidusAtomEscape=function(state){var start=state.pos;if(state.eat(92)){if(this.regexp_eatAtomEscape(state))return!0;state.pos=start}return!1},pp$1.regexp_eatUncapturingGroup=function(state){var start=state.pos;if(state.eat(40)){if(state.eat(63)&&state.eat(58)){if(this.regexp_disjunction(state),state.eat(41))return!0;state.raise("Unterminated group")}state.pos=start}return!1},pp$1.regexp_eatCapturingGroup=function(state){if(state.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(state):63===state.current()&&state.raise("Invalid group"),this.regexp_disjunction(state),state.eat(41))return state.numCapturingParens+=1,!0;state.raise("Unterminated group")}return!1},pp$1.regexp_eatExtendedAtom=function(state){return state.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state)||this.regexp_eatCharacterClass(state)||this.regexp_eatUncapturingGroup(state)||this.regexp_eatCapturingGroup(state)||this.regexp_eatInvalidBracedQuantifier(state)||this.regexp_eatExtendedPatternCharacter(state)},pp$1.regexp_eatInvalidBracedQuantifier=function(state){return this.regexp_eatBracedQuantifier(state,!0)&&state.raise("Nothing to repeat"),!1},pp$1.regexp_eatSyntaxCharacter=function(state){var ch=state.current();return!!isSyntaxCharacter(ch)&&(state.lastIntValue=ch,state.advance(),!0)},pp$1.regexp_eatPatternCharacters=function(state){for(var start=state.pos,ch=0;-1!==(ch=state.current())&&!isSyntaxCharacter(ch);)state.advance();return state.pos!==start},pp$1.regexp_eatExtendedPatternCharacter=function(state){var ch=state.current();return!(-1===ch||36===ch||ch>=40&&ch<=43||46===ch||63===ch||91===ch||94===ch||124===ch)&&(state.advance(),!0)},pp$1.regexp_groupSpecifier=function(state){if(state.eat(63)){if(this.regexp_eatGroupName(state))return-1!==state.groupNames.indexOf(state.lastStringValue)&&state.raise("Duplicate capture group name"),void state.groupNames.push(state.lastStringValue);state.raise("Invalid group")}},pp$1.regexp_eatGroupName=function(state){if(state.lastStringValue="",state.eat(60)){if(this.regexp_eatRegExpIdentifierName(state)&&state.eat(62))return!0;state.raise("Invalid capture group name")}return!1},pp$1.regexp_eatRegExpIdentifierName=function(state){if(state.lastStringValue="",this.regexp_eatRegExpIdentifierStart(state)){for(state.lastStringValue+=codePointToString(state.lastIntValue);this.regexp_eatRegExpIdentifierPart(state);)state.lastStringValue+=codePointToString(state.lastIntValue);return!0}return!1},pp$1.regexp_eatRegExpIdentifierStart=function(state){var start=state.pos,forceU=this.options.ecmaVersion>=11,ch=state.current(forceU);return state.advance(forceU),92===ch&&this.regexp_eatRegExpUnicodeEscapeSequence(state,forceU)&&(ch=state.lastIntValue),function(ch){return isIdentifierStart(ch,!0)||36===ch||95===ch}(ch)?(state.lastIntValue=ch,!0):(state.pos=start,!1)},pp$1.regexp_eatRegExpIdentifierPart=function(state){var start=state.pos,forceU=this.options.ecmaVersion>=11,ch=state.current(forceU);return state.advance(forceU),92===ch&&this.regexp_eatRegExpUnicodeEscapeSequence(state,forceU)&&(ch=state.lastIntValue),function(ch){return isIdentifierChar(ch,!0)||36===ch||95===ch||8204===ch||8205===ch}(ch)?(state.lastIntValue=ch,!0):(state.pos=start,!1)},pp$1.regexp_eatAtomEscape=function(state){return!!(this.regexp_eatBackReference(state)||this.regexp_eatCharacterClassEscape(state)||this.regexp_eatCharacterEscape(state)||state.switchN&&this.regexp_eatKGroupName(state))||(state.switchU&&(99===state.current()&&state.raise("Invalid unicode escape"),state.raise("Invalid escape")),!1)},pp$1.regexp_eatBackReference=function(state){var start=state.pos;if(this.regexp_eatDecimalEscape(state)){var n=state.lastIntValue;if(state.switchU)return n>state.maxBackReference&&(state.maxBackReference=n),!0;if(n<=state.numCapturingParens)return!0;state.pos=start}return!1},pp$1.regexp_eatKGroupName=function(state){if(state.eat(107)){if(this.regexp_eatGroupName(state))return state.backReferenceNames.push(state.lastStringValue),!0;state.raise("Invalid named reference")}return!1},pp$1.regexp_eatCharacterEscape=function(state){return this.regexp_eatControlEscape(state)||this.regexp_eatCControlLetter(state)||this.regexp_eatZero(state)||this.regexp_eatHexEscapeSequence(state)||this.regexp_eatRegExpUnicodeEscapeSequence(state,!1)||!state.switchU&&this.regexp_eatLegacyOctalEscapeSequence(state)||this.regexp_eatIdentityEscape(state)},pp$1.regexp_eatCControlLetter=function(state){var start=state.pos;if(state.eat(99)){if(this.regexp_eatControlLetter(state))return!0;state.pos=start}return!1},pp$1.regexp_eatZero=function(state){return 48===state.current()&&!isDecimalDigit(state.lookahead())&&(state.lastIntValue=0,state.advance(),!0)},pp$1.regexp_eatControlEscape=function(state){var ch=state.current();return 116===ch?(state.lastIntValue=9,state.advance(),!0):110===ch?(state.lastIntValue=10,state.advance(),!0):118===ch?(state.lastIntValue=11,state.advance(),!0):102===ch?(state.lastIntValue=12,state.advance(),!0):114===ch&&(state.lastIntValue=13,state.advance(),!0)},pp$1.regexp_eatControlLetter=function(state){var ch=state.current();return!!isControlLetter(ch)&&(state.lastIntValue=ch%32,state.advance(),!0)},pp$1.regexp_eatRegExpUnicodeEscapeSequence=function(state,forceU){void 0===forceU&&(forceU=!1);var ch,start=state.pos,switchU=forceU||state.switchU;if(state.eat(117)){if(this.regexp_eatFixedHexDigits(state,4)){var lead=state.lastIntValue;if(switchU&&lead>=55296&&lead<=56319){var leadSurrogateEnd=state.pos;if(state.eat(92)&&state.eat(117)&&this.regexp_eatFixedHexDigits(state,4)){var trail=state.lastIntValue;if(trail>=56320&&trail<=57343)return state.lastIntValue=1024*(lead-55296)+(trail-56320)+65536,!0}state.pos=leadSurrogateEnd,state.lastIntValue=lead}return!0}if(switchU&&state.eat(123)&&this.regexp_eatHexDigits(state)&&state.eat(125)&&((ch=state.lastIntValue)>=0&&ch<=1114111))return!0;switchU&&state.raise("Invalid unicode escape"),state.pos=start}return!1},pp$1.regexp_eatIdentityEscape=function(state){if(state.switchU)return!!this.regexp_eatSyntaxCharacter(state)||!!state.eat(47)&&(state.lastIntValue=47,!0);var ch=state.current();return!(99===ch||state.switchN&&107===ch)&&(state.lastIntValue=ch,state.advance(),!0)},pp$1.regexp_eatDecimalEscape=function(state){state.lastIntValue=0;var ch=state.current();if(ch>=49&&ch<=57){do{state.lastIntValue=10*state.lastIntValue+(ch-48),state.advance()}while((ch=state.current())>=48&&ch<=57);return!0}return!1};function isUnicodePropertyNameCharacter(ch){return isControlLetter(ch)||95===ch}function isUnicodePropertyValueCharacter(ch){return isUnicodePropertyNameCharacter(ch)||isDecimalDigit(ch)}function isDecimalDigit(ch){return ch>=48&&ch<=57}function isHexDigit(ch){return ch>=48&&ch<=57||ch>=65&&ch<=70||ch>=97&&ch<=102}function hexToInt(ch){return ch>=65&&ch<=70?ch-65+10:ch>=97&&ch<=102?ch-97+10:ch-48}function isOctalDigit(ch){return ch>=48&&ch<=55}pp$1.regexp_eatCharacterClassEscape=function(state){var ch=state.current();if(function(ch){return 100===ch||68===ch||115===ch||83===ch||119===ch||87===ch}(ch))return state.lastIntValue=-1,state.advance(),1;var negate=!1;if(state.switchU&&this.options.ecmaVersion>=9&&((negate=80===ch)||112===ch)){var result;if(state.lastIntValue=-1,state.advance(),state.eat(123)&&(result=this.regexp_eatUnicodePropertyValueExpression(state))&&state.eat(125))return negate&&2===result&&state.raise("Invalid property name"),result;state.raise("Invalid property name")}return 0},pp$1.regexp_eatUnicodePropertyValueExpression=function(state){var start=state.pos;if(this.regexp_eatUnicodePropertyName(state)&&state.eat(61)){var name=state.lastStringValue;if(this.regexp_eatUnicodePropertyValue(state)){var value=state.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(state,name,value),1}}if(state.pos=start,this.regexp_eatLoneUnicodePropertyNameOrValue(state)){var nameOrValue=state.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(state,nameOrValue)}return 0},pp$1.regexp_validateUnicodePropertyNameAndValue=function(state,name,value){hasOwn(state.unicodeProperties.nonBinary,name)||state.raise("Invalid property name"),state.unicodeProperties.nonBinary[name].test(value)||state.raise("Invalid property value")},pp$1.regexp_validateUnicodePropertyNameOrValue=function(state,nameOrValue){return state.unicodeProperties.binary.test(nameOrValue)?1:state.switchV&&state.unicodeProperties.binaryOfStrings.test(nameOrValue)?2:void state.raise("Invalid property name")},pp$1.regexp_eatUnicodePropertyName=function(state){var ch=0;for(state.lastStringValue="";isUnicodePropertyNameCharacter(ch=state.current());)state.lastStringValue+=codePointToString(ch),state.advance();return""!==state.lastStringValue},pp$1.regexp_eatUnicodePropertyValue=function(state){var ch=0;for(state.lastStringValue="";isUnicodePropertyValueCharacter(ch=state.current());)state.lastStringValue+=codePointToString(ch),state.advance();return""!==state.lastStringValue},pp$1.regexp_eatLoneUnicodePropertyNameOrValue=function(state){return this.regexp_eatUnicodePropertyValue(state)},pp$1.regexp_eatCharacterClass=function(state){if(state.eat(91)){var negate=state.eat(94),result=this.regexp_classContents(state);return state.eat(93)||state.raise("Unterminated character class"),negate&&2===result&&state.raise("Negated character class may contain strings"),!0}return!1},pp$1.regexp_classContents=function(state){return 93===state.current()?1:state.switchV?this.regexp_classSetExpression(state):(this.regexp_nonEmptyClassRanges(state),1)},pp$1.regexp_nonEmptyClassRanges=function(state){for(;this.regexp_eatClassAtom(state);){var left=state.lastIntValue;if(state.eat(45)&&this.regexp_eatClassAtom(state)){var right=state.lastIntValue;!state.switchU||-1!==left&&-1!==right||state.raise("Invalid character class"),-1!==left&&-1!==right&&left>right&&state.raise("Range out of order in character class")}}},pp$1.regexp_eatClassAtom=function(state){var start=state.pos;if(state.eat(92)){if(this.regexp_eatClassEscape(state))return!0;if(state.switchU){var ch$1=state.current();(99===ch$1||isOctalDigit(ch$1))&&state.raise("Invalid class escape"),state.raise("Invalid escape")}state.pos=start}var ch=state.current();return 93!==ch&&(state.lastIntValue=ch,state.advance(),!0)},pp$1.regexp_eatClassEscape=function(state){var start=state.pos;if(state.eat(98))return state.lastIntValue=8,!0;if(state.switchU&&state.eat(45))return state.lastIntValue=45,!0;if(!state.switchU&&state.eat(99)){if(this.regexp_eatClassControlLetter(state))return!0;state.pos=start}return this.regexp_eatCharacterClassEscape(state)||this.regexp_eatCharacterEscape(state)},pp$1.regexp_classSetExpression=function(state){var subResult,result=1;if(this.regexp_eatClassSetRange(state));else if(subResult=this.regexp_eatClassSetOperand(state)){2===subResult&&(result=2);for(var start=state.pos;state.eatChars([38,38]);)38!==state.current()&&(subResult=this.regexp_eatClassSetOperand(state))?2!==subResult&&(result=1):state.raise("Invalid character in character class");if(start!==state.pos)return result;for(;state.eatChars([45,45]);)this.regexp_eatClassSetOperand(state)||state.raise("Invalid character in character class");if(start!==state.pos)return result}else state.raise("Invalid character in character class");for(;;)if(!this.regexp_eatClassSetRange(state)){if(!(subResult=this.regexp_eatClassSetOperand(state)))return result;2===subResult&&(result=2)}},pp$1.regexp_eatClassSetRange=function(state){var start=state.pos;if(this.regexp_eatClassSetCharacter(state)){var left=state.lastIntValue;if(state.eat(45)&&this.regexp_eatClassSetCharacter(state)){var right=state.lastIntValue;return-1!==left&&-1!==right&&left>right&&state.raise("Range out of order in character class"),!0}state.pos=start}return!1},pp$1.regexp_eatClassSetOperand=function(state){return this.regexp_eatClassSetCharacter(state)?1:this.regexp_eatClassStringDisjunction(state)||this.regexp_eatNestedClass(state)},pp$1.regexp_eatNestedClass=function(state){var start=state.pos;if(state.eat(91)){var negate=state.eat(94),result=this.regexp_classContents(state);if(state.eat(93))return negate&&2===result&&state.raise("Negated character class may contain strings"),result;state.pos=start}if(state.eat(92)){var result$1=this.regexp_eatCharacterClassEscape(state);if(result$1)return result$1;state.pos=start}return null},pp$1.regexp_eatClassStringDisjunction=function(state){var start=state.pos;if(state.eatChars([92,113])){if(state.eat(123)){var result=this.regexp_classStringDisjunctionContents(state);if(state.eat(125))return result}else state.raise("Invalid escape");state.pos=start}return null},pp$1.regexp_classStringDisjunctionContents=function(state){for(var result=this.regexp_classString(state);state.eat(124);)2===this.regexp_classString(state)&&(result=2);return result},pp$1.regexp_classString=function(state){for(var count=0;this.regexp_eatClassSetCharacter(state);)count++;return 1===count?1:2},pp$1.regexp_eatClassSetCharacter=function(state){var start=state.pos;if(state.eat(92))return!(!this.regexp_eatCharacterEscape(state)&&!this.regexp_eatClassSetReservedPunctuator(state))||(state.eat(98)?(state.lastIntValue=8,!0):(state.pos=start,!1));var ch=state.current();return!(ch<0||ch===state.lookahead()&&function(ch){return 33===ch||ch>=35&&ch<=38||ch>=42&&ch<=44||46===ch||ch>=58&&ch<=64||94===ch||96===ch||126===ch}(ch))&&(!function(ch){return 40===ch||41===ch||45===ch||47===ch||ch>=91&&ch<=93||ch>=123&&ch<=125}(ch)&&(state.advance(),state.lastIntValue=ch,!0))},pp$1.regexp_eatClassSetReservedPunctuator=function(state){var ch=state.current();return!!function(ch){return 33===ch||35===ch||37===ch||38===ch||44===ch||45===ch||ch>=58&&ch<=62||64===ch||96===ch||126===ch}(ch)&&(state.lastIntValue=ch,state.advance(),!0)},pp$1.regexp_eatClassControlLetter=function(state){var ch=state.current();return!(!isDecimalDigit(ch)&&95!==ch)&&(state.lastIntValue=ch%32,state.advance(),!0)},pp$1.regexp_eatHexEscapeSequence=function(state){var start=state.pos;if(state.eat(120)){if(this.regexp_eatFixedHexDigits(state,2))return!0;state.switchU&&state.raise("Invalid escape"),state.pos=start}return!1},pp$1.regexp_eatDecimalDigits=function(state){var start=state.pos,ch=0;for(state.lastIntValue=0;isDecimalDigit(ch=state.current());)state.lastIntValue=10*state.lastIntValue+(ch-48),state.advance();return state.pos!==start},pp$1.regexp_eatHexDigits=function(state){var start=state.pos,ch=0;for(state.lastIntValue=0;isHexDigit(ch=state.current());)state.lastIntValue=16*state.lastIntValue+hexToInt(ch),state.advance();return state.pos!==start},pp$1.regexp_eatLegacyOctalEscapeSequence=function(state){if(this.regexp_eatOctalDigit(state)){var n1=state.lastIntValue;if(this.regexp_eatOctalDigit(state)){var n2=state.lastIntValue;n1<=3&&this.regexp_eatOctalDigit(state)?state.lastIntValue=64*n1+8*n2+state.lastIntValue:state.lastIntValue=8*n1+n2}else state.lastIntValue=n1;return!0}return!1},pp$1.regexp_eatOctalDigit=function(state){var ch=state.current();return isOctalDigit(ch)?(state.lastIntValue=ch-48,state.advance(),!0):(state.lastIntValue=0,!1)},pp$1.regexp_eatFixedHexDigits=function(state,length){var start=state.pos;state.lastIntValue=0;for(var i=0;i<length;++i){var ch=state.current();if(!isHexDigit(ch))return state.pos=start,!1;state.lastIntValue=16*state.lastIntValue+hexToInt(ch),state.advance()}return!0};var Token=function(p){this.type=p.type,this.value=p.value,this.start=p.start,this.end=p.end,p.options.locations&&(this.loc=new SourceLocation(p,p.startLoc,p.endLoc)),p.options.ranges&&(this.range=[p.start,p.end])},pp=Parser.prototype;function stringToBigInt(str){return"function"!=typeof BigInt?null:BigInt(str.replace(/_/g,""))}pp.next=function(ignoreEscapeSequenceInKeyword){!ignoreEscapeSequenceInKeyword&&this.type.keyword&&this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+this.type.keyword),this.options.onToken&&this.options.onToken(new Token(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken()},pp.getToken=function(){return this.next(),new Token(this)},"undefined"!=typeof Symbol&&(pp[Symbol.iterator]=function(){var this$1$1=this;return{next:function(){var token=this$1$1.getToken();return{done:token.type===types$1.eof,value:token}}}}),pp.nextToken=function(){var curContext=this.curContext();return curContext&&curContext.preserveSpace||this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length?this.finishToken(types$1.eof):curContext.override?curContext.override(this):void this.readToken(this.fullCharCodeAtPos())},pp.readToken=function(code){return isIdentifierStart(code,this.options.ecmaVersion>=6)||92===code?this.readWord():this.getTokenFromCode(code)},pp.fullCharCodeAtPos=function(){var code=this.input.charCodeAt(this.pos);if(code<=55295||code>=56320)return code;var next=this.input.charCodeAt(this.pos+1);return next<=56319||next>=57344?code:(code<<10)+next-56613888},pp.skipBlockComment=function(){var startLoc=this.options.onComment&&this.curPosition(),start=this.pos,end=this.input.indexOf("*/",this.pos+=2);if(-1===end&&this.raise(this.pos-2,"Unterminated comment"),this.pos=end+2,this.options.locations)for(var nextBreak=void 0,pos=start;(nextBreak=nextLineBreak(this.input,pos,this.pos))>-1;)++this.curLine,pos=this.lineStart=nextBreak;this.options.onComment&&this.options.onComment(!0,this.input.slice(start+2,end),start,this.pos,startLoc,this.curPosition())},pp.skipLineComment=function(startSkip){for(var start=this.pos,startLoc=this.options.onComment&&this.curPosition(),ch=this.input.charCodeAt(this.pos+=startSkip);this.pos<this.input.length&&!isNewLine(ch);)ch=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(start+startSkip,this.pos),start,this.pos,startLoc,this.curPosition())},pp.skipSpace=function(){loop:for(;this.pos<this.input.length;){var ch=this.input.charCodeAt(this.pos);switch(ch){case 32:case 160:++this.pos;break;case 13:10===this.input.charCodeAt(this.pos+1)&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break loop}break;default:if(!(ch>8&&ch<14||ch>=5760&&nonASCIIwhitespace.test(String.fromCharCode(ch))))break loop;++this.pos}}},pp.finishToken=function(type,val){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var prevType=this.type;this.type=type,this.value=val,this.updateContext(prevType)},pp.readToken_dot=function(){var next=this.input.charCodeAt(this.pos+1);if(next>=48&&next<=57)return this.readNumber(!0);var next2=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&46===next&&46===next2?(this.pos+=3,this.finishToken(types$1.ellipsis)):(++this.pos,this.finishToken(types$1.dot))},pp.readToken_slash=function(){var next=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):61===next?this.finishOp(types$1.assign,2):this.finishOp(types$1.slash,1)},pp.readToken_mult_modulo_exp=function(code){var next=this.input.charCodeAt(this.pos+1),size=1,tokentype=42===code?types$1.star:types$1.modulo;return this.options.ecmaVersion>=7&&42===code&&42===next&&(++size,tokentype=types$1.starstar,next=this.input.charCodeAt(this.pos+2)),61===next?this.finishOp(types$1.assign,size+1):this.finishOp(tokentype,size)},pp.readToken_pipe_amp=function(code){var next=this.input.charCodeAt(this.pos+1);if(next===code){if(this.options.ecmaVersion>=12)if(61===this.input.charCodeAt(this.pos+2))return this.finishOp(types$1.assign,3);return this.finishOp(124===code?types$1.logicalOR:types$1.logicalAND,2)}return 61===next?this.finishOp(types$1.assign,2):this.finishOp(124===code?types$1.bitwiseOR:types$1.bitwiseAND,1)},pp.readToken_caret=function(){return 61===this.input.charCodeAt(this.pos+1)?this.finishOp(types$1.assign,2):this.finishOp(types$1.bitwiseXOR,1)},pp.readToken_plus_min=function(code){var next=this.input.charCodeAt(this.pos+1);return next===code?45!==next||this.inModule||62!==this.input.charCodeAt(this.pos+2)||0!==this.lastTokEnd&&!lineBreak.test(this.input.slice(this.lastTokEnd,this.pos))?this.finishOp(types$1.incDec,2):(this.skipLineComment(3),this.skipSpace(),this.nextToken()):61===next?this.finishOp(types$1.assign,2):this.finishOp(types$1.plusMin,1)},pp.readToken_lt_gt=function(code){var next=this.input.charCodeAt(this.pos+1),size=1;return next===code?(size=62===code&&62===this.input.charCodeAt(this.pos+2)?3:2,61===this.input.charCodeAt(this.pos+size)?this.finishOp(types$1.assign,size+1):this.finishOp(types$1.bitShift,size)):33!==next||60!==code||this.inModule||45!==this.input.charCodeAt(this.pos+2)||45!==this.input.charCodeAt(this.pos+3)?(61===next&&(size=2),this.finishOp(types$1.relational,size)):(this.skipLineComment(4),this.skipSpace(),this.nextToken())},pp.readToken_eq_excl=function(code){var next=this.input.charCodeAt(this.pos+1);return 61===next?this.finishOp(types$1.equality,61===this.input.charCodeAt(this.pos+2)?3:2):61===code&&62===next&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(types$1.arrow)):this.finishOp(61===code?types$1.eq:types$1.prefix,1)},pp.readToken_question=function(){var ecmaVersion=this.options.ecmaVersion;if(ecmaVersion>=11){var next=this.input.charCodeAt(this.pos+1);if(46===next){var next2=this.input.charCodeAt(this.pos+2);if(next2<48||next2>57)return this.finishOp(types$1.questionDot,2)}if(63===next){if(ecmaVersion>=12)if(61===this.input.charCodeAt(this.pos+2))return this.finishOp(types$1.assign,3);return this.finishOp(types$1.coalesce,2)}}return this.finishOp(types$1.question,1)},pp.readToken_numberSign=function(){var code=35;if(this.options.ecmaVersion>=13&&(++this.pos,isIdentifierStart(code=this.fullCharCodeAtPos(),!0)||92===code))return this.finishToken(types$1.privateId,this.readWord1());this.raise(this.pos,"Unexpected character '"+codePointToString(code)+"'")},pp.getTokenFromCode=function(code){switch(code){case 46:return this.readToken_dot();case 40:return++this.pos,this.finishToken(types$1.parenL);case 41:return++this.pos,this.finishToken(types$1.parenR);case 59:return++this.pos,this.finishToken(types$1.semi);case 44:return++this.pos,this.finishToken(types$1.comma);case 91:return++this.pos,this.finishToken(types$1.bracketL);case 93:return++this.pos,this.finishToken(types$1.bracketR);case 123:return++this.pos,this.finishToken(types$1.braceL);case 125:return++this.pos,this.finishToken(types$1.braceR);case 58:return++this.pos,this.finishToken(types$1.colon);case 96:if(this.options.ecmaVersion<6)break;return++this.pos,this.finishToken(types$1.backQuote);case 48:var next=this.input.charCodeAt(this.pos+1);if(120===next||88===next)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(111===next||79===next)return this.readRadixNumber(8);if(98===next||66===next)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(code);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(code);case 124:case 38:return this.readToken_pipe_amp(code);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(code);case 60:case 62:return this.readToken_lt_gt(code);case 61:case 33:return this.readToken_eq_excl(code);case 63:return this.readToken_question();case 126:return this.finishOp(types$1.prefix,1);case 35:return this.readToken_numberSign()}this.raise(this.pos,"Unexpected character '"+codePointToString(code)+"'")},pp.finishOp=function(type,size){var str=this.input.slice(this.pos,this.pos+size);return this.pos+=size,this.finishToken(type,str)},pp.readRegexp=function(){for(var escaped,inClass,start=this.pos;;){this.pos>=this.input.length&&this.raise(start,"Unterminated regular expression");var ch=this.input.charAt(this.pos);if(lineBreak.test(ch)&&this.raise(start,"Unterminated regular expression"),escaped)escaped=!1;else{if("["===ch)inClass=!0;else if("]"===ch&&inClass)inClass=!1;else if("/"===ch&&!inClass)break;escaped="\\"===ch}++this.pos}var pattern=this.input.slice(start,this.pos);++this.pos;var flagsStart=this.pos,flags=this.readWord1();this.containsEsc&&this.unexpected(flagsStart);var state=this.regexpState||(this.regexpState=new RegExpValidationState(this));state.reset(start,pattern,flags),this.validateRegExpFlags(state),this.validateRegExpPattern(state);var value=null;try{value=new RegExp(pattern,flags)}catch(e){}return this.finishToken(types$1.regexp,{pattern,flags,value})},pp.readInt=function(radix,len,maybeLegacyOctalNumericLiteral){for(var allowSeparators=this.options.ecmaVersion>=12&&void 0===len,isLegacyOctalNumericLiteral=maybeLegacyOctalNumericLiteral&&48===this.input.charCodeAt(this.pos),start=this.pos,total=0,lastCode=0,i=0,e=null==len?1/0:len;i<e;++i,++this.pos){var code=this.input.charCodeAt(this.pos),val=void 0;if(allowSeparators&&95===code)isLegacyOctalNumericLiteral&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed in legacy octal numeric literals"),95===lastCode&&this.raiseRecoverable(this.pos,"Numeric separator must be exactly one underscore"),0===i&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed at the first of digits"),lastCode=code;else{if((val=code>=97?code-97+10:code>=65?code-65+10:code>=48&&code<=57?code-48:1/0)>=radix)break;lastCode=code,total=total*radix+val}}return allowSeparators&&95===lastCode&&this.raiseRecoverable(this.pos-1,"Numeric separator is not allowed at the last of digits"),this.pos===start||null!=len&&this.pos-start!==len?null:total},pp.readRadixNumber=function(radix){var start=this.pos;this.pos+=2;var val=this.readInt(radix);return null==val&&this.raise(this.start+2,"Expected number in radix "+radix),this.options.ecmaVersion>=11&&110===this.input.charCodeAt(this.pos)?(val=stringToBigInt(this.input.slice(start,this.pos)),++this.pos):isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(types$1.num,val)},pp.readNumber=function(startsWithDot){var start=this.pos;startsWithDot||null!==this.readInt(10,void 0,!0)||this.raise(start,"Invalid number");var octal=this.pos-start>=2&&48===this.input.charCodeAt(start);octal&&this.strict&&this.raise(start,"Invalid number");var next=this.input.charCodeAt(this.pos);if(!octal&&!startsWithDot&&this.options.ecmaVersion>=11&&110===next){var val$1=stringToBigInt(this.input.slice(start,this.pos));return++this.pos,isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(types$1.num,val$1)}octal&&/[89]/.test(this.input.slice(start,this.pos))&&(octal=!1),46!==next||octal||(++this.pos,this.readInt(10),next=this.input.charCodeAt(this.pos)),69!==next&&101!==next||octal||(43!==(next=this.input.charCodeAt(++this.pos))&&45!==next||++this.pos,null===this.readInt(10)&&this.raise(start,"Invalid number")),isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var str,val=(str=this.input.slice(start,this.pos),octal?parseInt(str,8):parseFloat(str.replace(/_/g,"")));return this.finishToken(types$1.num,val)},pp.readCodePoint=function(){var code;if(123===this.input.charCodeAt(this.pos)){this.options.ecmaVersion<6&&this.unexpected();var codePos=++this.pos;code=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,code>1114111&&this.invalidStringToken(codePos,"Code point out of bounds")}else code=this.readHexChar(4);return code},pp.readString=function(quote){for(var out="",chunkStart=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var ch=this.input.charCodeAt(this.pos);if(ch===quote)break;92===ch?(out+=this.input.slice(chunkStart,this.pos),out+=this.readEscapedChar(!1),chunkStart=this.pos):8232===ch||8233===ch?(this.options.ecmaVersion<10&&this.raise(this.start,"Unterminated string constant"),++this.pos,this.options.locations&&(this.curLine++,this.lineStart=this.pos)):(isNewLine(ch)&&this.raise(this.start,"Unterminated string constant"),++this.pos)}return out+=this.input.slice(chunkStart,this.pos++),this.finishToken(types$1.string,out)};var INVALID_TEMPLATE_ESCAPE_ERROR={};pp.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken()}catch(err){if(err!==INVALID_TEMPLATE_ESCAPE_ERROR)throw err;this.readInvalidTemplateToken()}this.inTemplateElement=!1},pp.invalidStringToken=function(position,message){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw INVALID_TEMPLATE_ESCAPE_ERROR;this.raise(position,message)},pp.readTmplToken=function(){for(var out="",chunkStart=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var ch=this.input.charCodeAt(this.pos);if(96===ch||36===ch&&123===this.input.charCodeAt(this.pos+1))return this.pos!==this.start||this.type!==types$1.template&&this.type!==types$1.invalidTemplate?(out+=this.input.slice(chunkStart,this.pos),this.finishToken(types$1.template,out)):36===ch?(this.pos+=2,this.finishToken(types$1.dollarBraceL)):(++this.pos,this.finishToken(types$1.backQuote));if(92===ch)out+=this.input.slice(chunkStart,this.pos),out+=this.readEscapedChar(!0),chunkStart=this.pos;else if(isNewLine(ch)){switch(out+=this.input.slice(chunkStart,this.pos),++this.pos,ch){case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:out+="\n";break;default:out+=String.fromCharCode(ch)}this.options.locations&&(++this.curLine,this.lineStart=this.pos),chunkStart=this.pos}else++this.pos}},pp.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case"\\":++this.pos;break;case"$":if("{"!==this.input[this.pos+1])break;case"`":return this.finishToken(types$1.invalidTemplate,this.input.slice(this.start,this.pos))}this.raise(this.start,"Unterminated template")},pp.readEscapedChar=function(inTemplate){var ch=this.input.charCodeAt(++this.pos);switch(++this.pos,ch){case 110:return"\n";case 114:return"\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return codePointToString(this.readCodePoint());case 116:return"\t";case 98:return"\b";case 118:return"\v";case 102:return"\f";case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";case 56:case 57:if(this.strict&&this.invalidStringToken(this.pos-1,"Invalid escape sequence"),inTemplate){var codePos=this.pos-1;this.invalidStringToken(codePos,"Invalid escape sequence in template string")}default:if(ch>=48&&ch<=55){var octalStr=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],octal=parseInt(octalStr,8);return octal>255&&(octalStr=octalStr.slice(0,-1),octal=parseInt(octalStr,8)),this.pos+=octalStr.length-1,ch=this.input.charCodeAt(this.pos),"0"===octalStr&&56!==ch&&57!==ch||!this.strict&&!inTemplate||this.invalidStringToken(this.pos-1-octalStr.length,inTemplate?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(octal)}return isNewLine(ch)?"":String.fromCharCode(ch)}},pp.readHexChar=function(len){var codePos=this.pos,n=this.readInt(16,len);return null===n&&this.invalidStringToken(codePos,"Bad character escape sequence"),n},pp.readWord1=function(){this.containsEsc=!1;for(var word="",first=!0,chunkStart=this.pos,astral=this.options.ecmaVersion>=6;this.pos<this.input.length;){var ch=this.fullCharCodeAtPos();if(isIdentifierChar(ch,astral))this.pos+=ch<=65535?1:2;else{if(92!==ch)break;this.containsEsc=!0,word+=this.input.slice(chunkStart,this.pos);var escStart=this.pos;117!==this.input.charCodeAt(++this.pos)&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\uXXXX"),++this.pos;var esc=this.readCodePoint();(first?isIdentifierStart:isIdentifierChar)(esc,astral)||this.invalidStringToken(escStart,"Invalid Unicode escape"),word+=codePointToString(esc),chunkStart=this.pos}first=!1}return word+this.input.slice(chunkStart,this.pos)},pp.readWord=function(){var word=this.readWord1(),type=types$1.name;return this.keywords.test(word)&&(type=keywords[word]),this.finishToken(type,word)};Parser.acorn={Parser,version:"8.9.0",defaultOptions,Position,SourceLocation,getLineInfo,Node,TokenType,tokTypes:types$1,keywordTypes:keywords,TokContext,tokContexts:types,isIdentifierChar,isIdentifierStart,Token,isNewLine,lineBreak,lineBreakG,nonASCIIwhitespace};const external_node_module_namespaceObject=__nccwpck_require__(8188),external_node_fs_namespaceObject=__nccwpck_require__(7147),external_node_url_namespaceObject=__nccwpck_require__(7310);Math.floor,String.fromCharCode;const TRAILING_SLASH_RE=/\/$|\/\?/;function hasTrailingSlash(input="",queryParameters=!1){return queryParameters?TRAILING_SLASH_RE.test(input):input.endsWith("/")}function withTrailingSlash(input="",queryParameters=!1){if(!queryParameters)return input.endsWith("/")?input:input+"/";if(hasTrailingSlash(input,!0))return input||"/";const[s0,...s]=input.split("?");return s0+"/"+(s.length>0?`?${s.join("?")}`:"")}function hasLeadingSlash(input=""){return input.startsWith("/")}function withoutLeadingSlash(input=""){return(hasLeadingSlash(input)?input.slice(1):input)||"/"}function isNonEmptyURL(url){return url&&"/"!==url}function joinURL(base,...input){let url=base||"";for(const index of input.filter((url2=>isNonEmptyURL(url2))))url=url?withTrailingSlash(url)+withoutLeadingSlash(index):index;return url}const external_node_assert_namespaceObject=__nccwpck_require__(9491),external_node_process_namespaceObject=__nccwpck_require__(7282),external_node_path_namespaceObject=__nccwpck_require__(1017),external_node_v8_namespaceObject=__nccwpck_require__(4655),external_node_util_namespaceObject=__nccwpck_require__(3837),BUILTIN_MODULES=new Set(external_node_module_namespaceObject.builtinModules);function normalizeSlash(string_){return string_.replace(/\\/g,"/")}const isWindows="win32"===external_node_process_namespaceObject.platform,own$1={}.hasOwnProperty,classRegExp=/^([A-Z][a-z\d]*)+$/,kTypes=new Set(["string","function","number","object","Function","Object","boolean","bigint","symbol"]),codes={};function formatList(array,type="and"){return array.length<3?array.join(` ${type} `):`${array.slice(0,-1).join(", ")}, ${type} ${array[array.length-1]}`}const messages=new Map;let userStackTraceLimit;function createError(sym,value,def){return messages.set(sym,value),function(Base,key){return NodeError;function NodeError(...args){const limit=Error.stackTraceLimit;isErrorStackTraceLimitWritable()&&(Error.stackTraceLimit=0);const error=new Base;isErrorStackTraceLimitWritable()&&(Error.stackTraceLimit=limit);const message=function(key,args,self){const message=messages.get(key);if(external_node_assert_namespaceObject(void 0!==message,"expected `message` to be found"),"function"==typeof message)return external_node_assert_namespaceObject(message.length<=args.length,`Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${message.length}).`),Reflect.apply(message,self,args);const regex=/%[dfijoOs]/g;let expectedLength=0;for(;null!==regex.exec(message);)expectedLength++;return external_node_assert_namespaceObject(expectedLength===args.length,`Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`),0===args.length?message:(args.unshift(message),Reflect.apply(external_node_util_namespaceObject.format,null,args))}(key,args,error);return Object.defineProperties(error,{message:{value:message,enumerable:!1,writable:!0,configurable:!0},toString:{value(){return`${this.name} [${key}]: ${this.message}`},enumerable:!1,writable:!0,configurable:!0}}),captureLargerStackTrace(error),error.code=key,error}}(def,sym)}function isErrorStackTraceLimitWritable(){try{if(external_node_v8_namespaceObject.startupSnapshot.isBuildingSnapshot())return!1}catch{}const desc=Object.getOwnPropertyDescriptor(Error,"stackTraceLimit");return void 0===desc?Object.isExtensible(Error):own$1.call(desc,"writable")&&void 0!==desc.writable?desc.writable:void 0!==desc.set}codes.ERR_INVALID_ARG_TYPE=createError("ERR_INVALID_ARG_TYPE",((name,expected,actual)=>{external_node_assert_namespaceObject("string"==typeof name,"'name' must be a string"),Array.isArray(expected)||(expected=[expected]);let message="The ";if(name.endsWith(" argument"))message+=`${name} `;else{const type=name.includes(".")?"property":"argument";message+=`"${name}" ${type} `}message+="must be ";const types=[],instances=[],other=[];for(const value of expected)external_node_assert_namespaceObject("string"==typeof value,"All expected entries have to be of type string"),kTypes.has(value)?types.push(value.toLowerCase()):null===classRegExp.exec(value)?(external_node_assert_namespaceObject("object"!==value,'The value "object" should be written as "Object"'),other.push(value)):instances.push(value);if(instances.length>0){const pos=types.indexOf("object");-1!==pos&&(types.slice(pos,1),instances.push("Object"))}return types.length>0&&(message+=`${types.length>1?"one of type":"of type"} ${formatList(types,"or")}`,(instances.length>0||other.length>0)&&(message+=" or ")),instances.length>0&&(message+=`an instance of ${formatList(instances,"or")}`,other.length>0&&(message+=" or ")),other.length>0&&(other.length>1?message+=`one of ${formatList(other,"or")}`:(other[0].toLowerCase()!==other[0]&&(message+="an "),message+=`${other[0]}`)),message+=`. Received ${function(value){if(null==value)return String(value);if("function"==typeof value&&value.name)return`function ${value.name}`;if("object"==typeof value)return value.constructor&&value.constructor.name?`an instance of ${value.constructor.name}`:`${(0,external_node_util_namespaceObject.inspect)(value,{depth:-1})}`;let inspected=(0,external_node_util_namespaceObject.inspect)(value,{colors:!1});inspected.length>28&&(inspected=`${inspected.slice(0,25)}...`);return`type ${typeof value} (${inspected})`}(actual)}`,message}),TypeError),codes.ERR_INVALID_MODULE_SPECIFIER=createError("ERR_INVALID_MODULE_SPECIFIER",((request,reason,base=void 0)=>`Invalid module "${request}" ${reason}${base?` imported from ${base}`:""}`),TypeError),codes.ERR_INVALID_PACKAGE_CONFIG=createError("ERR_INVALID_PACKAGE_CONFIG",((path,base,message)=>`Invalid package config ${path}${base?` while importing ${base}`:""}${message?`. ${message}`:""}`),Error),codes.ERR_INVALID_PACKAGE_TARGET=createError("ERR_INVALID_PACKAGE_TARGET",((pkgPath,key,target,isImport=!1,base=void 0)=>{const relError="string"==typeof target&&!isImport&&target.length>0&&!target.startsWith("./");return"."===key?(external_node_assert_namespaceObject(!1===isImport),`Invalid "exports" main target ${JSON.stringify(target)} defined in the package config ${pkgPath}package.json${base?` imported from ${base}`:""}${relError?'; targets must start with "./"':""}`):`Invalid "${isImport?"imports":"exports"}" target ${JSON.stringify(target)} defined for '${key}' in the package config ${pkgPath}package.json${base?` imported from ${base}`:""}${relError?'; targets must start with "./"':""}`}),Error),codes.ERR_MODULE_NOT_FOUND=createError("ERR_MODULE_NOT_FOUND",((path,base,type="package")=>`Cannot find ${type} '${path}' imported from ${base}`),Error),codes.ERR_NETWORK_IMPORT_DISALLOWED=createError("ERR_NETWORK_IMPORT_DISALLOWED","import of '%s' by %s is not supported: %s",Error),codes.ERR_PACKAGE_IMPORT_NOT_DEFINED=createError("ERR_PACKAGE_IMPORT_NOT_DEFINED",((specifier,packagePath,base)=>`Package import specifier "${specifier}" is not defined${packagePath?` in package ${packagePath}package.json`:""} imported from ${base}`),TypeError),codes.ERR_PACKAGE_PATH_NOT_EXPORTED=createError("ERR_PACKAGE_PATH_NOT_EXPORTED",((pkgPath,subpath,base=void 0)=>"."===subpath?`No "exports" main defined in ${pkgPath}package.json${base?` imported from ${base}`:""}`:`Package subpath '${subpath}' is not defined by "exports" in ${pkgPath}package.json${base?` imported from ${base}`:""}`),Error),codes.ERR_UNSUPPORTED_DIR_IMPORT=createError("ERR_UNSUPPORTED_DIR_IMPORT","Directory import '%s' is not supported resolving ES modules imported from %s",Error),codes.ERR_UNKNOWN_FILE_EXTENSION=createError("ERR_UNKNOWN_FILE_EXTENSION",((ext,path)=>`Unknown file extension "${ext}" for ${path}`),TypeError),codes.ERR_INVALID_ARG_VALUE=createError("ERR_INVALID_ARG_VALUE",((name,value,reason="is invalid")=>{let inspected=(0,external_node_util_namespaceObject.inspect)(value);inspected.length>128&&(inspected=`${inspected.slice(0,128)}...`);return`The ${name.includes(".")?"property":"argument"} '${name}' ${reason}. Received ${inspected}`}),TypeError),codes.ERR_UNSUPPORTED_ESM_URL_SCHEME=createError("ERR_UNSUPPORTED_ESM_URL_SCHEME",((url,supported)=>{let message=`Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;return isWindows&&2===url.protocol.length&&(message+=". On Windows, absolute paths must be valid file:// URLs"),message+=`. Received protocol '${url.protocol}'`,message}),Error);const captureLargerStackTrace=function(fn){const hidden="__node_internal_"+fn.name;return Object.defineProperty(fn,"name",{value:hidden}),fn}((function(error){const stackTraceLimitIsWritable=isErrorStackTraceLimitWritable();return stackTraceLimitIsWritable&&(userStackTraceLimit=Error.stackTraceLimit,Error.stackTraceLimit=Number.POSITIVE_INFINITY),Error.captureStackTrace(error),stackTraceLimitIsWritable&&(Error.stackTraceLimit=userStackTraceLimit),error}));const packageJsonReader={read:function(jsonPath){try{return{string:external_node_fs_namespaceObject.readFileSync(external_node_path_namespaceObject.toNamespacedPath(external_node_path_namespaceObject.join(external_node_path_namespaceObject.dirname(jsonPath),"package.json")),"utf8")}}catch(error){const exception=error;if("ENOENT"===exception.code)return{string:void 0};throw exception}}};const{ERR_INVALID_PACKAGE_CONFIG:ERR_INVALID_PACKAGE_CONFIG$1}=codes,packageJsonCache=new Map;function getPackageConfig(path,specifier,base){const existing=packageJsonCache.get(path);if(void 0!==existing)return existing;const source=packageJsonReader.read(path).string;if(void 0===source){const packageConfig={pjsonPath:path,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return packageJsonCache.set(path,packageConfig),packageConfig}let packageJson;try{packageJson=JSON.parse(source)}catch(error){const exception=error;throw new ERR_INVALID_PACKAGE_CONFIG$1(path,(base?`"${specifier}" from `:"")+(0,external_node_url_namespaceObject.fileURLToPath)(base||specifier),exception.message)}const{exports,imports,main,name,type}=packageJson,packageConfig={pjsonPath:path,exists:!0,main:"string"==typeof main?main:void 0,name:"string"==typeof name?name:void 0,type:"module"===type||"commonjs"===type?type:"none",exports,imports:imports&&"object"==typeof imports?imports:void 0};return packageJsonCache.set(path,packageConfig),packageConfig}function getPackageScopeConfig(resolved){let packageJsonUrl=new external_node_url_namespaceObject.URL("package.json",resolved);for(;;){if(packageJsonUrl.pathname.endsWith("node_modules/package.json"))break;const packageConfig=getPackageConfig((0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl),resolved);if(packageConfig.exists)return packageConfig;const lastPackageJsonUrl=packageJsonUrl;if(packageJsonUrl=new external_node_url_namespaceObject.URL("../package.json",packageJsonUrl),packageJsonUrl.pathname===lastPackageJsonUrl.pathname)break}const packageJsonPath=(0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl),packageConfig={pjsonPath:packageJsonPath,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return packageJsonCache.set(packageJsonPath,packageConfig),packageConfig}const{ERR_UNKNOWN_FILE_EXTENSION}=codes,dist_hasOwnProperty={}.hasOwnProperty,extensionFormatMap={__proto__:null,".cjs":"commonjs",".js":"module",".json":"json",".mjs":"module"};const protocolHandlers={__proto__:null,"data:":function(parsed){const{1:mime}=/^([^/]+\/[^;,]+)[^,]*?(;base64)?,/.exec(parsed.pathname)||[null,null,null];return function(mime){return mime&&/\s*(text|application)\/javascript\s*(;\s*charset=utf-?8\s*)?/i.test(mime)?"module":"application/json"===mime?"json":null}(mime)},"file:":function(url,_context,ignoreErrors){const ext=function(url){const pathname=url.pathname;let index=pathname.length;for(;index--;){const code=pathname.codePointAt(index);if(47===code)return"";if(46===code)return 47===pathname.codePointAt(index-1)?"":pathname.slice(index)}return""}(url);if(".js"===ext)return"module"===function(url){return getPackageScopeConfig(url).type}(url)?"module":"commonjs";const format=extensionFormatMap[ext];if(format)return format;if(ignoreErrors)return;const filepath=(0,external_node_url_namespaceObject.fileURLToPath)(url);throw new ERR_UNKNOWN_FILE_EXTENSION(ext,filepath)},"http:":getHttpProtocolModuleFormat,"https:":getHttpProtocolModuleFormat,"node:":()=>"builtin"};function getHttpProtocolModuleFormat(){}const RegExpPrototypeSymbolReplace=RegExp.prototype[Symbol.replace],{ERR_NETWORK_IMPORT_DISALLOWED,ERR_INVALID_MODULE_SPECIFIER,ERR_INVALID_PACKAGE_CONFIG,ERR_INVALID_PACKAGE_TARGET,ERR_MODULE_NOT_FOUND,ERR_PACKAGE_IMPORT_NOT_DEFINED,ERR_PACKAGE_PATH_NOT_EXPORTED,ERR_UNSUPPORTED_DIR_IMPORT,ERR_UNSUPPORTED_ESM_URL_SCHEME}=codes,own={}.hasOwnProperty,invalidSegmentRegEx=/(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\|\/|$)/i,deprecatedInvalidSegmentRegEx=/(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i,invalidPackageNameRegEx=/^\.|%|\\/,patternRegEx=/\*/g,encodedSepRegEx=/%2f|%5c/i,emittedPackageWarnings=new Set,doubleSlashRegEx=/[/\\]{2}/;function emitInvalidSegmentDeprecation(target,request,match,packageJsonUrl,internal,base,isTarget){const pjsonPath=(0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl),double=null!==doubleSlashRegEx.exec(isTarget?target:request);external_node_process_namespaceObject.emitWarning(`Use of deprecated ${double?"double slash":"leading or trailing slash matching"} resolving "${target}" for module request "${request}" ${request===match?"":`matched to "${match}" `}in the "${internal?"imports":"exports"}" field module resolution of the package at ${pjsonPath}${base?` imported from ${(0,external_node_url_namespaceObject.fileURLToPath)(base)}`:""}.`,"DeprecationWarning","DEP0166")}function emitLegacyIndexDeprecation(url,packageJsonUrl,base,main){const format=function(url,context){return dist_hasOwnProperty.call(protocolHandlers,url.protocol)&&protocolHandlers[url.protocol](url,context,!0)||null}(url,{parentURL:base.href});if("module"!==format)return;const path=(0,external_node_url_namespaceObject.fileURLToPath)(url.href),pkgPath=(0,external_node_url_namespaceObject.fileURLToPath)(new external_node_url_namespaceObject.URL(".",packageJsonUrl)),basePath=(0,external_node_url_namespaceObject.fileURLToPath)(base);main?external_node_process_namespaceObject.emitWarning(`Package ${pkgPath} has a "main" field set to ${JSON.stringify(main)}, excluding the full filename and extension to the resolved file at "${path.slice(pkgPath.length)}", imported from ${basePath}.\n Automatic extension resolution of the "main" field isdeprecated for ES modules.`,"DeprecationWarning","DEP0151"):external_node_process_namespaceObject.emitWarning(`No "main" or "exports" field defined in the package.json for ${pkgPath} resolving the main entry point "${path.slice(pkgPath.length)}", imported from ${basePath}.\nDefault "index" lookups for the main are deprecated for ES modules.`,"DeprecationWarning","DEP0151")}function tryStatSync(path){try{return(0,external_node_fs_namespaceObject.statSync)(path)}catch{return new external_node_fs_namespaceObject.Stats}}function fileExists(url){const stats=(0,external_node_fs_namespaceObject.statSync)(url,{throwIfNoEntry:!1}),isFile=stats?stats.isFile():void 0;return null!=isFile&&isFile}function legacyMainResolve(packageJsonUrl,packageConfig,base){let guess;if(void 0!==packageConfig.main){if(guess=new external_node_url_namespaceObject.URL(packageConfig.main,packageJsonUrl),fileExists(guess))return guess;const tries=[`./${packageConfig.main}.js`,`./${packageConfig.main}.json`,`./${packageConfig.main}.node`,`./${packageConfig.main}/index.js`,`./${packageConfig.main}/index.json`,`./${packageConfig.main}/index.node`];let i=-1;for(;++i<tries.length&&(guess=new external_node_url_namespaceObject.URL(tries[i],packageJsonUrl),!fileExists(guess));)guess=void 0;if(guess)return emitLegacyIndexDeprecation(guess,packageJsonUrl,base,packageConfig.main),guess}const tries=["./index.js","./index.json","./index.node"];let i=-1;for(;++i<tries.length&&(guess=new external_node_url_namespaceObject.URL(tries[i],packageJsonUrl),!fileExists(guess));)guess=void 0;if(guess)return emitLegacyIndexDeprecation(guess,packageJsonUrl,base,packageConfig.main),guess;throw new ERR_MODULE_NOT_FOUND((0,external_node_url_namespaceObject.fileURLToPath)(new external_node_url_namespaceObject.URL(".",packageJsonUrl)),(0,external_node_url_namespaceObject.fileURLToPath)(base))}function exportsNotFound(subpath,packageJsonUrl,base){return new ERR_PACKAGE_PATH_NOT_EXPORTED((0,external_node_url_namespaceObject.fileURLToPath)(new external_node_url_namespaceObject.URL(".",packageJsonUrl)),subpath,base&&(0,external_node_url_namespaceObject.fileURLToPath)(base))}function invalidPackageTarget(subpath,target,packageJsonUrl,internal,base){return target="object"==typeof target&&null!==target?JSON.stringify(target,null,""):`${target}`,new ERR_INVALID_PACKAGE_TARGET((0,external_node_url_namespaceObject.fileURLToPath)(new external_node_url_namespaceObject.URL(".",packageJsonUrl)),subpath,target,internal,base&&(0,external_node_url_namespaceObject.fileURLToPath)(base))}function resolvePackageTargetString(target,subpath,match,packageJsonUrl,base,pattern,internal,isPathMap,conditions){if(""!==subpath&&!pattern&&"/"!==target[target.length-1])throw invalidPackageTarget(match,target,packageJsonUrl,internal,base);if(!target.startsWith("./")){if(internal&&!target.startsWith("../")&&!target.startsWith("/")){let isURL=!1;try{new external_node_url_namespaceObject.URL(target),isURL=!0}catch{}if(!isURL){return packageResolve(pattern?RegExpPrototypeSymbolReplace.call(patternRegEx,target,(()=>subpath)):target+subpath,packageJsonUrl,conditions)}}throw invalidPackageTarget(match,target,packageJsonUrl,internal,base)}if(null!==invalidSegmentRegEx.exec(target.slice(2))){if(null!==deprecatedInvalidSegmentRegEx.exec(target.slice(2)))throw invalidPackageTarget(match,target,packageJsonUrl,internal,base);if(!isPathMap){const request=pattern?match.replace("*",(()=>subpath)):match+subpath;emitInvalidSegmentDeprecation(pattern?RegExpPrototypeSymbolReplace.call(patternRegEx,target,(()=>subpath)):target,request,match,packageJsonUrl,internal,base,!0)}}const resolved=new external_node_url_namespaceObject.URL(target,packageJsonUrl),resolvedPath=resolved.pathname,packagePath=new external_node_url_namespaceObject.URL(".",packageJsonUrl).pathname;if(!resolvedPath.startsWith(packagePath))throw invalidPackageTarget(match,target,packageJsonUrl,internal,base);if(""===subpath)return resolved;if(null!==invalidSegmentRegEx.exec(subpath)){const request=pattern?match.replace("*",(()=>subpath)):match+subpath;if(null===deprecatedInvalidSegmentRegEx.exec(subpath)){if(!isPathMap){emitInvalidSegmentDeprecation(pattern?RegExpPrototypeSymbolReplace.call(patternRegEx,target,(()=>subpath)):target,request,match,packageJsonUrl,internal,base,!1)}}else!function(request,match,packageJsonUrl,internal,base){const reason=`request is not a valid match in pattern "${match}" for the "${internal?"imports":"exports"}" resolution of ${(0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl)}`;throw new ERR_INVALID_MODULE_SPECIFIER(request,reason,base&&(0,external_node_url_namespaceObject.fileURLToPath)(base))}(request,match,packageJsonUrl,internal,base)}return pattern?new external_node_url_namespaceObject.URL(RegExpPrototypeSymbolReplace.call(patternRegEx,resolved.href,(()=>subpath))):new external_node_url_namespaceObject.URL(subpath,resolved)}function isArrayIndex(key){const keyNumber=Number(key);return`${keyNumber}`===key&&(keyNumber>=0&&keyNumber<4294967295)}function resolvePackageTarget(packageJsonUrl,target,subpath,packageSubpath,base,pattern,internal,isPathMap,conditions){if("string"==typeof target)return resolvePackageTargetString(target,subpath,packageSubpath,packageJsonUrl,base,pattern,internal,isPathMap,conditions);if(Array.isArray(target)){const targetList=target;if(0===targetList.length)return null;let lastException,i=-1;for(;++i<targetList.length;){const targetItem=targetList[i];let resolveResult;try{resolveResult=resolvePackageTarget(packageJsonUrl,targetItem,subpath,packageSubpath,base,pattern,internal,isPathMap,conditions)}catch(error){if(lastException=error,"ERR_INVALID_PACKAGE_TARGET"===error.code)continue;throw error}if(void 0!==resolveResult){if(null!==resolveResult)return resolveResult;lastException=null}}if(null==lastException)return null;throw lastException}if("object"==typeof target&&null!==target){const keys=Object.getOwnPropertyNames(target);let i=-1;for(;++i<keys.length;){if(isArrayIndex(keys[i]))throw new ERR_INVALID_PACKAGE_CONFIG((0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl),base,'"exports" cannot contain numeric property keys.')}for(i=-1;++i<keys.length;){const key=keys[i];if("default"===key||conditions&&conditions.has(key)){const resolveResult=resolvePackageTarget(packageJsonUrl,target[key],subpath,packageSubpath,base,pattern,internal,isPathMap,conditions);if(void 0===resolveResult)continue;return resolveResult}}return null}if(null===target)return null;throw invalidPackageTarget(packageSubpath,target,packageJsonUrl,internal,base)}function emitTrailingSlashPatternDeprecation(match,pjsonUrl,base){const pjsonPath=(0,external_node_url_namespaceObject.fileURLToPath)(pjsonUrl);emittedPackageWarnings.has(pjsonPath+"|"+match)||(emittedPackageWarnings.add(pjsonPath+"|"+match),external_node_process_namespaceObject.emitWarning(`Use of deprecated trailing slash pattern mapping "${match}" in the "exports" field module resolution of the package at ${pjsonPath}${base?` imported from ${(0,external_node_url_namespaceObject.fileURLToPath)(base)}`:""}. Mapping specifiers ending in "/" is no longer supported.`,"DeprecationWarning","DEP0155"))}function packageExportsResolve(packageJsonUrl,packageSubpath,packageConfig,base,conditions){let exports=packageConfig.exports;if(function(exports,packageJsonUrl,base){if("string"==typeof exports||Array.isArray(exports))return!0;if("object"!=typeof exports||null===exports)return!1;const keys=Object.getOwnPropertyNames(exports);let isConditionalSugar=!1,i=0,j=-1;for(;++j<keys.length;){const key=keys[j],curIsConditionalSugar=""===key||"."!==key[0];if(0==i++)isConditionalSugar=curIsConditionalSugar;else if(isConditionalSugar!==curIsConditionalSugar)throw new ERR_INVALID_PACKAGE_CONFIG((0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl),base,"\"exports\" cannot contain some keys starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.")}return isConditionalSugar}(exports,packageJsonUrl,base)&&(exports={".":exports}),own.call(exports,packageSubpath)&&!packageSubpath.includes("*")&&!packageSubpath.endsWith("/")){const resolveResult=resolvePackageTarget(packageJsonUrl,exports[packageSubpath],"",packageSubpath,base,!1,!1,!1,conditions);if(null==resolveResult)throw exportsNotFound(packageSubpath,packageJsonUrl,base);return resolveResult}let bestMatch="",bestMatchSubpath="";const keys=Object.getOwnPropertyNames(exports);let i=-1;for(;++i<keys.length;){const key=keys[i],patternIndex=key.indexOf("*");if(-1!==patternIndex&&packageSubpath.startsWith(key.slice(0,patternIndex))){packageSubpath.endsWith("/")&&emitTrailingSlashPatternDeprecation(packageSubpath,packageJsonUrl,base);const patternTrailer=key.slice(patternIndex+1);packageSubpath.length>=key.length&&packageSubpath.endsWith(patternTrailer)&&1===patternKeyCompare(bestMatch,key)&&key.lastIndexOf("*")===patternIndex&&(bestMatch=key,bestMatchSubpath=packageSubpath.slice(patternIndex,packageSubpath.length-patternTrailer.length))}}if(bestMatch){const resolveResult=resolvePackageTarget(packageJsonUrl,exports[bestMatch],bestMatchSubpath,bestMatch,base,!0,!1,packageSubpath.endsWith("/"),conditions);if(null==resolveResult)throw exportsNotFound(packageSubpath,packageJsonUrl,base);return resolveResult}throw exportsNotFound(packageSubpath,packageJsonUrl,base)}function patternKeyCompare(a,b){const aPatternIndex=a.indexOf("*"),bPatternIndex=b.indexOf("*"),baseLengthA=-1===aPatternIndex?a.length:aPatternIndex+1,baseLengthB=-1===bPatternIndex?b.length:bPatternIndex+1;return baseLengthA>baseLengthB?-1:baseLengthB>baseLengthA||-1===aPatternIndex?1:-1===bPatternIndex||a.length>b.length?-1:b.length>a.length?1:0}function packageImportsResolve(name,base,conditions){if("#"===name||name.startsWith("#/")||name.endsWith("/")){throw new ERR_INVALID_MODULE_SPECIFIER(name,"is not a valid internal imports specifier name",(0,external_node_url_namespaceObject.fileURLToPath)(base))}let packageJsonUrl;const packageConfig=getPackageScopeConfig(base);if(packageConfig.exists){packageJsonUrl=(0,external_node_url_namespaceObject.pathToFileURL)(packageConfig.pjsonPath);const imports=packageConfig.imports;if(imports)if(own.call(imports,name)&&!name.includes("*")){const resolveResult=resolvePackageTarget(packageJsonUrl,imports[name],"",name,base,!1,!0,!1,conditions);if(null!=resolveResult)return resolveResult}else{let bestMatch="",bestMatchSubpath="";const keys=Object.getOwnPropertyNames(imports);let i=-1;for(;++i<keys.length;){const key=keys[i],patternIndex=key.indexOf("*");if(-1!==patternIndex&&name.startsWith(key.slice(0,-1))){const patternTrailer=key.slice(patternIndex+1);name.length>=key.length&&name.endsWith(patternTrailer)&&1===patternKeyCompare(bestMatch,key)&&key.lastIndexOf("*")===patternIndex&&(bestMatch=key,bestMatchSubpath=name.slice(patternIndex,name.length-patternTrailer.length))}}if(bestMatch){const resolveResult=resolvePackageTarget(packageJsonUrl,imports[bestMatch],bestMatchSubpath,bestMatch,base,!0,!0,!1,conditions);if(null!=resolveResult)return resolveResult}}}throw function(specifier,packageJsonUrl,base){return new ERR_PACKAGE_IMPORT_NOT_DEFINED(specifier,packageJsonUrl&&(0,external_node_url_namespaceObject.fileURLToPath)(new external_node_url_namespaceObject.URL(".",packageJsonUrl)),(0,external_node_url_namespaceObject.fileURLToPath)(base))}(name,packageJsonUrl,base)}function packageResolve(specifier,base,conditions){if(external_node_module_namespaceObject.builtinModules.includes(specifier))return new external_node_url_namespaceObject.URL("node:"+specifier);const{packageName,packageSubpath,isScoped}=function(specifier,base){let separatorIndex=specifier.indexOf("/"),validPackageName=!0,isScoped=!1;"@"===specifier[0]&&(isScoped=!0,-1===separatorIndex||0===specifier.length?validPackageName=!1:separatorIndex=specifier.indexOf("/",separatorIndex+1));const packageName=-1===separatorIndex?specifier:specifier.slice(0,separatorIndex);if(null!==invalidPackageNameRegEx.exec(packageName)&&(validPackageName=!1),!validPackageName)throw new ERR_INVALID_MODULE_SPECIFIER(specifier,"is not a valid package name",(0,external_node_url_namespaceObject.fileURLToPath)(base));return{packageName,packageSubpath:"."+(-1===separatorIndex?"":specifier.slice(separatorIndex)),isScoped}}(specifier,base),packageConfig=getPackageScopeConfig(base);if(packageConfig.exists){const packageJsonUrl=(0,external_node_url_namespaceObject.pathToFileURL)(packageConfig.pjsonPath);if(packageConfig.name===packageName&&void 0!==packageConfig.exports&&null!==packageConfig.exports)return packageExportsResolve(packageJsonUrl,packageSubpath,packageConfig,base,conditions)}let lastPath,packageJsonUrl=new external_node_url_namespaceObject.URL("./node_modules/"+packageName+"/package.json",base),packageJsonPath=(0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl);do{if(!tryStatSync(packageJsonPath.slice(0,-13)).isDirectory()){lastPath=packageJsonPath,packageJsonUrl=new external_node_url_namespaceObject.URL((isScoped?"../../../../node_modules/":"../../../node_modules/")+packageName+"/package.json",packageJsonUrl),packageJsonPath=(0,external_node_url_namespaceObject.fileURLToPath)(packageJsonUrl);continue}const packageConfig=getPackageConfig(packageJsonPath,specifier,base);return void 0!==packageConfig.exports&&null!==packageConfig.exports?packageExportsResolve(packageJsonUrl,packageSubpath,packageConfig,base,conditions):"."===packageSubpath?legacyMainResolve(packageJsonUrl,packageConfig,base):new external_node_url_namespaceObject.URL(packageSubpath,packageJsonUrl)}while(packageJsonPath.length!==lastPath.length);throw new ERR_MODULE_NOT_FOUND(packageName,(0,external_node_url_namespaceObject.fileURLToPath)(base))}function moduleResolve(specifier,base,conditions,preserveSymlinks){const protocol=base.protocol,isRemote="http:"===protocol||"https:"===protocol;let resolved;if(function(specifier){return""!==specifier&&("/"===specifier[0]||function(specifier){if("."===specifier[0]){if(1===specifier.length||"/"===specifier[1])return!0;if("."===specifier[1]&&(2===specifier.length||"/"===specifier[2]))return!0}return!1}(specifier))}(specifier))resolved=new external_node_url_namespaceObject.URL(specifier,base);else if(isRemote||"#"!==specifier[0])try{resolved=new external_node_url_namespaceObject.URL(specifier)}catch{isRemote||(resolved=packageResolve(specifier,base,conditions))}else resolved=packageImportsResolve(specifier,base,conditions);return external_node_assert_namespaceObject(void 0!==resolved,"expected to be defined"),"file:"!==resolved.protocol?resolved:function(resolved,base,preserveSymlinks){if(null!==encodedSepRegEx.exec(resolved.pathname))throw new ERR_INVALID_MODULE_SPECIFIER(resolved.pathname,'must not include encoded "/" or "\\" characters',(0,external_node_url_namespaceObject.fileURLToPath)(base));const filePath=(0,external_node_url_namespaceObject.fileURLToPath)(resolved),stats=tryStatSync(filePath.endsWith("/")?filePath.slice(-1):filePath);if(stats.isDirectory()){const error=new ERR_UNSUPPORTED_DIR_IMPORT(filePath,(0,external_node_url_namespaceObject.fileURLToPath)(base));throw error.url=String(resolved),error}if(!stats.isFile())throw new ERR_MODULE_NOT_FOUND(filePath||resolved.pathname,base&&(0,external_node_url_namespaceObject.fileURLToPath)(base),"module");if(!preserveSymlinks){const real=(0,external_node_fs_namespaceObject.realpathSync)(filePath),{search,hash}=resolved;(resolved=(0,external_node_url_namespaceObject.pathToFileURL)(real+(filePath.endsWith(external_node_path_namespaceObject.sep)?"/":""))).search=search,resolved.hash=hash}return resolved}(resolved,base,preserveSymlinks)}function fileURLToPath(id){return"string"!=typeof id||id.startsWith("file://")?normalizeSlash((0,external_node_url_namespaceObject.fileURLToPath)(id)):normalizeSlash(id)}const DEFAULT_CONDITIONS_SET=new Set(["node","import"]),DEFAULT_URL=(0,external_node_url_namespaceObject.pathToFileURL)(process.cwd()),DEFAULT_EXTENSIONS=[".mjs",".cjs",".js",".json"],NOT_FOUND_ERRORS=new Set(["ERR_MODULE_NOT_FOUND","ERR_UNSUPPORTED_DIR_IMPORT","MODULE_NOT_FOUND","ERR_PACKAGE_PATH_NOT_EXPORTED"]);function _tryModuleResolve(id,url,conditions){try{return moduleResolve(id,url,conditions)}catch(error){if(!NOT_FOUND_ERRORS.has(error.code))throw error}}function _resolve(id,options={}){if(/(node|data|http|https):/.test(id))return id;if(BUILTIN_MODULES.has(id))return"node:"+id;if(isAbsolute(id)&&(0,external_node_fs_namespaceObject.existsSync)(id)){const realPath2=(0,external_node_fs_namespaceObject.realpathSync)(fileURLToPath(id));return(0,external_node_url_namespaceObject.pathToFileURL)(realPath2).toString()}const conditionsSet=options.conditions?new Set(options.conditions):DEFAULT_CONDITIONS_SET,_urls=(Array.isArray(options.url)?options.url:[options.url]).filter(Boolean).map((u=>new URL(function(id){return"string"!=typeof id&&(id=id.toString()),/(node|data|http|https|file):/.test(id)?id:BUILTIN_MODULES.has(id)?"node:"+id:"file://"+encodeURI(normalizeSlash(id))}(u.toString()))));0===_urls.length&&_urls.push(DEFAULT_URL);const urls=[..._urls];for(const url of _urls)"file:"===url.protocol&&urls.push(new URL("./",url),new URL(joinURL(url.pathname,"_index.js"),url),new URL("node_modules",url));let resolved;for(const url of urls){if(resolved=_tryModuleResolve(id,url,conditionsSet),resolved)break;for(const prefix of["","/index"]){for(const extension of options.extensions||DEFAULT_EXTENSIONS)if(resolved=_tryModuleResolve(id+prefix+extension,url,conditionsSet),resolved)break;if(resolved)break}if(resolved)break}if(!resolved){const error=new Error(`Cannot find module ${id} imported from ${urls.join(", ")}`);throw error.code="ERR_MODULE_NOT_FOUND",error}const realPath=(0,external_node_fs_namespaceObject.realpathSync)(fileURLToPath(resolved));return(0,external_node_url_namespaceObject.pathToFileURL)(realPath).toString()}function resolveSync(id,options){return _resolve(id,options)}function resolvePathSync(id,options){return fileURLToPath(resolveSync(id,options))}const ESM_RE=/([\s;]|^)(import[\s\w*,{}]*from|import\s*["'*{]|export\b\s*(?:[*{]|default|class|type|function|const|var|let|async function)|import\.meta\b)/m;function hasESMSyntax(code){return ESM_RE.test(code)}var external_crypto_=__nested_webpack_require_71731__("crypto");function md5(content,len=8){return(0,external_crypto_.createHash)("md5").update(content).digest("hex").slice(0,len)}const _EnvDebug=destr(process.env.JITI_DEBUG),_EnvCache=destr(process.env.JITI_CACHE),_EnvESMResolve=destr(process.env.JITI_ESM_RESOLVE),_EnvRequireCache=destr(process.env.JITI_REQUIRE_CACHE),_EnvSourceMaps=destr(process.env.JITI_SOURCE_MAPS),_EnvAlias=destr(process.env.JITI_ALIAS),_EnvTransform=destr(process.env.JITI_TRANSFORM_MODULES),_EnvNative=destr(process.env.JITI_NATIVE_MODULES),jiti_isWindows="win32"===(0,external_os_namespaceObject.platform)(),defaults={debug:_EnvDebug,cache:void 0===_EnvCache||!!_EnvCache,requireCache:void 0===_EnvRequireCache||!!_EnvRequireCache,sourceMaps:void 0!==_EnvSourceMaps&&!!_EnvSourceMaps,interopDefault:!1,esmResolve:_EnvESMResolve||!1,cacheVersion:"7",legacy:(0,semver.lt)(process.version||"0.0.0","14.0.0"),extensions:[".js",".mjs",".cjs",".ts",".mts",".cts",".json"],alias:_EnvAlias,nativeModules:_EnvNative||[],transformModules:_EnvTransform||[]},JS_EXT_RE=/\.(c|m)?j(sx?)$/,TS_EXT_RE=/\.(c|m)?t(sx?)$/;function createJITI(_filename,opts={},parentModule,parentCache){(opts=Object.assign(Object.assign({},defaults),opts)).legacy&&(opts.cacheVersion+="-legacy"),opts.transformOptions&&(opts.cacheVersion+="-"+object_hash_default()(opts.transformOptions));const alias=opts.alias&&Object.keys(opts.alias).length>0?normalizeAliases(opts.alias||{}):null,nativeModules=["typescript","jiti",...opts.nativeModules||[]],transformModules=[...opts.transformModules||[]],isNativeRe=new RegExp(`node_modules/(${nativeModules.map((m=>escapeStringRegexp(m))).join("|")})/`),isTransformRe=new RegExp(`node_modules/(${transformModules.map((m=>escapeStringRegexp(m))).join("|")})/`);function debug(...args){opts.debug&&console.log("[jiti]",...args)}if(_filename||(_filename=process.cwd()),function(filename){try{return(0,external_fs_.lstatSync)(filename).isDirectory()}catch(_a){return!1}}(_filename)&&(_filename=join(_filename,"index.js")),!0===opts.cache&&(opts.cache=function(){let _tmpDir=(0,external_os_namespaceObject.tmpdir)();if(process.env.TMPDIR&&_tmpDir===process.cwd()&&!process.env.JITI_RESPECT_TMPDIR_ENV){const _env=process.env.TMPDIR;delete process.env.TMPDIR,_tmpDir=(0,external_os_namespaceObject.tmpdir)(),process.env.TMPDIR=_env}return join(_tmpDir,"node-jiti")}()),opts.cache)try{if((0,external_fs_.mkdirSync)(opts.cache,{recursive:!0}),!function(filename){try{return(0,external_fs_.accessSync)(filename,external_fs_.constants.W_OK),!0}catch(_a){return!1}}(opts.cache))throw new Error("directory is not writable")}catch(error){debug("Error creating cache directory at ",opts.cache,error),opts.cache=!1}const nativeRequire=create_require_default()(jiti_isWindows?_filename.replace(/\//g,"\\"):_filename),tryResolve=(id,options)=>{try{return nativeRequire.resolve(id,options)}catch(_a){}},_url=(0,external_url_namespaceObject.pathToFileURL)(_filename),_additionalExts=[...opts.extensions].filter((ext=>".js"!==ext)),_resolve=(id,options)=>{let resolved,err;if(alias&&(id=function(path,aliases){const _path=normalizeWindowsPath(path);aliases=normalizeAliases(aliases);for(const alias in aliases)if(_path.startsWith(alias)&&pathSeparators.has(_path[alias.length]))return join(aliases[alias],_path.slice(alias.length));return _path}(id,alias)),opts.esmResolve){const conditionSets=[["node","require"],["node","import"]];for(const conditions of conditionSets){try{resolved=resolvePathSync(id,{url:_url,conditions})}catch(error){err=error}if(resolved)return resolved}}try{return nativeRequire.resolve(id,options)}catch(error){err=error}for(const ext of _additionalExts){if(resolved=tryResolve(id+ext,options)||tryResolve(id+"/index"+ext,options),resolved)return resolved;if(TS_EXT_RE.test((null==parentModule?void 0:parentModule.filename)||"")&&(resolved=tryResolve(id.replace(JS_EXT_RE,".$1t$2"),options),resolved))return resolved}throw err};function transform(topts){let code=function(filename,source,get){if(!opts.cache||!filename)return get();const sourceHash=` /* v${opts.cacheVersion}-${md5(source,16)} */`,filebase=basename(pathe_92c04245_dirname(filename))+"-"+basename(filename),cacheFile=join(opts.cache,filebase+"."+md5(filename)+".js");if((0,external_fs_.existsSync)(cacheFile)){const cacheSource=(0,external_fs_.readFileSync)(cacheFile,"utf8");if(cacheSource.endsWith(sourceHash))return debug("[cache hit]",filename,"~>",cacheFile),cacheSource}debug("[cache miss]",filename);const result=get();return result.includes("__JITI_ERROR__")||(0,external_fs_.writeFileSync)(cacheFile,result+sourceHash,"utf8"),result}(topts.filename,topts.source,(()=>{var _a;const res=opts.transform(Object.assign(Object.assign(Object.assign({legacy:opts.legacy},opts.transformOptions),{babel:Object.assign(Object.assign({},opts.sourceMaps?{sourceFileName:topts.filename,sourceMaps:"inline"}:{}),null===(_a=opts.transformOptions)||void 0===_a?void 0:_a.babel)}),topts));return res.error&&opts.debug&&debug(res.error),res.code}));return code.startsWith("#!")&&(code="// "+code),code}function _interopDefault(mod){return opts.interopDefault?function(sourceModule){if(null===(value=sourceModule)||"object"!=typeof value||!("default"in sourceModule))return sourceModule;var value;const newModule=sourceModule.default;for(const key in sourceModule)if("default"===key)try{key in newModule||Object.defineProperty(newModule,key,{enumerable:!1,configurable:!1,get:()=>newModule})}catch{}else try{key in newModule||Object.defineProperty(newModule,key,{enumerable:!0,configurable:!0,get:()=>sourceModule[key]})}catch{}return newModule}(mod):mod}function jiti(id){var _a,_b;const cache=parentCache||{};if(id.startsWith("node:")?id=id.slice(5):id.startsWith("file:")&&(id=(0,external_url_namespaceObject.fileURLToPath)(id)),external_module_.builtinModules.includes(id)||".pnp.js"===id)return nativeRequire(id);const filename=_resolve(id),ext=extname(filename);if(".json"===ext){debug("[json]",filename);const jsonModule=nativeRequire(id);return Object.defineProperty(jsonModule,"default",{value:jsonModule}),jsonModule}if(ext&&!opts.extensions.includes(ext))return debug("[unknown]",filename),nativeRequire(id);if(isNativeRe.test(filename))return debug("[native]",filename),nativeRequire(id);if(cache[filename])return _interopDefault(null===(_a=cache[filename])||void 0===_a?void 0:_a.exports);if(opts.requireCache&&nativeRequire.cache[filename])return _interopDefault(null===(_b=nativeRequire.cache[filename])||void 0===_b?void 0:_b.exports);return evalModule((0,external_fs_.readFileSync)(filename,"utf8"),{id,filename,ext,cache})}function evalModule(source,evalOptions={}){var _a;const id=evalOptions.id||(evalOptions.filename?basename(evalOptions.filename):`_jitiEval.${evalOptions.ext||".js"}`),filename=evalOptions.filename||_resolve(id),ext=evalOptions.ext||extname(filename),cache=evalOptions.cache||parentCache||{},isTypescript=".ts"===ext||".mts"===ext||".cts"===ext,isNativeModule=".mjs"===ext||".js"===ext&&"module"===(null===(_a=function(path){for(;path&&"."!==path&&"/"!==path;){path=join(path,"..");try{const pkg=(0,external_fs_.readFileSync)(join(path,"package.json"),"utf8");try{return JSON.parse(pkg)}catch(_a){}break}catch(_b){}}}(filename))||void 0===_a?void 0:_a.type),needsTranspile=!(".cjs"===ext)&&(isTypescript||isNativeModule||isTransformRe.test(filename)||hasESMSyntax(source)||opts.legacy&&source.match(/\?\.|\?\?/));const start=external_perf_hooks_namespaceObject.performance.now();if(needsTranspile){source=transform({filename,source,ts:isTypescript});debug("[transpile]"+(isNativeModule?" [esm]":""),filename,`(${Math.round(1e3*(external_perf_hooks_namespaceObject.performance.now()-start))/1e3}ms)`)}else try{return debug("[native]",filename),_interopDefault(nativeRequire(id))}catch(error){debug("Native require error:",error),debug("[fallback]",filename),source=transform({filename,source,ts:isTypescript})}const mod=new external_module_.Module(filename);let compiled;mod.filename=filename,parentModule&&(mod.parent=parentModule,Array.isArray(parentModule.children)&&!parentModule.children.includes(mod)&&parentModule.children.push(mod)),mod.require=createJITI(filename,opts,mod,cache),mod.path=pathe_92c04245_dirname(filename),mod.paths=external_module_.Module._nodeModulePaths(mod.path),cache[filename]=mod,opts.requireCache&&(nativeRequire.cache[filename]=mod);try{compiled=external_vm_default().runInThisContext(external_module_.Module.wrap(source),{filename,lineOffset:0,displayErrors:!1})}catch(error){opts.requireCache&&delete nativeRequire.cache[filename],opts.onError(error)}try{compiled(mod.exports,mod.require,mod,mod.filename,pathe_92c04245_dirname(mod.filename))}catch(error){opts.requireCache&&delete nativeRequire.cache[filename],opts.onError(error)}if(mod.exports&&mod.exports.__JITI_ERROR__){const{filename,line,column,code,message}=mod.exports.__JITI_ERROR__,err=new Error(`${code}: ${message} \n ${`${filename}:${line}:${column}`}`);Error.captureStackTrace(err,jiti),opts.onError(err)}mod.loaded=!0;return _interopDefault(mod.exports)}return _resolve.paths=nativeRequire.resolve.paths,jiti.resolve=_resolve,jiti.cache=opts.requireCache?nativeRequire.cache:{},jiti.extensions=nativeRequire.extensions,jiti.main=nativeRequire.main,jiti.transform=transform,jiti.register=function(){return(0,lib.addHook)(((source,filename)=>jiti.transform({source,filename,ts:!!/\.[cm]?ts$/.test(filename)})),{exts:opts.extensions})},jiti.evalModule=evalModule,jiti}})(),module.exports=__webpack_exports__.default})();

/***/ }),

/***/ 8381:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

function onError(err) {
  throw err; /* ↓ Check stack trace ↓ */
}

module.exports = function (filename, opts) {
  const jiti = __nccwpck_require__(1613);

  opts = { onError, ...opts };

  if (!opts.transform) {
    opts.transform = __nccwpck_require__(7462);
  }

  return jiti(filename, opts);
};


/***/ }),

/***/ 3247:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.link = exports.trueColorBg = exports.trueColor = exports.ansi256Bg = exports.ansi256 = exports.bgLightGray = exports.bgLightCyan = exports.bgLightMagenta = exports.bgLightBlue = exports.bgLightYellow = exports.bgLightGreen = exports.bgLightRed = exports.bgGray = exports.bgWhite = exports.bgCyan = exports.bgMagenta = exports.bgBlue = exports.bgYellow = exports.bgGreen = exports.bgRed = exports.bgBlack = exports.lightCyan = exports.lightMagenta = exports.lightBlue = exports.lightYellow = exports.lightGreen = exports.lightRed = exports.lightGray = exports.gray = exports.white = exports.cyan = exports.magenta = exports.blue = exports.yellow = exports.green = exports.red = exports.black = exports.strikethrough = exports.hidden = exports.inverse = exports.underline = exports.italic = exports.dim = exports.bold = exports.reset = exports.stripColors = exports.options = void 0;
let enabled = true;
// Support both browser and node environments
const globalVar = typeof self !== 'undefined'
    ? self
    : typeof window !== 'undefined'
        ? window
        : typeof global !== 'undefined'
            ? global
            : {};
/**
 * Detect how much colors the current terminal supports
 */
let supportLevel = 0 /* none */;
if (globalVar.process && globalVar.process.env && globalVar.process.stdout) {
    const { FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, COLORTERM } = globalVar.process.env;
    if (NODE_DISABLE_COLORS || NO_COLOR || FORCE_COLOR === '0') {
        enabled = false;
    }
    else if (FORCE_COLOR === '1' ||
        FORCE_COLOR === '2' ||
        FORCE_COLOR === '3') {
        enabled = true;
    }
    else if (TERM === 'dumb') {
        enabled = false;
    }
    else if ('CI' in globalVar.process.env &&
        [
            'TRAVIS',
            'CIRCLECI',
            'APPVEYOR',
            'GITLAB_CI',
            'GITHUB_ACTIONS',
            'BUILDKITE',
            'DRONE',
        ].some(vendor => vendor in globalVar.process.env)) {
        enabled = true;
    }
    else {
        enabled = process.stdout.isTTY;
    }
    if (enabled) {
        // Windows supports 24bit True Colors since Windows 10 revision #14931,
        // see https://devblogs.microsoft.com/commandline/24-bit-color-in-the-windows-console/
        if (process.platform === 'win32') {
            supportLevel = 3 /* trueColor */;
        }
        else {
            if (COLORTERM && (COLORTERM === 'truecolor' || COLORTERM === '24bit')) {
                supportLevel = 3 /* trueColor */;
            }
            else if (TERM && (TERM.endsWith('-256color') || TERM.endsWith('256'))) {
                supportLevel = 2 /* ansi256 */;
            }
            else {
                supportLevel = 1 /* ansi */;
            }
        }
    }
}
exports.options = {
    enabled,
    supportLevel,
};
function kolorist(start, end, level = 1 /* ansi */) {
    const open = `\x1b[${start}m`;
    const close = `\x1b[${end}m`;
    const regex = new RegExp(`\\x1b\\[${end}m`, 'g');
    return (str) => {
        return exports.options.enabled && exports.options.supportLevel >= level
            ? open + ('' + str).replace(regex, open) + close
            : '' + str;
    };
}
// Lower colors into 256 color space
// Taken from https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js
// which is MIT licensed and copyright by Heather Arthur and Josh Junon
function rgbToAnsi256(r, g, b) {
    // We use the extended greyscale palette here, with the exception of
    // black and white. normal palette only has 4 greyscale shades.
    if (r >> 4 === g >> 4 && g >> 4 === b >> 4) {
        if (r < 8) {
            return 16;
        }
        if (r > 248) {
            return 231;
        }
        return Math.round(((r - 8) / 247) * 24) + 232;
    }
    const ansi = 16 +
        36 * Math.round((r / 255) * 5) +
        6 * Math.round((g / 255) * 5) +
        Math.round((b / 255) * 5);
    return ansi;
}
function stripColors(str) {
    return ('' + str)
        .replace(/\x1b\[[0-9;]+m/g, '')
        .replace(/\x1b\]8;;.*?\x07(.*?)\x1b\]8;;\x07/g, (_, group) => group);
}
exports.stripColors = stripColors;
// modifiers
exports.reset = kolorist(0, 0);
exports.bold = kolorist(1, 22);
exports.dim = kolorist(2, 22);
exports.italic = kolorist(3, 23);
exports.underline = kolorist(4, 24);
exports.inverse = kolorist(7, 27);
exports.hidden = kolorist(8, 28);
exports.strikethrough = kolorist(9, 29);
// colors
exports.black = kolorist(30, 39);
exports.red = kolorist(31, 39);
exports.green = kolorist(32, 39);
exports.yellow = kolorist(33, 39);
exports.blue = kolorist(34, 39);
exports.magenta = kolorist(35, 39);
exports.cyan = kolorist(36, 39);
exports.white = kolorist(97, 39);
exports.gray = kolorist(90, 39);
exports.lightGray = kolorist(37, 39);
exports.lightRed = kolorist(91, 39);
exports.lightGreen = kolorist(92, 39);
exports.lightYellow = kolorist(93, 39);
exports.lightBlue = kolorist(94, 39);
exports.lightMagenta = kolorist(95, 39);
exports.lightCyan = kolorist(96, 39);
// background colors
exports.bgBlack = kolorist(40, 49);
exports.bgRed = kolorist(41, 49);
exports.bgGreen = kolorist(42, 49);
exports.bgYellow = kolorist(43, 49);
exports.bgBlue = kolorist(44, 49);
exports.bgMagenta = kolorist(45, 49);
exports.bgCyan = kolorist(46, 49);
exports.bgWhite = kolorist(107, 49);
exports.bgGray = kolorist(100, 49);
exports.bgLightRed = kolorist(101, 49);
exports.bgLightGreen = kolorist(102, 49);
exports.bgLightYellow = kolorist(103, 49);
exports.bgLightBlue = kolorist(104, 49);
exports.bgLightMagenta = kolorist(105, 49);
exports.bgLightCyan = kolorist(106, 49);
exports.bgLightGray = kolorist(47, 49);
// 256 support
const ansi256 = (n) => kolorist('38;5;' + n, 0, 2 /* ansi256 */);
exports.ansi256 = ansi256;
const ansi256Bg = (n) => kolorist('48;5;' + n, 0, 2 /* ansi256 */);
exports.ansi256Bg = ansi256Bg;
// TrueColor 24bit support
const trueColor = (r, g, b) => {
    return exports.options.supportLevel === 2 /* ansi256 */
        ? exports.ansi256(rgbToAnsi256(r, g, b))
        : kolorist(`38;2;${r};${g};${b}`, 0, 3 /* trueColor */);
};
exports.trueColor = trueColor;
const trueColorBg = (r, g, b) => {
    return exports.options.supportLevel === 2 /* ansi256 */
        ? exports.ansi256Bg(rgbToAnsi256(r, g, b))
        : kolorist(`48;2;${r};${g};${b}`, 0, 3 /* trueColor */);
};
exports.trueColorBg = trueColorBg;
// Links
const OSC = '\u001B]';
const BEL = '\u0007';
const SEP = ';';
function link(text, url) {
    return exports.options.enabled
        ? OSC + '8' + SEP + SEP + url + BEL + text + OSC + '8' + SEP + SEP + BEL
        : `${text} (\u200B${url}\u200B)`;
}
exports.link = link;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 7129:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


// A linked list to keep track of recently-used-ness
const Yallist = __nccwpck_require__(665)

const MAX = Symbol('max')
const LENGTH = Symbol('length')
const LENGTH_CALCULATOR = Symbol('lengthCalculator')
const ALLOW_STALE = Symbol('allowStale')
const MAX_AGE = Symbol('maxAge')
const DISPOSE = Symbol('dispose')
const NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')
const LRU_LIST = Symbol('lruList')
const CACHE = Symbol('cache')
const UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')

const naiveLength = () => 1

// lruList is a yallist where the head is the youngest
// item, and the tail is the oldest.  the list contains the Hit
// objects as the entries.
// Each Hit object has a reference to its Yallist.Node.  This
// never changes.
//
// cache is a Map (or PseudoMap) that matches the keys to
// the Yallist.Node object.
class LRUCache {
  constructor (options) {
    if (typeof options === 'number')
      options = { max: options }

    if (!options)
      options = {}

    if (options.max && (typeof options.max !== 'number' || options.max < 0))
      throw new TypeError('max must be a non-negative number')
    // Kind of weird to have a default max of Infinity, but oh well.
    const max = this[MAX] = options.max || Infinity

    const lc = options.length || naiveLength
    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc
    this[ALLOW_STALE] = options.stale || false
    if (options.maxAge && typeof options.maxAge !== 'number')
      throw new TypeError('maxAge must be a number')
    this[MAX_AGE] = options.maxAge || 0
    this[DISPOSE] = options.dispose
    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false
    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false
    this.reset()
  }

  // resize the cache when the max changes.
  set max (mL) {
    if (typeof mL !== 'number' || mL < 0)
      throw new TypeError('max must be a non-negative number')

    this[MAX] = mL || Infinity
    trim(this)
  }
  get max () {
    return this[MAX]
  }

  set allowStale (allowStale) {
    this[ALLOW_STALE] = !!allowStale
  }
  get allowStale () {
    return this[ALLOW_STALE]
  }

  set maxAge (mA) {
    if (typeof mA !== 'number')
      throw new TypeError('maxAge must be a non-negative number')

    this[MAX_AGE] = mA
    trim(this)
  }
  get maxAge () {
    return this[MAX_AGE]
  }

  // resize the cache when the lengthCalculator changes.
  set lengthCalculator (lC) {
    if (typeof lC !== 'function')
      lC = naiveLength

    if (lC !== this[LENGTH_CALCULATOR]) {
      this[LENGTH_CALCULATOR] = lC
      this[LENGTH] = 0
      this[LRU_LIST].forEach(hit => {
        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)
        this[LENGTH] += hit.length
      })
    }
    trim(this)
  }
  get lengthCalculator () { return this[LENGTH_CALCULATOR] }

  get length () { return this[LENGTH] }
  get itemCount () { return this[LRU_LIST].length }

  rforEach (fn, thisp) {
    thisp = thisp || this
    for (let walker = this[LRU_LIST].tail; walker !== null;) {
      const prev = walker.prev
      forEachStep(this, fn, walker, thisp)
      walker = prev
    }
  }

  forEach (fn, thisp) {
    thisp = thisp || this
    for (let walker = this[LRU_LIST].head; walker !== null;) {
      const next = walker.next
      forEachStep(this, fn, walker, thisp)
      walker = next
    }
  }

  keys () {
    return this[LRU_LIST].toArray().map(k => k.key)
  }

  values () {
    return this[LRU_LIST].toArray().map(k => k.value)
  }

  reset () {
    if (this[DISPOSE] &&
        this[LRU_LIST] &&
        this[LRU_LIST].length) {
      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))
    }

    this[CACHE] = new Map() // hash of items by key
    this[LRU_LIST] = new Yallist() // list of items in order of use recency
    this[LENGTH] = 0 // length of items in the list
  }

  dump () {
    return this[LRU_LIST].map(hit =>
      isStale(this, hit) ? false : {
        k: hit.key,
        v: hit.value,
        e: hit.now + (hit.maxAge || 0)
      }).toArray().filter(h => h)
  }

  dumpLru () {
    return this[LRU_LIST]
  }

  set (key, value, maxAge) {
    maxAge = maxAge || this[MAX_AGE]

    if (maxAge && typeof maxAge !== 'number')
      throw new TypeError('maxAge must be a number')

    const now = maxAge ? Date.now() : 0
    const len = this[LENGTH_CALCULATOR](value, key)

    if (this[CACHE].has(key)) {
      if (len > this[MAX]) {
        del(this, this[CACHE].get(key))
        return false
      }

      const node = this[CACHE].get(key)
      const item = node.value

      // dispose of the old one before overwriting
      // split out into 2 ifs for better coverage tracking
      if (this[DISPOSE]) {
        if (!this[NO_DISPOSE_ON_SET])
          this[DISPOSE](key, item.value)
      }

      item.now = now
      item.maxAge = maxAge
      item.value = value
      this[LENGTH] += len - item.length
      item.length = len
      this.get(key)
      trim(this)
      return true
    }

    const hit = new Entry(key, value, len, now, maxAge)

    // oversized objects fall out of cache automatically.
    if (hit.length > this[MAX]) {
      if (this[DISPOSE])
        this[DISPOSE](key, value)

      return false
    }

    this[LENGTH] += hit.length
    this[LRU_LIST].unshift(hit)
    this[CACHE].set(key, this[LRU_LIST].head)
    trim(this)
    return true
  }

  has (key) {
    if (!this[CACHE].has(key)) return false
    const hit = this[CACHE].get(key).value
    return !isStale(this, hit)
  }

  get (key) {
    return get(this, key, true)
  }

  peek (key) {
    return get(this, key, false)
  }

  pop () {
    const node = this[LRU_LIST].tail
    if (!node)
      return null

    del(this, node)
    return node.value
  }

  del (key) {
    del(this, this[CACHE].get(key))
  }

  load (arr) {
    // reset the cache
    this.reset()

    const now = Date.now()
    // A previous serialized cache has the most recent items first
    for (let l = arr.length - 1; l >= 0; l--) {
      const hit = arr[l]
      const expiresAt = hit.e || 0
      if (expiresAt === 0)
        // the item was created without expiration in a non aged cache
        this.set(hit.k, hit.v)
      else {
        const maxAge = expiresAt - now
        // dont add already expired items
        if (maxAge > 0) {
          this.set(hit.k, hit.v, maxAge)
        }
      }
    }
  }

  prune () {
    this[CACHE].forEach((value, key) => get(this, key, false))
  }
}

const get = (self, key, doUse) => {
  const node = self[CACHE].get(key)
  if (node) {
    const hit = node.value
    if (isStale(self, hit)) {
      del(self, node)
      if (!self[ALLOW_STALE])
        return undefined
    } else {
      if (doUse) {
        if (self[UPDATE_AGE_ON_GET])
          node.value.now = Date.now()
        self[LRU_LIST].unshiftNode(node)
      }
    }
    return hit.value
  }
}

const isStale = (self, hit) => {
  if (!hit || (!hit.maxAge && !self[MAX_AGE]))
    return false

  const diff = Date.now() - hit.now
  return hit.maxAge ? diff > hit.maxAge
    : self[MAX_AGE] && (diff > self[MAX_AGE])
}

const trim = self => {
  if (self[LENGTH] > self[MAX]) {
    for (let walker = self[LRU_LIST].tail;
      self[LENGTH] > self[MAX] && walker !== null;) {
      // We know that we're about to delete this one, and also
      // what the next least recently used key will be, so just
      // go ahead and set it now.
      const prev = walker.prev
      del(self, walker)
      walker = prev
    }
  }
}

const del = (self, node) => {
  if (node) {
    const hit = node.value
    if (self[DISPOSE])
      self[DISPOSE](hit.key, hit.value)

    self[LENGTH] -= hit.length
    self[CACHE].delete(hit.key)
    self[LRU_LIST].removeNode(node)
  }
}

class Entry {
  constructor (key, value, length, now, maxAge) {
    this.key = key
    this.value = value
    this.length = length
    this.now = now
    this.maxAge = maxAge || 0
  }
}

const forEachStep = (self, fn, node, thisp) => {
  let hit = node.value
  if (isStale(self, hit)) {
    del(self, node)
    if (!self[ALLOW_STALE])
      hit = undefined
  }
  if (hit)
    fn.call(thisp, hit.value, hit.key, self)
}

module.exports = LRUCache


/***/ }),

/***/ 4294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(4219);


/***/ }),

/***/ 4219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(1808);
var tls = __nccwpck_require__(4404);
var http = __nccwpck_require__(3685);
var https = __nccwpck_require__(5687);
var events = __nccwpck_require__(2361);
var assert = __nccwpck_require__(9491);
var util = __nccwpck_require__(3837);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 5840:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "v1", ({
  enumerable: true,
  get: function () {
    return _v.default;
  }
}));
Object.defineProperty(exports, "v3", ({
  enumerable: true,
  get: function () {
    return _v2.default;
  }
}));
Object.defineProperty(exports, "v4", ({
  enumerable: true,
  get: function () {
    return _v3.default;
  }
}));
Object.defineProperty(exports, "v5", ({
  enumerable: true,
  get: function () {
    return _v4.default;
  }
}));
Object.defineProperty(exports, "NIL", ({
  enumerable: true,
  get: function () {
    return _nil.default;
  }
}));
Object.defineProperty(exports, "version", ({
  enumerable: true,
  get: function () {
    return _version.default;
  }
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.default;
  }
}));
Object.defineProperty(exports, "stringify", ({
  enumerable: true,
  get: function () {
    return _stringify.default;
  }
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parse.default;
  }
}));

var _v = _interopRequireDefault(__nccwpck_require__(8628));

var _v2 = _interopRequireDefault(__nccwpck_require__(6409));

var _v3 = _interopRequireDefault(__nccwpck_require__(5122));

var _v4 = _interopRequireDefault(__nccwpck_require__(9120));

var _nil = _interopRequireDefault(__nccwpck_require__(5332));

var _version = _interopRequireDefault(__nccwpck_require__(1595));

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ 4569:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function md5(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('md5').update(bytes).digest();
}

var _default = md5;
exports["default"] = _default;

/***/ }),

/***/ 5332:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = '00000000-0000-0000-0000-000000000000';
exports["default"] = _default;

/***/ }),

/***/ 2746:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  let v;
  const arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

var _default = parse;
exports["default"] = _default;

/***/ }),

/***/ 814:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
exports["default"] = _default;

/***/ }),

/***/ 807:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = rng;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

let poolPtr = rnds8Pool.length;

function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    _crypto.default.randomFillSync(rnds8Pool);

    poolPtr = 0;
  }

  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ 5274:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sha1(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('sha1').update(bytes).digest();
}

var _default = sha1;
exports["default"] = _default;

/***/ }),

/***/ 8950:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

var _default = stringify;
exports["default"] = _default;

/***/ }),

/***/ 8628:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
let _nodeId;

let _clockseq; // Previous uuid creation time


let _lastMSecs = 0;
let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  let i = buf && offset || 0;
  const b = buf || new Array(16);
  options = options || {};
  let node = options.node || _nodeId;
  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    const seedBytes = options.random || (options.rng || _rng.default)();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (let n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0, _stringify.default)(b);
}

var _default = v1;
exports["default"] = _default;

/***/ }),

/***/ 6409:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _md = _interopRequireDefault(__nccwpck_require__(4569));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v3 = (0, _v.default)('v3', 0x30, _md.default);
var _default = v3;
exports["default"] = _default;

/***/ }),

/***/ 5998:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
exports.URL = exports.DNS = void 0;

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  const bytes = [];

  for (let i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
exports.DNS = DNS;
const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
exports.URL = URL;

function _default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0, _parse.default)(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    let bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (let i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0, _stringify.default)(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ 5122:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function v4(options, buf, offset) {
  options = options || {};

  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`


  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0, _stringify.default)(rnds);
}

var _default = v4;
exports["default"] = _default;

/***/ }),

/***/ 9120:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _sha = _interopRequireDefault(__nccwpck_require__(5274));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v5 = (0, _v.default)('v5', 0x50, _sha.default);
var _default = v5;
exports["default"] = _default;

/***/ }),

/***/ 6900:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _regex = _interopRequireDefault(__nccwpck_require__(814));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validate(uuid) {
  return typeof uuid === 'string' && _regex.default.test(uuid);
}

var _default = validate;
exports["default"] = _default;

/***/ }),

/***/ 1595:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function version(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

var _default = version;
exports["default"] = _default;

/***/ }),

/***/ 4091:
/***/ ((module) => {

"use strict";

module.exports = function (Yallist) {
  Yallist.prototype[Symbol.iterator] = function* () {
    for (let walker = this.head; walker; walker = walker.next) {
      yield walker.value
    }
  }
}


/***/ }),

/***/ 665:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

module.exports = Yallist

Yallist.Node = Node
Yallist.create = Yallist

function Yallist (list) {
  var self = this
  if (!(self instanceof Yallist)) {
    self = new Yallist()
  }

  self.tail = null
  self.head = null
  self.length = 0

  if (list && typeof list.forEach === 'function') {
    list.forEach(function (item) {
      self.push(item)
    })
  } else if (arguments.length > 0) {
    for (var i = 0, l = arguments.length; i < l; i++) {
      self.push(arguments[i])
    }
  }

  return self
}

Yallist.prototype.removeNode = function (node) {
  if (node.list !== this) {
    throw new Error('removing node which does not belong to this list')
  }

  var next = node.next
  var prev = node.prev

  if (next) {
    next.prev = prev
  }

  if (prev) {
    prev.next = next
  }

  if (node === this.head) {
    this.head = next
  }
  if (node === this.tail) {
    this.tail = prev
  }

  node.list.length--
  node.next = null
  node.prev = null
  node.list = null

  return next
}

Yallist.prototype.unshiftNode = function (node) {
  if (node === this.head) {
    return
  }

  if (node.list) {
    node.list.removeNode(node)
  }

  var head = this.head
  node.list = this
  node.next = head
  if (head) {
    head.prev = node
  }

  this.head = node
  if (!this.tail) {
    this.tail = node
  }
  this.length++
}

Yallist.prototype.pushNode = function (node) {
  if (node === this.tail) {
    return
  }

  if (node.list) {
    node.list.removeNode(node)
  }

  var tail = this.tail
  node.list = this
  node.prev = tail
  if (tail) {
    tail.next = node
  }

  this.tail = node
  if (!this.head) {
    this.head = node
  }
  this.length++
}

Yallist.prototype.push = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    push(this, arguments[i])
  }
  return this.length
}

Yallist.prototype.unshift = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    unshift(this, arguments[i])
  }
  return this.length
}

Yallist.prototype.pop = function () {
  if (!this.tail) {
    return undefined
  }

  var res = this.tail.value
  this.tail = this.tail.prev
  if (this.tail) {
    this.tail.next = null
  } else {
    this.head = null
  }
  this.length--
  return res
}

Yallist.prototype.shift = function () {
  if (!this.head) {
    return undefined
  }

  var res = this.head.value
  this.head = this.head.next
  if (this.head) {
    this.head.prev = null
  } else {
    this.tail = null
  }
  this.length--
  return res
}

Yallist.prototype.forEach = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this.head, i = 0; walker !== null; i++) {
    fn.call(thisp, walker.value, i, this)
    walker = walker.next
  }
}

Yallist.prototype.forEachReverse = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {
    fn.call(thisp, walker.value, i, this)
    walker = walker.prev
  }
}

Yallist.prototype.get = function (n) {
  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.next
  }
  if (i === n && walker !== null) {
    return walker.value
  }
}

Yallist.prototype.getReverse = function (n) {
  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.prev
  }
  if (i === n && walker !== null) {
    return walker.value
  }
}

Yallist.prototype.map = function (fn, thisp) {
  thisp = thisp || this
  var res = new Yallist()
  for (var walker = this.head; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this))
    walker = walker.next
  }
  return res
}

Yallist.prototype.mapReverse = function (fn, thisp) {
  thisp = thisp || this
  var res = new Yallist()
  for (var walker = this.tail; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this))
    walker = walker.prev
  }
  return res
}

Yallist.prototype.reduce = function (fn, initial) {
  var acc
  var walker = this.head
  if (arguments.length > 1) {
    acc = initial
  } else if (this.head) {
    walker = this.head.next
    acc = this.head.value
  } else {
    throw new TypeError('Reduce of empty list with no initial value')
  }

  for (var i = 0; walker !== null; i++) {
    acc = fn(acc, walker.value, i)
    walker = walker.next
  }

  return acc
}

Yallist.prototype.reduceReverse = function (fn, initial) {
  var acc
  var walker = this.tail
  if (arguments.length > 1) {
    acc = initial
  } else if (this.tail) {
    walker = this.tail.prev
    acc = this.tail.value
  } else {
    throw new TypeError('Reduce of empty list with no initial value')
  }

  for (var i = this.length - 1; walker !== null; i--) {
    acc = fn(acc, walker.value, i)
    walker = walker.prev
  }

  return acc
}

Yallist.prototype.toArray = function () {
  var arr = new Array(this.length)
  for (var i = 0, walker = this.head; walker !== null; i++) {
    arr[i] = walker.value
    walker = walker.next
  }
  return arr
}

Yallist.prototype.toArrayReverse = function () {
  var arr = new Array(this.length)
  for (var i = 0, walker = this.tail; walker !== null; i++) {
    arr[i] = walker.value
    walker = walker.prev
  }
  return arr
}

Yallist.prototype.slice = function (from, to) {
  to = to || this.length
  if (to < 0) {
    to += this.length
  }
  from = from || 0
  if (from < 0) {
    from += this.length
  }
  var ret = new Yallist()
  if (to < from || to < 0) {
    return ret
  }
  if (from < 0) {
    from = 0
  }
  if (to > this.length) {
    to = this.length
  }
  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {
    walker = walker.next
  }
  for (; walker !== null && i < to; i++, walker = walker.next) {
    ret.push(walker.value)
  }
  return ret
}

Yallist.prototype.sliceReverse = function (from, to) {
  to = to || this.length
  if (to < 0) {
    to += this.length
  }
  from = from || 0
  if (from < 0) {
    from += this.length
  }
  var ret = new Yallist()
  if (to < from || to < 0) {
    return ret
  }
  if (from < 0) {
    from = 0
  }
  if (to > this.length) {
    to = this.length
  }
  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {
    walker = walker.prev
  }
  for (; walker !== null && i > from; i--, walker = walker.prev) {
    ret.push(walker.value)
  }
  return ret
}

Yallist.prototype.splice = function (start, deleteCount, ...nodes) {
  if (start > this.length) {
    start = this.length - 1
  }
  if (start < 0) {
    start = this.length + start;
  }

  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {
    walker = walker.next
  }

  var ret = []
  for (var i = 0; walker && i < deleteCount; i++) {
    ret.push(walker.value)
    walker = this.removeNode(walker)
  }
  if (walker === null) {
    walker = this.tail
  }

  if (walker !== this.head && walker !== this.tail) {
    walker = walker.prev
  }

  for (var i = 0; i < nodes.length; i++) {
    walker = insert(this, walker, nodes[i])
  }
  return ret;
}

Yallist.prototype.reverse = function () {
  var head = this.head
  var tail = this.tail
  for (var walker = head; walker !== null; walker = walker.prev) {
    var p = walker.prev
    walker.prev = walker.next
    walker.next = p
  }
  this.head = tail
  this.tail = head
  return this
}

function insert (self, node, value) {
  var inserted = node === self.head ?
    new Node(value, null, node, self) :
    new Node(value, node, node.next, self)

  if (inserted.next === null) {
    self.tail = inserted
  }
  if (inserted.prev === null) {
    self.head = inserted
  }

  self.length++

  return inserted
}

function push (self, item) {
  self.tail = new Node(item, self.tail, null, self)
  if (!self.head) {
    self.head = self.tail
  }
  self.length++
}

function unshift (self, item) {
  self.head = new Node(item, null, self.head, self)
  if (!self.tail) {
    self.tail = self.head
  }
  self.length++
}

function Node (value, prev, next, list) {
  if (!(this instanceof Node)) {
    return new Node(value, prev, next, list)
  }

  this.list = list
  this.value = value

  if (prev) {
    prev.next = this
    this.prev = prev
  } else {
    this.prev = null
  }

  if (next) {
    next.prev = this
    this.next = next
  } else {
    this.next = null
  }
}

try {
  // add if support for Symbol.iterator is present
  __nccwpck_require__(4091)(Yallist)
} catch (er) {}


/***/ }),

/***/ 6581:
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 6581;
module.exports = webpackEmptyAsyncContext;

/***/ }),

/***/ 7932:
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 7932;
module.exports = webpackEmptyAsyncContext;

/***/ }),

/***/ 9491:
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ 4300:
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ 2081:
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ 6113:
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ 9523:
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ 2361:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 7147:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 3685:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 5687:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 8188:
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ 1808:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 8061:
/***/ ((module) => {

"use strict";
module.exports = require("node:assert");

/***/ }),

/***/ 2254:
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ 7718:
/***/ ((module) => {

"use strict";
module.exports = require("node:child_process");

/***/ }),

/***/ 7561:
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ 3977:
/***/ ((module) => {

"use strict";
module.exports = require("node:fs/promises");

/***/ }),

/***/ 8849:
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ 2286:
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ 2033:
/***/ ((module) => {

"use strict";
module.exports = require("node:module");

/***/ }),

/***/ 7503:
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ 612:
/***/ ((module) => {

"use strict";
module.exports = require("node:os");

/***/ }),

/***/ 9411:
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ 7742:
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ 4492:
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ 2477:
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ 1041:
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ 7261:
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ 3858:
/***/ ((module) => {

"use strict";
module.exports = require("node:v8");

/***/ }),

/***/ 5628:
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ 2037:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 1017:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 4074:
/***/ ((module) => {

"use strict";
module.exports = require("perf_hooks");

/***/ }),

/***/ 7282:
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ 2781:
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ 1576:
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ 4404:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 6224:
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ 7310:
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ 3837:
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ 4655:
/***/ ((module) => {

"use strict";
module.exports = require("v8");

/***/ }),

/***/ 6144:
/***/ ((module) => {

"use strict";
module.exports = require("vm");

/***/ }),

/***/ 1267:
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ 9796:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ 2895:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


function clamp(n, min, max) {
  return Math.min(max, Math.max(min, n));
}
function sum(...args) {
  return flattenArrayable(args).reduce((a, b) => a + b, 0);
}
function lerp(min, max, t) {
  const interpolation = clamp(t, 0, 1);
  return min + (max - min) * interpolation;
}
function remap(n, inMin, inMax, outMin, outMax) {
  const interpolation = (n - inMin) / (inMax - inMin);
  return lerp(outMin, outMax, interpolation);
}

function toArray(array) {
  array = array ?? [];
  return Array.isArray(array) ? array : [array];
}
function flattenArrayable(array) {
  return toArray(array).flat(1);
}
function mergeArrayable(...args) {
  return args.flatMap((i) => toArray(i));
}
function partition(array, ...filters) {
  const result = new Array(filters.length + 1).fill(null).map(() => []);
  array.forEach((e, idx, arr) => {
    let i = 0;
    for (const filter of filters) {
      if (filter(e, idx, arr)) {
        result[i].push(e);
        return;
      }
      i += 1;
    }
    result[i].push(e);
  });
  return result;
}
function uniq(array) {
  return Array.from(new Set(array));
}
function uniqueBy(array, equalFn) {
  return array.reduce((acc, cur) => {
    const index = acc.findIndex((item) => equalFn(cur, item));
    if (index === -1)
      acc.push(cur);
    return acc;
  }, []);
}
function last(array) {
  return at(array, -1);
}
function remove(array, value) {
  if (!array)
    return false;
  const index = array.indexOf(value);
  if (index >= 0) {
    array.splice(index, 1);
    return true;
  }
  return false;
}
function at(array, index) {
  const len = array.length;
  if (!len)
    return void 0;
  if (index < 0)
    index += len;
  return array[index];
}
function range(...args) {
  let start, stop, step;
  if (args.length === 1) {
    start = 0;
    step = 1;
    [stop] = args;
  } else {
    [start, stop, step = 1] = args;
  }
  const arr = [];
  let current = start;
  while (current < stop) {
    arr.push(current);
    current += step || 1;
  }
  return arr;
}
function move(arr, from, to) {
  arr.splice(to, 0, arr.splice(from, 1)[0]);
  return arr;
}
function clampArrayRange(n, arr) {
  return clamp(n, 0, arr.length - 1);
}
function sample(arr, quantity) {
  return Array.from({ length: quantity }, (_) => arr[Math.round(Math.random() * (arr.length - 1))]);
}
function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

function assert(condition, message) {
  if (!condition)
    throw new Error(message);
}
const toString = (v) => Object.prototype.toString.call(v);
function getTypeName(v) {
  if (v === null)
    return "null";
  const type = toString(v).slice(8, -1).toLowerCase();
  return typeof v === "object" || typeof v === "function" ? type : typeof v;
}
function noop() {
}

function notNullish(v) {
  return v != null;
}
function noNull(v) {
  return v !== null;
}
function notUndefined(v) {
  return v !== void 0;
}
function isTruthy(v) {
  return Boolean(v);
}

const isDef = (val) => typeof val !== "undefined";
const isBoolean = (val) => typeof val === "boolean";
const isFunction = (val) => typeof val === "function";
const isNumber = (val) => typeof val === "number";
const isString = (val) => typeof val === "string";
const isObject = (val) => toString(val) === "[object Object]";
const isUndefined = (val) => toString(val) === "[object Undefined]";
const isNull = (val) => toString(val) === "[object Null]";
const isRegExp = (val) => toString(val) === "[object RegExp]";
const isDate = (val) => toString(val) === "[object Date]";
const isWindow = (val) => typeof window !== "undefined" && toString(val) === "[object Window]";
const isBrowser = typeof window !== "undefined";

function slash(str) {
  return str.replace(/\\/g, "/");
}
function ensurePrefix(prefix, str) {
  if (!str.startsWith(prefix))
    return prefix + str;
  return str;
}
function ensureSuffix(suffix, str) {
  if (!str.endsWith(suffix))
    return str + suffix;
  return str;
}
function template(str, ...args) {
  const [firstArg, fallback] = args;
  if (isObject(firstArg)) {
    const vars = firstArg;
    return str.replace(/{([\w\d]+)}/g, (_, key) => vars[key] || ((typeof fallback === "function" ? fallback(key) : fallback) ?? key));
  } else {
    return str.replace(/{(\d+)}/g, (_, key) => {
      const index = Number(key);
      if (Number.isNaN(index))
        return key;
      return args[index];
    });
  }
}
const urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
function randomStr(size = 16, dict = urlAlphabet) {
  let id = "";
  let i = size;
  const len = dict.length;
  while (i--)
    id += dict[Math.random() * len | 0];
  return id;
}
function capitalize(str) {
  return str[0].toUpperCase() + str.slice(1).toLowerCase();
}

const timestamp = () => +Date.now();

function batchInvoke(functions) {
  functions.forEach((fn) => fn && fn());
}
function invoke(fn) {
  return fn();
}
function tap(value, callback) {
  callback(value);
  return value;
}

function objectMap(obj, fn) {
  return Object.fromEntries(
    Object.entries(obj).map(([k, v]) => fn(k, v)).filter(notNullish)
  );
}
function isKeyOf(obj, k) {
  return k in obj;
}
function objectKeys(obj) {
  return Object.keys(obj);
}
function objectEntries(obj) {
  return Object.entries(obj);
}
function deepMerge(target, ...sources) {
  if (!sources.length)
    return target;
  const source = sources.shift();
  if (source === void 0)
    return target;
  if (isMergableObject(target) && isMergableObject(source)) {
    objectKeys(source).forEach((key) => {
      if (key === "__proto__" || key === "constructor" || key === "prototype")
        return;
      if (isMergableObject(source[key])) {
        if (!target[key])
          target[key] = {};
        if (isMergableObject(target[key])) {
          deepMerge(target[key], source[key]);
        } else {
          target[key] = source[key];
        }
      } else {
        target[key] = source[key];
      }
    });
  }
  return deepMerge(target, ...sources);
}
function deepMergeWithArray(target, ...sources) {
  if (!sources.length)
    return target;
  const source = sources.shift();
  if (source === void 0)
    return target;
  if (Array.isArray(target) && Array.isArray(source))
    target.push(...source);
  if (isMergableObject(target) && isMergableObject(source)) {
    objectKeys(source).forEach((key) => {
      if (key === "__proto__" || key === "constructor" || key === "prototype")
        return;
      if (Array.isArray(source[key])) {
        if (!target[key])
          target[key] = [];
        deepMergeWithArray(target[key], source[key]);
      } else if (isMergableObject(source[key])) {
        if (!target[key])
          target[key] = {};
        deepMergeWithArray(target[key], source[key]);
      } else {
        target[key] = source[key];
      }
    });
  }
  return deepMergeWithArray(target, ...sources);
}
function isMergableObject(item) {
  return isObject(item) && !Array.isArray(item);
}
function objectPick(obj, keys, omitUndefined = false) {
  return keys.reduce((n, k) => {
    if (k in obj) {
      if (!omitUndefined || obj[k] !== void 0)
        n[k] = obj[k];
    }
    return n;
  }, {});
}
function clearUndefined(obj) {
  Object.keys(obj).forEach((key) => obj[key] === void 0 ? delete obj[key] : {});
  return obj;
}
function hasOwnProperty(obj, v) {
  if (obj == null)
    return false;
  return Object.prototype.hasOwnProperty.call(obj, v);
}

function createSingletonPromise(fn) {
  let _promise;
  function wrapper() {
    if (!_promise)
      _promise = fn();
    return _promise;
  }
  wrapper.reset = async () => {
    const _prev = _promise;
    _promise = void 0;
    if (_prev)
      await _prev;
  };
  return wrapper;
}
function sleep(ms, callback) {
  return new Promise(
    (resolve) => setTimeout(async () => {
      await (callback == null ? void 0 : callback());
      resolve();
    }, ms)
  );
}
function createPromiseLock() {
  const locks = [];
  return {
    async run(fn) {
      const p = fn();
      locks.push(p);
      try {
        return await p;
      } finally {
        remove(locks, p);
      }
    },
    async wait() {
      await Promise.allSettled(locks);
    },
    isWaiting() {
      return Boolean(locks.length);
    },
    clear() {
      locks.length = 0;
    }
  };
}
function createControlledPromise() {
  let resolve, reject;
  const promise = new Promise((_resolve, _reject) => {
    resolve = _resolve;
    reject = _reject;
  });
  promise.resolve = resolve;
  promise.reject = reject;
  return promise;
}

/* eslint-disable no-undefined,no-param-reassign,no-shadow */

/**
 * Throttle execution of a function. Especially useful for rate limiting
 * execution of handlers on events like resize and scroll.
 *
 * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)
 *                                            are most useful.
 * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,
 *                                            as-is, to `callback` when the throttled-function is executed.
 * @param {object} [options] -              An object to configure options.
 * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds
 *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed
 *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for
 *                                            `delay` milliseconds, the internal counter is reset).
 * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback
 *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that
 *                                            callback will never executed if both noLeading = true and noTrailing = true.
 * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is
 *                                            false (at end), schedule `callback` to execute after `delay` ms.
 *
 * @returns {Function} A new, throttled, function.
 */
function throttle (delay, callback, options) {
  var _ref = options || {},
      _ref$noTrailing = _ref.noTrailing,
      noTrailing = _ref$noTrailing === void 0 ? false : _ref$noTrailing,
      _ref$noLeading = _ref.noLeading,
      noLeading = _ref$noLeading === void 0 ? false : _ref$noLeading,
      _ref$debounceMode = _ref.debounceMode,
      debounceMode = _ref$debounceMode === void 0 ? undefined : _ref$debounceMode;
  /*
   * After wrapper has stopped being called, this timeout ensures that
   * `callback` is executed at the proper times in `throttle` and `end`
   * debounce modes.
   */


  var timeoutID;
  var cancelled = false; // Keep track of the last time `callback` was executed.

  var lastExec = 0; // Function to clear existing timeout

  function clearExistingTimeout() {
    if (timeoutID) {
      clearTimeout(timeoutID);
    }
  } // Function to cancel next exec


  function cancel(options) {
    var _ref2 = options || {},
        _ref2$upcomingOnly = _ref2.upcomingOnly,
        upcomingOnly = _ref2$upcomingOnly === void 0 ? false : _ref2$upcomingOnly;

    clearExistingTimeout();
    cancelled = !upcomingOnly;
  }
  /*
   * The `wrapper` function encapsulates all of the throttling / debouncing
   * functionality and when executed will limit the rate at which `callback`
   * is executed.
   */


  function wrapper() {
    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {
      arguments_[_key] = arguments[_key];
    }

    var self = this;
    var elapsed = Date.now() - lastExec;

    if (cancelled) {
      return;
    } // Execute `callback` and update the `lastExec` timestamp.


    function exec() {
      lastExec = Date.now();
      callback.apply(self, arguments_);
    }
    /*
     * If `debounceMode` is true (at begin) this is used to clear the flag
     * to allow future `callback` executions.
     */


    function clear() {
      timeoutID = undefined;
    }

    if (!noLeading && debounceMode && !timeoutID) {
      /*
       * Since `wrapper` is being called for the first time and
       * `debounceMode` is true (at begin), execute `callback`
       * and noLeading != true.
       */
      exec();
    }

    clearExistingTimeout();

    if (debounceMode === undefined && elapsed > delay) {
      if (noLeading) {
        /*
         * In throttle mode with noLeading, if `delay` time has
         * been exceeded, update `lastExec` and schedule `callback`
         * to execute after `delay` ms.
         */
        lastExec = Date.now();

        if (!noTrailing) {
          timeoutID = setTimeout(debounceMode ? clear : exec, delay);
        }
      } else {
        /*
         * In throttle mode without noLeading, if `delay` time has been exceeded, execute
         * `callback`.
         */
        exec();
      }
    } else if (noTrailing !== true) {
      /*
       * In trailing throttle mode, since `delay` time has not been
       * exceeded, schedule `callback` to execute `delay` ms after most
       * recent execution.
       *
       * If `debounceMode` is true (at begin), schedule `clear` to execute
       * after `delay` ms.
       *
       * If `debounceMode` is false (at end), schedule `callback` to
       * execute after `delay` ms.
       */
      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);
    }
  }

  wrapper.cancel = cancel; // Return the wrapper function.

  return wrapper;
}

/* eslint-disable no-undefined */
/**
 * Debounce execution of a function. Debouncing, unlike throttling,
 * guarantees that a function is only executed a single time, either at the
 * very beginning of a series of calls, or at the very end.
 *
 * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                        to `callback` when the debounced-function is executed.
 * @param {object} [options] -           An object to configure options.
 * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds
 *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.
 *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).
 *
 * @returns {Function} A new, debounced function.
 */

function debounce (delay, callback, options) {
  var _ref = options || {},
      _ref$atBegin = _ref.atBegin,
      atBegin = _ref$atBegin === void 0 ? false : _ref$atBegin;

  return throttle(delay, callback, {
    debounceMode: atBegin !== false
  });
}

/*
How it works:
`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.
*/

class Node {
	value;
	next;

	constructor(value) {
		this.value = value;
	}
}

class Queue {
	#head;
	#tail;
	#size;

	constructor() {
		this.clear();
	}

	enqueue(value) {
		const node = new Node(value);

		if (this.#head) {
			this.#tail.next = node;
			this.#tail = node;
		} else {
			this.#head = node;
			this.#tail = node;
		}

		this.#size++;
	}

	dequeue() {
		const current = this.#head;
		if (!current) {
			return;
		}

		this.#head = this.#head.next;
		this.#size--;
		return current.value;
	}

	clear() {
		this.#head = undefined;
		this.#tail = undefined;
		this.#size = 0;
	}

	get size() {
		return this.#size;
	}

	* [Symbol.iterator]() {
		let current = this.#head;

		while (current) {
			yield current.value;
			current = current.next;
		}
	}
}

function pLimit(concurrency) {
	if (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {
		throw new TypeError('Expected `concurrency` to be a number from 1 and up');
	}

	const queue = new Queue();
	let activeCount = 0;

	const next = () => {
		activeCount--;

		if (queue.size > 0) {
			queue.dequeue()();
		}
	};

	const run = async (fn, resolve, args) => {
		activeCount++;

		const result = (async () => fn(...args))();

		resolve(result);

		try {
			await result;
		} catch {}

		next();
	};

	const enqueue = (fn, resolve, args) => {
		queue.enqueue(run.bind(undefined, fn, resolve, args));

		(async () => {
			// This function needs to wait until the next microtask before comparing
			// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously
			// when the run function is dequeued and called. The comparison in the if-statement
			// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.
			await Promise.resolve();

			if (activeCount < concurrency && queue.size > 0) {
				queue.dequeue()();
			}
		})();
	};

	const generator = (fn, ...args) => new Promise(resolve => {
		enqueue(fn, resolve, args);
	});

	Object.defineProperties(generator, {
		activeCount: {
			get: () => activeCount,
		},
		pendingCount: {
			get: () => queue.size,
		},
		clearQueue: {
			value: () => {
				queue.clear();
			},
		},
	});

	return generator;
}

const VOID = Symbol("p-void");
class PInstance extends Promise {
  constructor(items = [], options) {
    super(() => {
    });
    this.items = items;
    this.options = options;
    this.promises = /* @__PURE__ */ new Set();
  }
  get promise() {
    var _a;
    let batch;
    const items = [...Array.from(this.items), ...Array.from(this.promises)];
    if ((_a = this.options) == null ? void 0 : _a.concurrency) {
      const limit = pLimit(this.options.concurrency);
      batch = Promise.all(items.map((p2) => limit(() => p2)));
    } else {
      batch = Promise.all(items);
    }
    return batch.then((l) => l.filter((i) => i !== VOID));
  }
  add(...args) {
    args.forEach((i) => {
      this.promises.add(i);
    });
  }
  map(fn) {
    return new PInstance(
      Array.from(this.items).map(async (i, idx) => {
        const v = await i;
        if (v === VOID)
          return VOID;
        return fn(v, idx);
      }),
      this.options
    );
  }
  filter(fn) {
    return new PInstance(
      Array.from(this.items).map(async (i, idx) => {
        const v = await i;
        const r = await fn(v, idx);
        if (!r)
          return VOID;
        return v;
      }),
      this.options
    );
  }
  forEach(fn) {
    return this.map(fn).then();
  }
  reduce(fn, initialValue) {
    return this.promise.then((array) => array.reduce(fn, initialValue));
  }
  clear() {
    this.promises.clear();
  }
  then(fn) {
    const p2 = this.promise;
    if (fn)
      return p2.then(fn);
    else
      return p2;
  }
  catch(fn) {
    return this.promise.catch(fn);
  }
  finally(fn) {
    return this.promise.finally(fn);
  }
}
function p(items, options) {
  return new PInstance(items, options);
}

exports.assert = assert;
exports.at = at;
exports.batchInvoke = batchInvoke;
exports.capitalize = capitalize;
exports.clamp = clamp;
exports.clampArrayRange = clampArrayRange;
exports.clearUndefined = clearUndefined;
exports.createControlledPromise = createControlledPromise;
exports.createPromiseLock = createPromiseLock;
exports.createSingletonPromise = createSingletonPromise;
exports.debounce = debounce;
exports.deepMerge = deepMerge;
exports.deepMergeWithArray = deepMergeWithArray;
exports.ensurePrefix = ensurePrefix;
exports.ensureSuffix = ensureSuffix;
exports.flattenArrayable = flattenArrayable;
exports.getTypeName = getTypeName;
exports.hasOwnProperty = hasOwnProperty;
exports.invoke = invoke;
exports.isBoolean = isBoolean;
exports.isBrowser = isBrowser;
exports.isDate = isDate;
exports.isDef = isDef;
exports.isFunction = isFunction;
exports.isKeyOf = isKeyOf;
exports.isNull = isNull;
exports.isNumber = isNumber;
exports.isObject = isObject;
exports.isRegExp = isRegExp;
exports.isString = isString;
exports.isTruthy = isTruthy;
exports.isUndefined = isUndefined;
exports.isWindow = isWindow;
exports.last = last;
exports.lerp = lerp;
exports.mergeArrayable = mergeArrayable;
exports.move = move;
exports.noNull = noNull;
exports.noop = noop;
exports.notNullish = notNullish;
exports.notUndefined = notUndefined;
exports.objectEntries = objectEntries;
exports.objectKeys = objectKeys;
exports.objectMap = objectMap;
exports.objectPick = objectPick;
exports.p = p;
exports.partition = partition;
exports.randomStr = randomStr;
exports.range = range;
exports.remap = remap;
exports.remove = remove;
exports.sample = sample;
exports.shuffle = shuffle;
exports.slash = slash;
exports.sleep = sleep;
exports.sum = sum;
exports.tap = tap;
exports.template = template;
exports.throttle = throttle;
exports.timestamp = timestamp;
exports.toArray = toArray;
exports.toString = toString;
exports.uniq = uniq;
exports.uniqueBy = uniqueBy;


/***/ }),

/***/ 5186:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const semver = __nccwpck_require__(5251);
__nccwpck_require__(4550);
__nccwpck_require__(4734);
__nccwpck_require__(7326);
__nccwpck_require__(1017);
__nccwpck_require__(5211);
__nccwpck_require__(6039);
__nccwpck_require__(7147);
__nccwpck_require__(1682);
__nccwpck_require__(2173);



exports.bumpVersion = semver.bumpVersion;
exports.determineSemverChange = semver.determineSemverChange;
exports.generateMarkDown = semver.generateMarkDown;
exports.getCurrentGitBranch = semver.getCurrentGitBranch;
exports.getCurrentGitRef = semver.getCurrentGitRef;
exports.getCurrentGitTag = semver.getCurrentGitTag;
exports.getGitDiff = semver.getGitDiff;
exports.getLastGitTag = semver.getLastGitTag;
exports.loadChangelogConfig = semver.loadChangelogConfig;
exports.parseCommits = semver.parseCommits;
exports.parseGitCommit = semver.parseGitCommit;


/***/ }),

/***/ 5251:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const scule = __nccwpck_require__(4550);
const convertGitmoji = __nccwpck_require__(4734);
const nodeFetchNative = __nccwpck_require__(7326);
const path = __nccwpck_require__(1017);
const c12 = __nccwpck_require__(5211);
const pkgTypes = __nccwpck_require__(6039);
const fs = __nccwpck_require__(7147);
const semver = __nccwpck_require__(1682);
const consola = __nccwpck_require__(2173);

async function getLastGitTag() {
  const r = await execCommand("git", ["--no-pager", "tag", "-l", "--sort=creatordate"]).then((r2) => r2.split("\n"));
  return r[r.length - 1];
}
async function getCurrentGitBranch() {
  return await execCommand("git", ["rev-parse", "--abbrev-ref", "HEAD"]);
}
async function getCurrentGitTag() {
  return await execCommand("git", ["tag", "--points-at", "HEAD"]);
}
async function getCurrentGitRef() {
  return await getCurrentGitTag() || await getCurrentGitBranch();
}
async function getGitDiff(from, to = "HEAD") {
  const r = await execCommand("git", ["--no-pager", "log", `${from ? `${from}...` : ""}${to}`, '--pretty="----%n%s|%h|%an|%ae%n%b"', "--name-status"]);
  return r.split("----\n").splice(1).map((line) => {
    const [firstLine, ..._body] = line.split("\n");
    const [message, shortHash, authorName, authorEmail] = firstLine.split("|");
    const r2 = {
      message,
      shortHash,
      author: { name: authorName, email: authorEmail },
      body: _body.join("\n")
    };
    return r2;
  });
}
function parseCommits(commits, config) {
  return commits.map((commit) => parseGitCommit(commit, config)).filter(Boolean);
}
const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
const CoAuthoredByRegex = /Co-authored-by:\s*(?<name>.+)(<(?<email>.+)>)/gmi;
const PullRequestRE = /\([a-z ]*(#[0-9]+)\s*\)/gm;
const IssueRE = /(#[0-9]+)/gm;
function parseGitCommit(commit, config) {
  const match = commit.message.match(ConventionalCommitRegex);
  if (!match) {
    return null;
  }
  const type = match.groups.type;
  let scope = match.groups.scope || "";
  scope = config.scopeMap[scope] || scope;
  const isBreaking = Boolean(match.groups.breaking);
  let description = match.groups.description;
  const references = [];
  for (const m of description.matchAll(PullRequestRE)) {
    references.push({ type: "pull-request", value: m[1] });
  }
  for (const m of description.matchAll(IssueRE)) {
    if (!references.find((i) => i.value === m[1])) {
      references.push({ type: "issue", value: m[1] });
    }
  }
  references.push({ value: commit.shortHash, type: "hash" });
  description = description.replace(PullRequestRE, "").trim();
  const authors = [commit.author];
  for (const match2 of commit.body.matchAll(CoAuthoredByRegex)) {
    authors.push({
      name: (match2.groups.name || "").trim(),
      email: (match2.groups.email || "").trim()
    });
  }
  return {
    ...commit,
    authors,
    description,
    type,
    scope,
    references,
    isBreaking
  };
}
async function execCommand(cmd, args) {
  const { execa } = await Promise.all(/* import() */[__nccwpck_require__.e(703), __nccwpck_require__.e(977)]).then(__nccwpck_require__.bind(__nccwpck_require__, 8977));
  const res = await execa(cmd, args);
  return res.stdout;
}

async function generateMarkDown(commits, config) {
  const typeGroups = groupBy(commits, "type");
  const markdown = [];
  const breakingChanges = [];
  const v = config.newVersion && `v${config.newVersion}`;
  markdown.push(
    "",
    "## " + (v || `${config.from}...${config.to}`),
    ""
  );
  if (config.github) {
    markdown.push(`[compare changes](https://github.com/${config.github}/compare/${config.from}...${v || config.to})`, "");
  }
  for (const type in config.types) {
    const group = typeGroups[type];
    if (!group || !group.length) {
      continue;
    }
    markdown.push("", "### " + config.types[type].title, "");
    for (const commit of group.reverse()) {
      const line = formatCommit(commit, config);
      markdown.push(line);
      if (commit.isBreaking) {
        breakingChanges.push(line);
      }
    }
  }
  if (breakingChanges.length) {
    markdown.push(
      "",
      "#### \u26A0\uFE0F  Breaking Changes",
      "",
      ...breakingChanges
    );
  }
  const _authors = /* @__PURE__ */ new Map();
  for (const commit of commits) {
    if (!commit.author) {
      continue;
    }
    const name = formatName(commit.author.name);
    if (!name || name.includes("[bot]")) {
      continue;
    }
    if (!_authors.has(name)) {
      _authors.set(name, { email: /* @__PURE__ */ new Set([commit.author.email]) });
    } else {
      const entry = _authors.get(name);
      entry.email.add(commit.author.email);
    }
  }
  await Promise.all(Array.from(_authors.keys()).map(async (authorName) => {
    const meta = _authors.get(authorName);
    for (const email of meta.email) {
      const { user } = await nodeFetchNative.fetch(`https://ungh.unjs.io/user/find/${email}`).then((r) => r.json()).catch(() => ({ user: null }));
      if (user) {
        meta.github = user.username;
        break;
      }
    }
  }));
  const authors = Array.from(_authors.entries()).map((e) => ({ name: e[0], ...e[1] }));
  if (authors.length) {
    markdown.push(
      "",
      "### \u2764\uFE0F  Contributors",
      "",
      ...authors.map((i) => {
        const _email = Array.from(i.email).filter((e) => !e.includes("noreply.github.com"))[0];
        const email = _email ? `<${_email}>` : "";
        const github = i.github ? `([@${i.github}](http://github.com/${i.github}))` : "";
        return `- ${i.name} ${github || email}`;
      })
    );
  }
  return convertGitmoji.convert(markdown.join("\n").trim(), true);
}
function formatCommit(commit, config) {
  return "  - " + (commit.scope ? `**${commit.scope.trim()}:** ` : "") + (commit.isBreaking ? "\u26A0\uFE0F  " : "") + scule.upperFirst(commit.description) + formatReferences(commit.references, config);
}
const refTypeMap = {
  "pull-request": "pull",
  hash: "commit",
  issue: "ssue"
};
function formatReference(ref, config) {
  if (!config.github) {
    return ref.value;
  }
  return `[${ref.value}](https://github.com/${config.github}/${refTypeMap[ref.type]}/${ref.value.replace(/^#/, "")})`;
}
function formatReferences(references, config) {
  const pr = references.filter((ref) => ref.type === "pull-request");
  const issue = references.filter((ref) => ref.type === "issue");
  if (pr.length || issue.length) {
    return " (" + [...pr, ...issue].map((ref) => formatReference(ref, config)).join(", ") + ")";
  }
  if (references.length) {
    return " (" + formatReference(references[0], config) + ")";
  }
  return "";
}
function formatName(name = "") {
  return name.split(" ").map((p) => scule.upperFirst(p.trim())).join(" ");
}
function groupBy(items, key) {
  const groups = {};
  for (const item of items) {
    groups[item[key]] = groups[item[key]] || [];
    groups[item[key]].push(item);
  }
  return groups;
}

const ConfigDefaults = {
  types: {
    feat: { title: "\u{1F680} Enhancements", semver: "minor" },
    perf: { title: "\u{1F525} Performance", semver: "patch" },
    fix: { title: "\u{1FA79} Fixes", semver: "patch" },
    refactor: { title: "\u{1F485} Refactors", semver: "patch" },
    docs: { title: "\u{1F4D6} Documentation", semver: "patch" },
    build: { title: "\u{1F4E6} Build", semver: "patch" },
    types: { title: "\u{1F30A} Types", semver: "patch" },
    chore: { title: "\u{1F3E1} Chore" },
    examples: { title: "\u{1F3C0} Examples" },
    test: { title: "\u2705 Tests" },
    style: { title: "\u{1F3A8} Styles" },
    ci: { title: "\u{1F916} CI" }
  },
  cwd: null,
  github: "",
  from: "",
  to: "",
  output: "CHANGELOG.md",
  scopeMap: {}
};
async function loadChangelogConfig(cwd, overrides) {
  const { config } = await c12.loadConfig({
    cwd,
    name: "changelog",
    defaults: ConfigDefaults,
    overrides: {
      cwd,
      ...overrides
    }
  });
  if (!config.from) {
    config.from = await getLastGitTag();
  }
  if (!config.to) {
    config.to = await getCurrentGitRef();
  }
  if (!config.output) {
    config.output = false;
  } else if (config.output) {
    config.output = config.output === true ? ConfigDefaults.output : path.resolve(cwd, config.output);
  }
  if (!config.github) {
    const pkg = await pkgTypes.readPackageJSON(cwd).catch(() => {
    });
    if (pkg && pkg.repository) {
      const repo = typeof pkg.repository === "string" ? pkg.repository : pkg.repository.url;
      if (/^[\w]+\/[\w]+$/.test(repo)) {
        config.github = repo;
      }
    }
  }
  return config;
}

function determineSemverChange(commits, config) {
  let [hasMajor, hasMinor, hasPatch] = [false, false, false];
  for (const commit of commits) {
    const semverType = config.types[commit.type]?.semver;
    if (semverType === "major" || commit.isBreaking) {
      hasMajor = true;
    } else if (semverType === "minor") {
      hasMinor = true;
    } else if (semverType === "patch") {
      hasPatch = true;
    }
  }
  return hasMajor ? "major" : hasMinor ? "minor" : hasPatch ? "patch" : null;
}
async function bumpVersion(commits, config) {
  let type = determineSemverChange(commits, config);
  const originalType = type;
  const pkgPath = path.resolve(config.cwd, "package.json");
  const pkg = JSON.parse(await fs.promises.readFile(pkgPath, "utf8").catch(() => "{}")) || {};
  const currentVersion = pkg.version || "0.0.0";
  if (currentVersion.startsWith("0.")) {
    if (type === "major") {
      type = "minor";
    } else if (type === "minor") {
      type = "patch";
    }
  }
  if (config.newVersion) {
    pkg.version = config.newVersion;
  } else if (type) {
    pkg.version = semver.inc(currentVersion, type);
    config.newVersion = pkg.version;
  }
  if (pkg.version === currentVersion) {
    return false;
  }
  consola.info(`Bumping version from ${currentVersion} to ${pkg.version} (${originalType})`);
  await fs.promises.writeFile(pkgPath, JSON.stringify(pkg, null, 2) + "\n", "utf8");
  return pkg.version;
}

exports.bumpVersion = bumpVersion;
exports.determineSemverChange = determineSemverChange;
exports.generateMarkDown = generateMarkDown;
exports.getCurrentGitBranch = getCurrentGitBranch;
exports.getCurrentGitRef = getCurrentGitRef;
exports.getCurrentGitTag = getCurrentGitTag;
exports.getGitDiff = getGitDiff;
exports.getLastGitTag = getLastGitTag;
exports.loadChangelogConfig = loadChangelogConfig;
exports.parseCommits = parseCommits;
exports.parseGitCommit = parseGitCommit;


/***/ }),

/***/ 5211:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const fs = __nccwpck_require__(7147);
const pathe = __nccwpck_require__(9915);
const dotenv = __nccwpck_require__(2437);
const os = __nccwpck_require__(2037);
const createJiti = __nccwpck_require__(8381);
const rc9 = __nccwpck_require__(3110);
const defu = __nccwpck_require__(2933);
const pkgTypes = __nccwpck_require__(6039);

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e["default"] : e; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  const n = Object.create(null);
  if (e) {
    for (const k in e) {
      n[k] = e[k];
    }
  }
  n["default"] = e;
  return n;
}

const dotenv__namespace = /*#__PURE__*/_interopNamespace(dotenv);
const os__default = /*#__PURE__*/_interopDefaultLegacy(os);
const createJiti__default = /*#__PURE__*/_interopDefaultLegacy(createJiti);
const rc9__namespace = /*#__PURE__*/_interopNamespace(rc9);

async function setupDotenv(options) {
  const targetEnv = options.env ?? process.env;
  const env = await loadDotenv({
    cwd: options.cwd,
    fileName: options.fileName ?? ".env",
    env: targetEnv,
    interpolate: options.interpolate ?? true
  });
  for (const key in env) {
    if (!key.startsWith("_") && targetEnv[key] === void 0) {
      targetEnv[key] = env[key];
    }
  }
  return env;
}
async function loadDotenv(opts) {
  const env = /* @__PURE__ */ Object.create(null);
  const dotenvFile = pathe.resolve(opts.cwd, opts.fileName);
  if (fs.existsSync(dotenvFile)) {
    const parsed = dotenv__namespace.parse(await fs.promises.readFile(dotenvFile, "utf-8"));
    Object.assign(env, parsed);
  }
  if (!opts.env._applied) {
    Object.assign(env, opts.env);
    env._applied = true;
  }
  if (opts.interpolate) {
    interpolate(env);
  }
  return env;
}
function interpolate(target, source = {}, parse = (v) => v) {
  function getValue(key) {
    return source[key] !== void 0 ? source[key] : target[key];
  }
  function interpolate2(value, parents = []) {
    if (typeof value !== "string") {
      return value;
    }
    const matches = value.match(/(.?\${?(?:[a-zA-Z0-9_:]+)?}?)/g) || [];
    return parse(matches.reduce((newValue, match) => {
      const parts = /(.?)\${?([a-zA-Z0-9_:]+)?}?/g.exec(match);
      const prefix = parts[1];
      let value2, replacePart;
      if (prefix === "\\") {
        replacePart = parts[0];
        value2 = replacePart.replace("\\$", "$");
      } else {
        const key = parts[2];
        replacePart = parts[0].substring(prefix.length);
        if (parents.includes(key)) {
          console.warn(`Please avoid recursive environment variables ( loop: ${parents.join(" > ")} > ${key} )`);
          return "";
        }
        value2 = getValue(key);
        value2 = interpolate2(value2, [...parents, key]);
      }
      return value2 !== void 0 ? newValue.replace(replacePart, value2) : newValue;
    }, value));
  }
  for (const key in target) {
    target[key] = interpolate2(getValue(key));
  }
}

async function loadConfig(opts) {
  opts.cwd = pathe.resolve(process.cwd(), opts.cwd || ".");
  opts.name = opts.name || "config";
  opts.configFile = opts.configFile ?? (opts.name !== "config" ? `${opts.name}.config` : "config");
  opts.rcFile = opts.rcFile ?? `.${opts.name}rc`;
  if (opts.extend !== false) {
    opts.extend = {
      extendKey: "extends",
      ...opts.extend
    };
  }
  opts.jiti = opts.jiti || createJiti__default(null, {
    interopDefault: true,
    requireCache: false,
    esmResolve: true,
    ...opts.jitiOptions
  });
  const r = {
    config: {},
    cwd: opts.cwd,
    configFile: pathe.resolve(opts.cwd, opts.configFile),
    layers: []
  };
  if (opts.dotenv) {
    await setupDotenv({
      cwd: opts.cwd,
      ...opts.dotenv === true ? {} : opts.dotenv
    });
  }
  const { config, configFile } = await resolveConfig(".", opts);
  if (configFile) {
    r.configFile = configFile;
  }
  const configRC = {};
  if (opts.rcFile) {
    if (opts.globalRc) {
      Object.assign(configRC, rc9__namespace.readUser({ name: opts.rcFile, dir: opts.cwd }));
      const workspaceDir = await pkgTypes.findWorkspaceDir(opts.cwd).catch(() => null);
      if (workspaceDir) {
        Object.assign(configRC, rc9__namespace.read({ name: opts.rcFile, dir: workspaceDir }));
      }
    }
    Object.assign(configRC, rc9__namespace.read({ name: opts.rcFile, dir: opts.cwd }));
  }
  r.config = defu.defu(
    opts.overrides,
    config,
    configRC,
    opts.defaultConfig
  );
  if (opts.extend) {
    await extendConfig(r.config, opts);
    r.layers = r.config._layers;
    delete r.config._layers;
    r.config = defu.defu(
      r.config,
      ...r.layers.map((e) => e.config)
    );
  }
  const baseLayers = [
    opts.overrides && { config: opts.overrides, configFile: void 0, cwd: void 0 },
    { config, configFile: opts.configFile, cwd: opts.cwd },
    opts.rcFile && { config: configRC, configFile: opts.rcFile }
  ].filter((l) => l && l.config);
  r.layers = [
    ...baseLayers,
    ...r.layers
  ];
  if (opts.defaults) {
    r.config = defu.defu(r.config, opts.defaults);
  }
  return r;
}
async function extendConfig(config, opts) {
  config._layers = config._layers || [];
  if (!opts.extend) {
    return;
  }
  let keys = opts.extend.extendKey;
  if (typeof keys === "string") {
    keys = [keys];
  }
  const extendSources = [];
  for (const key of keys) {
    extendSources.push(...(Array.isArray(config[key]) ? config[key] : [config[key]]).filter(Boolean));
    delete config[key];
  }
  for (const extendSource of extendSources) {
    if (typeof extendSource !== "string") {
      console.warn(`Cannot extend config from \`${JSON.stringify(extendSource)}\` (which should be a string) in ${opts.cwd}`);
      continue;
    }
    const _config = await resolveConfig(extendSource, opts);
    if (!_config.config) {
      console.warn(`Cannot extend config from \`${extendSource}\` in ${opts.cwd}`);
      continue;
    }
    await extendConfig(_config.config, { ...opts, cwd: _config.cwd });
    config._layers.push(_config);
    if (_config.config._layers) {
      config._layers.push(..._config.config._layers);
      delete _config.config._layers;
    }
  }
}
const GIT_PREFIXES = ["github:", "gitlab:", "bitbucket:", "https://"];
const NPM_PACKAGE_RE = /^(@[a-z0-9-~][a-z0-9-._~]*\/)?[a-z0-9-~][a-z0-9-._~]*$/;
async function resolveConfig(source, opts) {
  if (opts.resolve) {
    const res2 = await opts.resolve(source, opts);
    if (res2) {
      return res2;
    }
  }
  if (GIT_PREFIXES.some((prefix) => source.startsWith(prefix))) {
    const url = new URL(source);
    const subPath = url.pathname.split("/").slice(2).join("/");
    const gitRepo = url.protocol + url.pathname.split("/").slice(0, 2).join("/");
    const tmpdir = pathe.resolve(os__default.tmpdir(), "c12/", gitRepo.replace(/[#:@/\\]/g, "_"));
    await fs.promises.rm(tmpdir, { recursive: true }).catch(() => {
    });
    const gittar = await __nccwpck_require__.e(/* import() */ 575).then(__nccwpck_require__.t.bind(__nccwpck_require__, 575, 19)).then((r) => r.default || r);
    const tarFile = await gittar.fetch(gitRepo);
    await gittar.extract(tarFile, tmpdir);
    source = pathe.resolve(tmpdir, subPath);
  }
  if (NPM_PACKAGE_RE.test(source)) {
    try {
      source = opts.jiti.resolve(source, { paths: [opts.cwd] });
    } catch (_err) {
    }
  }
  const isDir = !pathe.extname(source);
  const cwd = pathe.resolve(opts.cwd, isDir ? source : pathe.dirname(source));
  if (isDir) {
    source = opts.configFile;
  }
  const res = { config: null, cwd };
  try {
    res.configFile = opts.jiti.resolve(pathe.resolve(cwd, source), { paths: [cwd] });
  } catch (_err) {
  }
  if (!fs.existsSync(res.configFile)) {
    return res;
  }
  res.config = opts.jiti(res.configFile);
  if (typeof res.config === "function") {
    res.config = await res.config();
  }
  return res;
}

exports.loadConfig = loadConfig;
exports.loadDotenv = loadDotenv;
exports.setupDotenv = setupDotenv;


/***/ }),

/***/ 9915:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const path = __nccwpck_require__(8291);



exports.basename = path.basename;
exports.delimiter = path.delimiter;
exports.dirname = path.dirname;
exports.extname = path.extname;
exports.format = path.format;
exports.isAbsolute = path.isAbsolute;
exports.join = path.join;
exports.normalize = path.normalize;
exports.normalizeString = path.normalizeString;
exports.parse = path.parse;
exports.relative = path.relative;
exports.resolve = path.resolve;
exports.sep = path.sep;
exports.toNamespacedPath = path.toNamespacedPath;


/***/ }),

/***/ 8291:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


function normalizeWindowsPath(input = "") {
  if (!input || !input.includes("\\")) {
    return input;
  }
  return input.replace(/\\/g, "/");
}

const _UNC_REGEX = /^[\\/]{2}/;
const _IS_ABSOLUTE_RE = /^[\\/](?![\\/])|^[\\/]{2}(?!\.)|^[a-zA-Z]:[\\/]/;
const _DRIVE_LETTER_RE = /^[a-zA-Z]:$/;
const sep = "/";
const delimiter = ":";
const normalize = function(path) {
  if (path.length === 0) {
    return ".";
  }
  path = normalizeWindowsPath(path);
  const isUNCPath = path.match(_UNC_REGEX);
  const isPathAbsolute = isAbsolute(path);
  const trailingSeparator = path[path.length - 1] === "/";
  path = normalizeString(path, !isPathAbsolute);
  if (path.length === 0) {
    if (isPathAbsolute) {
      return "/";
    }
    return trailingSeparator ? "./" : ".";
  }
  if (trailingSeparator) {
    path += "/";
  }
  if (_DRIVE_LETTER_RE.test(path)) {
    path += "/";
  }
  if (isUNCPath) {
    if (!isPathAbsolute) {
      return `//./${path}`;
    }
    return `//${path}`;
  }
  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;
};
const join = function(...args) {
  if (args.length === 0) {
    return ".";
  }
  let joined;
  for (let i = 0; i < args.length; ++i) {
    const arg = args[i];
    if (arg && arg.length > 0) {
      if (joined === void 0) {
        joined = arg;
      } else {
        joined += `/${arg}`;
      }
    }
  }
  if (joined === void 0) {
    return ".";
  }
  return normalize(joined.replace(/\/\/+/g, "/"));
};
const resolve = function(...args) {
  args = args.map((arg) => normalizeWindowsPath(arg));
  let resolvedPath = "";
  let resolvedAbsolute = false;
  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    const path = i >= 0 ? args[i] : process.cwd().replace(/\\/g, "/");
    if (!path || path.length === 0) {
      continue;
    }
    resolvedPath = `${path}/${resolvedPath}`;
    resolvedAbsolute = isAbsolute(path);
  }
  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);
  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {
    return `/${resolvedPath}`;
  }
  return resolvedPath.length > 0 ? resolvedPath : ".";
};
function normalizeString(path, allowAboveRoot) {
  let res = "";
  let lastSegmentLength = 0;
  let lastSlash = -1;
  let dots = 0;
  let char = null;
  for (let i = 0; i <= path.length; ++i) {
    if (i < path.length) {
      char = path[i];
    } else if (char === "/") {
      break;
    } else {
      char = "/";
    }
    if (char === "/") {
      if (lastSlash === i - 1 || dots === 1) ; else if (dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== "." || res[res.length - 2] !== ".") {
          if (res.length > 2) {
            const lastSlashIndex = res.lastIndexOf("/");
            if (lastSlashIndex === -1) {
              res = "";
              lastSegmentLength = 0;
            } else {
              res = res.slice(0, lastSlashIndex);
              lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
            }
            lastSlash = i;
            dots = 0;
            continue;
          } else if (res.length !== 0) {
            res = "";
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          res += res.length > 0 ? "/.." : "..";
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0) {
          res += `/${path.slice(lastSlash + 1, i)}`;
        } else {
          res = path.slice(lastSlash + 1, i);
        }
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (char === "." && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}
const isAbsolute = function(p) {
  return _IS_ABSOLUTE_RE.test(p);
};
const toNamespacedPath = function(p) {
  return normalizeWindowsPath(p);
};
const _EXTNAME_RE = /.(\.[^/.]+)$/;
const extname = function(p) {
  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));
  return match && match[1] || "";
};
const relative = function(from, to) {
  const _from = resolve(from).split("/");
  const _to = resolve(to).split("/");
  for (const segment of [..._from]) {
    if (_to[0] !== segment) {
      break;
    }
    _from.shift();
    _to.shift();
  }
  return [..._from.map(() => ".."), ..._to].join("/");
};
const dirname = function(p) {
  const segments = normalizeWindowsPath(p).replace(/\/$/, "").split("/").slice(0, -1);
  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {
    segments[0] += "/";
  }
  return segments.join("/") || (isAbsolute(p) ? "/" : ".");
};
const format = function(p) {
  const segments = [p.root, p.dir, p.base ?? p.name + p.ext].filter(Boolean);
  return normalizeWindowsPath(p.root ? resolve(...segments) : segments.join("/"));
};
const basename = function(p, ext) {
  const lastSegment = normalizeWindowsPath(p).split("/").pop();
  return ext && lastSegment.endsWith(ext) ? lastSegment.slice(0, -ext.length) : lastSegment;
};
const parse = function(p) {
  const root = normalizeWindowsPath(p).split("/").shift() || "/";
  const base = basename(p);
  const ext = extname(base);
  return {
    root,
    dir: dirname(p),
    base,
    ext,
    name: base.slice(0, base.length - ext.length)
  };
};

exports.basename = basename;
exports.delimiter = delimiter;
exports.dirname = dirname;
exports.extname = extname;
exports.format = format;
exports.isAbsolute = isAbsolute;
exports.join = join;
exports.normalize = normalize;
exports.normalizeString = normalizeString;
exports.normalizeWindowsPath = normalizeWindowsPath;
exports.parse = parse;
exports.relative = relative;
exports.resolve = resolve;
exports.sep = sep;
exports.toNamespacedPath = toNamespacedPath;


/***/ }),

/***/ 9994:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const acorn = __nccwpck_require__(390);
const node_module = __nccwpck_require__(2033);
const node_fs = __nccwpck_require__(7561);
const node_url = __nccwpck_require__(1041);
const ufo = __nccwpck_require__(2945);
const pathe = __nccwpck_require__(5577);
const url = __nccwpck_require__(7310);
const fs = __nccwpck_require__(7147);
const path = __nccwpck_require__(1017);
__nccwpck_require__(8188);
const assert = __nccwpck_require__(9491);
const util = __nccwpck_require__(3837);
const node_path = __nccwpck_require__(9411);
const pkgTypes = __nccwpck_require__(7877);

const BUILTIN_MODULES = new Set(node_module.builtinModules);
function normalizeSlash(string_) {
  return string_.replace(/\\/g, "/");
}
function pcall(function_, ...arguments_) {
  try {
    return Promise.resolve(function_(...arguments_)).catch((error) => perr(error));
  } catch (error) {
    return perr(error);
  }
}
function perr(_error) {
  const error = new Error(_error);
  error.code = _error.code;
  Error.captureStackTrace(error, pcall);
  return Promise.reject(error);
}
function isObject(value) {
  return value !== null && typeof value === "object";
}
function matchAll(regex, string, addition) {
  const matches = [];
  for (const match of string.matchAll(regex)) {
    matches.push({
      ...addition,
      ...match.groups,
      code: match[0],
      start: match.index,
      end: match.index + match[0].length
    });
  }
  return matches;
}

const reader = { read };
const packageJsonReader = reader;
function read(jsonPath) {
  return find(path.dirname(jsonPath));
}
function find(dir) {
  try {
    const string = fs.readFileSync(
      path.toNamespacedPath(path.join(dir, "package.json")),
      "utf8"
    );
    return { string };
  } catch (error) {
    if (error.code === "ENOENT") {
      const parent = path.dirname(dir);
      if (dir !== parent) {
        return find(parent);
      }
      return { string: void 0 };
    }
    throw error;
  }
}

const isWindows = process.platform === "win32";
const own$1 = {}.hasOwnProperty;
const codes = {};
const messages = /* @__PURE__ */ new Map();
const nodeInternalPrefix = "__node_internal_";
let userStackTraceLimit;
codes.ERR_INVALID_MODULE_SPECIFIER = createError(
  "ERR_INVALID_MODULE_SPECIFIER",
  (request, reason, base = void 0) => {
    return `Invalid module "${request}" ${reason}${base ? ` imported from ${base}` : ""}`;
  },
  TypeError
);
codes.ERR_INVALID_PACKAGE_CONFIG = createError(
  "ERR_INVALID_PACKAGE_CONFIG",
  (path, base, message) => {
    return `Invalid package config ${path}${base ? ` while importing ${base}` : ""}${message ? `. ${message}` : ""}`;
  },
  Error
);
codes.ERR_INVALID_PACKAGE_TARGET = createError(
  "ERR_INVALID_PACKAGE_TARGET",
  (pkgPath, key, target, isImport = false, base = void 0) => {
    const relError = typeof target === "string" && !isImport && target.length > 0 && !target.startsWith("./");
    if (key === ".") {
      assert(isImport === false);
      return `Invalid "exports" main target ${JSON.stringify(target)} defined in the package config ${pkgPath}package.json${base ? ` imported from ${base}` : ""}${relError ? '; targets must start with "./"' : ""}`;
    }
    return `Invalid "${isImport ? "imports" : "exports"}" target ${JSON.stringify(
      target
    )} defined for '${key}' in the package config ${pkgPath}package.json${base ? ` imported from ${base}` : ""}${relError ? '; targets must start with "./"' : ""}`;
  },
  Error
);
codes.ERR_MODULE_NOT_FOUND = createError(
  "ERR_MODULE_NOT_FOUND",
  (path, base, type = "package") => {
    return `Cannot find ${type} '${path}' imported from ${base}`;
  },
  Error
);
codes.ERR_PACKAGE_IMPORT_NOT_DEFINED = createError(
  "ERR_PACKAGE_IMPORT_NOT_DEFINED",
  (specifier, packagePath, base) => {
    return `Package import specifier "${specifier}" is not defined${packagePath ? ` in package ${packagePath}package.json` : ""} imported from ${base}`;
  },
  TypeError
);
codes.ERR_PACKAGE_PATH_NOT_EXPORTED = createError(
  "ERR_PACKAGE_PATH_NOT_EXPORTED",
  (pkgPath, subpath, base = void 0) => {
    if (subpath === ".") {
      return `No "exports" main defined in ${pkgPath}package.json${base ? ` imported from ${base}` : ""}`;
    }
    return `Package subpath '${subpath}' is not defined by "exports" in ${pkgPath}package.json${base ? ` imported from ${base}` : ""}`;
  },
  Error
);
codes.ERR_UNSUPPORTED_DIR_IMPORT = createError(
  "ERR_UNSUPPORTED_DIR_IMPORT",
  "Directory import '%s' is not supported resolving ES modules imported from %s",
  Error
);
codes.ERR_UNKNOWN_FILE_EXTENSION = createError(
  "ERR_UNKNOWN_FILE_EXTENSION",
  'Unknown file extension "%s" for %s',
  TypeError
);
codes.ERR_INVALID_ARG_VALUE = createError(
  "ERR_INVALID_ARG_VALUE",
  (name, value, reason = "is invalid") => {
    let inspected = util.inspect(value);
    if (inspected.length > 128) {
      inspected = `${inspected.slice(0, 128)}...`;
    }
    const type = name.includes(".") ? "property" : "argument";
    return `The ${type} '${name}' ${reason}. Received ${inspected}`;
  },
  TypeError
);
codes.ERR_UNSUPPORTED_ESM_URL_SCHEME = createError(
  "ERR_UNSUPPORTED_ESM_URL_SCHEME",
  (url) => {
    let message = "Only file and data URLs are supported by the default ESM loader";
    if (isWindows && url.protocol.length === 2) {
      message += ". On Windows, absolute paths must be valid file:// URLs";
    }
    message += `. Received protocol '${url.protocol}'`;
    return message;
  },
  Error
);
function createError(sym, value, def) {
  messages.set(sym, value);
  return makeNodeErrorWithCode(def, sym);
}
function makeNodeErrorWithCode(Base, key) {
  return NodeError;
  function NodeError(...args) {
    const limit = Error.stackTraceLimit;
    if (isErrorStackTraceLimitWritable()) {
      Error.stackTraceLimit = 0;
    }
    const error = new Base();
    if (isErrorStackTraceLimitWritable()) {
      Error.stackTraceLimit = limit;
    }
    const message = getMessage(key, args, error);
    Object.defineProperty(error, "message", {
      value: message,
      enumerable: false,
      writable: true,
      configurable: true
    });
    Object.defineProperty(error, "toString", {
      value() {
        return `${this.name} [${key}]: ${this.message}`;
      },
      enumerable: false,
      writable: true,
      configurable: true
    });
    addCodeToName(error, Base.name, key);
    error.code = key;
    return error;
  }
}
const addCodeToName = hideStackFrames(
  function(error, name, code) {
    error = captureLargerStackTrace(error);
    error.name = `${name} [${code}]`;
    error.stack;
    if (name === "SystemError") {
      Object.defineProperty(error, "name", {
        value: name,
        enumerable: false,
        writable: true,
        configurable: true
      });
    } else {
      delete error.name;
    }
  }
);
function isErrorStackTraceLimitWritable() {
  const desc = Object.getOwnPropertyDescriptor(Error, "stackTraceLimit");
  if (desc === void 0) {
    return Object.isExtensible(Error);
  }
  return own$1.call(desc, "writable") ? desc.writable : desc.set !== void 0;
}
function hideStackFrames(fn) {
  const hidden = nodeInternalPrefix + fn.name;
  Object.defineProperty(fn, "name", { value: hidden });
  return fn;
}
const captureLargerStackTrace = hideStackFrames(
  function(error) {
    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();
    if (stackTraceLimitIsWritable) {
      userStackTraceLimit = Error.stackTraceLimit;
      Error.stackTraceLimit = Number.POSITIVE_INFINITY;
    }
    Error.captureStackTrace(error);
    if (stackTraceLimitIsWritable) {
      Error.stackTraceLimit = userStackTraceLimit;
    }
    return error;
  }
);
function getMessage(key, args, self) {
  const message = messages.get(key);
  if (typeof message === "function") {
    assert(
      message.length <= args.length,
      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${message.length}).`
    );
    return Reflect.apply(message, self, args);
  }
  const expectedLength = (message.match(/%[dfijoOs]/g) || []).length;
  assert(
    expectedLength === args.length,
    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`
  );
  if (args.length === 0) {
    return message;
  }
  args.unshift(message);
  return Reflect.apply(util.format, null, args);
}

const { ERR_UNKNOWN_FILE_EXTENSION } = codes;
const extensionFormatMap = {
  __proto__: null,
  ".cjs": "commonjs",
  ".js": "module",
  ".mjs": "module"
};
function defaultGetFormat(url$1) {
  if (url$1.startsWith("node:")) {
    return { format: "builtin" };
  }
  const parsed = new url.URL(url$1);
  if (parsed.protocol === "data:") {
    const { 1: mime } = /^([^/]+\/[^;,]+)[^,]*?(;base64)?,/.exec(
      parsed.pathname
    ) || [null, null];
    const format = mime === "text/javascript" ? "module" : null;
    return { format };
  }
  if (parsed.protocol === "file:") {
    const ext = path.extname(parsed.pathname);
    let format;
    if (ext === ".js") {
      format = getPackageType(parsed.href) === "module" ? "module" : "commonjs";
    } else {
      format = extensionFormatMap[ext];
    }
    if (!format) {
      throw new ERR_UNKNOWN_FILE_EXTENSION(ext, url.fileURLToPath(url$1));
    }
    return { format: format || null };
  }
  return { format: null };
}

const {
  ERR_INVALID_MODULE_SPECIFIER,
  ERR_INVALID_PACKAGE_CONFIG,
  ERR_INVALID_PACKAGE_TARGET,
  ERR_MODULE_NOT_FOUND,
  ERR_PACKAGE_IMPORT_NOT_DEFINED,
  ERR_PACKAGE_PATH_NOT_EXPORTED,
  ERR_UNSUPPORTED_DIR_IMPORT,
  ERR_UNSUPPORTED_ESM_URL_SCHEME,
  ERR_INVALID_ARG_VALUE
} = codes;
const own = {}.hasOwnProperty;
Object.freeze(["node", "import"]);
const invalidSegmentRegEx = /(^|\\|\/)(\.\.?|node_modules)(\\|\/|$)/;
const patternRegEx = /\*/g;
const encodedSepRegEx = /%2f|%2c/i;
const emittedPackageWarnings = /* @__PURE__ */ new Set();
const packageJsonCache = /* @__PURE__ */ new Map();
function emitFolderMapDeprecation(match, pjsonUrl, isExports, base) {
  const pjsonPath = url.fileURLToPath(pjsonUrl);
  if (emittedPackageWarnings.has(pjsonPath + "|" + match)) {
    return;
  }
  emittedPackageWarnings.add(pjsonPath + "|" + match);
  process.emitWarning(
    `Use of deprecated folder mapping "${match}" in the ${isExports ? '"exports"' : '"imports"'} field module resolution of the package at ${pjsonPath}${base ? ` imported from ${url.fileURLToPath(base)}` : ""}.
Update this package.json to use a subpath pattern like "${match}*".`,
    "DeprecationWarning",
    "DEP0148"
  );
}
function emitLegacyIndexDeprecation(url$1, packageJsonUrl, base, main) {
  const { format } = defaultGetFormat(url$1.href);
  if (format !== "module") {
    return;
  }
  const path2 = url.fileURLToPath(url$1.href);
  const pkgPath = url.fileURLToPath(new URL(".", packageJsonUrl));
  const basePath = url.fileURLToPath(base);
  if (main) {
    process.emitWarning(
      `Package ${pkgPath} has a "main" field set to ${JSON.stringify(main)}, excluding the full filename and extension to the resolved file at "${path2.slice(
        pkgPath.length
      )}", imported from ${basePath}.
 Automatic extension resolution of the "main" field isdeprecated for ES modules.`,
      "DeprecationWarning",
      "DEP0151"
    );
  } else {
    process.emitWarning(
      `No "main" or "exports" field defined in the package.json for ${pkgPath} resolving the main entry point "${path2.slice(
        pkgPath.length
      )}", imported from ${basePath}.
Default "index" lookups for the main are deprecated for ES modules.`,
      "DeprecationWarning",
      "DEP0151"
    );
  }
}
function tryStatSync(path2) {
  try {
    return fs.statSync(path2);
  } catch {
    return new fs.Stats();
  }
}
function getPackageConfig(path2, specifier, base) {
  const existing = packageJsonCache.get(path2);
  if (existing !== void 0) {
    return existing;
  }
  const source = packageJsonReader.read(path2).string;
  if (source === void 0) {
    const packageConfig2 = {
      pjsonPath: path2,
      exists: false,
      main: void 0,
      name: void 0,
      type: "none",
      exports: void 0,
      imports: void 0
    };
    packageJsonCache.set(path2, packageConfig2);
    return packageConfig2;
  }
  let packageJson;
  try {
    packageJson = JSON.parse(source);
  } catch (error) {
    throw new ERR_INVALID_PACKAGE_CONFIG(
      path2,
      (base ? `"${specifier}" from ` : "") + url.fileURLToPath(base || specifier),
      error.message
    );
  }
  const { exports, imports, main, name, type } = packageJson;
  const packageConfig = {
    pjsonPath: path2,
    exists: true,
    main: typeof main === "string" ? main : void 0,
    name: typeof name === "string" ? name : void 0,
    type: type === "module" || type === "commonjs" ? type : "none",
    exports,
    imports: imports && typeof imports === "object" ? imports : void 0
  };
  packageJsonCache.set(path2, packageConfig);
  return packageConfig;
}
function getPackageScopeConfig(resolved) {
  let packageJsonUrl = new URL("./package.json", resolved);
  while (true) {
    const packageJsonPath2 = packageJsonUrl.pathname;
    if (packageJsonPath2.endsWith("node_modules/package.json")) {
      break;
    }
    const packageConfig2 = getPackageConfig(
      url.fileURLToPath(packageJsonUrl),
      resolved
    );
    if (packageConfig2.exists) {
      return packageConfig2;
    }
    const lastPackageJsonUrl = packageJsonUrl;
    packageJsonUrl = new URL("../package.json", packageJsonUrl);
    if (packageJsonUrl.pathname === lastPackageJsonUrl.pathname) {
      break;
    }
  }
  const packageJsonPath = url.fileURLToPath(packageJsonUrl);
  const packageConfig = {
    pjsonPath: packageJsonPath,
    exists: false,
    main: void 0,
    name: void 0,
    type: "none",
    exports: void 0,
    imports: void 0
  };
  packageJsonCache.set(packageJsonPath, packageConfig);
  return packageConfig;
}
function fileExists(url$1) {
  return tryStatSync(url.fileURLToPath(url$1)).isFile();
}
function legacyMainResolve(packageJsonUrl, packageConfig, base) {
  let guess;
  if (packageConfig.main !== void 0) {
    guess = new URL(`./${packageConfig.main}`, packageJsonUrl);
    if (fileExists(guess)) {
      return guess;
    }
    const tries2 = [
      `./${packageConfig.main}.js`,
      `./${packageConfig.main}.json`,
      `./${packageConfig.main}.node`,
      `./${packageConfig.main}/index.js`,
      `./${packageConfig.main}/index.json`,
      `./${packageConfig.main}/index.node`
    ];
    let i2 = -1;
    while (++i2 < tries2.length) {
      guess = new URL(tries2[i2], packageJsonUrl);
      if (fileExists(guess)) {
        break;
      }
      guess = void 0;
    }
    if (guess) {
      emitLegacyIndexDeprecation(
        guess,
        packageJsonUrl,
        base,
        packageConfig.main
      );
      return guess;
    }
  }
  const tries = ["./index.js", "./index.json", "./index.node"];
  let i = -1;
  while (++i < tries.length) {
    guess = new URL(tries[i], packageJsonUrl);
    if (fileExists(guess)) {
      break;
    }
    guess = void 0;
  }
  if (guess) {
    emitLegacyIndexDeprecation(guess, packageJsonUrl, base, packageConfig.main);
    return guess;
  }
  throw new ERR_MODULE_NOT_FOUND(
    url.fileURLToPath(new URL(".", packageJsonUrl)),
    url.fileURLToPath(base)
  );
}
function finalizeResolution(resolved, base) {
  if (encodedSepRegEx.test(resolved.pathname)) {
    throw new ERR_INVALID_MODULE_SPECIFIER(
      resolved.pathname,
      'must not include encoded "/" or "\\" characters',
      url.fileURLToPath(base)
    );
  }
  const path2 = url.fileURLToPath(resolved);
  const stats = tryStatSync(path2.endsWith("/") ? path2.slice(-1) : path2);
  if (stats.isDirectory()) {
    const error = new ERR_UNSUPPORTED_DIR_IMPORT(path2, url.fileURLToPath(base));
    error.url = String(resolved);
    throw error;
  }
  if (!stats.isFile()) {
    throw new ERR_MODULE_NOT_FOUND(
      path2 || resolved.pathname,
      base && url.fileURLToPath(base),
      "module"
    );
  }
  return resolved;
}
function throwImportNotDefined(specifier, packageJsonUrl, base) {
  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(
    specifier,
    packageJsonUrl && url.fileURLToPath(new URL(".", packageJsonUrl)),
    url.fileURLToPath(base)
  );
}
function throwExportsNotFound(subpath, packageJsonUrl, base) {
  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(
    url.fileURLToPath(new URL(".", packageJsonUrl)),
    subpath,
    base && url.fileURLToPath(base)
  );
}
function throwInvalidSubpath(subpath, packageJsonUrl, internal, base) {
  const reason = `request is not a valid subpath for the "${internal ? "imports" : "exports"}" resolution of ${url.fileURLToPath(packageJsonUrl)}`;
  throw new ERR_INVALID_MODULE_SPECIFIER(
    subpath,
    reason,
    base && url.fileURLToPath(base)
  );
}
function throwInvalidPackageTarget(subpath, target, packageJsonUrl, internal, base) {
  target = typeof target === "object" && target !== null ? JSON.stringify(target, null, "") : `${target}`;
  throw new ERR_INVALID_PACKAGE_TARGET(
    url.fileURLToPath(new URL(".", packageJsonUrl)),
    subpath,
    target,
    internal,
    base && url.fileURLToPath(base)
  );
}
function resolvePackageTargetString(target, subpath, match, packageJsonUrl, base, pattern, internal, conditions) {
  if (subpath !== "" && !pattern && target[target.length - 1] !== "/") {
    throwInvalidPackageTarget(match, target, packageJsonUrl, internal, base);
  }
  if (!target.startsWith("./")) {
    if (internal && !target.startsWith("../") && !target.startsWith("/")) {
      let isURL = false;
      try {
        new URL(target);
        isURL = true;
      } catch {
      }
      if (!isURL) {
        const exportTarget = pattern ? target.replace(patternRegEx, subpath) : target + subpath;
        return packageResolve(exportTarget, packageJsonUrl, conditions);
      }
    }
    throwInvalidPackageTarget(match, target, packageJsonUrl, internal, base);
  }
  if (invalidSegmentRegEx.test(target.slice(2))) {
    throwInvalidPackageTarget(match, target, packageJsonUrl, internal, base);
  }
  const resolved = new URL(target, packageJsonUrl);
  const resolvedPath = resolved.pathname;
  const packagePath = new URL(".", packageJsonUrl).pathname;
  if (!resolvedPath.startsWith(packagePath)) {
    throwInvalidPackageTarget(match, target, packageJsonUrl, internal, base);
  }
  if (subpath === "") {
    return resolved;
  }
  if (invalidSegmentRegEx.test(subpath)) {
    throwInvalidSubpath(match + subpath, packageJsonUrl, internal, base);
  }
  if (pattern) {
    return new URL(resolved.href.replace(patternRegEx, subpath));
  }
  return new URL(subpath, resolved);
}
function isArrayIndex(key) {
  const keyNumber = Number(key);
  if (`${keyNumber}` !== key) {
    return false;
  }
  return keyNumber >= 0 && keyNumber < 4294967295;
}
function resolvePackageTarget(packageJsonUrl, target, subpath, packageSubpath, base, pattern, internal, conditions) {
  if (typeof target === "string") {
    return resolvePackageTargetString(
      target,
      subpath,
      packageSubpath,
      packageJsonUrl,
      base,
      pattern,
      internal,
      conditions
    );
  }
  if (Array.isArray(target)) {
    const targetList = target;
    if (targetList.length === 0) {
      return null;
    }
    let lastException;
    let i = -1;
    while (++i < targetList.length) {
      const targetItem = targetList[i];
      let resolved;
      try {
        resolved = resolvePackageTarget(
          packageJsonUrl,
          targetItem,
          subpath,
          packageSubpath,
          base,
          pattern,
          internal,
          conditions
        );
      } catch (error) {
        lastException = error;
        if (error.code === "ERR_INVALID_PACKAGE_TARGET") {
          continue;
        }
        throw error;
      }
      if (resolved === void 0) {
        continue;
      }
      if (resolved === null) {
        lastException = null;
        continue;
      }
      return resolved;
    }
    if (lastException === void 0 || lastException === null) {
      return lastException;
    }
    throw lastException;
  }
  if (typeof target === "object" && target !== null) {
    const keys = Object.getOwnPropertyNames(target);
    let i = -1;
    while (++i < keys.length) {
      const key = keys[i];
      if (isArrayIndex(key)) {
        throw new ERR_INVALID_PACKAGE_CONFIG(
          url.fileURLToPath(packageJsonUrl),
          base,
          '"exports" cannot contain numeric property keys.'
        );
      }
    }
    i = -1;
    while (++i < keys.length) {
      const key = keys[i];
      if (key === "default" || conditions && conditions.has(key)) {
        const conditionalTarget = target[key];
        const resolved = resolvePackageTarget(
          packageJsonUrl,
          conditionalTarget,
          subpath,
          packageSubpath,
          base,
          pattern,
          internal,
          conditions
        );
        if (resolved === void 0) {
          continue;
        }
        return resolved;
      }
    }
    return void 0;
  }
  if (target === null) {
    return null;
  }
  throwInvalidPackageTarget(
    packageSubpath,
    target,
    packageJsonUrl,
    internal,
    base
  );
}
function isConditionalExportsMainSugar(exports, packageJsonUrl, base) {
  if (typeof exports === "string" || Array.isArray(exports)) {
    return true;
  }
  if (typeof exports !== "object" || exports === null) {
    return false;
  }
  const keys = Object.getOwnPropertyNames(exports);
  let isConditionalSugar = false;
  let i = 0;
  let j = -1;
  while (++j < keys.length) {
    const key = keys[j];
    const curIsConditionalSugar = key === "" || key[0] !== ".";
    if (i++ === 0) {
      isConditionalSugar = curIsConditionalSugar;
    } else if (isConditionalSugar !== curIsConditionalSugar) {
      throw new ERR_INVALID_PACKAGE_CONFIG(
        url.fileURLToPath(packageJsonUrl),
        base,
        `"exports" cannot contain some keys starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.`
      );
    }
  }
  return isConditionalSugar;
}
function packageExportsResolve(packageJsonUrl, packageSubpath, packageConfig, base, conditions) {
  let exports = packageConfig.exports;
  if (isConditionalExportsMainSugar(exports, packageJsonUrl, base)) {
    exports = { ".": exports };
  }
  if (own.call(exports, packageSubpath)) {
    const target = exports[packageSubpath];
    const resolved = resolvePackageTarget(
      packageJsonUrl,
      target,
      "",
      packageSubpath,
      base,
      false,
      false,
      conditions
    );
    if (resolved === null || resolved === void 0) {
      throwExportsNotFound(packageSubpath, packageJsonUrl, base);
    }
    return { resolved, exact: true };
  }
  let bestMatch = "";
  const keys = Object.getOwnPropertyNames(exports);
  let i = -1;
  while (++i < keys.length) {
    const key = keys[i];
    if (key[key.length - 1] === "*" && packageSubpath.startsWith(key.slice(0, -1)) && packageSubpath.length >= key.length && key.length > bestMatch.length) {
      bestMatch = key;
    } else if (key[key.length - 1] === "/" && packageSubpath.startsWith(key) && key.length > bestMatch.length) {
      bestMatch = key;
    }
  }
  if (bestMatch) {
    const target = exports[bestMatch];
    const pattern = bestMatch[bestMatch.length - 1] === "*";
    const subpath = packageSubpath.slice(bestMatch.length - (pattern ? 1 : 0));
    const resolved = resolvePackageTarget(
      packageJsonUrl,
      target,
      subpath,
      bestMatch,
      base,
      pattern,
      false,
      conditions
    );
    if (resolved === null || resolved === void 0) {
      throwExportsNotFound(packageSubpath, packageJsonUrl, base);
    }
    if (!pattern) {
      emitFolderMapDeprecation(bestMatch, packageJsonUrl, true, base);
    }
    return { resolved, exact: pattern };
  }
  throwExportsNotFound(packageSubpath, packageJsonUrl, base);
}
function packageImportsResolve(name, base, conditions) {
  if (name === "#" || name.startsWith("#/")) {
    const reason = "is not a valid internal imports specifier name";
    throw new ERR_INVALID_MODULE_SPECIFIER(name, reason, url.fileURLToPath(base));
  }
  let packageJsonUrl;
  const packageConfig = getPackageScopeConfig(base);
  if (packageConfig.exists) {
    packageJsonUrl = url.pathToFileURL(packageConfig.pjsonPath);
    const imports = packageConfig.imports;
    if (imports) {
      if (own.call(imports, name)) {
        const resolved = resolvePackageTarget(
          packageJsonUrl,
          imports[name],
          "",
          name,
          base,
          false,
          true,
          conditions
        );
        if (resolved !== null) {
          return { resolved, exact: true };
        }
      } else {
        let bestMatch = "";
        const keys = Object.getOwnPropertyNames(imports);
        let i = -1;
        while (++i < keys.length) {
          const key = keys[i];
          if (key[key.length - 1] === "*" && name.startsWith(key.slice(0, -1)) && name.length >= key.length && key.length > bestMatch.length) {
            bestMatch = key;
          } else if (key[key.length - 1] === "/" && name.startsWith(key) && key.length > bestMatch.length) {
            bestMatch = key;
          }
        }
        if (bestMatch) {
          const target = imports[bestMatch];
          const pattern = bestMatch[bestMatch.length - 1] === "*";
          const subpath = name.slice(bestMatch.length - (pattern ? 1 : 0));
          const resolved = resolvePackageTarget(
            packageJsonUrl,
            target,
            subpath,
            bestMatch,
            base,
            pattern,
            true,
            conditions
          );
          if (resolved !== null) {
            if (!pattern) {
              emitFolderMapDeprecation(bestMatch, packageJsonUrl, false, base);
            }
            return { resolved, exact: pattern };
          }
        }
      }
    }
  }
  throwImportNotDefined(name, packageJsonUrl, base);
}
function getPackageType(url) {
  const packageConfig = getPackageScopeConfig(url);
  return packageConfig.type;
}
function parsePackageName(specifier, base) {
  let separatorIndex = specifier.indexOf("/");
  let validPackageName = true;
  let isScoped = false;
  if (specifier[0] === "@") {
    isScoped = true;
    if (separatorIndex === -1 || specifier.length === 0) {
      validPackageName = false;
    } else {
      separatorIndex = specifier.indexOf("/", separatorIndex + 1);
    }
  }
  const packageName = separatorIndex === -1 ? specifier : specifier.slice(0, separatorIndex);
  let i = -1;
  while (++i < packageName.length) {
    if (packageName[i] === "%" || packageName[i] === "\\") {
      validPackageName = false;
      break;
    }
  }
  if (!validPackageName) {
    throw new ERR_INVALID_MODULE_SPECIFIER(
      specifier,
      "is not a valid package name",
      url.fileURLToPath(base)
    );
  }
  const packageSubpath = "." + (separatorIndex === -1 ? "" : specifier.slice(separatorIndex));
  return { packageName, packageSubpath, isScoped };
}
function packageResolve(specifier, base, conditions) {
  const { packageName, packageSubpath, isScoped } = parsePackageName(
    specifier,
    base
  );
  const packageConfig = getPackageScopeConfig(base);
  if (packageConfig.exists) {
    const packageJsonUrl2 = url.pathToFileURL(packageConfig.pjsonPath);
    if (packageConfig.name === packageName && packageConfig.exports !== void 0 && packageConfig.exports !== null) {
      return packageExportsResolve(
        packageJsonUrl2,
        packageSubpath,
        packageConfig,
        base,
        conditions
      ).resolved;
    }
  }
  let packageJsonUrl = new URL(
    "./node_modules/" + packageName + "/package.json",
    base
  );
  let packageJsonPath = url.fileURLToPath(packageJsonUrl);
  let lastPath;
  do {
    const stat = tryStatSync(packageJsonPath.slice(0, -13));
    if (!stat.isDirectory()) {
      lastPath = packageJsonPath;
      packageJsonUrl = new URL(
        (isScoped ? "../../../../node_modules/" : "../../../node_modules/") + packageName + "/package.json",
        packageJsonUrl
      );
      packageJsonPath = url.fileURLToPath(packageJsonUrl);
      continue;
    }
    const packageConfig2 = getPackageConfig(packageJsonPath, specifier, base);
    if (packageConfig2.exports !== void 0 && packageConfig2.exports !== null) {
      return packageExportsResolve(
        packageJsonUrl,
        packageSubpath,
        packageConfig2,
        base,
        conditions
      ).resolved;
    }
    if (packageSubpath === ".") {
      return legacyMainResolve(packageJsonUrl, packageConfig2, base);
    }
    return new URL(packageSubpath, packageJsonUrl);
  } while (packageJsonPath.length !== lastPath.length);
  throw new ERR_MODULE_NOT_FOUND(packageName, url.fileURLToPath(base));
}
function isRelativeSpecifier(specifier) {
  if (specifier[0] === ".") {
    if (specifier.length === 1 || specifier[1] === "/") {
      return true;
    }
    if (specifier[1] === "." && (specifier.length === 2 || specifier[2] === "/")) {
      return true;
    }
  }
  return false;
}
function shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {
  if (specifier === "") {
    return false;
  }
  if (specifier[0] === "/") {
    return true;
  }
  return isRelativeSpecifier(specifier);
}
function moduleResolve(specifier, base, conditions) {
  let resolved;
  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {
    resolved = new URL(specifier, base);
  } else if (specifier[0] === "#") {
    ({ resolved } = packageImportsResolve(specifier, base, conditions));
  } else {
    try {
      resolved = new URL(specifier);
    } catch {
      resolved = packageResolve(specifier, base, conditions);
    }
  }
  return finalizeResolution(resolved, base);
}

function fileURLToPath(id) {
  if (typeof id === "string" && !id.startsWith("file://")) {
    return normalizeSlash(id);
  }
  return normalizeSlash(node_url.fileURLToPath(id));
}
const INVALID_CHAR_RE = /[\u0000-\u001F"#$&*+,/:;<=>?@[\]^`{|}\u007F]+/g;
function sanitizeURIComponent(name = "", replacement = "_") {
  return name.replace(INVALID_CHAR_RE, replacement);
}
function sanitizeFilePath(filePath = "") {
  return filePath.split(/[/\\]/g).map((p) => sanitizeURIComponent(p)).join("/").replace(/^([A-Za-z])_\//, "$1:/");
}
function normalizeid(id) {
  if (typeof id !== "string") {
    id = id.toString();
  }
  if (/(node|data|http|https|file):/.test(id)) {
    return id;
  }
  if (BUILTIN_MODULES.has(id)) {
    return "node:" + id;
  }
  return "file://" + encodeURI(normalizeSlash(id));
}
async function loadURL(url) {
  const code = await node_fs.promises.readFile(fileURLToPath(url), "utf8");
  return code;
}
function toDataURL(code) {
  const base64 = Buffer.from(code).toString("base64");
  return `data:text/javascript;base64,${base64}`;
}
function isNodeBuiltin(id = "") {
  id = id.replace(/^node:/, "").split("/")[0];
  return BUILTIN_MODULES.has(id);
}
const ProtocolRegex = /^(?<proto>.{2,}?):.+$/;
function getProtocol(id) {
  const proto = id.match(ProtocolRegex);
  return proto ? proto.groups.proto : void 0;
}

const DEFAULT_CONDITIONS_SET = /* @__PURE__ */ new Set(["node", "import"]);
const DEFAULT_URL = node_url.pathToFileURL(process.cwd());
const DEFAULT_EXTENSIONS = [".mjs", ".cjs", ".js", ".json"];
const NOT_FOUND_ERRORS = /* @__PURE__ */ new Set(["ERR_MODULE_NOT_FOUND", "ERR_UNSUPPORTED_DIR_IMPORT", "MODULE_NOT_FOUND", "ERR_PACKAGE_PATH_NOT_EXPORTED"]);
function _tryModuleResolve(id, url, conditions) {
  try {
    return moduleResolve(id, url, conditions);
  } catch (error) {
    if (!NOT_FOUND_ERRORS.has(error.code)) {
      throw error;
    }
  }
}
function _resolve(id, options = {}) {
  if (/(node|data|http|https):/.test(id)) {
    return id;
  }
  if (BUILTIN_MODULES.has(id)) {
    return "node:" + id;
  }
  if (pathe.isAbsolute(id) && node_fs.existsSync(id)) {
    const realPath2 = node_fs.realpathSync(fileURLToPath(id));
    return node_url.pathToFileURL(realPath2).toString();
  }
  const conditionsSet = options.conditions ? new Set(options.conditions) : DEFAULT_CONDITIONS_SET;
  const _urls = (Array.isArray(options.url) ? options.url : [options.url]).filter(Boolean).map((u) => new URL(normalizeid(u.toString())));
  if (_urls.length === 0) {
    _urls.push(DEFAULT_URL);
  }
  const urls = [..._urls];
  for (const url of _urls) {
    if (url.protocol === "file:") {
      urls.push(
        new URL("./", url),
        new URL(ufo.joinURL(url.pathname, "_index.js"), url),
        new URL("node_modules", url)
      );
    }
  }
  let resolved;
  for (const url of urls) {
    resolved = _tryModuleResolve(id, url, conditionsSet);
    if (resolved) {
      break;
    }
    for (const prefix of ["", "/index"]) {
      for (const extension of options.extensions || DEFAULT_EXTENSIONS) {
        resolved = _tryModuleResolve(id + prefix + extension, url, conditionsSet);
        if (resolved) {
          break;
        }
      }
      if (resolved) {
        break;
      }
    }
  }
  if (!resolved) {
    const error = new Error(`Cannot find module ${id} imported from ${urls.join(", ")}`);
    error.code = "ERR_MODULE_NOT_FOUND";
    throw error;
  }
  const realPath = node_fs.realpathSync(fileURLToPath(resolved));
  return node_url.pathToFileURL(realPath).toString();
}
function resolveSync(id, options) {
  return _resolve(id, options);
}
function resolve(id, options) {
  return pcall(resolveSync, id, options);
}
function resolvePathSync(id, options) {
  return fileURLToPath(resolveSync(id, options));
}
function resolvePath(id, options) {
  return pcall(resolvePathSync, id, options);
}
function createResolve(defaults) {
  return (id, url) => {
    return resolve(id, { url, ...defaults });
  };
}

const ESM_STATIC_IMPORT_RE = /(?<=\s|^|;)import\s*([\s"']*(?<imports>[\w\t\n\r $*,/{}]+)from\s*)?["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][\s;]*/gm;
const DYNAMIC_IMPORT_RE = /import\s*\((?<expression>(?:[^()]+|\((?:[^()]+|\([^()]*\))*\))*)\)/gm;
const EXPORT_DECAL_RE = /\bexport\s+(?<declaration>(async function|function|let|const enum|const|enum|var|class))\s+(?<name>[\w$]+)/g;
const EXPORT_NAMED_RE = /\bexport\s+{(?<exports>[^}]+?)[\s,]*}(\s*from\s*["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][^\n;]*)?/g;
const EXPORT_STAR_RE = /\bexport\s*(\*)(\s*as\s+(?<name>[\w$]+)\s+)?\s*(\s*from\s*["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][^\n;]*)?/g;
const EXPORT_DEFAULT_RE = /\bexport\s+default\s+/g;
function findStaticImports(code) {
  return matchAll(ESM_STATIC_IMPORT_RE, code, { type: "static" });
}
function findDynamicImports(code) {
  return matchAll(DYNAMIC_IMPORT_RE, code, { type: "dynamic" });
}
function parseStaticImport(matched) {
  const cleanedImports = (matched.imports || "").replace(/(\/\/[^\n]*\n|\/\*.*\*\/)/g, "").replace(/\s+/g, " ");
  const namedImports = {};
  for (const namedImport of cleanedImports.match(/{([^}]*)}/)?.[1]?.split(",") || []) {
    const [, source = namedImport.trim(), importName = source] = namedImport.match(/^\s*(\S*) as (\S*)\s*$/) || [];
    if (source) {
      namedImports[source] = importName;
    }
  }
  const topLevelImports = cleanedImports.replace(/{([^}]*)}/, "");
  const namespacedImport = topLevelImports.match(/\* as \s*(\S*)/)?.[1];
  const defaultImport = topLevelImports.split(",").find((index) => !/[*{}]/.test(index))?.trim() || void 0;
  return {
    ...matched,
    defaultImport,
    namespacedImport,
    namedImports
  };
}
function findExports(code) {
  const declaredExports = matchAll(EXPORT_DECAL_RE, code, { type: "declaration" });
  const namedExports = matchAll(EXPORT_NAMED_RE, code, { type: "named" });
  for (const namedExport of namedExports) {
    namedExport.names = namedExport.exports.replace(/^\r?\n?/, "").split(/\s*,\s*/g).map((name) => name.replace(/^.*?\sas\s/, "").trim());
  }
  const defaultExport = matchAll(EXPORT_DEFAULT_RE, code, { type: "default", name: "default" });
  const starExports = matchAll(EXPORT_STAR_RE, code, { type: "star" });
  const exports = [
    ...declaredExports,
    ...namedExports,
    ...defaultExport,
    ...starExports
  ];
  for (const exp of exports) {
    if (!exp.name && exp.names && exp.names.length === 1) {
      exp.name = exp.names[0];
    }
    if (exp.name === "default" && exp.type !== "default") {
      exp._type = exp.type;
      exp.type = "default";
    }
    if (!exp.names && exp.name) {
      exp.names = [exp.name];
    }
  }
  if (exports.length === 0) {
    return [];
  }
  const exportLocations = _tryGetExportLocations(code);
  if (exportLocations && exportLocations.length === 0) {
    return [];
  }
  return exports.filter((exp) => !exportLocations || _isExportStatement(exportLocations, exp)).filter((exp, index, exports2) => {
    const nextExport = exports2[index + 1];
    return !nextExport || exp.type !== nextExport.type || !exp.name || exp.name !== nextExport.name;
  });
}
function findExportNames(code) {
  return findExports(code).flatMap((exp) => exp.names).filter(Boolean);
}
async function resolveModuleExportNames(id, options) {
  const url = await resolvePath(id, options);
  const code = await loadURL(url);
  const exports = findExports(code);
  const exportNames = new Set(exports.flatMap((exp) => exp.names).filter(Boolean));
  for (const exp of exports) {
    if (exp.type === "star") {
      const subExports = await resolveModuleExportNames(exp.specifier, { ...options, url });
      for (const subExport of subExports) {
        exportNames.add(subExport);
      }
    }
  }
  return [...exportNames];
}
function _isExportStatement(exportsLocation, exp) {
  return exportsLocation.some((location) => {
    return exp.start <= location.start && exp.end >= location.end;
  });
}
function _tryGetExportLocations(code) {
  try {
    return _getExportLocations(code);
  } catch {
  }
}
function _getExportLocations(code) {
  const tokens = acorn.tokenizer(code, {
    ecmaVersion: "latest",
    sourceType: "module",
    allowHashBang: true,
    allowAwaitOutsideFunction: true,
    allowImportExportEverywhere: true
  });
  const locations = [];
  for (const token of tokens) {
    if (token.type.label === "export") {
      locations.push({
        start: token.start,
        end: token.end
      });
    }
  }
  return locations;
}

function createCommonJS(url) {
  const __filename = fileURLToPath(url);
  const __dirname = node_path.dirname(__filename);
  let _nativeRequire;
  const getNativeRequire = () => _nativeRequire || (_nativeRequire = node_module.createRequire(url));
  function require(id) {
    return getNativeRequire()(id);
  }
  require.resolve = (id, options) => getNativeRequire().resolve(id, options);
  return {
    __filename,
    __dirname,
    require
  };
}
function interopDefault(sourceModule) {
  if (!isObject(sourceModule) || !("default" in sourceModule)) {
    return sourceModule;
  }
  const newModule = sourceModule.default;
  for (const key in sourceModule) {
    if (key === "default") {
      try {
        if (!(key in newModule)) {
          Object.defineProperty(newModule, key, {
            enumerable: false,
            configurable: false,
            get() {
              return newModule;
            }
          });
        }
      } catch {
      }
    } else {
      try {
        if (!(key in newModule)) {
          Object.defineProperty(newModule, key, {
            enumerable: true,
            configurable: true,
            get() {
              return sourceModule[key];
            }
          });
        }
      } catch {
      }
    }
  }
  return newModule;
}

const EVAL_ESM_IMPORT_RE = /(?<=import .* from ["'])([^"']+)(?=["'])|(?<=export .* from ["'])([^"']+)(?=["'])|(?<=import\s*["'])([^"']+)(?=["'])|(?<=import\s*\(["'])([^"']+)(?=["']\))/g;
async function loadModule(id, options = {}) {
  const url = await resolve(id, options);
  const code = await loadURL(url);
  return evalModule(code, { ...options, url });
}
async function evalModule(code, options = {}) {
  const transformed = await transformModule(code, options);
  const dataURL = toDataURL(transformed);
  return __nccwpck_require__(6581)(dataURL).catch((error) => {
    error.stack = error.stack.replace(new RegExp(dataURL, "g"), options.url || "_mlly_eval_");
    throw error;
  });
}
function transformModule(code, options) {
  if (options.url && options.url.endsWith(".json")) {
    return Promise.resolve("export default " + code);
  }
  if (options.url) {
    code = code.replace(/import\.meta\.url/g, `'${options.url}'`);
  }
  return Promise.resolve(code);
}
async function resolveImports(code, options) {
  const imports = [...code.matchAll(EVAL_ESM_IMPORT_RE)].map((m) => m[0]);
  if (imports.length === 0) {
    return code;
  }
  const uniqueImports = [...new Set(imports)];
  const resolved = /* @__PURE__ */ new Map();
  await Promise.all(uniqueImports.map(async (id) => {
    let url = await resolve(id, options);
    if (url.endsWith(".json")) {
      const code2 = await loadURL(url);
      url = toDataURL(await transformModule(code2, { url }));
    }
    resolved.set(id, url);
  }));
  const re = new RegExp(uniqueImports.map((index) => `(${index})`).join("|"), "g");
  return code.replace(re, (id) => resolved.get(id));
}

const ESM_RE = /([\s;]|^)(import[\s\w*,{}]*from|import\s*["'*{]|export\b\s*(?:[*{]|default|class|type|function|const|var|let|async function)|import\.meta\b)/m;
const BUILTIN_EXTENSIONS = /* @__PURE__ */ new Set([".mjs", ".cjs", ".node", ".wasm"]);
function hasESMSyntax(code) {
  return ESM_RE.test(code);
}
const CJS_RE = /([\s;]|^)(module.exports\b|exports\.\w|require\s*\(|global\.\w)/m;
function hasCJSSyntax(code) {
  return CJS_RE.test(code);
}
function detectSyntax(code) {
  const hasESM = hasESMSyntax(code);
  const hasCJS = hasCJSSyntax(code);
  return {
    hasESM,
    hasCJS,
    isMixed: hasESM && hasCJS
  };
}
const validNodeImportDefaults = {
  allowedProtocols: ["node", "file", "data"]
};
async function isValidNodeImport(id, _options = {}) {
  if (isNodeBuiltin(id)) {
    return true;
  }
  const options = { ...validNodeImportDefaults, ..._options };
  const proto = getProtocol(id);
  if (proto && !options.allowedProtocols.includes(proto)) {
    return false;
  }
  if (proto === "data") {
    return true;
  }
  const resolvedPath = await resolvePath(id, options);
  const extension = pathe.extname(resolvedPath);
  if (BUILTIN_EXTENSIONS.has(extension)) {
    return true;
  }
  if (extension !== ".js") {
    return false;
  }
  const package_ = await pkgTypes.readPackageJSON(resolvedPath).catch(() => {
  });
  if (package_?.type === "module") {
    return true;
  }
  if (/\.(\w+-)?esm?(-\w+)?\.js$|\/(esm?)\//.test(resolvedPath)) {
    return false;
  }
  const code = options.code || await node_fs.promises.readFile(resolvedPath, "utf8").catch(() => {
  }) || "";
  return hasCJSSyntax(code) || !hasESMSyntax(code);
}

exports.DYNAMIC_IMPORT_RE = DYNAMIC_IMPORT_RE;
exports.ESM_STATIC_IMPORT_RE = ESM_STATIC_IMPORT_RE;
exports.EXPORT_DECAL_RE = EXPORT_DECAL_RE;
exports.createCommonJS = createCommonJS;
exports.createResolve = createResolve;
exports.detectSyntax = detectSyntax;
exports.evalModule = evalModule;
exports.fileURLToPath = fileURLToPath;
exports.findDynamicImports = findDynamicImports;
exports.findExportNames = findExportNames;
exports.findExports = findExports;
exports.findStaticImports = findStaticImports;
exports.getProtocol = getProtocol;
exports.hasCJSSyntax = hasCJSSyntax;
exports.hasESMSyntax = hasESMSyntax;
exports.interopDefault = interopDefault;
exports.isNodeBuiltin = isNodeBuiltin;
exports.isValidNodeImport = isValidNodeImport;
exports.loadModule = loadModule;
exports.loadURL = loadURL;
exports.normalizeid = normalizeid;
exports.parseStaticImport = parseStaticImport;
exports.resolve = resolve;
exports.resolveImports = resolveImports;
exports.resolveModuleExportNames = resolveModuleExportNames;
exports.resolvePath = resolvePath;
exports.resolvePathSync = resolvePathSync;
exports.resolveSync = resolveSync;
exports.sanitizeFilePath = sanitizeFilePath;
exports.sanitizeURIComponent = sanitizeURIComponent;
exports.toDataURL = toDataURL;
exports.transformModule = transformModule;


/***/ }),

/***/ 4005:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const acorn = __nccwpck_require__(390);
const node_module = __nccwpck_require__(2033);
const fs = __nccwpck_require__(7561);
const node_url = __nccwpck_require__(1041);
const ufo = __nccwpck_require__(2945);
const pathe = __nccwpck_require__(5577);
const pkgTypes = __nccwpck_require__(7877);
const assert = __nccwpck_require__(8061);
const process$1 = __nccwpck_require__(7742);
const path = __nccwpck_require__(9411);
const v8 = __nccwpck_require__(3858);
const node_util = __nccwpck_require__(7261);

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e.default : e; }

const fs__default = /*#__PURE__*/_interopDefaultCompat(fs);
const assert__default = /*#__PURE__*/_interopDefaultCompat(assert);
const process__default = /*#__PURE__*/_interopDefaultCompat(process$1);
const path__default = /*#__PURE__*/_interopDefaultCompat(path);
const v8__default = /*#__PURE__*/_interopDefaultCompat(v8);

const BUILTIN_MODULES = new Set(node_module.builtinModules);
function normalizeSlash(string_) {
  return string_.replace(/\\/g, "/");
}
function pcall(function_, ...arguments_) {
  try {
    return Promise.resolve(function_(...arguments_)).catch(
      (error) => perr(error)
    );
  } catch (error) {
    return perr(error);
  }
}
function perr(_error) {
  const error = new Error(_error);
  error.code = _error.code;
  Error.captureStackTrace(error, pcall);
  return Promise.reject(error);
}
function isObject(value) {
  return value !== null && typeof value === "object";
}
function matchAll(regex, string, addition) {
  const matches = [];
  for (const match of string.matchAll(regex)) {
    matches.push({
      ...addition,
      ...match.groups,
      code: match[0],
      start: match.index,
      end: match.index + match[0].length
    });
  }
  return matches;
}
function clearImports(imports) {
  return (imports || "").replace(/(\/\/[^\n]*\n|\/\*.*\*\/)/g, "").replace(/\s+/g, " ");
}
function getImportNames(cleanedImports) {
  const topLevelImports = cleanedImports.replace(/{([^}]*)}/, "");
  const namespacedImport = topLevelImports.match(/\* as \s*(\S*)/)?.[1];
  const defaultImport = topLevelImports.split(",").find((index) => !/[*{}]/.test(index))?.trim() || void 0;
  return {
    namespacedImport,
    defaultImport
  };
}

/**
 * @typedef ErrnoExceptionFields
 * @property {number | undefined} [errnode]
 * @property {string | undefined} [code]
 * @property {string | undefined} [path]
 * @property {string | undefined} [syscall]
 * @property {string | undefined} [url]
 *
 * @typedef {Error & ErrnoExceptionFields} ErrnoException
 */


const isWindows = process__default.platform === 'win32';

const own$1 = {}.hasOwnProperty;

const classRegExp = /^([A-Z][a-z\d]*)+$/;
// Sorted by a rough estimate on most frequently used entries.
const kTypes = new Set([
  'string',
  'function',
  'number',
  'object',
  // Accept 'Function' and 'Object' as alternative to the lower cased version.
  'Function',
  'Object',
  'boolean',
  'bigint',
  'symbol'
]);

const codes = {};

/**
 * Create a list string in the form like 'A and B' or 'A, B, ..., and Z'.
 * We cannot use Intl.ListFormat because it's not available in
 * --without-intl builds.
 *
 * @param {Array<string>} array
 *   An array of strings.
 * @param {string} [type]
 *   The list type to be inserted before the last element.
 * @returns {string}
 */
function formatList(array, type = 'and') {
  return array.length < 3
    ? array.join(` ${type} `)
    : `${array.slice(0, -1).join(', ')}, ${type} ${array[array.length - 1]}`
}

/** @type {Map<string, MessageFunction | string>} */
const messages = new Map();
const nodeInternalPrefix = '__node_internal_';
/** @type {number} */
let userStackTraceLimit;

codes.ERR_INVALID_ARG_TYPE = createError(
  'ERR_INVALID_ARG_TYPE',
  /**
   * @param {string} name
   * @param {Array<string> | string} expected
   * @param {unknown} actual
   */
  (name, expected, actual) => {
    assert__default(typeof name === 'string', "'name' must be a string");
    if (!Array.isArray(expected)) {
      expected = [expected];
    }

    let message = 'The ';
    if (name.endsWith(' argument')) {
      // For cases like 'first argument'
      message += `${name} `;
    } else {
      const type = name.includes('.') ? 'property' : 'argument';
      message += `"${name}" ${type} `;
    }

    message += 'must be ';

    /** @type {Array<string>} */
    const types = [];
    /** @type {Array<string>} */
    const instances = [];
    /** @type {Array<string>} */
    const other = [];

    for (const value of expected) {
      assert__default(
        typeof value === 'string',
        'All expected entries have to be of type string'
      );

      if (kTypes.has(value)) {
        types.push(value.toLowerCase());
      } else if (classRegExp.exec(value) === null) {
        assert__default(
          value !== 'object',
          'The value "object" should be written as "Object"'
        );
        other.push(value);
      } else {
        instances.push(value);
      }
    }

    // Special handle `object` in case other instances are allowed to outline
    // the differences between each other.
    if (instances.length > 0) {
      const pos = types.indexOf('object');
      if (pos !== -1) {
        types.slice(pos, 1);
        instances.push('Object');
      }
    }

    if (types.length > 0) {
      message += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(
        types,
        'or'
      )}`;
      if (instances.length > 0 || other.length > 0) message += ' or ';
    }

    if (instances.length > 0) {
      message += `an instance of ${formatList(instances, 'or')}`;
      if (other.length > 0) message += ' or ';
    }

    if (other.length > 0) {
      if (other.length > 1) {
        message += `one of ${formatList(other, 'or')}`;
      } else {
        if (other[0].toLowerCase() !== other[0]) message += 'an ';
        message += `${other[0]}`;
      }
    }

    message += `. Received ${determineSpecificType(actual)}`;

    return message
  },
  TypeError
);

codes.ERR_INVALID_MODULE_SPECIFIER = createError(
  'ERR_INVALID_MODULE_SPECIFIER',
  /**
   * @param {string} request
   * @param {string} reason
   * @param {string} [base]
   */
  (request, reason, base = undefined) => {
    return `Invalid module "${request}" ${reason}${
      base ? ` imported from ${base}` : ''
    }`
  },
  TypeError
);

codes.ERR_INVALID_PACKAGE_CONFIG = createError(
  'ERR_INVALID_PACKAGE_CONFIG',
  /**
   * @param {string} path
   * @param {string} [base]
   * @param {string} [message]
   */
  (path, base, message) => {
    return `Invalid package config ${path}${
      base ? ` while importing ${base}` : ''
    }${message ? `. ${message}` : ''}`
  },
  Error
);

codes.ERR_INVALID_PACKAGE_TARGET = createError(
  'ERR_INVALID_PACKAGE_TARGET',
  /**
   * @param {string} pkgPath
   * @param {string} key
   * @param {unknown} target
   * @param {boolean} [isImport=false]
   * @param {string} [base]
   */
  (pkgPath, key, target, isImport = false, base = undefined) => {
    const relError =
      typeof target === 'string' &&
      !isImport &&
      target.length > 0 &&
      !target.startsWith('./');
    if (key === '.') {
      assert__default(isImport === false);
      return (
        `Invalid "exports" main target ${JSON.stringify(target)} defined ` +
        `in the package config ${pkgPath}package.json${
          base ? ` imported from ${base}` : ''
        }${relError ? '; targets must start with "./"' : ''}`
      )
    }

    return `Invalid "${
      isImport ? 'imports' : 'exports'
    }" target ${JSON.stringify(
      target
    )} defined for '${key}' in the package config ${pkgPath}package.json${
      base ? ` imported from ${base}` : ''
    }${relError ? '; targets must start with "./"' : ''}`
  },
  Error
);

codes.ERR_MODULE_NOT_FOUND = createError(
  'ERR_MODULE_NOT_FOUND',
  /**
   * @param {string} path
   * @param {string} base
   * @param {string} [type]
   */
  (path, base, type = 'package') => {
    return `Cannot find ${type} '${path}' imported from ${base}`
  },
  Error
);

codes.ERR_NETWORK_IMPORT_DISALLOWED = createError(
  'ERR_NETWORK_IMPORT_DISALLOWED',
  "import of '%s' by %s is not supported: %s",
  Error
);

codes.ERR_PACKAGE_IMPORT_NOT_DEFINED = createError(
  'ERR_PACKAGE_IMPORT_NOT_DEFINED',
  /**
   * @param {string} specifier
   * @param {string} packagePath
   * @param {string} base
   */
  (specifier, packagePath, base) => {
    return `Package import specifier "${specifier}" is not defined${
      packagePath ? ` in package ${packagePath}package.json` : ''
    } imported from ${base}`
  },
  TypeError
);

codes.ERR_PACKAGE_PATH_NOT_EXPORTED = createError(
  'ERR_PACKAGE_PATH_NOT_EXPORTED',
  /**
   * @param {string} pkgPath
   * @param {string} subpath
   * @param {string} [base]
   */
  (pkgPath, subpath, base = undefined) => {
    if (subpath === '.')
      return `No "exports" main defined in ${pkgPath}package.json${
        base ? ` imported from ${base}` : ''
      }`
    return `Package subpath '${subpath}' is not defined by "exports" in ${pkgPath}package.json${
      base ? ` imported from ${base}` : ''
    }`
  },
  Error
);

codes.ERR_UNSUPPORTED_DIR_IMPORT = createError(
  'ERR_UNSUPPORTED_DIR_IMPORT',
  "Directory import '%s' is not supported " +
    'resolving ES modules imported from %s',
  Error
);

codes.ERR_UNKNOWN_FILE_EXTENSION = createError(
  'ERR_UNKNOWN_FILE_EXTENSION',
  /**
   * @param {string} ext
   * @param {string} path
   */
  (ext, path) => {
    return `Unknown file extension "${ext}" for ${path}`
  },
  TypeError
);

codes.ERR_INVALID_ARG_VALUE = createError(
  'ERR_INVALID_ARG_VALUE',
  /**
   * @param {string} name
   * @param {unknown} value
   * @param {string} [reason='is invalid']
   */
  (name, value, reason = 'is invalid') => {
    let inspected = node_util.inspect(value);

    if (inspected.length > 128) {
      inspected = `${inspected.slice(0, 128)}...`;
    }

    const type = name.includes('.') ? 'property' : 'argument';

    return `The ${type} '${name}' ${reason}. Received ${inspected}`
  },
  TypeError
  // Note: extra classes have been shaken out.
  // , RangeError
);

codes.ERR_UNSUPPORTED_ESM_URL_SCHEME = createError(
  'ERR_UNSUPPORTED_ESM_URL_SCHEME',
  /**
   * @param {URL} url
   * @param {Array<string>} supported
   */
  (url, supported) => {
    let message = `Only URLs with a scheme in: ${formatList(
      supported
    )} are supported by the default ESM loader`;

    if (isWindows && url.protocol.length === 2) {
      message += '. On Windows, absolute paths must be valid file:// URLs';
    }

    message += `. Received protocol '${url.protocol}'`;
    return message
  },
  Error
);

/**
 * Utility function for registering the error codes. Only used here. Exported
 * *only* to allow for testing.
 * @param {string} sym
 * @param {MessageFunction | string} value
 * @param {ErrorConstructor} def
 * @returns {new (...args: Array<any>) => Error}
 */
function createError(sym, value, def) {
  // Special case for SystemError that formats the error message differently
  // The SystemErrors only have SystemError as their base classes.
  messages.set(sym, value);

  return makeNodeErrorWithCode(def, sym)
}

/**
 * @param {ErrorConstructor} Base
 * @param {string} key
 * @returns {ErrorConstructor}
 */
function makeNodeErrorWithCode(Base, key) {
  // @ts-expect-error It’s a Node error.
  return NodeError
  /**
   * @param {Array<unknown>} args
   */
  function NodeError(...args) {
    const limit = Error.stackTraceLimit;
    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;
    const error = new Base();
    // Reset the limit and setting the name property.
    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;
    const message = getMessage(key, args, error);
    Object.defineProperties(error, {
      // Note: no need to implement `kIsNodeError` symbol, would be hard,
      // probably.
      message: {
        value: message,
        enumerable: false,
        writable: true,
        configurable: true
      },
      toString: {
        /** @this {Error} */
        value() {
          return `${this.name} [${key}]: ${this.message}`
        },
        enumerable: false,
        writable: true,
        configurable: true
      }
    });

    captureLargerStackTrace(error);
    // @ts-expect-error It’s a Node error.
    error.code = key;
    return error
  }
}

/**
 * @returns {boolean}
 */
function isErrorStackTraceLimitWritable() {
  // Do no touch Error.stackTraceLimit as V8 would attempt to install
  // it again during deserialization.
  try {
    // @ts-expect-error: not in types?
    if (v8__default.startupSnapshot.isBuildingSnapshot()) {
      return false
    }
  } catch {}

  const desc = Object.getOwnPropertyDescriptor(Error, 'stackTraceLimit');
  if (desc === undefined) {
    return Object.isExtensible(Error)
  }

  return own$1.call(desc, 'writable') && desc.writable !== undefined
    ? desc.writable
    : desc.set !== undefined
}

/**
 * This function removes unnecessary frames from Node.js core errors.
 * @template {(...args: unknown[]) => unknown} T
 * @param {T} fn
 * @returns {T}
 */
function hideStackFrames(fn) {
  // We rename the functions that will be hidden to cut off the stacktrace
  // at the outermost one
  const hidden = nodeInternalPrefix + fn.name;
  Object.defineProperty(fn, 'name', {value: hidden});
  return fn
}

const captureLargerStackTrace = hideStackFrames(
  /**
   * @param {Error} error
   * @returns {Error}
   */
  // @ts-expect-error: fine
  function (error) {
    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();
    if (stackTraceLimitIsWritable) {
      userStackTraceLimit = Error.stackTraceLimit;
      Error.stackTraceLimit = Number.POSITIVE_INFINITY;
    }

    Error.captureStackTrace(error);

    // Reset the limit
    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;

    return error
  }
);

/**
 * @param {string} key
 * @param {Array<unknown>} args
 * @param {Error} self
 * @returns {string}
 */
function getMessage(key, args, self) {
  const message = messages.get(key);
  assert__default(message !== undefined, 'expected `message` to be found');

  if (typeof message === 'function') {
    assert__default(
      message.length <= args.length, // Default options do not count.
      `Code: ${key}; The provided arguments length (${args.length}) does not ` +
        `match the required ones (${message.length}).`
    );
    return Reflect.apply(message, self, args)
  }

  const regex = /%[dfijoOs]/g;
  let expectedLength = 0;
  while (regex.exec(message) !== null) expectedLength++;
  assert__default(
    expectedLength === args.length,
    `Code: ${key}; The provided arguments length (${args.length}) does not ` +
      `match the required ones (${expectedLength}).`
  );
  if (args.length === 0) return message

  args.unshift(message);
  return Reflect.apply(node_util.format, null, args)
}

/**
 * Determine the specific type of a value for type-mismatch errors.
 * @param {unknown} value
 * @returns {string}
 */
function determineSpecificType(value) {
  if (value === null || value === undefined) {
    return String(value)
  }

  if (typeof value === 'function' && value.name) {
    return `function ${value.name}`
  }

  if (typeof value === 'object') {
    if (value.constructor && value.constructor.name) {
      return `an instance of ${value.constructor.name}`
    }

    return `${node_util.inspect(value, {depth: -1})}`
  }

  let inspected = node_util.inspect(value, {colors: false});

  if (inspected.length > 28) {
    inspected = `${inspected.slice(0, 25)}...`;
  }

  return `type ${typeof value} (${inspected})`
}

// Manually “tree shaken” from:
// <https://github.com/nodejs/node/blob/3e74590/lib/internal/modules/package_json_reader.js>
// Last checked on: Apr 24, 2023.
// Removed the native dependency.
// Also: no need to cache, we do that in resolve already.


const reader = {read};
const packageJsonReader = reader;

/**
 * @param {string} jsonPath
 * @returns {{string: string | undefined}}
 */
function read(jsonPath) {
  try {
    const string = fs__default.readFileSync(
      path__default.toNamespacedPath(path__default.join(path__default.dirname(jsonPath), 'package.json')),
      'utf8'
    );
    return {string}
  } catch (error) {
    const exception = /** @type {ErrnoException} */ (error);

    if (exception.code === 'ENOENT') {
      return {string: undefined}
      // Throw all other errors.
      /* c8 ignore next 4 */
    }

    throw exception
  }
}

// Manually “tree shaken” from:
// <https://github.com/nodejs/node/blob/3e74590/lib/internal/modules/esm/package_config.js>
// Last checked on: Apr 24, 2023.


const {ERR_INVALID_PACKAGE_CONFIG: ERR_INVALID_PACKAGE_CONFIG$1} = codes;

/** @type {Map<string, PackageConfig>} */
const packageJsonCache = new Map();

/**
 * @param {string} path
 * @param {URL | string} specifier Note: `specifier` is actually optional, not base.
 * @param {URL} [base]
 * @returns {PackageConfig}
 */
function getPackageConfig(path, specifier, base) {
  const existing = packageJsonCache.get(path);
  if (existing !== undefined) {
    return existing
  }

  const source = packageJsonReader.read(path).string;

  if (source === undefined) {
    /** @type {PackageConfig} */
    const packageConfig = {
      pjsonPath: path,
      exists: false,
      main: undefined,
      name: undefined,
      type: 'none',
      exports: undefined,
      imports: undefined
    };
    packageJsonCache.set(path, packageConfig);
    return packageConfig
  }

  /** @type {Record<string, unknown>} */
  let packageJson;
  try {
    packageJson = JSON.parse(source);
  } catch (error) {
    const exception = /** @type {ErrnoException} */ (error);

    throw new ERR_INVALID_PACKAGE_CONFIG$1(
      path,
      (base ? `"${specifier}" from ` : '') + node_url.fileURLToPath(base || specifier),
      exception.message
    )
  }

  const {exports, imports, main, name, type} = packageJson;

  /** @type {PackageConfig} */
  const packageConfig = {
    pjsonPath: path,
    exists: true,
    main: typeof main === 'string' ? main : undefined,
    name: typeof name === 'string' ? name : undefined,
    type: type === 'module' || type === 'commonjs' ? type : 'none',
    // @ts-expect-error Assume `Record<string, unknown>`.
    exports,
    // @ts-expect-error Assume `Record<string, unknown>`.
    imports: imports && typeof imports === 'object' ? imports : undefined
  };
  packageJsonCache.set(path, packageConfig);
  return packageConfig
}

/**
 * @param {URL} resolved
 * @returns {PackageConfig}
 */
function getPackageScopeConfig(resolved) {
  let packageJsonUrl = new node_url.URL('package.json', resolved);

  while (true) {
    const packageJsonPath = packageJsonUrl.pathname;

    if (packageJsonPath.endsWith('node_modules/package.json')) break

    const packageConfig = getPackageConfig(
      node_url.fileURLToPath(packageJsonUrl),
      resolved
    );
    if (packageConfig.exists) return packageConfig

    const lastPackageJsonUrl = packageJsonUrl;
    packageJsonUrl = new node_url.URL('../package.json', packageJsonUrl);

    // Terminates at root where ../package.json equals ../../package.json
    // (can't just check "/package.json" for Windows support).
    if (packageJsonUrl.pathname === lastPackageJsonUrl.pathname) break
  }

  const packageJsonPath = node_url.fileURLToPath(packageJsonUrl);
  /** @type {PackageConfig} */
  const packageConfig = {
    pjsonPath: packageJsonPath,
    exists: false,
    main: undefined,
    name: undefined,
    type: 'none',
    exports: undefined,
    imports: undefined
  };
  packageJsonCache.set(packageJsonPath, packageConfig);
  return packageConfig
}

// Manually “tree shaken” from:
// <https://github.com/nodejs/node/blob/3e74590/lib/internal/modules/esm/resolve.js>
// Last checked on: Apr 24, 2023.
//
// This file solves a circular dependency.
// In Node.js, `getPackageType` is in `resolve.js`.
// `resolve.js` imports `get-format.js`, which needs `getPackageType`.
// We split that up so that bundlers don’t fail.


/**
 * @param {URL} url
 * @returns {PackageType}
 */
function getPackageType(url) {
  const packageConfig = getPackageScopeConfig(url);
  return packageConfig.type
}

// Manually “tree shaken” from:
// <https://github.com/nodejs/node/blob/3e74590/lib/internal/modules/esm/get_format.js>
// Last checked on: Apr 24, 2023.


const {ERR_UNKNOWN_FILE_EXTENSION} = codes;

const hasOwnProperty = {}.hasOwnProperty;

/** @type {Record<string, string>} */
const extensionFormatMap = {
  // @ts-expect-error: hush.
  __proto__: null,
  '.cjs': 'commonjs',
  '.js': 'module',
  '.json': 'json',
  '.mjs': 'module'
};

/**
 * @param {string | null} mime
 * @returns {string | null}
 */
function mimeToFormat(mime) {
  if (
    mime &&
    /\s*(text|application)\/javascript\s*(;\s*charset=utf-?8\s*)?/i.test(mime)
  )
    return 'module'
  if (mime === 'application/json') return 'json'
  return null
}

/**
 * @callback ProtocolHandler
 * @param {URL} parsed
 * @param {{parentURL: string}} context
 * @param {boolean} ignoreErrors
 * @returns {string | null | void}
 */

/**
 * @type {Record<string, ProtocolHandler>}
 */
const protocolHandlers = {
  // @ts-expect-error: hush.
  __proto__: null,
  'data:': getDataProtocolModuleFormat,
  'file:': getFileProtocolModuleFormat,
  'http:': getHttpProtocolModuleFormat,
  'https:': getHttpProtocolModuleFormat,
  'node:'() {
    return 'builtin'
  }
};

/**
 * @param {URL} parsed
 */
function getDataProtocolModuleFormat(parsed) {
  const {1: mime} = /^([^/]+\/[^;,]+)[^,]*?(;base64)?,/.exec(
    parsed.pathname
  ) || [null, null, null];
  return mimeToFormat(mime)
}

/**
 * Returns the file extension from a URL.
 *
 * Should give similar result to
 * `require('node:path').extname(require('node:url').fileURLToPath(url))`
 * when used with a `file:` URL.
 *
 * @param {URL} url
 * @returns {string}
 */
function extname(url) {
  const pathname = url.pathname;
  let index = pathname.length;

  while (index--) {
    const code = pathname.codePointAt(index);

    if (code === 47 /* `/` */) {
      return ''
    }

    if (code === 46 /* `.` */) {
      return pathname.codePointAt(index - 1) === 47 /* `/` */
        ? ''
        : pathname.slice(index)
    }
  }

  return ''
}

/**
 * @type {ProtocolHandler}
 */
function getFileProtocolModuleFormat(url, _context, ignoreErrors) {
  const ext = extname(url);

  if (ext === '.js') {
    return getPackageType(url) === 'module' ? 'module' : 'commonjs'
  }

  const format = extensionFormatMap[ext];
  if (format) return format

  // Explicit undefined return indicates load hook should rerun format check
  if (ignoreErrors) {
    return undefined
  }

  const filepath = node_url.fileURLToPath(url);
  throw new ERR_UNKNOWN_FILE_EXTENSION(ext, filepath)
}

function getHttpProtocolModuleFormat() {
  // To do: HTTPS imports.
}

/**
 * @param {URL} url
 * @param {{parentURL: string}} context
 * @returns {string | null}
 */
function defaultGetFormatWithoutErrors(url, context) {
  if (!hasOwnProperty.call(protocolHandlers, url.protocol)) {
    return null
  }

  return protocolHandlers[url.protocol](url, context, true) || null
}

// Manually “tree shaken” from:
// <https://github.com/nodejs/node/blob/3e74590/lib/internal/modules/esm/resolve.js>
// Last checked on: Apr 24, 2023.


const RegExpPrototypeSymbolReplace = RegExp.prototype[Symbol.replace];

const {
  ERR_NETWORK_IMPORT_DISALLOWED,
  ERR_INVALID_MODULE_SPECIFIER,
  ERR_INVALID_PACKAGE_CONFIG,
  ERR_INVALID_PACKAGE_TARGET,
  ERR_MODULE_NOT_FOUND,
  ERR_PACKAGE_IMPORT_NOT_DEFINED,
  ERR_PACKAGE_PATH_NOT_EXPORTED,
  ERR_UNSUPPORTED_DIR_IMPORT,
  ERR_UNSUPPORTED_ESM_URL_SCHEME
} = codes;

const own = {}.hasOwnProperty;

const invalidSegmentRegEx =
  /(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\|\/|$)/i;
const deprecatedInvalidSegmentRegEx =
  /(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i;
const invalidPackageNameRegEx = /^\.|%|\\/;
const patternRegEx = /\*/g;
const encodedSepRegEx = /%2f|%5c/i;
/** @type {Set<string>} */
const emittedPackageWarnings = new Set();

const doubleSlashRegEx = /[/\\]{2}/;

/**
 *
 * @param {string} target
 * @param {string} request
 * @param {string} match
 * @param {URL} packageJsonUrl
 * @param {boolean} internal
 * @param {URL} base
 * @param {boolean} isTarget
 */
function emitInvalidSegmentDeprecation(
  target,
  request,
  match,
  packageJsonUrl,
  internal,
  base,
  isTarget
) {
  const pjsonPath = node_url.fileURLToPath(packageJsonUrl);
  const double = doubleSlashRegEx.exec(isTarget ? target : request) !== null;
  process__default.emitWarning(
    `Use of deprecated ${
      double ? 'double slash' : 'leading or trailing slash matching'
    } resolving "${target}" for module ` +
      `request "${request}" ${
        request === match ? '' : `matched to "${match}" `
      }in the "${
        internal ? 'imports' : 'exports'
      }" field module resolution of the package at ${pjsonPath}${
        base ? ` imported from ${node_url.fileURLToPath(base)}` : ''
      }.`,
    'DeprecationWarning',
    'DEP0166'
  );
}

/**
 * @param {URL} url
 * @param {URL} packageJsonUrl
 * @param {URL} base
 * @param {unknown} [main]
 * @returns {void}
 */
function emitLegacyIndexDeprecation(url, packageJsonUrl, base, main) {
  const format = defaultGetFormatWithoutErrors(url, {parentURL: base.href});
  if (format !== 'module') return
  const path = node_url.fileURLToPath(url.href);
  const pkgPath = node_url.fileURLToPath(new node_url.URL('.', packageJsonUrl));
  const basePath = node_url.fileURLToPath(base);
  if (main)
    process__default.emitWarning(
      `Package ${pkgPath} has a "main" field set to ${JSON.stringify(main)}, ` +
        `excluding the full filename and extension to the resolved file at "${path.slice(
          pkgPath.length
        )}", imported from ${basePath}.\n Automatic extension resolution of the "main" field is` +
        'deprecated for ES modules.',
      'DeprecationWarning',
      'DEP0151'
    );
  else
    process__default.emitWarning(
      `No "main" or "exports" field defined in the package.json for ${pkgPath} resolving the main entry point "${path.slice(
        pkgPath.length
      )}", imported from ${basePath}.\nDefault "index" lookups for the main are deprecated for ES modules.`,
      'DeprecationWarning',
      'DEP0151'
    );
}

/**
 * @param {string} path
 * @returns {Stats}
 */
function tryStatSync(path) {
  // Note: from Node 15 onwards we can use `throwIfNoEntry: false` instead.
  try {
    return fs.statSync(path)
  } catch {
    return new fs.Stats()
  }
}

/**
 * Legacy CommonJS main resolution:
 * 1. let M = pkg_url + (json main field)
 * 2. TRY(M, M.js, M.json, M.node)
 * 3. TRY(M/index.js, M/index.json, M/index.node)
 * 4. TRY(pkg_url/index.js, pkg_url/index.json, pkg_url/index.node)
 * 5. NOT_FOUND
 *
 * @param {URL} url
 * @returns {boolean}
 */
function fileExists(url) {
  const stats = fs.statSync(url, {throwIfNoEntry: false});
  const isFile = stats ? stats.isFile() : undefined;
  return isFile === null || isFile === undefined ? false : isFile
}

/**
 * @param {URL} packageJsonUrl
 * @param {PackageConfig} packageConfig
 * @param {URL} base
 * @returns {URL}
 */
function legacyMainResolve(packageJsonUrl, packageConfig, base) {
  /** @type {URL | undefined} */
  let guess;
  if (packageConfig.main !== undefined) {
    guess = new node_url.URL(packageConfig.main, packageJsonUrl);
    // Note: fs check redundances will be handled by Descriptor cache here.
    if (fileExists(guess)) return guess

    const tries = [
      `./${packageConfig.main}.js`,
      `./${packageConfig.main}.json`,
      `./${packageConfig.main}.node`,
      `./${packageConfig.main}/index.js`,
      `./${packageConfig.main}/index.json`,
      `./${packageConfig.main}/index.node`
    ];
    let i = -1;

    while (++i < tries.length) {
      guess = new node_url.URL(tries[i], packageJsonUrl);
      if (fileExists(guess)) break
      guess = undefined;
    }

    if (guess) {
      emitLegacyIndexDeprecation(
        guess,
        packageJsonUrl,
        base,
        packageConfig.main
      );
      return guess
    }
    // Fallthrough.
  }

  const tries = ['./index.js', './index.json', './index.node'];
  let i = -1;

  while (++i < tries.length) {
    guess = new node_url.URL(tries[i], packageJsonUrl);
    if (fileExists(guess)) break
    guess = undefined;
  }

  if (guess) {
    emitLegacyIndexDeprecation(guess, packageJsonUrl, base, packageConfig.main);
    return guess
  }

  // Not found.
  throw new ERR_MODULE_NOT_FOUND(
    node_url.fileURLToPath(new node_url.URL('.', packageJsonUrl)),
    node_url.fileURLToPath(base)
  )
}

/**
 * @param {URL} resolved
 * @param {URL} base
 * @param {boolean} [preserveSymlinks]
 * @returns {URL}
 */
function finalizeResolution(resolved, base, preserveSymlinks) {
  if (encodedSepRegEx.exec(resolved.pathname) !== null)
    throw new ERR_INVALID_MODULE_SPECIFIER(
      resolved.pathname,
      'must not include encoded "/" or "\\" characters',
      node_url.fileURLToPath(base)
    )

  const filePath = node_url.fileURLToPath(resolved);

  const stats = tryStatSync(
    filePath.endsWith('/') ? filePath.slice(-1) : filePath
  );

  if (stats.isDirectory()) {
    const error = new ERR_UNSUPPORTED_DIR_IMPORT(filePath, node_url.fileURLToPath(base));
    // @ts-expect-error Add this for `import.meta.resolve`.
    error.url = String(resolved);
    throw error
  }

  if (!stats.isFile()) {
    throw new ERR_MODULE_NOT_FOUND(
      filePath || resolved.pathname,
      base && node_url.fileURLToPath(base),
      'module'
    )
  }

  if (!preserveSymlinks) {
    const real = fs.realpathSync(filePath);
    const {search, hash} = resolved;
    resolved = node_url.pathToFileURL(real + (filePath.endsWith(path__default.sep) ? '/' : ''));
    resolved.search = search;
    resolved.hash = hash;
  }

  return resolved
}

/**
 * @param {string} specifier
 * @param {URL | undefined} packageJsonUrl
 * @param {URL} base
 * @returns {Error}
 */
function importNotDefined(specifier, packageJsonUrl, base) {
  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(
    specifier,
    packageJsonUrl && node_url.fileURLToPath(new node_url.URL('.', packageJsonUrl)),
    node_url.fileURLToPath(base)
  )
}

/**
 * @param {string} subpath
 * @param {URL} packageJsonUrl
 * @param {URL} base
 * @returns {Error}
 */
function exportsNotFound(subpath, packageJsonUrl, base) {
  return new ERR_PACKAGE_PATH_NOT_EXPORTED(
    node_url.fileURLToPath(new node_url.URL('.', packageJsonUrl)),
    subpath,
    base && node_url.fileURLToPath(base)
  )
}

/**
 * @param {string} request
 * @param {string} match
 * @param {URL} packageJsonUrl
 * @param {boolean} internal
 * @param {URL} [base]
 * @returns {never}
 */
function throwInvalidSubpath(request, match, packageJsonUrl, internal, base) {
  const reason = `request is not a valid match in pattern "${match}" for the "${
    internal ? 'imports' : 'exports'
  }" resolution of ${node_url.fileURLToPath(packageJsonUrl)}`;
  throw new ERR_INVALID_MODULE_SPECIFIER(
    request,
    reason,
    base && node_url.fileURLToPath(base)
  )
}

/**
 * @param {string} subpath
 * @param {unknown} target
 * @param {URL} packageJsonUrl
 * @param {boolean} internal
 * @param {URL} [base]
 * @returns {Error}
 */
function invalidPackageTarget(subpath, target, packageJsonUrl, internal, base) {
  target =
    typeof target === 'object' && target !== null
      ? JSON.stringify(target, null, '')
      : `${target}`;

  return new ERR_INVALID_PACKAGE_TARGET(
    node_url.fileURLToPath(new node_url.URL('.', packageJsonUrl)),
    subpath,
    target,
    internal,
    base && node_url.fileURLToPath(base)
  )
}

/**
 * @param {string} target
 * @param {string} subpath
 * @param {string} match
 * @param {URL} packageJsonUrl
 * @param {URL} base
 * @param {boolean} pattern
 * @param {boolean} internal
 * @param {boolean} isPathMap
 * @param {Set<string> | undefined} conditions
 * @returns {URL}
 */
function resolvePackageTargetString(
  target,
  subpath,
  match,
  packageJsonUrl,
  base,
  pattern,
  internal,
  isPathMap,
  conditions
) {
  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')
    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)

  if (!target.startsWith('./')) {
    if (internal && !target.startsWith('../') && !target.startsWith('/')) {
      let isURL = false;

      try {
        new node_url.URL(target);
        isURL = true;
      } catch {
        // Continue regardless of error.
      }

      if (!isURL) {
        const exportTarget = pattern
          ? RegExpPrototypeSymbolReplace.call(
              patternRegEx,
              target,
              () => subpath
            )
          : target + subpath;

        return packageResolve(exportTarget, packageJsonUrl, conditions)
      }
    }

    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)
  }

  if (invalidSegmentRegEx.exec(target.slice(2)) !== null) {
    if (deprecatedInvalidSegmentRegEx.exec(target.slice(2)) === null) {
      if (!isPathMap) {
        const request = pattern
          ? match.replace('*', () => subpath)
          : match + subpath;
        const resolvedTarget = pattern
          ? RegExpPrototypeSymbolReplace.call(
              patternRegEx,
              target,
              () => subpath
            )
          : target;
        emitInvalidSegmentDeprecation(
          resolvedTarget,
          request,
          match,
          packageJsonUrl,
          internal,
          base,
          true
        );
      }
    } else {
      throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)
    }
  }

  const resolved = new node_url.URL(target, packageJsonUrl);
  const resolvedPath = resolved.pathname;
  const packagePath = new node_url.URL('.', packageJsonUrl).pathname;

  if (!resolvedPath.startsWith(packagePath))
    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)

  if (subpath === '') return resolved

  if (invalidSegmentRegEx.exec(subpath) !== null) {
    const request = pattern
      ? match.replace('*', () => subpath)
      : match + subpath;
    if (deprecatedInvalidSegmentRegEx.exec(subpath) === null) {
      if (!isPathMap) {
        const resolvedTarget = pattern
          ? RegExpPrototypeSymbolReplace.call(
              patternRegEx,
              target,
              () => subpath
            )
          : target;
        emitInvalidSegmentDeprecation(
          resolvedTarget,
          request,
          match,
          packageJsonUrl,
          internal,
          base,
          false
        );
      }
    } else {
      throwInvalidSubpath(request, match, packageJsonUrl, internal, base);
    }
  }

  if (pattern) {
    return new node_url.URL(
      RegExpPrototypeSymbolReplace.call(
        patternRegEx,
        resolved.href,
        () => subpath
      )
    )
  }

  return new node_url.URL(subpath, resolved)
}

/**
 * @param {string} key
 * @returns {boolean}
 */
function isArrayIndex(key) {
  const keyNumber = Number(key);
  if (`${keyNumber}` !== key) return false
  return keyNumber >= 0 && keyNumber < 0xff_ff_ff_ff
}

/**
 * @param {URL} packageJsonUrl
 * @param {unknown} target
 * @param {string} subpath
 * @param {string} packageSubpath
 * @param {URL} base
 * @param {boolean} pattern
 * @param {boolean} internal
 * @param {boolean} isPathMap
 * @param {Set<string> | undefined} conditions
 * @returns {URL | null}
 */
function resolvePackageTarget(
  packageJsonUrl,
  target,
  subpath,
  packageSubpath,
  base,
  pattern,
  internal,
  isPathMap,
  conditions
) {
  if (typeof target === 'string') {
    return resolvePackageTargetString(
      target,
      subpath,
      packageSubpath,
      packageJsonUrl,
      base,
      pattern,
      internal,
      isPathMap,
      conditions
    )
  }

  if (Array.isArray(target)) {
    /** @type {Array<unknown>} */
    const targetList = target;
    if (targetList.length === 0) return null

    /** @type {ErrnoException | null | undefined} */
    let lastException;
    let i = -1;

    while (++i < targetList.length) {
      const targetItem = targetList[i];
      /** @type {URL | null} */
      let resolveResult;
      try {
        resolveResult = resolvePackageTarget(
          packageJsonUrl,
          targetItem,
          subpath,
          packageSubpath,
          base,
          pattern,
          internal,
          isPathMap,
          conditions
        );
      } catch (error) {
        const exception = /** @type {ErrnoException} */ (error);
        lastException = exception;
        if (exception.code === 'ERR_INVALID_PACKAGE_TARGET') continue
        throw error
      }

      if (resolveResult === undefined) continue

      if (resolveResult === null) {
        lastException = null;
        continue
      }

      return resolveResult
    }

    if (lastException === undefined || lastException === null) {
      return null
    }

    throw lastException
  }

  if (typeof target === 'object' && target !== null) {
    const keys = Object.getOwnPropertyNames(target);
    let i = -1;

    while (++i < keys.length) {
      const key = keys[i];
      if (isArrayIndex(key)) {
        throw new ERR_INVALID_PACKAGE_CONFIG(
          node_url.fileURLToPath(packageJsonUrl),
          base,
          '"exports" cannot contain numeric property keys.'
        )
      }
    }

    i = -1;

    while (++i < keys.length) {
      const key = keys[i];
      if (key === 'default' || (conditions && conditions.has(key))) {
        // @ts-expect-error: indexable.
        const conditionalTarget = /** @type {unknown} */ (target[key]);
        const resolveResult = resolvePackageTarget(
          packageJsonUrl,
          conditionalTarget,
          subpath,
          packageSubpath,
          base,
          pattern,
          internal,
          isPathMap,
          conditions
        );
        if (resolveResult === undefined) continue
        return resolveResult
      }
    }

    return null
  }

  if (target === null) {
    return null
  }

  throw invalidPackageTarget(
    packageSubpath,
    target,
    packageJsonUrl,
    internal,
    base
  )
}

/**
 * @param {unknown} exports
 * @param {URL} packageJsonUrl
 * @param {URL} base
 * @returns {boolean}
 */
function isConditionalExportsMainSugar(exports, packageJsonUrl, base) {
  if (typeof exports === 'string' || Array.isArray(exports)) return true
  if (typeof exports !== 'object' || exports === null) return false

  const keys = Object.getOwnPropertyNames(exports);
  let isConditionalSugar = false;
  let i = 0;
  let j = -1;
  while (++j < keys.length) {
    const key = keys[j];
    const curIsConditionalSugar = key === '' || key[0] !== '.';
    if (i++ === 0) {
      isConditionalSugar = curIsConditionalSugar;
    } else if (isConditionalSugar !== curIsConditionalSugar) {
      throw new ERR_INVALID_PACKAGE_CONFIG(
        node_url.fileURLToPath(packageJsonUrl),
        base,
        '"exports" cannot contain some keys starting with \'.\' and some not.' +
          ' The exports object must either be an object of package subpath keys' +
          ' or an object of main entry condition name keys only.'
      )
    }
  }

  return isConditionalSugar
}

/**
 * @param {string} match
 * @param {URL} pjsonUrl
 * @param {URL} base
 */
function emitTrailingSlashPatternDeprecation(match, pjsonUrl, base) {
  const pjsonPath = node_url.fileURLToPath(pjsonUrl);
  if (emittedPackageWarnings.has(pjsonPath + '|' + match)) return
  emittedPackageWarnings.add(pjsonPath + '|' + match);
  process__default.emitWarning(
    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +
      `"exports" field module resolution of the package at ${pjsonPath}${
        base ? ` imported from ${node_url.fileURLToPath(base)}` : ''
      }. Mapping specifiers ending in "/" is no longer supported.`,
    'DeprecationWarning',
    'DEP0155'
  );
}

/**
 * @param {URL} packageJsonUrl
 * @param {string} packageSubpath
 * @param {Record<string, unknown>} packageConfig
 * @param {URL} base
 * @param {Set<string> | undefined} conditions
 * @returns {URL}
 */
function packageExportsResolve(
  packageJsonUrl,
  packageSubpath,
  packageConfig,
  base,
  conditions
) {
  let exports = packageConfig.exports;

  if (isConditionalExportsMainSugar(exports, packageJsonUrl, base)) {
    exports = {'.': exports};
  }

  if (
    own.call(exports, packageSubpath) &&
    !packageSubpath.includes('*') &&
    !packageSubpath.endsWith('/')
  ) {
    // @ts-expect-error: indexable.
    const target = exports[packageSubpath];
    const resolveResult = resolvePackageTarget(
      packageJsonUrl,
      target,
      '',
      packageSubpath,
      base,
      false,
      false,
      false,
      conditions
    );
    if (resolveResult === null || resolveResult === undefined) {
      throw exportsNotFound(packageSubpath, packageJsonUrl, base)
    }

    return resolveResult
  }

  let bestMatch = '';
  let bestMatchSubpath = '';
  const keys = Object.getOwnPropertyNames(exports);
  let i = -1;

  while (++i < keys.length) {
    const key = keys[i];
    const patternIndex = key.indexOf('*');

    if (
      patternIndex !== -1 &&
      packageSubpath.startsWith(key.slice(0, patternIndex))
    ) {
      // When this reaches EOL, this can throw at the top of the whole function:
      //
      // if (StringPrototypeEndsWith(packageSubpath, '/'))
      //   throwInvalidSubpath(packageSubpath)
      //
      // To match "imports" and the spec.
      if (packageSubpath.endsWith('/')) {
        emitTrailingSlashPatternDeprecation(
          packageSubpath,
          packageJsonUrl,
          base
        );
      }

      const patternTrailer = key.slice(patternIndex + 1);

      if (
        packageSubpath.length >= key.length &&
        packageSubpath.endsWith(patternTrailer) &&
        patternKeyCompare(bestMatch, key) === 1 &&
        key.lastIndexOf('*') === patternIndex
      ) {
        bestMatch = key;
        bestMatchSubpath = packageSubpath.slice(
          patternIndex,
          packageSubpath.length - patternTrailer.length
        );
      }
    }
  }

  if (bestMatch) {
    // @ts-expect-error: indexable.
    const target = /** @type {unknown} */ (exports[bestMatch]);
    const resolveResult = resolvePackageTarget(
      packageJsonUrl,
      target,
      bestMatchSubpath,
      bestMatch,
      base,
      true,
      false,
      packageSubpath.endsWith('/'),
      conditions
    );

    if (resolveResult === null || resolveResult === undefined) {
      throw exportsNotFound(packageSubpath, packageJsonUrl, base)
    }

    return resolveResult
  }

  throw exportsNotFound(packageSubpath, packageJsonUrl, base)
}

/**
 * @param {string} a
 * @param {string} b
 */
function patternKeyCompare(a, b) {
  const aPatternIndex = a.indexOf('*');
  const bPatternIndex = b.indexOf('*');
  const baseLengthA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;
  const baseLengthB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;
  if (baseLengthA > baseLengthB) return -1
  if (baseLengthB > baseLengthA) return 1
  if (aPatternIndex === -1) return 1
  if (bPatternIndex === -1) return -1
  if (a.length > b.length) return -1
  if (b.length > a.length) return 1
  return 0
}

/**
 * @param {string} name
 * @param {URL} base
 * @param {Set<string>} [conditions]
 * @returns {URL}
 */
function packageImportsResolve(name, base, conditions) {
  if (name === '#' || name.startsWith('#/') || name.endsWith('/')) {
    const reason = 'is not a valid internal imports specifier name';
    throw new ERR_INVALID_MODULE_SPECIFIER(name, reason, node_url.fileURLToPath(base))
  }

  /** @type {URL | undefined} */
  let packageJsonUrl;

  const packageConfig = getPackageScopeConfig(base);

  if (packageConfig.exists) {
    packageJsonUrl = node_url.pathToFileURL(packageConfig.pjsonPath);
    const imports = packageConfig.imports;
    if (imports) {
      if (own.call(imports, name) && !name.includes('*')) {
        const resolveResult = resolvePackageTarget(
          packageJsonUrl,
          imports[name],
          '',
          name,
          base,
          false,
          true,
          false,
          conditions
        );
        if (resolveResult !== null && resolveResult !== undefined) {
          return resolveResult
        }
      } else {
        let bestMatch = '';
        let bestMatchSubpath = '';
        const keys = Object.getOwnPropertyNames(imports);
        let i = -1;

        while (++i < keys.length) {
          const key = keys[i];
          const patternIndex = key.indexOf('*');

          if (patternIndex !== -1 && name.startsWith(key.slice(0, -1))) {
            const patternTrailer = key.slice(patternIndex + 1);
            if (
              name.length >= key.length &&
              name.endsWith(patternTrailer) &&
              patternKeyCompare(bestMatch, key) === 1 &&
              key.lastIndexOf('*') === patternIndex
            ) {
              bestMatch = key;
              bestMatchSubpath = name.slice(
                patternIndex,
                name.length - patternTrailer.length
              );
            }
          }
        }

        if (bestMatch) {
          const target = imports[bestMatch];
          const resolveResult = resolvePackageTarget(
            packageJsonUrl,
            target,
            bestMatchSubpath,
            bestMatch,
            base,
            true,
            true,
            false,
            conditions
          );

          if (resolveResult !== null && resolveResult !== undefined) {
            return resolveResult
          }
        }
      }
    }
  }

  throw importNotDefined(name, packageJsonUrl, base)
}

// Note: In Node.js, `getPackageType` is here.
// To prevent a circular dependency, we move it to
// `resolve-get-package-type.js`.

/**
 * @param {string} specifier
 * @param {URL} base
 */
function parsePackageName(specifier, base) {
  let separatorIndex = specifier.indexOf('/');
  let validPackageName = true;
  let isScoped = false;
  if (specifier[0] === '@') {
    isScoped = true;
    if (separatorIndex === -1 || specifier.length === 0) {
      validPackageName = false;
    } else {
      separatorIndex = specifier.indexOf('/', separatorIndex + 1);
    }
  }

  const packageName =
    separatorIndex === -1 ? specifier : specifier.slice(0, separatorIndex);

  // Package name cannot have leading . and cannot have percent-encoding or
  // \\ separators.
  if (invalidPackageNameRegEx.exec(packageName) !== null) {
    validPackageName = false;
  }

  if (!validPackageName) {
    throw new ERR_INVALID_MODULE_SPECIFIER(
      specifier,
      'is not a valid package name',
      node_url.fileURLToPath(base)
    )
  }

  const packageSubpath =
    '.' + (separatorIndex === -1 ? '' : specifier.slice(separatorIndex));

  return {packageName, packageSubpath, isScoped}
}

/**
 * @param {string} specifier
 * @param {URL} base
 * @param {Set<string> | undefined} conditions
 * @returns {URL}
 */
function packageResolve(specifier, base, conditions) {
  if (node_module.builtinModules.includes(specifier)) {
    return new node_url.URL('node:' + specifier)
  }

  const {packageName, packageSubpath, isScoped} = parsePackageName(
    specifier,
    base
  );

  // ResolveSelf
  const packageConfig = getPackageScopeConfig(base);

  // Can’t test.
  /* c8 ignore next 16 */
  if (packageConfig.exists) {
    const packageJsonUrl = node_url.pathToFileURL(packageConfig.pjsonPath);
    if (
      packageConfig.name === packageName &&
      packageConfig.exports !== undefined &&
      packageConfig.exports !== null
    ) {
      return packageExportsResolve(
        packageJsonUrl,
        packageSubpath,
        packageConfig,
        base,
        conditions
      )
    }
  }

  let packageJsonUrl = new node_url.URL(
    './node_modules/' + packageName + '/package.json',
    base
  );
  let packageJsonPath = node_url.fileURLToPath(packageJsonUrl);
  /** @type {string} */
  let lastPath;
  do {
    const stat = tryStatSync(packageJsonPath.slice(0, -13));
    if (!stat.isDirectory()) {
      lastPath = packageJsonPath;
      packageJsonUrl = new node_url.URL(
        (isScoped ? '../../../../node_modules/' : '../../../node_modules/') +
          packageName +
          '/package.json',
        packageJsonUrl
      );
      packageJsonPath = node_url.fileURLToPath(packageJsonUrl);
      continue
    }

    // Package match.
    const packageConfig = getPackageConfig(packageJsonPath, specifier, base);
    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {
      return packageExportsResolve(
        packageJsonUrl,
        packageSubpath,
        packageConfig,
        base,
        conditions
      )
    }

    if (packageSubpath === '.') {
      return legacyMainResolve(packageJsonUrl, packageConfig, base)
    }

    return new node_url.URL(packageSubpath, packageJsonUrl)
    // Cross-platform root check.
  } while (packageJsonPath.length !== lastPath.length)

  throw new ERR_MODULE_NOT_FOUND(packageName, node_url.fileURLToPath(base))
}

/**
 * @param {string} specifier
 * @returns {boolean}
 */
function isRelativeSpecifier(specifier) {
  if (specifier[0] === '.') {
    if (specifier.length === 1 || specifier[1] === '/') return true
    if (
      specifier[1] === '.' &&
      (specifier.length === 2 || specifier[2] === '/')
    ) {
      return true
    }
  }

  return false
}

/**
 * @param {string} specifier
 * @returns {boolean}
 */
function shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {
  if (specifier === '') return false
  if (specifier[0] === '/') return true
  return isRelativeSpecifier(specifier)
}

/**
 * The “Resolver Algorithm Specification” as detailed in the Node docs (which is
 * sync and slightly lower-level than `resolve`).
 *
 * @param {string} specifier
 *   `/example.js`, `./example.js`, `../example.js`, `some-package`, `fs`, etc.
 * @param {URL} base
 *   Full URL (to a file) that `specifier` is resolved relative from.
 * @param {Set<string>} [conditions]
 *   Conditions.
 * @param {boolean} [preserveSymlinks]
 *   Keep symlinks instead of resolving them.
 * @returns {URL}
 *   A URL object to the found thing.
 */
function moduleResolve(specifier, base, conditions, preserveSymlinks) {
  const protocol = base.protocol;
  const isRemote = protocol === 'http:' || protocol === 'https:';
  // Order swapped from spec for minor perf gain.
  // Ok since relative URLs cannot parse as URLs.
  /** @type {URL | undefined} */
  let resolved;

  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {
    resolved = new node_url.URL(specifier, base);
  } else if (!isRemote && specifier[0] === '#') {
    resolved = packageImportsResolve(specifier, base, conditions);
  } else {
    try {
      resolved = new node_url.URL(specifier);
    } catch {
      if (!isRemote) {
        resolved = packageResolve(specifier, base, conditions);
      }
    }
  }

  assert__default(resolved !== undefined, 'expected to be defined');

  if (resolved.protocol !== 'file:') {
    return resolved
  }

  return finalizeResolution(resolved, base, preserveSymlinks)
}

function fileURLToPath(id) {
  if (typeof id === "string" && !id.startsWith("file://")) {
    return normalizeSlash(id);
  }
  return normalizeSlash(node_url.fileURLToPath(id));
}
const INVALID_CHAR_RE = /[\u0000-\u001F"#$&*+,/:;<=>?@[\]^`{|}\u007F]+/g;
function sanitizeURIComponent(name = "", replacement = "_") {
  return name.replace(INVALID_CHAR_RE, replacement).replace(/%../g, replacement);
}
function sanitizeFilePath(filePath = "") {
  return filePath.replace(/\?.*$/, "").split(/[/\\]/g).map((p) => sanitizeURIComponent(p)).join("/").replace(/^([A-Za-z])_\//, "$1:/");
}
function normalizeid(id) {
  if (typeof id !== "string") {
    id = id.toString();
  }
  if (/(node|data|http|https|file):/.test(id)) {
    return id;
  }
  if (BUILTIN_MODULES.has(id)) {
    return "node:" + id;
  }
  return "file://" + encodeURI(normalizeSlash(id));
}
async function loadURL(url) {
  const code = await fs.promises.readFile(fileURLToPath(url), "utf8");
  return code;
}
function toDataURL(code) {
  const base64 = Buffer.from(code).toString("base64");
  return `data:text/javascript;base64,${base64}`;
}
function isNodeBuiltin(id = "") {
  id = id.replace(/^node:/, "").split("/")[0];
  return BUILTIN_MODULES.has(id);
}
const ProtocolRegex = /^(?<proto>.{2,}?):.+$/;
function getProtocol(id) {
  const proto = id.match(ProtocolRegex);
  return proto ? proto.groups.proto : void 0;
}

const DEFAULT_CONDITIONS_SET = /* @__PURE__ */ new Set(["node", "import"]);
const DEFAULT_URL = node_url.pathToFileURL(process.cwd());
const DEFAULT_EXTENSIONS = [".mjs", ".cjs", ".js", ".json"];
const NOT_FOUND_ERRORS = /* @__PURE__ */ new Set([
  "ERR_MODULE_NOT_FOUND",
  "ERR_UNSUPPORTED_DIR_IMPORT",
  "MODULE_NOT_FOUND",
  "ERR_PACKAGE_PATH_NOT_EXPORTED"
]);
function _tryModuleResolve(id, url, conditions) {
  try {
    return moduleResolve(id, url, conditions);
  } catch (error) {
    if (!NOT_FOUND_ERRORS.has(error.code)) {
      throw error;
    }
  }
}
function _resolve(id, options = {}) {
  if (/(node|data|http|https):/.test(id)) {
    return id;
  }
  if (BUILTIN_MODULES.has(id)) {
    return "node:" + id;
  }
  if (pathe.isAbsolute(id) && fs.existsSync(id)) {
    const realPath2 = fs.realpathSync(fileURLToPath(id));
    return node_url.pathToFileURL(realPath2).toString();
  }
  const conditionsSet = options.conditions ? new Set(options.conditions) : DEFAULT_CONDITIONS_SET;
  const _urls = (Array.isArray(options.url) ? options.url : [options.url]).filter(Boolean).map((u) => new URL(normalizeid(u.toString())));
  if (_urls.length === 0) {
    _urls.push(DEFAULT_URL);
  }
  const urls = [..._urls];
  for (const url of _urls) {
    if (url.protocol === "file:") {
      urls.push(
        new URL("./", url),
        // If url is directory
        new URL(ufo.joinURL(url.pathname, "_index.js"), url),
        // TODO: Remove in next major version?
        new URL("node_modules", url)
      );
    }
  }
  let resolved;
  for (const url of urls) {
    resolved = _tryModuleResolve(id, url, conditionsSet);
    if (resolved) {
      break;
    }
    for (const prefix of ["", "/index"]) {
      for (const extension of options.extensions || DEFAULT_EXTENSIONS) {
        resolved = _tryModuleResolve(
          id + prefix + extension,
          url,
          conditionsSet
        );
        if (resolved) {
          break;
        }
      }
      if (resolved) {
        break;
      }
    }
    if (resolved) {
      break;
    }
  }
  if (!resolved) {
    const error = new Error(
      `Cannot find module ${id} imported from ${urls.join(", ")}`
    );
    error.code = "ERR_MODULE_NOT_FOUND";
    throw error;
  }
  const realPath = fs.realpathSync(fileURLToPath(resolved));
  return node_url.pathToFileURL(realPath).toString();
}
function resolveSync(id, options) {
  return _resolve(id, options);
}
function resolve(id, options) {
  return pcall(resolveSync, id, options);
}
function resolvePathSync(id, options) {
  return fileURLToPath(resolveSync(id, options));
}
function resolvePath(id, options) {
  return pcall(resolvePathSync, id, options);
}
function createResolve(defaults) {
  return (id, url) => {
    return resolve(id, { url, ...defaults });
  };
}
const NODE_MODULES_RE = /^(.+\/node_modules\/)([^/@]+|@[^/]+\/[^/]+)(\/?.*?)?$/;
function parseNodeModulePath(path) {
  if (!path) {
    return {};
  }
  path = pathe.normalize(fileURLToPath(path));
  const match = NODE_MODULES_RE.exec(path);
  if (!match) {
    return {};
  }
  const [, dir, name, subpath] = match;
  return {
    dir,
    name,
    subpath: subpath ? `.${subpath}` : void 0
  };
}
async function lookupNodeModuleSubpath(path) {
  path = pathe.normalize(fileURLToPath(path));
  const { name, subpath } = parseNodeModulePath(path);
  if (!name || !subpath) {
    return subpath;
  }
  const { exports } = await pkgTypes.readPackageJSON(path).catch(() => {
  }) || {};
  if (exports) {
    const resolvedSubpath = _findSubpath(subpath, exports);
    if (resolvedSubpath) {
      return resolvedSubpath;
    }
  }
  return subpath;
}
function _findSubpath(subpath, exports) {
  if (typeof exports === "string") {
    exports = { ".": exports };
  }
  if (!subpath.startsWith(".")) {
    subpath = subpath.startsWith("/") ? `.${subpath}` : `./${subpath}`;
  }
  if (subpath in exports) {
    return subpath;
  }
  const flattenedExports = _flattenExports(exports);
  const [foundPath] = (
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    flattenedExports.find(([_, resolved]) => resolved === subpath) || []
  );
  return foundPath;
}
function _flattenExports(exports, path) {
  return Object.entries(exports).flatMap(
    ([key, value]) => typeof value === "string" ? [[path ?? key, value]] : _flattenExports(value, path ?? key)
  );
}

const ESM_STATIC_IMPORT_RE = /(?<=\s|^|;)import\s*([\s"']*(?<imports>[\p{L}\p{M}\w\t\n\r $*,/{}@.]+)from\s*)?["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][\s;]*/gmu;
const DYNAMIC_IMPORT_RE = /import\s*\((?<expression>(?:[^()]+|\((?:[^()]+|\([^()]*\))*\))*)\)/gm;
const IMPORT_NAMED_TYPE_RE = /(?<=\s|^|;)import\s*type\s+([\s"']*(?<imports>[\w\t\n\r $*,/{}]+)from\s*)?["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][\s;]*/gm;
const EXPORT_DECAL_RE = /\bexport\s+(?<declaration>(async function|function|let|const enum|const|enum|var|class))\s+(?<name>[\w$]+)/g;
const EXPORT_DECAL_TYPE_RE = /\bexport\s+(?<declaration>(interface|type|declare (async function|function|let|const enum|const|enum|var|class)))\s+(?<name>[\w$]+)/g;
const EXPORT_NAMED_RE = /\bexport\s+{(?<exports>[^}]+?)[\s,]*}(\s*from\s*["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][^\n;]*)?/g;
const EXPORT_NAMED_TYPE_RE = /\bexport\s+type\s+{(?<exports>[^}]+?)[\s,]*}(\s*from\s*["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][^\n;]*)?/g;
const EXPORT_NAMED_DESTRUCT = /\bexport\s+(let|var|const)\s+(?:{(?<exports1>[^}]+?)[\s,]*}|\[(?<exports2>[^\]]+?)[\s,]*])\s+=/gm;
const EXPORT_STAR_RE = /\bexport\s*(\*)(\s*as\s+(?<name>[\w$]+)\s+)?\s*(\s*from\s*["']\s*(?<specifier>(?<="\s*)[^"]*[^\s"](?=\s*")|(?<='\s*)[^']*[^\s'](?=\s*'))\s*["'][^\n;]*)?/g;
const EXPORT_DEFAULT_RE = /\bexport\s+default\s+/g;
const TYPE_RE = /^\s*?type\s/;
function findStaticImports(code) {
  return matchAll(ESM_STATIC_IMPORT_RE, code, { type: "static" });
}
function findDynamicImports(code) {
  return matchAll(DYNAMIC_IMPORT_RE, code, { type: "dynamic" });
}
function findTypeImports(code) {
  return [
    ...matchAll(IMPORT_NAMED_TYPE_RE, code, { type: "type" }),
    ...matchAll(ESM_STATIC_IMPORT_RE, code, { type: "static" }).filter(
      (match) => /[^A-Za-z]type\s/.test(match.imports)
    )
  ];
}
function parseStaticImport(matched) {
  const cleanedImports = clearImports(matched.imports);
  const namedImports = {};
  for (const namedImport of cleanedImports.match(/{([^}]*)}/)?.[1]?.split(",") || []) {
    const [, source = namedImport.trim(), importName = source] = namedImport.match(/^\s*(\S*) as (\S*)\s*$/) || [];
    if (source && !TYPE_RE.test(source)) {
      namedImports[source] = importName;
    }
  }
  const { namespacedImport, defaultImport } = getImportNames(cleanedImports);
  return {
    ...matched,
    defaultImport,
    namespacedImport,
    namedImports
  };
}
function parseTypeImport(matched) {
  if (matched.type === "type") {
    return parseStaticImport(matched);
  }
  const cleanedImports = clearImports(matched.imports);
  const namedImports = {};
  for (const namedImport of cleanedImports.match(/{([^}]*)}/)?.[1]?.split(",") || []) {
    const [, source = namedImport.trim(), importName = source] = (() => {
      return /\s+as\s+/.test(namedImport) ? namedImport.match(/^\s*type\s+(\S*) as (\S*)\s*$/) || [] : namedImport.match(/^\s*type\s+(\S*)\s*$/) || [];
    })();
    if (source && TYPE_RE.test(namedImport)) {
      namedImports[source] = importName;
    }
  }
  const { namespacedImport, defaultImport } = getImportNames(cleanedImports);
  return {
    ...matched,
    defaultImport,
    namespacedImport,
    namedImports
  };
}
function findExports(code) {
  const declaredExports = matchAll(EXPORT_DECAL_RE, code, {
    type: "declaration"
  });
  const namedExports = normalizeNamedExports(
    matchAll(EXPORT_NAMED_RE, code, {
      type: "named"
    })
  );
  const destructuredExports = matchAll(
    EXPORT_NAMED_DESTRUCT,
    code,
    { type: "named" }
  );
  for (const namedExport of destructuredExports) {
    namedExport.exports = namedExport.exports1 || namedExport.exports2;
    namedExport.names = namedExport.exports.replace(/^\r?\n?/, "").split(/\s*,\s*/g).filter((name) => !TYPE_RE.test(name)).map(
      (name) => name.replace(/^.*?\s*:\s*/, "").replace(/\s*=\s*.*$/, "").trim()
    );
  }
  const defaultExport = matchAll(EXPORT_DEFAULT_RE, code, {
    type: "default",
    name: "default"
  });
  const starExports = matchAll(EXPORT_STAR_RE, code, {
    type: "star"
  });
  const exports = normalizeExports([
    ...declaredExports,
    ...namedExports,
    ...destructuredExports,
    ...defaultExport,
    ...starExports
  ]);
  if (exports.length === 0) {
    return [];
  }
  const exportLocations = _tryGetExportLocations(code);
  if (exportLocations && exportLocations.length === 0) {
    return [];
  }
  return exports.filter(
    (exp) => !exportLocations || _isExportStatement(exportLocations, exp)
  ).filter((exp, index, exports2) => {
    const nextExport = exports2[index + 1];
    return !nextExport || exp.type !== nextExport.type || !exp.name || exp.name !== nextExport.name;
  });
}
function findTypeExports(code) {
  const declaredExports = matchAll(
    EXPORT_DECAL_TYPE_RE,
    code,
    { type: "declaration" }
  );
  const namedExports = normalizeNamedExports(
    matchAll(EXPORT_NAMED_TYPE_RE, code, {
      type: "named"
    })
  );
  const exports = normalizeExports([
    ...declaredExports,
    ...namedExports
  ]);
  if (exports.length === 0) {
    return [];
  }
  const exportLocations = _tryGetExportLocations(code);
  if (exportLocations && exportLocations.length === 0) {
    return [];
  }
  return exports.filter(
    (exp) => !exportLocations || _isExportStatement(exportLocations, exp)
  ).filter((exp, index, exports2) => {
    const nextExport = exports2[index + 1];
    return !nextExport || exp.type !== nextExport.type || !exp.name || exp.name !== nextExport.name;
  });
}
function normalizeExports(exports) {
  for (const exp of exports) {
    if (!exp.name && exp.names && exp.names.length === 1) {
      exp.name = exp.names[0];
    }
    if (exp.name === "default" && exp.type !== "default") {
      exp._type = exp.type;
      exp.type = "default";
    }
    if (!exp.names && exp.name) {
      exp.names = [exp.name];
    }
  }
  return exports;
}
function normalizeNamedExports(namedExports) {
  for (const namedExport of namedExports) {
    namedExport.names = namedExport.exports.replace(/^\r?\n?/, "").split(/\s*,\s*/g).filter((name) => !TYPE_RE.test(name)).map((name) => name.replace(/^.*?\sas\s/, "").trim());
  }
  return namedExports;
}
function findExportNames(code) {
  return findExports(code).flatMap((exp) => exp.names).filter(Boolean);
}
async function resolveModuleExportNames(id, options) {
  const url = await resolvePath(id, options);
  const code = await loadURL(url);
  const exports = findExports(code);
  const exportNames = new Set(
    exports.flatMap((exp) => exp.names).filter(Boolean)
  );
  for (const exp of exports) {
    if (exp.type === "star") {
      const subExports = await resolveModuleExportNames(exp.specifier, {
        ...options,
        url
      });
      for (const subExport of subExports) {
        exportNames.add(subExport);
      }
    }
  }
  return [...exportNames];
}
function _isExportStatement(exportsLocation, exp) {
  return exportsLocation.some((location) => {
    return exp.start <= location.start && exp.end >= location.end;
  });
}
function _tryGetExportLocations(code) {
  try {
    return _getExportLocations(code);
  } catch {
  }
}
function _getExportLocations(code) {
  const tokens = acorn.tokenizer(code, {
    ecmaVersion: "latest",
    sourceType: "module",
    allowHashBang: true,
    allowAwaitOutsideFunction: true,
    allowImportExportEverywhere: true
  });
  const locations = [];
  for (const token of tokens) {
    if (token.type.label === "export") {
      locations.push({
        start: token.start,
        end: token.end
      });
    }
  }
  return locations;
}

function createCommonJS(url) {
  const __filename = fileURLToPath(url);
  const __dirname = path.dirname(__filename);
  let _nativeRequire;
  const getNativeRequire = () => _nativeRequire || (_nativeRequire = node_module.createRequire(url));
  function require(id) {
    return getNativeRequire()(id);
  }
  require.resolve = (id, options) => getNativeRequire().resolve(id, options);
  return {
    __filename,
    __dirname,
    require
  };
}
function interopDefault(sourceModule) {
  if (!isObject(sourceModule) || !("default" in sourceModule)) {
    return sourceModule;
  }
  const newModule = sourceModule.default;
  for (const key in sourceModule) {
    if (key === "default") {
      try {
        if (!(key in newModule)) {
          Object.defineProperty(newModule, key, {
            enumerable: false,
            configurable: false,
            get() {
              return newModule;
            }
          });
        }
      } catch {
      }
    } else {
      try {
        if (!(key in newModule)) {
          Object.defineProperty(newModule, key, {
            enumerable: true,
            configurable: true,
            get() {
              return sourceModule[key];
            }
          });
        }
      } catch {
      }
    }
  }
  return newModule;
}

const EVAL_ESM_IMPORT_RE = /(?<=import .* from ["'])([^"']+)(?=["'])|(?<=export .* from ["'])([^"']+)(?=["'])|(?<=import\s*["'])([^"']+)(?=["'])|(?<=import\s*\(["'])([^"']+)(?=["']\))/g;
async function loadModule(id, options = {}) {
  const url = await resolve(id, options);
  const code = await loadURL(url);
  return evalModule(code, { ...options, url });
}
async function evalModule(code, options = {}) {
  const transformed = await transformModule(code, options);
  const dataURL = toDataURL(transformed);
  return __nccwpck_require__(7932)(dataURL).catch((error) => {
    error.stack = error.stack.replace(
      new RegExp(dataURL, "g"),
      options.url || "_mlly_eval_"
    );
    throw error;
  });
}
function transformModule(code, options) {
  if (options.url && options.url.endsWith(".json")) {
    return Promise.resolve("export default " + code);
  }
  if (options.url) {
    code = code.replace(/import\.meta\.url/g, `'${options.url}'`);
  }
  return Promise.resolve(code);
}
async function resolveImports(code, options) {
  const imports = [...code.matchAll(EVAL_ESM_IMPORT_RE)].map((m) => m[0]);
  if (imports.length === 0) {
    return code;
  }
  const uniqueImports = [...new Set(imports)];
  const resolved = /* @__PURE__ */ new Map();
  await Promise.all(
    uniqueImports.map(async (id) => {
      let url = await resolve(id, options);
      if (url.endsWith(".json")) {
        const code2 = await loadURL(url);
        url = toDataURL(await transformModule(code2, { url }));
      }
      resolved.set(id, url);
    })
  );
  const re = new RegExp(
    uniqueImports.map((index) => `(${index})`).join("|"),
    "g"
  );
  return code.replace(re, (id) => resolved.get(id));
}

const ESM_RE = /([\s;]|^)(import[\s\w*,{}]*from|import\s*["'*{]|export\b\s*(?:[*{]|default|class|type|function|const|var|let|async function)|import\.meta\b)/m;
const BUILTIN_EXTENSIONS = /* @__PURE__ */ new Set([".mjs", ".cjs", ".node", ".wasm"]);
function hasESMSyntax(code) {
  return ESM_RE.test(code);
}
const CJS_RE = /([\s;]|^)(module.exports\b|exports\.\w|require\s*\(|global\.\w)/m;
function hasCJSSyntax(code) {
  return CJS_RE.test(code);
}
function detectSyntax(code) {
  const hasESM = hasESMSyntax(code);
  const hasCJS = hasCJSSyntax(code);
  return {
    hasESM,
    hasCJS,
    isMixed: hasESM && hasCJS
  };
}
const validNodeImportDefaults = {
  allowedProtocols: ["node", "file", "data"]
};
async function isValidNodeImport(id, _options = {}) {
  if (isNodeBuiltin(id)) {
    return true;
  }
  const options = { ...validNodeImportDefaults, ..._options };
  const proto = getProtocol(id);
  if (proto && !options.allowedProtocols.includes(proto)) {
    return false;
  }
  if (proto === "data") {
    return true;
  }
  const resolvedPath = await resolvePath(id, options);
  const extension = pathe.extname(resolvedPath);
  if (BUILTIN_EXTENSIONS.has(extension)) {
    return true;
  }
  if (extension !== ".js") {
    return false;
  }
  const package_ = await pkgTypes.readPackageJSON(resolvedPath).catch(() => {
  });
  if (package_?.type === "module") {
    return true;
  }
  if (/\.(\w+-)?esm?(-\w+)?\.js$|\/(esm?)\//.test(resolvedPath)) {
    return false;
  }
  const code = options.code || await fs.promises.readFile(resolvedPath, "utf8").catch(() => {
  }) || "";
  return hasCJSSyntax(code) || !hasESMSyntax(code);
}

exports.DYNAMIC_IMPORT_RE = DYNAMIC_IMPORT_RE;
exports.ESM_STATIC_IMPORT_RE = ESM_STATIC_IMPORT_RE;
exports.EXPORT_DECAL_RE = EXPORT_DECAL_RE;
exports.EXPORT_DECAL_TYPE_RE = EXPORT_DECAL_TYPE_RE;
exports.createCommonJS = createCommonJS;
exports.createResolve = createResolve;
exports.detectSyntax = detectSyntax;
exports.evalModule = evalModule;
exports.fileURLToPath = fileURLToPath;
exports.findDynamicImports = findDynamicImports;
exports.findExportNames = findExportNames;
exports.findExports = findExports;
exports.findStaticImports = findStaticImports;
exports.findTypeExports = findTypeExports;
exports.findTypeImports = findTypeImports;
exports.getProtocol = getProtocol;
exports.hasCJSSyntax = hasCJSSyntax;
exports.hasESMSyntax = hasESMSyntax;
exports.interopDefault = interopDefault;
exports.isNodeBuiltin = isNodeBuiltin;
exports.isValidNodeImport = isValidNodeImport;
exports.loadModule = loadModule;
exports.loadURL = loadURL;
exports.lookupNodeModuleSubpath = lookupNodeModuleSubpath;
exports.normalizeid = normalizeid;
exports.parseNodeModulePath = parseNodeModulePath;
exports.parseStaticImport = parseStaticImport;
exports.parseTypeImport = parseTypeImport;
exports.resolve = resolve;
exports.resolveImports = resolveImports;
exports.resolveModuleExportNames = resolveModuleExportNames;
exports.resolvePath = resolvePath;
exports.resolvePathSync = resolvePathSync;
exports.resolveSync = resolveSync;
exports.sanitizeFilePath = sanitizeFilePath;
exports.sanitizeURIComponent = sanitizeURIComponent;
exports.toDataURL = toDataURL;
exports.transformModule = transformModule;


/***/ }),

/***/ 7877:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const node_fs = __nccwpck_require__(7561);
const pathe = __nccwpck_require__(5577);
const mlly = __nccwpck_require__(4005);

const defaultFindOptions = {
  startingFrom: ".",
  rootPattern: /^node_modules$/,
  reverse: false,
  test: (filePath) => {
    try {
      if (node_fs.statSync(filePath).isFile()) {
        return true;
      }
    } catch {
    }
  }
};
async function findFile(filename, _options = {}) {
  const options = { ...defaultFindOptions, ..._options };
  const basePath = pathe.resolve(options.startingFrom);
  const leadingSlash = basePath[0] === "/";
  const segments = basePath.split("/").filter(Boolean);
  if (leadingSlash) {
    segments[0] = "/" + segments[0];
  }
  let root = segments.findIndex((r) => r.match(options.rootPattern));
  if (root === -1) {
    root = 0;
  }
  if (!options.reverse) {
    for (let index = segments.length; index > root; index--) {
      const filePath = pathe.join(...segments.slice(0, index), filename);
      if (await options.test(filePath)) {
        return filePath;
      }
    }
  } else {
    for (let index = root + 1; index <= segments.length; index++) {
      const filePath = pathe.join(...segments.slice(0, index), filename);
      if (await options.test(filePath)) {
        return filePath;
      }
    }
  }
  throw new Error(
    `Cannot find matching ${filename} in ${options.startingFrom} or parent directories`
  );
}
function findNearestFile(filename, _options = {}) {
  return findFile(filename, _options);
}
function findFarthestFile(filename, _options = {}) {
  return findFile(filename, { ..._options, reverse: true });
}

function definePackageJSON(package_) {
  return package_;
}
function defineTSConfig(tsconfig) {
  return tsconfig;
}
const FileCache = /* @__PURE__ */ new Map();
async function readPackageJSON(id, options = {}) {
  const resolvedPath = await resolvePackageJSON(id, options);
  const cache = options.cache && typeof options.cache !== "boolean" ? options.cache : FileCache;
  if (options.cache && cache.has(resolvedPath)) {
    return cache.get(resolvedPath);
  }
  const blob = await node_fs.promises.readFile(resolvedPath, "utf8");
  const parsed = JSON.parse(blob);
  cache.set(resolvedPath, parsed);
  return parsed;
}
async function writePackageJSON(path, package_) {
  await node_fs.promises.writeFile(path, JSON.stringify(package_, void 0, 2));
}
async function readTSConfig(id, options = {}) {
  const resolvedPath = await resolveTSConfig(id, options);
  const cache = options.cache && typeof options.cache !== "boolean" ? options.cache : FileCache;
  if (options.cache && cache.has(resolvedPath)) {
    return cache.get(resolvedPath);
  }
  const blob = await node_fs.promises.readFile(resolvedPath, "utf8");
  const jsonc = await __nccwpck_require__.e(/* import() */ 245).then(__nccwpck_require__.t.bind(__nccwpck_require__, 245, 23));
  const parsed = jsonc.parse(blob);
  cache.set(resolvedPath, parsed);
  return parsed;
}
async function writeTSConfig(path, tsconfig) {
  await node_fs.promises.writeFile(path, JSON.stringify(tsconfig, void 0, 2));
}
async function resolvePackageJSON(id = process.cwd(), options = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, options);
  return findNearestFile("package.json", {
    startingFrom: resolvedPath,
    ...options
  });
}
async function resolveTSConfig(id = process.cwd(), options = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, options);
  return findNearestFile("tsconfig.json", {
    startingFrom: resolvedPath,
    ...options
  });
}
const lockFiles = [
  "yarn.lock",
  "package-lock.json",
  "pnpm-lock.yaml",
  "npm-shrinkwrap.json",
  "bun.lockb"
];
async function resolveLockfile(id = process.cwd(), options = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, options);
  const _options = { startingFrom: resolvedPath, ...options };
  for (const lockFile of lockFiles) {
    try {
      return await findNearestFile(lockFile, _options);
    } catch {
    }
  }
  throw new Error("No lockfile found from " + id);
}
async function findWorkspaceDir(id = process.cwd(), options = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, options);
  const _options = { startingFrom: resolvedPath, ...options };
  try {
    const r = await findNearestFile(".git/config", _options);
    return pathe.resolve(r, "../..");
  } catch {
  }
  try {
    const r = await resolveLockfile(resolvedPath, {
      ..._options,
      reverse: true
    });
    return pathe.dirname(r);
  } catch {
  }
  try {
    const r = await findFile(resolvedPath, _options);
    return pathe.dirname(r);
  } catch {
  }
  throw new Error("Cannot detect workspace root from " + id);
}

exports.definePackageJSON = definePackageJSON;
exports.defineTSConfig = defineTSConfig;
exports.findFarthestFile = findFarthestFile;
exports.findFile = findFile;
exports.findNearestFile = findNearestFile;
exports.findWorkspaceDir = findWorkspaceDir;
exports.readPackageJSON = readPackageJSON;
exports.readTSConfig = readTSConfig;
exports.resolveLockfile = resolveLockfile;
exports.resolvePackageJSON = resolvePackageJSON;
exports.resolveTSConfig = resolveTSConfig;
exports.writePackageJSON = writePackageJSON;
exports.writeTSConfig = writeTSConfig;


/***/ }),

/***/ 6039:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(7147);
const path = __nccwpck_require__(1017);
const mlly = __nccwpck_require__(9994);
const pathe = __nccwpck_require__(4282);

const defaultFindOptions = {
  startingFrom: ".",
  rootPattern: /^node_modules$/,
  reverse: false,
  test: (filePath) => {
    try {
      if (fs.statSync(filePath).isFile()) {
        return true;
      }
    } catch {
    }
    return null;
  }
};
async function findFile(filename, _options = {}) {
  const options = { ...defaultFindOptions, ..._options };
  const basePath = pathe.resolve(options.startingFrom);
  const leadingSlash = basePath[0] === "/";
  const segments = basePath.split("/").filter(Boolean);
  if (leadingSlash) {
    segments[0] = "/" + segments[0];
  }
  let root = segments.findIndex((r) => r.match(options.rootPattern));
  if (root === -1) {
    root = 0;
  }
  if (!options.reverse) {
    for (let i = segments.length; i > root; i--) {
      const filePath = pathe.join(...segments.slice(0, i), filename);
      if (await options.test(filePath)) {
        return filePath;
      }
    }
  } else {
    for (let i = root + 1; i <= segments.length; i++) {
      const filePath = pathe.join(...segments.slice(0, i), filename);
      if (await options.test(filePath)) {
        return filePath;
      }
    }
  }
  throw new Error(`Cannot find matching ${filename} in ${options.startingFrom} or parent directories`);
}
function findNearestFile(filename, _options = {}) {
  return findFile(filename, _options);
}
function findFarthestFile(filename, _options = {}) {
  return findFile(filename, { ..._options, reverse: true });
}

function definePackageJSON(pkg) {
  return pkg;
}
function defineTSConfig(tsconfig) {
  return tsconfig;
}
async function readPackageJSON(id, opts = {}) {
  const resolvedPath = await resolvePackageJSON(id, opts);
  const blob = await fs.promises.readFile(resolvedPath, "utf-8");
  return JSON.parse(blob);
}
async function writePackageJSON(path, pkg) {
  await fs.promises.writeFile(path, JSON.stringify(pkg, null, 2));
}
async function readTSConfig(id, opts = {}) {
  const resolvedPath = await resolveTSConfig(id, opts);
  const blob = await fs.promises.readFile(resolvedPath, "utf-8");
  const jsonc = await __nccwpck_require__.e(/* import() */ 245).then(__nccwpck_require__.t.bind(__nccwpck_require__, 245, 23));
  return jsonc.parse(blob);
}
async function writeTSConfig(path, tsconfig) {
  await fs.promises.writeFile(path, JSON.stringify(tsconfig, null, 2));
}
async function resolvePackageJSON(id = process.cwd(), opts = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, opts);
  return findNearestFile("package.json", { startingFrom: resolvedPath, ...opts });
}
async function resolveTSConfig(id = process.cwd(), opts = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, opts);
  return findNearestFile("tsconfig.json", { startingFrom: resolvedPath, ...opts });
}
const lockFiles = ["yarn.lock", "package-lock.json", "pnpm-lock.yaml", "npm-shrinkwrap.json", "bun.lockb"];
async function resolveLockfile(id = process.cwd(), opts = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, opts);
  const _opts = { startingFrom: resolvedPath, ...opts };
  for (const lockFile of lockFiles) {
    try {
      return await findNearestFile(lockFile, _opts);
    } catch {
    }
  }
  throw new Error("No lockfile found from " + id);
}
async function findWorkspaceDir(id = process.cwd(), opts = {}) {
  const resolvedPath = pathe.isAbsolute(id) ? id : await mlly.resolvePath(id, opts);
  const _opts = { startingFrom: resolvedPath, ...opts };
  try {
    const r = await findNearestFile(".git/config", _opts);
    return path.resolve(r, "../..");
  } catch {
  }
  try {
    const r = await resolveLockfile(resolvedPath, { ..._opts, reverse: true });
    return path.dirname(r);
  } catch {
  }
  try {
    const r = await findFile(resolvedPath, _opts);
    return path.dirname(r);
  } catch {
  }
  throw new Error("Cannot detect workspace root from " + id);
}

exports.definePackageJSON = definePackageJSON;
exports.defineTSConfig = defineTSConfig;
exports.findFarthestFile = findFarthestFile;
exports.findFile = findFile;
exports.findNearestFile = findNearestFile;
exports.findWorkspaceDir = findWorkspaceDir;
exports.readPackageJSON = readPackageJSON;
exports.readTSConfig = readTSConfig;
exports.resolveLockfile = resolveLockfile;
exports.resolvePackageJSON = resolvePackageJSON;
exports.resolveTSConfig = resolveTSConfig;
exports.writePackageJSON = writePackageJSON;
exports.writeTSConfig = writeTSConfig;


/***/ }),

/***/ 4282:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const path = __nccwpck_require__(9145);



exports.basename = path.basename;
exports.delimiter = path.delimiter;
exports.dirname = path.dirname;
exports.extname = path.extname;
exports.format = path.format;
exports.isAbsolute = path.isAbsolute;
exports.join = path.join;
exports.normalize = path.normalize;
exports.normalizeString = path.normalizeString;
exports.parse = path.parse;
exports.relative = path.relative;
exports.resolve = path.resolve;
exports.sep = path.sep;
exports.toNamespacedPath = path.toNamespacedPath;


/***/ }),

/***/ 9145:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


function normalizeWindowsPath(input = "") {
  if (!input || !input.includes("\\")) {
    return input;
  }
  return input.replace(/\\/g, "/");
}

const _UNC_REGEX = /^[\\/]{2}/;
const _IS_ABSOLUTE_RE = /^[\\/](?![\\/])|^[\\/]{2}(?!\.)|^[a-zA-Z]:[\\/]/;
const _DRIVE_LETTER_RE = /^[a-zA-Z]:$/;
const sep = "/";
const delimiter = ":";
const normalize = function(path) {
  if (path.length === 0) {
    return ".";
  }
  path = normalizeWindowsPath(path);
  const isUNCPath = path.match(_UNC_REGEX);
  const isPathAbsolute = isAbsolute(path);
  const trailingSeparator = path[path.length - 1] === "/";
  path = normalizeString(path, !isPathAbsolute);
  if (path.length === 0) {
    if (isPathAbsolute) {
      return "/";
    }
    return trailingSeparator ? "./" : ".";
  }
  if (trailingSeparator) {
    path += "/";
  }
  if (_DRIVE_LETTER_RE.test(path)) {
    path += "/";
  }
  if (isUNCPath) {
    if (!isPathAbsolute) {
      return `//./${path}`;
    }
    return `//${path}`;
  }
  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;
};
const join = function(...args) {
  if (args.length === 0) {
    return ".";
  }
  let joined;
  for (let i = 0; i < args.length; ++i) {
    const arg = args[i];
    if (arg && arg.length > 0) {
      if (joined === void 0) {
        joined = arg;
      } else {
        joined += `/${arg}`;
      }
    }
  }
  if (joined === void 0) {
    return ".";
  }
  return normalize(joined.replace(/\/\/+/g, "/"));
};
const resolve = function(...args) {
  args = args.map((arg) => normalizeWindowsPath(arg));
  let resolvedPath = "";
  let resolvedAbsolute = false;
  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    const path = i >= 0 ? args[i] : process.cwd().replace(/\\/g, "/");
    if (!path || path.length === 0) {
      continue;
    }
    resolvedPath = `${path}/${resolvedPath}`;
    resolvedAbsolute = isAbsolute(path);
  }
  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);
  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {
    return `/${resolvedPath}`;
  }
  return resolvedPath.length > 0 ? resolvedPath : ".";
};
function normalizeString(path, allowAboveRoot) {
  let res = "";
  let lastSegmentLength = 0;
  let lastSlash = -1;
  let dots = 0;
  let char = null;
  for (let i = 0; i <= path.length; ++i) {
    if (i < path.length) {
      char = path[i];
    } else if (char === "/") {
      break;
    } else {
      char = "/";
    }
    if (char === "/") {
      if (lastSlash === i - 1 || dots === 1) ; else if (dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== "." || res[res.length - 2] !== ".") {
          if (res.length > 2) {
            const lastSlashIndex = res.lastIndexOf("/");
            if (lastSlashIndex === -1) {
              res = "";
              lastSegmentLength = 0;
            } else {
              res = res.slice(0, lastSlashIndex);
              lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
            }
            lastSlash = i;
            dots = 0;
            continue;
          } else if (res.length !== 0) {
            res = "";
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          res += res.length > 0 ? "/.." : "..";
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0) {
          res += `/${path.slice(lastSlash + 1, i)}`;
        } else {
          res = path.slice(lastSlash + 1, i);
        }
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (char === "." && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}
const isAbsolute = function(p) {
  return _IS_ABSOLUTE_RE.test(p);
};
const toNamespacedPath = function(p) {
  return normalizeWindowsPath(p);
};
const _EXTNAME_RE = /.(\.[^/.]+)$/;
const extname = function(p) {
  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));
  return match && match[1] || "";
};
const relative = function(from, to) {
  const _from = resolve(from).split("/");
  const _to = resolve(to).split("/");
  for (const segment of [..._from]) {
    if (_to[0] !== segment) {
      break;
    }
    _from.shift();
    _to.shift();
  }
  return [..._from.map(() => ".."), ..._to].join("/");
};
const dirname = function(p) {
  const segments = normalizeWindowsPath(p).replace(/\/$/, "").split("/").slice(0, -1);
  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {
    segments[0] += "/";
  }
  return segments.join("/") || (isAbsolute(p) ? "/" : ".");
};
const format = function(p) {
  const segments = [p.root, p.dir, p.base ?? p.name + p.ext].filter(Boolean);
  return normalizeWindowsPath(p.root ? resolve(...segments) : segments.join("/"));
};
const basename = function(p, ext) {
  const lastSegment = normalizeWindowsPath(p).split("/").pop();
  return ext && lastSegment.endsWith(ext) ? lastSegment.slice(0, -ext.length) : lastSegment;
};
const parse = function(p) {
  const root = normalizeWindowsPath(p).split("/").shift() || "/";
  const base = basename(p);
  const ext = extname(base);
  return {
    root,
    dir: dirname(p),
    base,
    ext,
    name: base.slice(0, base.length - ext.length)
  };
};

exports.basename = basename;
exports.delimiter = delimiter;
exports.dirname = dirname;
exports.extname = extname;
exports.format = format;
exports.isAbsolute = isAbsolute;
exports.join = join;
exports.normalize = normalize;
exports.normalizeString = normalizeString;
exports.normalizeWindowsPath = normalizeWindowsPath;
exports.parse = parse;
exports.relative = relative;
exports.resolve = resolve;
exports.sep = sep;
exports.toNamespacedPath = toNamespacedPath;


/***/ }),

/***/ 3110:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const fs = __nccwpck_require__(7147);
const path = __nccwpck_require__(1017);
const os = __nccwpck_require__(2037);
const destr = __nccwpck_require__(5284);
const flat = __nccwpck_require__(9681);
const defu = __nccwpck_require__(2933);

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e["default"] : e; }

const destr__default = /*#__PURE__*/_interopDefaultLegacy(destr);
const flat__default = /*#__PURE__*/_interopDefaultLegacy(flat);
const defu__default = /*#__PURE__*/_interopDefaultLegacy(defu);

const RE_KEY_VAL = /^\s*([^=\s]+)\s*=\s*(.*)?\s*$/;
const RE_LINES = /\n|\r|\r\n/;
const defaults = {
  name: ".conf",
  dir: process.cwd(),
  flat: false
};
function withDefaults(options) {
  if (typeof options === "string") {
    options = { name: options };
  }
  return { ...defaults, ...options };
}
function parse(contents, options = {}) {
  const config = {};
  const lines = contents.split(RE_LINES);
  for (const line of lines) {
    const match = line.match(RE_KEY_VAL);
    if (!match) {
      continue;
    }
    const key = match[1];
    if (!key || key === "__proto__" || key === "constructor") {
      continue;
    }
    const val = destr__default(match[2].trim());
    if (key.endsWith("[]")) {
      const nkey = key.substr(0, key.length - 2);
      config[nkey] = (config[nkey] || []).concat(val);
      continue;
    }
    config[key] = val;
  }
  return options.flat ? config : flat__default.unflatten(config, { overwrite: true });
}
function parseFile(path, options) {
  if (!fs.existsSync(path)) {
    return {};
  }
  return parse(fs.readFileSync(path, "utf-8"), options);
}
function read(options) {
  options = withDefaults(options);
  return parseFile(path.resolve(options.dir, options.name), options);
}
function readUser(options) {
  options = withDefaults(options);
  options.dir = process.env.XDG_CONFIG_HOME || os.homedir();
  return read(options);
}
function serialize(config) {
  return Object.entries(flat__default.flatten(config)).map(([key, val]) => `${key}=${typeof val === "string" ? val : JSON.stringify(val)}`).join("\n");
}
function write(config, options) {
  options = withDefaults(options);
  fs.writeFileSync(path.resolve(options.dir, options.name), serialize(config), {
    encoding: "utf-8"
  });
}
function writeUser(config, options) {
  options = withDefaults(options);
  options.dir = process.env.XDG_CONFIG_HOME || os.homedir();
  write(config, options);
}
function update(config, options) {
  options = withDefaults(options);
  if (!options.flat) {
    config = flat__default.unflatten(config, { overwrite: true });
  }
  const newConfig = defu__default(config, read(options));
  write(newConfig, options);
  return newConfig;
}
function updateUser(config, options) {
  options = withDefaults(options);
  options.dir = process.env.XDG_CONFIG_HOME || os.homedir();
  return update(config, options);
}

exports.defaults = defaults;
exports.parse = parse;
exports.parseFile = parseFile;
exports.read = read;
exports.readUser = readUser;
exports.serialize = serialize;
exports.update = update;
exports.updateUser = updateUser;
exports.write = write;
exports.writeUser = writeUser;


/***/ }),

/***/ 8750:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const generate = __nccwpck_require__(8351);
__nccwpck_require__(5186);
__nccwpck_require__(2895);
__nccwpck_require__(4734);
__nccwpck_require__(8360);
__nccwpck_require__(3247);



exports.defineConfig = generate.defineConfig;
exports.generate = generate.generate;
exports.generateMarkdown = generate.generateMarkdown;
exports.getCurrentGitBranch = generate.getCurrentGitBranch;
exports.getFirstGitCommit = generate.getFirstGitCommit;
exports.getGitHubRepo = generate.getGitHubRepo;
exports.getLastGitTag = generate.getLastGitTag;
exports.hasTagOnGitHub = generate.hasTagOnGitHub;
exports.isPrerelease = generate.isPrerelease;
exports.isRefGitTag = generate.isRefGitTag;
exports.isRepoShallow = generate.isRepoShallow;
exports.parseCommits = generate.parseCommits;
exports.resolveAuthorInfo = generate.resolveAuthorInfo;
exports.resolveAuthors = generate.resolveAuthors;
exports.resolveConfig = generate.resolveConfig;
exports.sendRelease = generate.sendRelease;


/***/ }),

/***/ 8351:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const changelogen = __nccwpck_require__(5186);
const utils = __nccwpck_require__(2895);
const convertGitmoji = __nccwpck_require__(4734);
const ohmyfetch = __nccwpck_require__(8360);
const kolorist = __nccwpck_require__(3247);

async function sendRelease(options, content) {
  const headers = getHeaders(options);
  let url = `https://api.github.com/repos/${options.github}/releases`;
  let method = "POST";
  try {
    const exists = await ohmyfetch.$fetch(`https://api.github.com/repos/${options.github}/releases/tags/${options.to}`, {
      headers
    });
    if (exists.url) {
      url = exists.url;
      method = "PATCH";
    }
  } catch (e) {
  }
  const body = {
    body: content,
    draft: options.draft || false,
    name: options.name || options.to,
    prerelease: options.prerelease,
    tag_name: options.to
  };
  console.log(kolorist.cyan(method === "POST" ? "Creating release notes..." : "Updating release notes..."));
  const res = await ohmyfetch.$fetch(url, {
    method,
    body: JSON.stringify(body),
    headers
  });
  console.log(kolorist.green(`Released on ${res.html_url}`));
}
function getHeaders(options) {
  return {
    accept: "application/vnd.github.v3+json",
    authorization: `token ${options.token}`
  };
}
async function resolveAuthorInfo(options, info) {
  if (info.login)
    return info;
  if (!options.token)
    return info;
  try {
    const data = await ohmyfetch.$fetch(`https://api.github.com/search/users?q=${encodeURIComponent(info.email)}`, {
      headers: getHeaders(options)
    });
    info.login = data.items[0].login;
  } catch {
  }
  if (info.login)
    return info;
  if (info.commits.length) {
    try {
      const data = await ohmyfetch.$fetch(`https://api.github.com/repos/${options.github}/commits/${info.commits[0]}`, {
        headers: getHeaders(options)
      });
      info.login = data.author.login;
    } catch (e) {
    }
  }
  return info;
}
async function resolveAuthors(commits, options) {
  const map = /* @__PURE__ */ new Map();
  commits.forEach((commit) => {
    commit.resolvedAuthors = commit.authors.map((a, idx) => {
      if (!a.email || !a.name)
        return null;
      if (!map.has(a.email)) {
        map.set(a.email, {
          commits: [],
          name: a.name,
          email: a.email
        });
      }
      const info = map.get(a.email);
      if (idx === 0)
        info.commits.push(commit.shortHash);
      return info;
    }).filter(utils.notNullish);
  });
  const authors = Array.from(map.values());
  const resolved = await Promise.all(authors.map((info) => resolveAuthorInfo(options, info)));
  const loginSet = /* @__PURE__ */ new Set();
  const nameSet = /* @__PURE__ */ new Set();
  return resolved.sort((a, b) => (a.login || a.name).localeCompare(b.login || b.name)).filter((i) => {
    if (i.login && loginSet.has(i.login))
      return false;
    if (i.login) {
      loginSet.add(i.login);
    } else {
      if (nameSet.has(i.name))
        return false;
      nameSet.add(i.name);
    }
    return true;
  });
}
async function hasTagOnGitHub(tag, options) {
  try {
    await ohmyfetch.$fetch(`https://api.github.com/repos/${options.github}/git/ref/tags/${tag}`, {
      headers: getHeaders(options)
    });
    return true;
  } catch (e) {
    return false;
  }
}

async function getGitHubRepo() {
  const url = await execCommand("git", ["config", "--get", "remote.origin.url"]);
  const match = url.match(/github\.com[\/:]([\w\d._-]+?)\/([\w\d._-]+?)(\.git)?$/i);
  if (!match)
    throw new Error(`Can not parse GitHub repo from url ${url}`);
  return `${match[1]}/${match[2]}`;
}
async function getCurrentGitBranch() {
  return await execCommand("git", ["tag", "--points-at", "HEAD"]) || await execCommand("git", ["rev-parse", "--abbrev-ref", "HEAD"]);
}
async function isRepoShallow() {
  return (await execCommand("git", ["rev-parse", "--is-shallow-repository"])).trim() === "true";
}
async function getLastGitTag(delta = 0) {
  const tags = await execCommand("git", ["--no-pager", "tag", "-l", "--sort=creatordate"]).then((r) => r.split("\n"));
  return tags[tags.length + delta - 1];
}
async function isRefGitTag(to) {
  const { execa } = await Promise.all(/* import() */[__nccwpck_require__.e(703), __nccwpck_require__.e(15)]).then(__nccwpck_require__.bind(__nccwpck_require__, 9015));
  try {
    await execa("git", ["show-ref", "--verify", `refs/tags/${to}`], { reject: true });
  } catch {
    return false;
  }
}
async function getFirstGitCommit() {
  return await execCommand("git", ["rev-list", "--max-parents=0", "HEAD"]);
}
function isPrerelease(version) {
  return !/^[^.]*[\d.]+$/.test(version);
}
async function execCommand(cmd, args) {
  const { execa } = await Promise.all(/* import() */[__nccwpck_require__.e(703), __nccwpck_require__.e(15)]).then(__nccwpck_require__.bind(__nccwpck_require__, 9015));
  const res = await execa(cmd, args);
  return res.stdout.trim();
}

const emojisRE = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function formatReferences(references, github, type) {
  const refs = references.filter((i) => {
    if (type === "issues")
      return i.type === "issue" || i.type === "pull-request";
    return i.type === "hash";
  }).map((ref) => {
    if (!github)
      return ref.value;
    if (ref.type === "pull-request" || ref.type === "issue")
      return `https://github.com/${github}/issues/${ref.value.slice(1)}`;
    return `[<samp>(${ref.value.slice(0, 5)})</samp>](https://github.com/${github}/commit/${ref.value})`;
  });
  const referencesString = join(refs).trim();
  if (type === "issues")
    return referencesString && `in ${referencesString}`;
  return referencesString;
}
function formatLine(commit, options) {
  const prRefs = formatReferences(commit.references, options.github, "issues");
  const hashRefs = formatReferences(commit.references, options.github, "hash");
  let authors = join([...new Set(commit.resolvedAuthors?.map((i) => i.login ? `@${i.login}` : `**${i.name}**`))])?.trim();
  if (authors)
    authors = `by ${authors}`;
  let refs = [authors, prRefs, hashRefs].filter((i) => i?.trim()).join(" ");
  if (refs)
    refs = `&nbsp;-&nbsp; ${refs}`;
  const description = options.capitalize ? capitalize(commit.description) : commit.description;
  return [description, refs].filter((i) => i?.trim()).join(" ");
}
function formatTitle(name, options) {
  if (!options.emoji)
    name = name.replace(emojisRE, "");
  return `### &nbsp;&nbsp;&nbsp;${name.trim()}`;
}
function formatSection(commits, sectionName, options) {
  if (!commits.length)
    return [];
  const lines = [
    "",
    formatTitle(sectionName, options),
    ""
  ];
  const scopes = groupBy(commits, "scope");
  let useScopeGroup = options.group;
  if (!Object.entries(scopes).some(([k, v]) => k && v.length > 1))
    useScopeGroup = false;
  Object.keys(scopes).sort().forEach((scope) => {
    let padding = "";
    let prefix = "";
    const scopeText = `**${options.scopeMap[scope] || scope}**`;
    if (scope && (useScopeGroup === true || useScopeGroup === "multiple" && scopes[scope].length > 1)) {
      lines.push(`- ${scopeText}:`);
      padding = "  ";
    } else if (scope) {
      prefix = `${scopeText}: `;
    }
    lines.push(
      ...scopes[scope].reverse().map((commit) => `${padding}- ${prefix}${formatLine(commit, options)}`)
    );
  });
  return lines;
}
function generateMarkdown(commits, options) {
  const lines = [];
  const [breaking, changes] = utils.partition(commits, (c) => c.isBreaking);
  const group = groupBy(changes, "type");
  lines.push(
    ...formatSection(breaking, options.titles.breakingChanges, options)
  );
  for (const type of Object.keys(options.types)) {
    const items = group[type] || [];
    lines.push(
      ...formatSection(items, options.types[type].title, options)
    );
  }
  if (!lines.length)
    lines.push("*No significant changes*");
  const url = `https://github.com/${options.github}/compare/${options.from}...${options.to}`;
  lines.push("", `##### &nbsp;&nbsp;&nbsp;&nbsp;[View changes on GitHub](${url})`);
  return convertGitmoji.convert(lines.join("\n").trim(), true);
}
function groupBy(items, key, groups = {}) {
  for (const item of items) {
    const v = item[key];
    groups[v] = groups[v] || [];
    groups[v].push(item);
  }
  return groups;
}
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
function join(array, glue = ", ", finalGlue = " and ") {
  if (!array || array.length === 0)
    return "";
  if (array.length === 1)
    return array[0];
  if (array.length === 2)
    return array.join(finalGlue);
  return `${array.slice(0, -1).join(glue)}${finalGlue}${array.slice(-1)}`;
}

function defineConfig(config) {
  return config;
}
const defaultConfig = {
  scopeMap: {},
  types: {
    feat: { title: "\u{1F680} Features" },
    fix: { title: "\u{1F41E} Bug Fixes" },
    perf: { title: "\u{1F3CE} Performance" }
  },
  titles: {
    breakingChanges: "\u{1F6A8} Breaking Changes"
  },
  contributors: true,
  capitalize: true,
  group: true
};
async function resolveConfig(options) {
  const { loadConfig } = await Promise.all(/* import() */[__nccwpck_require__.e(177), __nccwpck_require__.e(365)]).then(__nccwpck_require__.bind(__nccwpck_require__, 9177));
  const config = await loadConfig({
    name: "changelogithub",
    defaults: defaultConfig,
    overrides: options
  }).then((r) => r.config || defaultConfig);
  config.from = config.from || await getLastGitTag();
  config.to = config.to || await getCurrentGitBranch();
  config.github = config.github || await getGitHubRepo();
  config.prerelease = config.prerelease ?? isPrerelease(config.to);
  if (config.to === config.from)
    config.from = await getLastGitTag(-1) || await getFirstGitCommit();
  return config;
}

function parseCommits(commits, config) {
  return commits.map((commit) => changelogen.parseGitCommit(commit, config)).filter(utils.notNullish);
}

async function generate(options) {
  const resolved = await resolveConfig(options);
  const rawCommits = await changelogen.getGitDiff(resolved.from, resolved.to);
  const commits = parseCommits(rawCommits, resolved);
  if (resolved.contributors)
    await resolveAuthors(commits, resolved);
  const md = generateMarkdown(commits, resolved);
  return { config: resolved, md, commits };
}

exports.defineConfig = defineConfig;
exports.generate = generate;
exports.generateMarkdown = generateMarkdown;
exports.getCurrentGitBranch = getCurrentGitBranch;
exports.getFirstGitCommit = getFirstGitCommit;
exports.getGitHubRepo = getGitHubRepo;
exports.getLastGitTag = getLastGitTag;
exports.hasTagOnGitHub = hasTagOnGitHub;
exports.isPrerelease = isPrerelease;
exports.isRefGitTag = isRefGitTag;
exports.isRepoShallow = isRepoShallow;
exports.parseCommits = parseCommits;
exports.resolveAuthorInfo = resolveAuthorInfo;
exports.resolveAuthors = resolveAuthors;
exports.resolveConfig = resolveConfig;
exports.sendRelease = sendRelease;


/***/ }),

/***/ 4734:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const gitmojis = {
  ":art:": "\u{1F3A8}",
  ":zap:": "\u26A1\uFE0F",
  ":fire:": "\u{1F525}",
  ":bug:": "\u{1F41B}",
  ":ambulance:": "\u{1F691}\uFE0F",
  ":sparkles:": "\u2728",
  ":memo:": "\u{1F4DD}",
  ":rocket:": "\u{1F680}",
  ":lipstick:": "\u{1F484}",
  ":tada:": "\u{1F389}",
  ":white_check_mark:": "\u2705",
  ":lock:": "\u{1F512}\uFE0F",
  ":closed_lock_with_key:": "\u{1F510}",
  ":bookmark:": "\u{1F516}",
  ":rotating_light:": "\u{1F6A8}",
  ":construction:": "\u{1F6A7}",
  ":green_heart:": "\u{1F49A}",
  ":arrow_down:": "\u2B07\uFE0F",
  ":arrow_up:": "\u2B06\uFE0F",
  ":pushpin:": "\u{1F4CC}",
  ":construction_worker:": "\u{1F477}",
  ":chart_with_upwards_trend:": "\u{1F4C8}",
  ":recycle:": "\u267B\uFE0F",
  ":heavy_plus_sign:": "\u2795",
  ":heavy_minus_sign:": "\u2796",
  ":wrench:": "\u{1F527}",
  ":hammer:": "\u{1F528}",
  ":globe_with_meridians:": "\u{1F310}",
  ":pencil2:": "\u270F\uFE0F",
  ":pencil:": "\u270F\uFE0F",
  ":poop:": "\u{1F4A9}",
  ":rewind:": "\u23EA\uFE0F",
  ":twisted_rightwards_arrows:": "\u{1F500}",
  ":package:": "\u{1F4E6}\uFE0F",
  ":alien:": "\u{1F47D}\uFE0F",
  ":truck:": "\u{1F69A}",
  ":page_facing_up:": "\u{1F4C4}",
  ":boom:": "\u{1F4A5}",
  ":bento:": "\u{1F371}",
  ":wheelchair:": "\u267F\uFE0F",
  ":bulb:": "\u{1F4A1}",
  ":beers:": "\u{1F37B}",
  ":speech_balloon:": "\u{1F4AC}",
  ":card_file_box:": "\u{1F5C3}\uFE0F",
  ":loud_sound:": "\u{1F50A}",
  ":mute:": "\u{1F507}",
  ":busts_in_silhouette:": "\u{1F465}",
  ":children_crossing:": "\u{1F6B8}",
  ":building_construction:": "\u{1F3D7}\uFE0F",
  ":iphone:": "\u{1F4F1}",
  ":clown_face:": "\u{1F921}",
  ":egg:": "\u{1F95A}",
  ":see_no_evil:": "\u{1F648}",
  ":camera_flash:": "\u{1F4F8}",
  ":alembic:": "\u2697\uFE0F",
  ":mag:": "\u{1F50D}\uFE0F",
  ":label:": "\u{1F3F7}\uFE0F",
  ":seedling:": "\u{1F331}",
  ":triangular_flag_on_post:": "\u{1F6A9}",
  ":goal_net:": "\u{1F945}",
  ":dizzy:": "\u{1F4AB}",
  ":wastebasket:": "\u{1F5D1}\uFE0F",
  ":passport_control:": "\u{1F6C2}",
  ":adhesive_bandage:": "\u{1FA79}",
  ":monocle_face:": "\u{1F9D0}",
  ":coffin:": "\u26B0\uFE0F",
  ":test_tube:": "\u{1F9EA}",
  ":necktie:": "\u{1F454}",
  ":stethoscope:": "\u{1FA7A}",
  ":bricks:": "\u{1F9F1}",
  ":technologist:": "\u{1F9D1}\u200D\u{1F4BB}",
  ":money_with_wings:": "\u{1F4B8}",
  ":thread:": "\u{1F9F5}",
  ":safety_vest:": "\u{1F9BA}"
};
function convert(content, withSpace) {
  const re = new RegExp(Object.keys(gitmojis).join("|"), "gi");
  return content.replace(re, function(matched) {
    switch (withSpace) {
      case true:
      case "trailing":
        return `${gitmojis[matched.toLowerCase()]} `;
      case "leading":
        return ` ${gitmojis[matched.toLowerCase()]}`;
      case "both":
        return ` ${gitmojis[matched.toLowerCase()]} `;
      default:
        return gitmojis[matched.toLowerCase()];
    }
  });
}

exports.convert = convert;


/***/ }),

/***/ 2933:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function isObject(value) {
  return value !== null && typeof value === "object";
}
function _defu(baseObject, defaults, namespace = ".", merger) {
  if (!isObject(defaults)) {
    return _defu(baseObject, {}, namespace, merger);
  }
  const object = Object.assign({}, defaults);
  for (const key in baseObject) {
    if (key === "__proto__" || key === "constructor") {
      continue;
    }
    const value = baseObject[key];
    if (value === null || value === void 0) {
      continue;
    }
    if (merger && merger(object, key, value, namespace)) {
      continue;
    }
    if (Array.isArray(value) && Array.isArray(object[key])) {
      object[key] = [...value, ...object[key]];
    } else if (isObject(value) && isObject(object[key])) {
      object[key] = _defu(
        value,
        object[key],
        (namespace ? `${namespace}.` : "") + key.toString(),
        merger
      );
    } else {
      object[key] = value;
    }
  }
  return object;
}
function createDefu(merger) {
  return (...arguments_) => (
    // eslint-disable-next-line unicorn/no-array-reduce
    arguments_.reduce((p, c) => _defu(p, c, "", merger), {})
  );
}
const defu = createDefu();
const defuFn = createDefu((object, key, currentValue) => {
  if (typeof object[key] !== "undefined" && typeof currentValue === "function") {
    object[key] = currentValue(object[key]);
    return true;
  }
});
const defuArrayFn = createDefu((object, key, currentValue) => {
  if (Array.isArray(object[key]) && typeof currentValue === "function") {
    object[key] = currentValue(object[key]);
    return true;
  }
});

exports.createDefu = createDefu;
exports["default"] = defu;
exports.defu = defu;
exports.defuArrayFn = defuArrayFn;
exports.defuFn = defuFn;


/***/ }),

/***/ 5284:
/***/ ((module) => {

"use strict";


const suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
const suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
const JsonSigRx = /^\s*["[{]|^\s*-?\d[\d.]{0,14}\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__") {
    return;
  }
  if (key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    return;
  }
  return value;
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  const _lval = value.toLowerCase().trim();
  if (_lval === "true") {
    return true;
  }
  if (_lval === "false") {
    return false;
  }
  if (_lval === "null") {
    return null;
  }
  if (_lval === "nan") {
    return Number.NaN;
  }
  if (_lval === "infinity") {
    return Number.POSITIVE_INFINITY;
  }
  if (_lval === "undefined") {
    return void 0;
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

module.exports = destr;


/***/ }),

/***/ 450:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const abortController = __nccwpck_require__(462);
const node_fs = __nccwpck_require__(7561);
const node_path = __nccwpck_require__(9411);
__nccwpck_require__(8849);
__nccwpck_require__(2286);
__nccwpck_require__(5628);
__nccwpck_require__(4492);
__nccwpck_require__(2254);
__nccwpck_require__(7261);
__nccwpck_require__(1041);
__nccwpck_require__(7503);

const { stat } = node_fs.promises;

/**
 * @param {string} path filepath on the disk
 * @param {string} [type] mimetype to use
 */
const blobFromSync = (path, type) => fromBlob(node_fs.statSync(path), path, type);

/**
 * @param {string} path filepath on the disk
 * @param {string} [type] mimetype to use
 * @returns {Promise<Blob>}
 */
const blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type));

/**
 * @param {string} path filepath on the disk
 * @param {string} [type] mimetype to use
 * @returns {Promise<File>}
 */
const fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type));

/**
 * @param {string} path filepath on the disk
 * @param {string} [type] mimetype to use
 */
const fileFromSync = (path, type) => fromFile(node_fs.statSync(path), path, type);

// @ts-ignore
const fromBlob = (stat, path, type = '') => new abortController._Blob([new BlobDataItem({
  path,
  size: stat.size,
  lastModified: stat.mtimeMs,
  start: 0
})], { type });

// @ts-ignore
const fromFile = (stat, path, type = '') => new abortController.File([new BlobDataItem({
  path,
  size: stat.size,
  lastModified: stat.mtimeMs,
  start: 0
})], node_path.basename(path), { type, lastModified: stat.mtimeMs });

/**
 * This is a blob backed up by a file on the disk
 * with minium requirement. Its wrapped around a Blob as a blobPart
 * so you have no direct access to this.
 *
 * @private
 */
class BlobDataItem {
  #path
  #start

  constructor (options) {
    this.#path = options.path;
    this.#start = options.start;
    this.size = options.size;
    this.lastModified = options.lastModified;
    this.originalSize = options.originalSize === undefined
      ? options.size
      : options.originalSize;
  }

  /**
   * Slicing arguments is first validated and formatted
   * to not be out of range by Blob.prototype.slice
   */
  slice (start, end) {
    return new BlobDataItem({
      path: this.#path,
      lastModified: this.lastModified,
      originalSize: this.originalSize,
      size: end - start,
      start: this.#start + start
    })
  }

  async * stream () {
    const { mtimeMs, size } = await stat(this.#path);

    if (mtimeMs > this.lastModified || this.originalSize !== size) {
      throw new abortController.nodeDomexception('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')
    }

    yield * node_fs.createReadStream(this.#path, {
      start: this.#start,
      end: this.#start + this.size - 1
    });
  }

  get [Symbol.toStringTag] () {
    return 'Blob'
  }
}

const fetch = globalThis.fetch || abortController.fetch;
const Blob = globalThis.Blob || abortController._Blob;
const File = globalThis.File || abortController.File;
const FormData = globalThis.FormData || abortController.FormData;
const Headers = globalThis.Headers || abortController.Headers;
const Request = globalThis.Request || abortController.Request;
const Response = globalThis.Response || abortController.Response;
const AbortController = globalThis.AbortController || abortController.AbortController;

exports.AbortError = abortController.AbortError;
exports.FetchError = abortController.FetchError;
exports.isRedirect = abortController.isRedirect;
exports.AbortController = AbortController;
exports.Blob = Blob;
exports.File = File;
exports.FormData = FormData;
exports.Headers = Headers;
exports.Request = Request;
exports.Response = Response;
exports.blobFrom = blobFrom;
exports.blobFromSync = blobFromSync;
exports["default"] = fetch;
exports.fetch = fetch;
exports.fileFrom = fileFrom;
exports.fileFromSync = fileFromSync;


/***/ }),

/***/ 462:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const http = __nccwpck_require__(8849);
const https = __nccwpck_require__(2286);
const zlib = __nccwpck_require__(5628);
const Stream = __nccwpck_require__(4492);
const node_buffer = __nccwpck_require__(2254);
const node_util = __nccwpck_require__(7261);
const node_url = __nccwpck_require__(1041);
const node_net = __nccwpck_require__(7503);
__nccwpck_require__(7561);
__nccwpck_require__(9411);

/**
 * Returns a `Buffer` instance from the given data URI `uri`.
 *
 * @param {String} uri Data URI to turn into a Buffer instance
 * @returns {Buffer} Buffer instance from Data URI
 * @api public
 */
function dataUriToBuffer(uri) {
    if (!/^data:/i.test(uri)) {
        throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
    }
    // strip newlines
    uri = uri.replace(/\r?\n/g, '');
    // split the URI up into the "metadata" and the "data" portions
    const firstComma = uri.indexOf(',');
    if (firstComma === -1 || firstComma <= 4) {
        throw new TypeError('malformed data: URI');
    }
    // remove the "data:" scheme and parse the metadata
    const meta = uri.substring(5, firstComma).split(';');
    let charset = '';
    let base64 = false;
    const type = meta[0] || 'text/plain';
    let typeFull = type;
    for (let i = 1; i < meta.length; i++) {
        if (meta[i] === 'base64') {
            base64 = true;
        }
        else {
            typeFull += `;${meta[i]}`;
            if (meta[i].indexOf('charset=') === 0) {
                charset = meta[i].substring(8);
            }
        }
    }
    // defaults to US-ASCII only if type is not provided
    if (!meta[0] && !charset.length) {
        typeFull += ';charset=US-ASCII';
        charset = 'US-ASCII';
    }
    // get the encoded data portion and decode URI-encoded chars
    const encoding = base64 ? 'base64' : 'ascii';
    const data = unescape(uri.substring(firstComma + 1));
    const buffer = Buffer.from(data, encoding);
    // set `.type` and `.typeFull` properties to MIME type
    buffer.type = type;
    buffer.typeFull = typeFull;
    // set the `.charset` property
    buffer.charset = charset;
    return buffer;
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var ponyfill_es2018 = {exports: {}};

/**
 * web-streams-polyfill v3.2.1
 */

var hasRequiredPonyfill_es2018;

function requirePonyfill_es2018 () {
	if (hasRequiredPonyfill_es2018) return ponyfill_es2018.exports;
	hasRequiredPonyfill_es2018 = 1;
	(function (module, exports) {
		(function (global, factory) {
		    factory(exports) ;
		}(commonjsGlobal, (function (exports) {
		    /// <reference lib="es2015.symbol" />
		    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?
		        Symbol :
		        description => `Symbol(${description})`;

		    /// <reference lib="dom" />
		    function noop() {
		        return undefined;
		    }
		    function getGlobals() {
		        if (typeof self !== 'undefined') {
		            return self;
		        }
		        else if (typeof window !== 'undefined') {
		            return window;
		        }
		        else if (typeof commonjsGlobal !== 'undefined') {
		            return commonjsGlobal;
		        }
		        return undefined;
		    }
		    const globals = getGlobals();

		    function typeIsObject(x) {
		        return (typeof x === 'object' && x !== null) || typeof x === 'function';
		    }
		    const rethrowAssertionErrorRejection = noop;

		    const originalPromise = Promise;
		    const originalPromiseThen = Promise.prototype.then;
		    const originalPromiseResolve = Promise.resolve.bind(originalPromise);
		    const originalPromiseReject = Promise.reject.bind(originalPromise);
		    function newPromise(executor) {
		        return new originalPromise(executor);
		    }
		    function promiseResolvedWith(value) {
		        return originalPromiseResolve(value);
		    }
		    function promiseRejectedWith(reason) {
		        return originalPromiseReject(reason);
		    }
		    function PerformPromiseThen(promise, onFulfilled, onRejected) {
		        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an
		        // approximation.
		        return originalPromiseThen.call(promise, onFulfilled, onRejected);
		    }
		    function uponPromise(promise, onFulfilled, onRejected) {
		        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);
		    }
		    function uponFulfillment(promise, onFulfilled) {
		        uponPromise(promise, onFulfilled);
		    }
		    function uponRejection(promise, onRejected) {
		        uponPromise(promise, undefined, onRejected);
		    }
		    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
		        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
		    }
		    function setPromiseIsHandledToTrue(promise) {
		        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);
		    }
		    const queueMicrotask = (() => {
		        const globalQueueMicrotask = globals && globals.queueMicrotask;
		        if (typeof globalQueueMicrotask === 'function') {
		            return globalQueueMicrotask;
		        }
		        const resolvedPromise = promiseResolvedWith(undefined);
		        return (fn) => PerformPromiseThen(resolvedPromise, fn);
		    })();
		    function reflectCall(F, V, args) {
		        if (typeof F !== 'function') {
		            throw new TypeError('Argument is not a function');
		        }
		        return Function.prototype.apply.call(F, V, args);
		    }
		    function promiseCall(F, V, args) {
		        try {
		            return promiseResolvedWith(reflectCall(F, V, args));
		        }
		        catch (value) {
		            return promiseRejectedWith(value);
		        }
		    }

		    // Original from Chromium
		    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js
		    const QUEUE_MAX_ARRAY_SIZE = 16384;
		    /**
		     * Simple queue structure.
		     *
		     * Avoids scalability issues with using a packed array directly by using
		     * multiple arrays in a linked list and keeping the array size bounded.
		     */
		    class SimpleQueue {
		        constructor() {
		            this._cursor = 0;
		            this._size = 0;
		            // _front and _back are always defined.
		            this._front = {
		                _elements: [],
		                _next: undefined
		            };
		            this._back = this._front;
		            // The cursor is used to avoid calling Array.shift().
		            // It contains the index of the front element of the array inside the
		            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).
		            this._cursor = 0;
		            // When there is only one node, size === elements.length - cursor.
		            this._size = 0;
		        }
		        get length() {
		            return this._size;
		        }
		        // For exception safety, this method is structured in order:
		        // 1. Read state
		        // 2. Calculate required state mutations
		        // 3. Perform state mutations
		        push(element) {
		            const oldBack = this._back;
		            let newBack = oldBack;
		            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
		                newBack = {
		                    _elements: [],
		                    _next: undefined
		                };
		            }
		            // push() is the mutation most likely to throw an exception, so it
		            // goes first.
		            oldBack._elements.push(element);
		            if (newBack !== oldBack) {
		                this._back = newBack;
		                oldBack._next = newBack;
		            }
		            ++this._size;
		        }
		        // Like push(), shift() follows the read -> calculate -> mutate pattern for
		        // exception safety.
		        shift() { // must not be called on an empty queue
		            const oldFront = this._front;
		            let newFront = oldFront;
		            const oldCursor = this._cursor;
		            let newCursor = oldCursor + 1;
		            const elements = oldFront._elements;
		            const element = elements[oldCursor];
		            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
		                newFront = oldFront._next;
		                newCursor = 0;
		            }
		            // No mutations before this point.
		            --this._size;
		            this._cursor = newCursor;
		            if (oldFront !== newFront) {
		                this._front = newFront;
		            }
		            // Permit shifted element to be garbage collected.
		            elements[oldCursor] = undefined;
		            return element;
		        }
		        // The tricky thing about forEach() is that it can be called
		        // re-entrantly. The queue may be mutated inside the callback. It is easy to
		        // see that push() within the callback has no negative effects since the end
		        // of the queue is checked for on every iteration. If shift() is called
		        // repeatedly within the callback then the next iteration may return an
		        // element that has been removed. In this case the callback will be called
		        // with undefined values until we either "catch up" with elements that still
		        // exist or reach the back of the queue.
		        forEach(callback) {
		            let i = this._cursor;
		            let node = this._front;
		            let elements = node._elements;
		            while (i !== elements.length || node._next !== undefined) {
		                if (i === elements.length) {
		                    node = node._next;
		                    elements = node._elements;
		                    i = 0;
		                    if (elements.length === 0) {
		                        break;
		                    }
		                }
		                callback(elements[i]);
		                ++i;
		            }
		        }
		        // Return the element that would be returned if shift() was called now,
		        // without modifying the queue.
		        peek() { // must not be called on an empty queue
		            const front = this._front;
		            const cursor = this._cursor;
		            return front._elements[cursor];
		        }
		    }

		    function ReadableStreamReaderGenericInitialize(reader, stream) {
		        reader._ownerReadableStream = stream;
		        stream._reader = reader;
		        if (stream._state === 'readable') {
		            defaultReaderClosedPromiseInitialize(reader);
		        }
		        else if (stream._state === 'closed') {
		            defaultReaderClosedPromiseInitializeAsResolved(reader);
		        }
		        else {
		            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
		        }
		    }
		    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state
		    // check.
		    function ReadableStreamReaderGenericCancel(reader, reason) {
		        const stream = reader._ownerReadableStream;
		        return ReadableStreamCancel(stream, reason);
		    }
		    function ReadableStreamReaderGenericRelease(reader) {
		        if (reader._ownerReadableStream._state === 'readable') {
		            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
		        }
		        else {
		            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
		        }
		        reader._ownerReadableStream._reader = undefined;
		        reader._ownerReadableStream = undefined;
		    }
		    // Helper functions for the readers.
		    function readerLockException(name) {
		        return new TypeError('Cannot ' + name + ' a stream using a released reader');
		    }
		    // Helper functions for the ReadableStreamDefaultReader.
		    function defaultReaderClosedPromiseInitialize(reader) {
		        reader._closedPromise = newPromise((resolve, reject) => {
		            reader._closedPromise_resolve = resolve;
		            reader._closedPromise_reject = reject;
		        });
		    }
		    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
		        defaultReaderClosedPromiseInitialize(reader);
		        defaultReaderClosedPromiseReject(reader, reason);
		    }
		    function defaultReaderClosedPromiseInitializeAsResolved(reader) {
		        defaultReaderClosedPromiseInitialize(reader);
		        defaultReaderClosedPromiseResolve(reader);
		    }
		    function defaultReaderClosedPromiseReject(reader, reason) {
		        if (reader._closedPromise_reject === undefined) {
		            return;
		        }
		        setPromiseIsHandledToTrue(reader._closedPromise);
		        reader._closedPromise_reject(reason);
		        reader._closedPromise_resolve = undefined;
		        reader._closedPromise_reject = undefined;
		    }
		    function defaultReaderClosedPromiseResetToRejected(reader, reason) {
		        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
		    }
		    function defaultReaderClosedPromiseResolve(reader) {
		        if (reader._closedPromise_resolve === undefined) {
		            return;
		        }
		        reader._closedPromise_resolve(undefined);
		        reader._closedPromise_resolve = undefined;
		        reader._closedPromise_reject = undefined;
		    }

		    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');
		    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');
		    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');
		    const PullSteps = SymbolPolyfill('[[PullSteps]]');

		    /// <reference lib="es2015.core" />
		    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill
		    const NumberIsFinite = Number.isFinite || function (x) {
		        return typeof x === 'number' && isFinite(x);
		    };

		    /// <reference lib="es2015.core" />
		    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill
		    const MathTrunc = Math.trunc || function (v) {
		        return v < 0 ? Math.ceil(v) : Math.floor(v);
		    };

		    // https://heycam.github.io/webidl/#idl-dictionaries
		    function isDictionary(x) {
		        return typeof x === 'object' || typeof x === 'function';
		    }
		    function assertDictionary(obj, context) {
		        if (obj !== undefined && !isDictionary(obj)) {
		            throw new TypeError(`${context} is not an object.`);
		        }
		    }
		    // https://heycam.github.io/webidl/#idl-callback-functions
		    function assertFunction(x, context) {
		        if (typeof x !== 'function') {
		            throw new TypeError(`${context} is not a function.`);
		        }
		    }
		    // https://heycam.github.io/webidl/#idl-object
		    function isObject(x) {
		        return (typeof x === 'object' && x !== null) || typeof x === 'function';
		    }
		    function assertObject(x, context) {
		        if (!isObject(x)) {
		            throw new TypeError(`${context} is not an object.`);
		        }
		    }
		    function assertRequiredArgument(x, position, context) {
		        if (x === undefined) {
		            throw new TypeError(`Parameter ${position} is required in '${context}'.`);
		        }
		    }
		    function assertRequiredField(x, field, context) {
		        if (x === undefined) {
		            throw new TypeError(`${field} is required in '${context}'.`);
		        }
		    }
		    // https://heycam.github.io/webidl/#idl-unrestricted-double
		    function convertUnrestrictedDouble(value) {
		        return Number(value);
		    }
		    function censorNegativeZero(x) {
		        return x === 0 ? 0 : x;
		    }
		    function integerPart(x) {
		        return censorNegativeZero(MathTrunc(x));
		    }
		    // https://heycam.github.io/webidl/#idl-unsigned-long-long
		    function convertUnsignedLongLongWithEnforceRange(value, context) {
		        const lowerBound = 0;
		        const upperBound = Number.MAX_SAFE_INTEGER;
		        let x = Number(value);
		        x = censorNegativeZero(x);
		        if (!NumberIsFinite(x)) {
		            throw new TypeError(`${context} is not a finite number`);
		        }
		        x = integerPart(x);
		        if (x < lowerBound || x > upperBound) {
		            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
		        }
		        if (!NumberIsFinite(x) || x === 0) {
		            return 0;
		        }
		        // TODO Use BigInt if supported?
		        // let xBigInt = BigInt(integerPart(x));
		        // xBigInt = BigInt.asUintN(64, xBigInt);
		        // return Number(xBigInt);
		        return x;
		    }

		    function assertReadableStream(x, context) {
		        if (!IsReadableStream(x)) {
		            throw new TypeError(`${context} is not a ReadableStream.`);
		        }
		    }

		    // Abstract operations for the ReadableStream.
		    function AcquireReadableStreamDefaultReader(stream) {
		        return new ReadableStreamDefaultReader(stream);
		    }
		    // ReadableStream API exposed for controllers.
		    function ReadableStreamAddReadRequest(stream, readRequest) {
		        stream._reader._readRequests.push(readRequest);
		    }
		    function ReadableStreamFulfillReadRequest(stream, chunk, done) {
		        const reader = stream._reader;
		        const readRequest = reader._readRequests.shift();
		        if (done) {
		            readRequest._closeSteps();
		        }
		        else {
		            readRequest._chunkSteps(chunk);
		        }
		    }
		    function ReadableStreamGetNumReadRequests(stream) {
		        return stream._reader._readRequests.length;
		    }
		    function ReadableStreamHasDefaultReader(stream) {
		        const reader = stream._reader;
		        if (reader === undefined) {
		            return false;
		        }
		        if (!IsReadableStreamDefaultReader(reader)) {
		            return false;
		        }
		        return true;
		    }
		    /**
		     * A default reader vended by a {@link ReadableStream}.
		     *
		     * @public
		     */
		    class ReadableStreamDefaultReader {
		        constructor(stream) {
		            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');
		            assertReadableStream(stream, 'First parameter');
		            if (IsReadableStreamLocked(stream)) {
		                throw new TypeError('This stream has already been locked for exclusive reading by another reader');
		            }
		            ReadableStreamReaderGenericInitialize(this, stream);
		            this._readRequests = new SimpleQueue();
		        }
		        /**
		         * Returns a promise that will be fulfilled when the stream becomes closed,
		         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.
		         */
		        get closed() {
		            if (!IsReadableStreamDefaultReader(this)) {
		                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));
		            }
		            return this._closedPromise;
		        }
		        /**
		         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.
		         */
		        cancel(reason = undefined) {
		            if (!IsReadableStreamDefaultReader(this)) {
		                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));
		            }
		            if (this._ownerReadableStream === undefined) {
		                return promiseRejectedWith(readerLockException('cancel'));
		            }
		            return ReadableStreamReaderGenericCancel(this, reason);
		        }
		        /**
		         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.
		         *
		         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.
		         */
		        read() {
		            if (!IsReadableStreamDefaultReader(this)) {
		                return promiseRejectedWith(defaultReaderBrandCheckException('read'));
		            }
		            if (this._ownerReadableStream === undefined) {
		                return promiseRejectedWith(readerLockException('read from'));
		            }
		            let resolvePromise;
		            let rejectPromise;
		            const promise = newPromise((resolve, reject) => {
		                resolvePromise = resolve;
		                rejectPromise = reject;
		            });
		            const readRequest = {
		                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),
		                _closeSteps: () => resolvePromise({ value: undefined, done: true }),
		                _errorSteps: e => rejectPromise(e)
		            };
		            ReadableStreamDefaultReaderRead(this, readRequest);
		            return promise;
		        }
		        /**
		         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.
		         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way
		         * from now on; otherwise, the reader will appear closed.
		         *
		         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by
		         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to
		         * do so will throw a `TypeError` and leave the reader locked to the stream.
		         */
		        releaseLock() {
		            if (!IsReadableStreamDefaultReader(this)) {
		                throw defaultReaderBrandCheckException('releaseLock');
		            }
		            if (this._ownerReadableStream === undefined) {
		                return;
		            }
		            if (this._readRequests.length > 0) {
		                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');
		            }
		            ReadableStreamReaderGenericRelease(this);
		        }
		    }
		    Object.defineProperties(ReadableStreamDefaultReader.prototype, {
		        cancel: { enumerable: true },
		        read: { enumerable: true },
		        releaseLock: { enumerable: true },
		        closed: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
		            value: 'ReadableStreamDefaultReader',
		            configurable: true
		        });
		    }
		    // Abstract operations for the readers.
		    function IsReadableStreamDefaultReader(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {
		            return false;
		        }
		        return x instanceof ReadableStreamDefaultReader;
		    }
		    function ReadableStreamDefaultReaderRead(reader, readRequest) {
		        const stream = reader._ownerReadableStream;
		        stream._disturbed = true;
		        if (stream._state === 'closed') {
		            readRequest._closeSteps();
		        }
		        else if (stream._state === 'errored') {
		            readRequest._errorSteps(stream._storedError);
		        }
		        else {
		            stream._readableStreamController[PullSteps](readRequest);
		        }
		    }
		    // Helper functions for the ReadableStreamDefaultReader.
		    function defaultReaderBrandCheckException(name) {
		        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);
		    }

		    /// <reference lib="es2018.asynciterable" />
		    /* eslint-disable @typescript-eslint/no-empty-function */
		    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);

		    /// <reference lib="es2018.asynciterable" />
		    class ReadableStreamAsyncIteratorImpl {
		        constructor(reader, preventCancel) {
		            this._ongoingPromise = undefined;
		            this._isFinished = false;
		            this._reader = reader;
		            this._preventCancel = preventCancel;
		        }
		        next() {
		            const nextSteps = () => this._nextSteps();
		            this._ongoingPromise = this._ongoingPromise ?
		                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :
		                nextSteps();
		            return this._ongoingPromise;
		        }
		        return(value) {
		            const returnSteps = () => this._returnSteps(value);
		            return this._ongoingPromise ?
		                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :
		                returnSteps();
		        }
		        _nextSteps() {
		            if (this._isFinished) {
		                return Promise.resolve({ value: undefined, done: true });
		            }
		            const reader = this._reader;
		            if (reader._ownerReadableStream === undefined) {
		                return promiseRejectedWith(readerLockException('iterate'));
		            }
		            let resolvePromise;
		            let rejectPromise;
		            const promise = newPromise((resolve, reject) => {
		                resolvePromise = resolve;
		                rejectPromise = reject;
		            });
		            const readRequest = {
		                _chunkSteps: chunk => {
		                    this._ongoingPromise = undefined;
		                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.
		                    // FIXME Is this a bug in the specification, or in the test?
		                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));
		                },
		                _closeSteps: () => {
		                    this._ongoingPromise = undefined;
		                    this._isFinished = true;
		                    ReadableStreamReaderGenericRelease(reader);
		                    resolvePromise({ value: undefined, done: true });
		                },
		                _errorSteps: reason => {
		                    this._ongoingPromise = undefined;
		                    this._isFinished = true;
		                    ReadableStreamReaderGenericRelease(reader);
		                    rejectPromise(reason);
		                }
		            };
		            ReadableStreamDefaultReaderRead(reader, readRequest);
		            return promise;
		        }
		        _returnSteps(value) {
		            if (this._isFinished) {
		                return Promise.resolve({ value, done: true });
		            }
		            this._isFinished = true;
		            const reader = this._reader;
		            if (reader._ownerReadableStream === undefined) {
		                return promiseRejectedWith(readerLockException('finish iterating'));
		            }
		            if (!this._preventCancel) {
		                const result = ReadableStreamReaderGenericCancel(reader, value);
		                ReadableStreamReaderGenericRelease(reader);
		                return transformPromiseWith(result, () => ({ value, done: true }));
		            }
		            ReadableStreamReaderGenericRelease(reader);
		            return promiseResolvedWith({ value, done: true });
		        }
		    }
		    const ReadableStreamAsyncIteratorPrototype = {
		        next() {
		            if (!IsReadableStreamAsyncIterator(this)) {
		                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));
		            }
		            return this._asyncIteratorImpl.next();
		        },
		        return(value) {
		            if (!IsReadableStreamAsyncIterator(this)) {
		                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));
		            }
		            return this._asyncIteratorImpl.return(value);
		        }
		    };
		    if (AsyncIteratorPrototype !== undefined) {
		        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
		    }
		    // Abstract operations for the ReadableStream.
		    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
		        const reader = AcquireReadableStreamDefaultReader(stream);
		        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
		        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
		        iterator._asyncIteratorImpl = impl;
		        return iterator;
		    }
		    function IsReadableStreamAsyncIterator(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {
		            return false;
		        }
		        try {
		            // noinspection SuspiciousTypeOfGuard
		            return x._asyncIteratorImpl instanceof
		                ReadableStreamAsyncIteratorImpl;
		        }
		        catch (_a) {
		            return false;
		        }
		    }
		    // Helper functions for the ReadableStream.
		    function streamAsyncIteratorBrandCheckException(name) {
		        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);
		    }

		    /// <reference lib="es2015.core" />
		    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill
		    const NumberIsNaN = Number.isNaN || function (x) {
		        // eslint-disable-next-line no-self-compare
		        return x !== x;
		    };

		    function CreateArrayFromList(elements) {
		        // We use arrays to represent lists, so this is basically a no-op.
		        // Do a slice though just in case we happen to depend on the unique-ness.
		        return elements.slice();
		    }
		    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {
		        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);
		    }
		    // Not implemented correctly
		    function TransferArrayBuffer(O) {
		        return O;
		    }
		    // Not implemented correctly
		    // eslint-disable-next-line @typescript-eslint/no-unused-vars
		    function IsDetachedBuffer(O) {
		        return false;
		    }
		    function ArrayBufferSlice(buffer, begin, end) {
		        // ArrayBuffer.prototype.slice is not available on IE10
		        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice
		        if (buffer.slice) {
		            return buffer.slice(begin, end);
		        }
		        const length = end - begin;
		        const slice = new ArrayBuffer(length);
		        CopyDataBlockBytes(slice, 0, buffer, begin, length);
		        return slice;
		    }

		    function IsNonNegativeNumber(v) {
		        if (typeof v !== 'number') {
		            return false;
		        }
		        if (NumberIsNaN(v)) {
		            return false;
		        }
		        if (v < 0) {
		            return false;
		        }
		        return true;
		    }
		    function CloneAsUint8Array(O) {
		        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
		        return new Uint8Array(buffer);
		    }

		    function DequeueValue(container) {
		        const pair = container._queue.shift();
		        container._queueTotalSize -= pair.size;
		        if (container._queueTotalSize < 0) {
		            container._queueTotalSize = 0;
		        }
		        return pair.value;
		    }
		    function EnqueueValueWithSize(container, value, size) {
		        if (!IsNonNegativeNumber(size) || size === Infinity) {
		            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');
		        }
		        container._queue.push({ value, size });
		        container._queueTotalSize += size;
		    }
		    function PeekQueueValue(container) {
		        const pair = container._queue.peek();
		        return pair.value;
		    }
		    function ResetQueue(container) {
		        container._queue = new SimpleQueue();
		        container._queueTotalSize = 0;
		    }

		    /**
		     * A pull-into request in a {@link ReadableByteStreamController}.
		     *
		     * @public
		     */
		    class ReadableStreamBYOBRequest {
		        constructor() {
		            throw new TypeError('Illegal constructor');
		        }
		        /**
		         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.
		         */
		        get view() {
		            if (!IsReadableStreamBYOBRequest(this)) {
		                throw byobRequestBrandCheckException('view');
		            }
		            return this._view;
		        }
		        respond(bytesWritten) {
		            if (!IsReadableStreamBYOBRequest(this)) {
		                throw byobRequestBrandCheckException('respond');
		            }
		            assertRequiredArgument(bytesWritten, 1, 'respond');
		            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');
		            if (this._associatedReadableByteStreamController === undefined) {
		                throw new TypeError('This BYOB request has been invalidated');
		            }
		            if (IsDetachedBuffer(this._view.buffer)) ;
		            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
		        }
		        respondWithNewView(view) {
		            if (!IsReadableStreamBYOBRequest(this)) {
		                throw byobRequestBrandCheckException('respondWithNewView');
		            }
		            assertRequiredArgument(view, 1, 'respondWithNewView');
		            if (!ArrayBuffer.isView(view)) {
		                throw new TypeError('You can only respond with array buffer views');
		            }
		            if (this._associatedReadableByteStreamController === undefined) {
		                throw new TypeError('This BYOB request has been invalidated');
		            }
		            if (IsDetachedBuffer(view.buffer)) ;
		            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
		        }
		    }
		    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
		        respond: { enumerable: true },
		        respondWithNewView: { enumerable: true },
		        view: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
		            value: 'ReadableStreamBYOBRequest',
		            configurable: true
		        });
		    }
		    /**
		     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.
		     *
		     * @public
		     */
		    class ReadableByteStreamController {
		        constructor() {
		            throw new TypeError('Illegal constructor');
		        }
		        /**
		         * Returns the current BYOB pull request, or `null` if there isn't one.
		         */
		        get byobRequest() {
		            if (!IsReadableByteStreamController(this)) {
		                throw byteStreamControllerBrandCheckException('byobRequest');
		            }
		            return ReadableByteStreamControllerGetBYOBRequest(this);
		        }
		        /**
		         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is
		         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.
		         */
		        get desiredSize() {
		            if (!IsReadableByteStreamController(this)) {
		                throw byteStreamControllerBrandCheckException('desiredSize');
		            }
		            return ReadableByteStreamControllerGetDesiredSize(this);
		        }
		        /**
		         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from
		         * the stream, but once those are read, the stream will become closed.
		         */
		        close() {
		            if (!IsReadableByteStreamController(this)) {
		                throw byteStreamControllerBrandCheckException('close');
		            }
		            if (this._closeRequested) {
		                throw new TypeError('The stream has already been closed; do not close it again!');
		            }
		            const state = this._controlledReadableByteStream._state;
		            if (state !== 'readable') {
		                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
		            }
		            ReadableByteStreamControllerClose(this);
		        }
		        enqueue(chunk) {
		            if (!IsReadableByteStreamController(this)) {
		                throw byteStreamControllerBrandCheckException('enqueue');
		            }
		            assertRequiredArgument(chunk, 1, 'enqueue');
		            if (!ArrayBuffer.isView(chunk)) {
		                throw new TypeError('chunk must be an array buffer view');
		            }
		            if (chunk.byteLength === 0) {
		                throw new TypeError('chunk must have non-zero byteLength');
		            }
		            if (chunk.buffer.byteLength === 0) {
		                throw new TypeError(`chunk's buffer must have non-zero byteLength`);
		            }
		            if (this._closeRequested) {
		                throw new TypeError('stream is closed or draining');
		            }
		            const state = this._controlledReadableByteStream._state;
		            if (state !== 'readable') {
		                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
		            }
		            ReadableByteStreamControllerEnqueue(this, chunk);
		        }
		        /**
		         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.
		         */
		        error(e = undefined) {
		            if (!IsReadableByteStreamController(this)) {
		                throw byteStreamControllerBrandCheckException('error');
		            }
		            ReadableByteStreamControllerError(this, e);
		        }
		        /** @internal */
		        [CancelSteps](reason) {
		            ReadableByteStreamControllerClearPendingPullIntos(this);
		            ResetQueue(this);
		            const result = this._cancelAlgorithm(reason);
		            ReadableByteStreamControllerClearAlgorithms(this);
		            return result;
		        }
		        /** @internal */
		        [PullSteps](readRequest) {
		            const stream = this._controlledReadableByteStream;
		            if (this._queueTotalSize > 0) {
		                const entry = this._queue.shift();
		                this._queueTotalSize -= entry.byteLength;
		                ReadableByteStreamControllerHandleQueueDrain(this);
		                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
		                readRequest._chunkSteps(view);
		                return;
		            }
		            const autoAllocateChunkSize = this._autoAllocateChunkSize;
		            if (autoAllocateChunkSize !== undefined) {
		                let buffer;
		                try {
		                    buffer = new ArrayBuffer(autoAllocateChunkSize);
		                }
		                catch (bufferE) {
		                    readRequest._errorSteps(bufferE);
		                    return;
		                }
		                const pullIntoDescriptor = {
		                    buffer,
		                    bufferByteLength: autoAllocateChunkSize,
		                    byteOffset: 0,
		                    byteLength: autoAllocateChunkSize,
		                    bytesFilled: 0,
		                    elementSize: 1,
		                    viewConstructor: Uint8Array,
		                    readerType: 'default'
		                };
		                this._pendingPullIntos.push(pullIntoDescriptor);
		            }
		            ReadableStreamAddReadRequest(stream, readRequest);
		            ReadableByteStreamControllerCallPullIfNeeded(this);
		        }
		    }
		    Object.defineProperties(ReadableByteStreamController.prototype, {
		        close: { enumerable: true },
		        enqueue: { enumerable: true },
		        error: { enumerable: true },
		        byobRequest: { enumerable: true },
		        desiredSize: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
		            value: 'ReadableByteStreamController',
		            configurable: true
		        });
		    }
		    // Abstract operations for the ReadableByteStreamController.
		    function IsReadableByteStreamController(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {
		            return false;
		        }
		        return x instanceof ReadableByteStreamController;
		    }
		    function IsReadableStreamBYOBRequest(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {
		            return false;
		        }
		        return x instanceof ReadableStreamBYOBRequest;
		    }
		    function ReadableByteStreamControllerCallPullIfNeeded(controller) {
		        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
		        if (!shouldPull) {
		            return;
		        }
		        if (controller._pulling) {
		            controller._pullAgain = true;
		            return;
		        }
		        controller._pulling = true;
		        // TODO: Test controller argument
		        const pullPromise = controller._pullAlgorithm();
		        uponPromise(pullPromise, () => {
		            controller._pulling = false;
		            if (controller._pullAgain) {
		                controller._pullAgain = false;
		                ReadableByteStreamControllerCallPullIfNeeded(controller);
		            }
		        }, e => {
		            ReadableByteStreamControllerError(controller, e);
		        });
		    }
		    function ReadableByteStreamControllerClearPendingPullIntos(controller) {
		        ReadableByteStreamControllerInvalidateBYOBRequest(controller);
		        controller._pendingPullIntos = new SimpleQueue();
		    }
		    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
		        let done = false;
		        if (stream._state === 'closed') {
		            done = true;
		        }
		        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
		        if (pullIntoDescriptor.readerType === 'default') {
		            ReadableStreamFulfillReadRequest(stream, filledView, done);
		        }
		        else {
		            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
		        }
		    }
		    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
		        const bytesFilled = pullIntoDescriptor.bytesFilled;
		        const elementSize = pullIntoDescriptor.elementSize;
		        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
		    }
		    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
		        controller._queue.push({ buffer, byteOffset, byteLength });
		        controller._queueTotalSize += byteLength;
		    }
		    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
		        const elementSize = pullIntoDescriptor.elementSize;
		        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
		        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
		        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
		        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
		        let totalBytesToCopyRemaining = maxBytesToCopy;
		        let ready = false;
		        if (maxAlignedBytes > currentAlignedBytes) {
		            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
		            ready = true;
		        }
		        const queue = controller._queue;
		        while (totalBytesToCopyRemaining > 0) {
		            const headOfQueue = queue.peek();
		            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
		            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
		            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
		            if (headOfQueue.byteLength === bytesToCopy) {
		                queue.shift();
		            }
		            else {
		                headOfQueue.byteOffset += bytesToCopy;
		                headOfQueue.byteLength -= bytesToCopy;
		            }
		            controller._queueTotalSize -= bytesToCopy;
		            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
		            totalBytesToCopyRemaining -= bytesToCopy;
		        }
		        return ready;
		    }
		    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
		        pullIntoDescriptor.bytesFilled += size;
		    }
		    function ReadableByteStreamControllerHandleQueueDrain(controller) {
		        if (controller._queueTotalSize === 0 && controller._closeRequested) {
		            ReadableByteStreamControllerClearAlgorithms(controller);
		            ReadableStreamClose(controller._controlledReadableByteStream);
		        }
		        else {
		            ReadableByteStreamControllerCallPullIfNeeded(controller);
		        }
		    }
		    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
		        if (controller._byobRequest === null) {
		            return;
		        }
		        controller._byobRequest._associatedReadableByteStreamController = undefined;
		        controller._byobRequest._view = null;
		        controller._byobRequest = null;
		    }
		    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
		        while (controller._pendingPullIntos.length > 0) {
		            if (controller._queueTotalSize === 0) {
		                return;
		            }
		            const pullIntoDescriptor = controller._pendingPullIntos.peek();
		            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
		                ReadableByteStreamControllerShiftPendingPullInto(controller);
		                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
		            }
		        }
		    }
		    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
		        const stream = controller._controlledReadableByteStream;
		        let elementSize = 1;
		        if (view.constructor !== DataView) {
		            elementSize = view.constructor.BYTES_PER_ELEMENT;
		        }
		        const ctor = view.constructor;
		        // try {
		        const buffer = TransferArrayBuffer(view.buffer);
		        // } catch (e) {
		        //   readIntoRequest._errorSteps(e);
		        //   return;
		        // }
		        const pullIntoDescriptor = {
		            buffer,
		            bufferByteLength: buffer.byteLength,
		            byteOffset: view.byteOffset,
		            byteLength: view.byteLength,
		            bytesFilled: 0,
		            elementSize,
		            viewConstructor: ctor,
		            readerType: 'byob'
		        };
		        if (controller._pendingPullIntos.length > 0) {
		            controller._pendingPullIntos.push(pullIntoDescriptor);
		            // No ReadableByteStreamControllerCallPullIfNeeded() call since:
		            // - No change happens on desiredSize
		            // - The source has already been notified of that there's at least 1 pending read(view)
		            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
		            return;
		        }
		        if (stream._state === 'closed') {
		            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
		            readIntoRequest._closeSteps(emptyView);
		            return;
		        }
		        if (controller._queueTotalSize > 0) {
		            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
		                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
		                ReadableByteStreamControllerHandleQueueDrain(controller);
		                readIntoRequest._chunkSteps(filledView);
		                return;
		            }
		            if (controller._closeRequested) {
		                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');
		                ReadableByteStreamControllerError(controller, e);
		                readIntoRequest._errorSteps(e);
		                return;
		            }
		        }
		        controller._pendingPullIntos.push(pullIntoDescriptor);
		        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
		        ReadableByteStreamControllerCallPullIfNeeded(controller);
		    }
		    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
		        const stream = controller._controlledReadableByteStream;
		        if (ReadableStreamHasBYOBReader(stream)) {
		            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
		                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
		                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
		            }
		        }
		    }
		    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
		        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
		        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
		            return;
		        }
		        ReadableByteStreamControllerShiftPendingPullInto(controller);
		        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
		        if (remainderSize > 0) {
		            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
		            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
		            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
		        }
		        pullIntoDescriptor.bytesFilled -= remainderSize;
		        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
		        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
		    }
		    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
		        const firstDescriptor = controller._pendingPullIntos.peek();
		        ReadableByteStreamControllerInvalidateBYOBRequest(controller);
		        const state = controller._controlledReadableByteStream._state;
		        if (state === 'closed') {
		            ReadableByteStreamControllerRespondInClosedState(controller);
		        }
		        else {
		            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
		        }
		        ReadableByteStreamControllerCallPullIfNeeded(controller);
		    }
		    function ReadableByteStreamControllerShiftPendingPullInto(controller) {
		        const descriptor = controller._pendingPullIntos.shift();
		        return descriptor;
		    }
		    function ReadableByteStreamControllerShouldCallPull(controller) {
		        const stream = controller._controlledReadableByteStream;
		        if (stream._state !== 'readable') {
		            return false;
		        }
		        if (controller._closeRequested) {
		            return false;
		        }
		        if (!controller._started) {
		            return false;
		        }
		        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
		            return true;
		        }
		        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
		            return true;
		        }
		        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
		        if (desiredSize > 0) {
		            return true;
		        }
		        return false;
		    }
		    function ReadableByteStreamControllerClearAlgorithms(controller) {
		        controller._pullAlgorithm = undefined;
		        controller._cancelAlgorithm = undefined;
		    }
		    // A client of ReadableByteStreamController may use these functions directly to bypass state check.
		    function ReadableByteStreamControllerClose(controller) {
		        const stream = controller._controlledReadableByteStream;
		        if (controller._closeRequested || stream._state !== 'readable') {
		            return;
		        }
		        if (controller._queueTotalSize > 0) {
		            controller._closeRequested = true;
		            return;
		        }
		        if (controller._pendingPullIntos.length > 0) {
		            const firstPendingPullInto = controller._pendingPullIntos.peek();
		            if (firstPendingPullInto.bytesFilled > 0) {
		                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');
		                ReadableByteStreamControllerError(controller, e);
		                throw e;
		            }
		        }
		        ReadableByteStreamControllerClearAlgorithms(controller);
		        ReadableStreamClose(stream);
		    }
		    function ReadableByteStreamControllerEnqueue(controller, chunk) {
		        const stream = controller._controlledReadableByteStream;
		        if (controller._closeRequested || stream._state !== 'readable') {
		            return;
		        }
		        const buffer = chunk.buffer;
		        const byteOffset = chunk.byteOffset;
		        const byteLength = chunk.byteLength;
		        const transferredBuffer = TransferArrayBuffer(buffer);
		        if (controller._pendingPullIntos.length > 0) {
		            const firstPendingPullInto = controller._pendingPullIntos.peek();
		            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;
		            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
		        }
		        ReadableByteStreamControllerInvalidateBYOBRequest(controller);
		        if (ReadableStreamHasDefaultReader(stream)) {
		            if (ReadableStreamGetNumReadRequests(stream) === 0) {
		                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
		            }
		            else {
		                if (controller._pendingPullIntos.length > 0) {
		                    ReadableByteStreamControllerShiftPendingPullInto(controller);
		                }
		                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
		                ReadableStreamFulfillReadRequest(stream, transferredView, false);
		            }
		        }
		        else if (ReadableStreamHasBYOBReader(stream)) {
		            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.
		            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
		            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
		        }
		        else {
		            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
		        }
		        ReadableByteStreamControllerCallPullIfNeeded(controller);
		    }
		    function ReadableByteStreamControllerError(controller, e) {
		        const stream = controller._controlledReadableByteStream;
		        if (stream._state !== 'readable') {
		            return;
		        }
		        ReadableByteStreamControllerClearPendingPullIntos(controller);
		        ResetQueue(controller);
		        ReadableByteStreamControllerClearAlgorithms(controller);
		        ReadableStreamError(stream, e);
		    }
		    function ReadableByteStreamControllerGetBYOBRequest(controller) {
		        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
		            const firstDescriptor = controller._pendingPullIntos.peek();
		            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
		            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
		            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
		            controller._byobRequest = byobRequest;
		        }
		        return controller._byobRequest;
		    }
		    function ReadableByteStreamControllerGetDesiredSize(controller) {
		        const state = controller._controlledReadableByteStream._state;
		        if (state === 'errored') {
		            return null;
		        }
		        if (state === 'closed') {
		            return 0;
		        }
		        return controller._strategyHWM - controller._queueTotalSize;
		    }
		    function ReadableByteStreamControllerRespond(controller, bytesWritten) {
		        const firstDescriptor = controller._pendingPullIntos.peek();
		        const state = controller._controlledReadableByteStream._state;
		        if (state === 'closed') {
		            if (bytesWritten !== 0) {
		                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');
		            }
		        }
		        else {
		            if (bytesWritten === 0) {
		                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');
		            }
		            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
		                throw new RangeError('bytesWritten out of range');
		            }
		        }
		        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
		        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
		    }
		    function ReadableByteStreamControllerRespondWithNewView(controller, view) {
		        const firstDescriptor = controller._pendingPullIntos.peek();
		        const state = controller._controlledReadableByteStream._state;
		        if (state === 'closed') {
		            if (view.byteLength !== 0) {
		                throw new TypeError('The view\'s length must be 0 when calling respondWithNewView() on a closed stream');
		            }
		        }
		        else {
		            if (view.byteLength === 0) {
		                throw new TypeError('The view\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');
		            }
		        }
		        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
		            throw new RangeError('The region specified by view does not match byobRequest');
		        }
		        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
		            throw new RangeError('The buffer of view has different capacity than byobRequest');
		        }
		        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
		            throw new RangeError('The region specified by view is larger than byobRequest');
		        }
		        const viewByteLength = view.byteLength;
		        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
		        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);
		    }
		    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
		        controller._controlledReadableByteStream = stream;
		        controller._pullAgain = false;
		        controller._pulling = false;
		        controller._byobRequest = null;
		        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.
		        controller._queue = controller._queueTotalSize = undefined;
		        ResetQueue(controller);
		        controller._closeRequested = false;
		        controller._started = false;
		        controller._strategyHWM = highWaterMark;
		        controller._pullAlgorithm = pullAlgorithm;
		        controller._cancelAlgorithm = cancelAlgorithm;
		        controller._autoAllocateChunkSize = autoAllocateChunkSize;
		        controller._pendingPullIntos = new SimpleQueue();
		        stream._readableStreamController = controller;
		        const startResult = startAlgorithm();
		        uponPromise(promiseResolvedWith(startResult), () => {
		            controller._started = true;
		            ReadableByteStreamControllerCallPullIfNeeded(controller);
		        }, r => {
		            ReadableByteStreamControllerError(controller, r);
		        });
		    }
		    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
		        const controller = Object.create(ReadableByteStreamController.prototype);
		        let startAlgorithm = () => undefined;
		        let pullAlgorithm = () => promiseResolvedWith(undefined);
		        let cancelAlgorithm = () => promiseResolvedWith(undefined);
		        if (underlyingByteSource.start !== undefined) {
		            startAlgorithm = () => underlyingByteSource.start(controller);
		        }
		        if (underlyingByteSource.pull !== undefined) {
		            pullAlgorithm = () => underlyingByteSource.pull(controller);
		        }
		        if (underlyingByteSource.cancel !== undefined) {
		            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);
		        }
		        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
		        if (autoAllocateChunkSize === 0) {
		            throw new TypeError('autoAllocateChunkSize must be greater than 0');
		        }
		        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
		    }
		    function SetUpReadableStreamBYOBRequest(request, controller, view) {
		        request._associatedReadableByteStreamController = controller;
		        request._view = view;
		    }
		    // Helper functions for the ReadableStreamBYOBRequest.
		    function byobRequestBrandCheckException(name) {
		        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);
		    }
		    // Helper functions for the ReadableByteStreamController.
		    function byteStreamControllerBrandCheckException(name) {
		        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);
		    }

		    // Abstract operations for the ReadableStream.
		    function AcquireReadableStreamBYOBReader(stream) {
		        return new ReadableStreamBYOBReader(stream);
		    }
		    // ReadableStream API exposed for controllers.
		    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
		        stream._reader._readIntoRequests.push(readIntoRequest);
		    }
		    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
		        const reader = stream._reader;
		        const readIntoRequest = reader._readIntoRequests.shift();
		        if (done) {
		            readIntoRequest._closeSteps(chunk);
		        }
		        else {
		            readIntoRequest._chunkSteps(chunk);
		        }
		    }
		    function ReadableStreamGetNumReadIntoRequests(stream) {
		        return stream._reader._readIntoRequests.length;
		    }
		    function ReadableStreamHasBYOBReader(stream) {
		        const reader = stream._reader;
		        if (reader === undefined) {
		            return false;
		        }
		        if (!IsReadableStreamBYOBReader(reader)) {
		            return false;
		        }
		        return true;
		    }
		    /**
		     * A BYOB reader vended by a {@link ReadableStream}.
		     *
		     * @public
		     */
		    class ReadableStreamBYOBReader {
		        constructor(stream) {
		            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');
		            assertReadableStream(stream, 'First parameter');
		            if (IsReadableStreamLocked(stream)) {
		                throw new TypeError('This stream has already been locked for exclusive reading by another reader');
		            }
		            if (!IsReadableByteStreamController(stream._readableStreamController)) {
		                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +
		                    'source');
		            }
		            ReadableStreamReaderGenericInitialize(this, stream);
		            this._readIntoRequests = new SimpleQueue();
		        }
		        /**
		         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or
		         * the reader's lock is released before the stream finishes closing.
		         */
		        get closed() {
		            if (!IsReadableStreamBYOBReader(this)) {
		                return promiseRejectedWith(byobReaderBrandCheckException('closed'));
		            }
		            return this._closedPromise;
		        }
		        /**
		         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.
		         */
		        cancel(reason = undefined) {
		            if (!IsReadableStreamBYOBReader(this)) {
		                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));
		            }
		            if (this._ownerReadableStream === undefined) {
		                return promiseRejectedWith(readerLockException('cancel'));
		            }
		            return ReadableStreamReaderGenericCancel(this, reason);
		        }
		        /**
		         * Attempts to reads bytes into view, and returns a promise resolved with the result.
		         *
		         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.
		         */
		        read(view) {
		            if (!IsReadableStreamBYOBReader(this)) {
		                return promiseRejectedWith(byobReaderBrandCheckException('read'));
		            }
		            if (!ArrayBuffer.isView(view)) {
		                return promiseRejectedWith(new TypeError('view must be an array buffer view'));
		            }
		            if (view.byteLength === 0) {
		                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));
		            }
		            if (view.buffer.byteLength === 0) {
		                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));
		            }
		            if (IsDetachedBuffer(view.buffer)) ;
		            if (this._ownerReadableStream === undefined) {
		                return promiseRejectedWith(readerLockException('read from'));
		            }
		            let resolvePromise;
		            let rejectPromise;
		            const promise = newPromise((resolve, reject) => {
		                resolvePromise = resolve;
		                rejectPromise = reject;
		            });
		            const readIntoRequest = {
		                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),
		                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),
		                _errorSteps: e => rejectPromise(e)
		            };
		            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
		            return promise;
		        }
		        /**
		         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.
		         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way
		         * from now on; otherwise, the reader will appear closed.
		         *
		         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by
		         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to
		         * do so will throw a `TypeError` and leave the reader locked to the stream.
		         */
		        releaseLock() {
		            if (!IsReadableStreamBYOBReader(this)) {
		                throw byobReaderBrandCheckException('releaseLock');
		            }
		            if (this._ownerReadableStream === undefined) {
		                return;
		            }
		            if (this._readIntoRequests.length > 0) {
		                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');
		            }
		            ReadableStreamReaderGenericRelease(this);
		        }
		    }
		    Object.defineProperties(ReadableStreamBYOBReader.prototype, {
		        cancel: { enumerable: true },
		        read: { enumerable: true },
		        releaseLock: { enumerable: true },
		        closed: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
		            value: 'ReadableStreamBYOBReader',
		            configurable: true
		        });
		    }
		    // Abstract operations for the readers.
		    function IsReadableStreamBYOBReader(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {
		            return false;
		        }
		        return x instanceof ReadableStreamBYOBReader;
		    }
		    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
		        const stream = reader._ownerReadableStream;
		        stream._disturbed = true;
		        if (stream._state === 'errored') {
		            readIntoRequest._errorSteps(stream._storedError);
		        }
		        else {
		            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
		        }
		    }
		    // Helper functions for the ReadableStreamBYOBReader.
		    function byobReaderBrandCheckException(name) {
		        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);
		    }

		    function ExtractHighWaterMark(strategy, defaultHWM) {
		        const { highWaterMark } = strategy;
		        if (highWaterMark === undefined) {
		            return defaultHWM;
		        }
		        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
		            throw new RangeError('Invalid highWaterMark');
		        }
		        return highWaterMark;
		    }
		    function ExtractSizeAlgorithm(strategy) {
		        const { size } = strategy;
		        if (!size) {
		            return () => 1;
		        }
		        return size;
		    }

		    function convertQueuingStrategy(init, context) {
		        assertDictionary(init, context);
		        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;
		        const size = init === null || init === void 0 ? void 0 : init.size;
		        return {
		            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),
		            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)
		        };
		    }
		    function convertQueuingStrategySize(fn, context) {
		        assertFunction(fn, context);
		        return chunk => convertUnrestrictedDouble(fn(chunk));
		    }

		    function convertUnderlyingSink(original, context) {
		        assertDictionary(original, context);
		        const abort = original === null || original === void 0 ? void 0 : original.abort;
		        const close = original === null || original === void 0 ? void 0 : original.close;
		        const start = original === null || original === void 0 ? void 0 : original.start;
		        const type = original === null || original === void 0 ? void 0 : original.type;
		        const write = original === null || original === void 0 ? void 0 : original.write;
		        return {
		            abort: abort === undefined ?
		                undefined :
		                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),
		            close: close === undefined ?
		                undefined :
		                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),
		            start: start === undefined ?
		                undefined :
		                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),
		            write: write === undefined ?
		                undefined :
		                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),
		            type
		        };
		    }
		    function convertUnderlyingSinkAbortCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (reason) => promiseCall(fn, original, [reason]);
		    }
		    function convertUnderlyingSinkCloseCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return () => promiseCall(fn, original, []);
		    }
		    function convertUnderlyingSinkStartCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (controller) => reflectCall(fn, original, [controller]);
		    }
		    function convertUnderlyingSinkWriteCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
		    }

		    function assertWritableStream(x, context) {
		        if (!IsWritableStream(x)) {
		            throw new TypeError(`${context} is not a WritableStream.`);
		        }
		    }

		    function isAbortSignal(value) {
		        if (typeof value !== 'object' || value === null) {
		            return false;
		        }
		        try {
		            return typeof value.aborted === 'boolean';
		        }
		        catch (_a) {
		            // AbortSignal.prototype.aborted throws if its brand check fails
		            return false;
		        }
		    }
		    const supportsAbortController = typeof AbortController === 'function';
		    /**
		     * Construct a new AbortController, if supported by the platform.
		     *
		     * @internal
		     */
		    function createAbortController() {
		        if (supportsAbortController) {
		            return new AbortController();
		        }
		        return undefined;
		    }

		    /**
		     * A writable stream represents a destination for data, into which you can write.
		     *
		     * @public
		     */
		    class WritableStream {
		        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
		            if (rawUnderlyingSink === undefined) {
		                rawUnderlyingSink = null;
		            }
		            else {
		                assertObject(rawUnderlyingSink, 'First parameter');
		            }
		            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');
		            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');
		            InitializeWritableStream(this);
		            const type = underlyingSink.type;
		            if (type !== undefined) {
		                throw new RangeError('Invalid type is specified');
		            }
		            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
		            const highWaterMark = ExtractHighWaterMark(strategy, 1);
		            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
		        }
		        /**
		         * Returns whether or not the writable stream is locked to a writer.
		         */
		        get locked() {
		            if (!IsWritableStream(this)) {
		                throw streamBrandCheckException$2('locked');
		            }
		            return IsWritableStreamLocked(this);
		        }
		        /**
		         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be
		         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort
		         * mechanism of the underlying sink.
		         *
		         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled
		         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel
		         * the stream) if the stream is currently locked.
		         */
		        abort(reason = undefined) {
		            if (!IsWritableStream(this)) {
		                return promiseRejectedWith(streamBrandCheckException$2('abort'));
		            }
		            if (IsWritableStreamLocked(this)) {
		                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));
		            }
		            return WritableStreamAbort(this, reason);
		        }
		        /**
		         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its
		         * close behavior. During this time any further attempts to write will fail (without erroring the stream).
		         *
		         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream
		         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with
		         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.
		         */
		        close() {
		            if (!IsWritableStream(this)) {
		                return promiseRejectedWith(streamBrandCheckException$2('close'));
		            }
		            if (IsWritableStreamLocked(this)) {
		                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));
		            }
		            if (WritableStreamCloseQueuedOrInFlight(this)) {
		                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));
		            }
		            return WritableStreamClose(this);
		        }
		        /**
		         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream
		         * is locked, no other writer can be acquired until this one is released.
		         *
		         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream
		         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at
		         * the same time, which would cause the resulting written data to be unpredictable and probably useless.
		         */
		        getWriter() {
		            if (!IsWritableStream(this)) {
		                throw streamBrandCheckException$2('getWriter');
		            }
		            return AcquireWritableStreamDefaultWriter(this);
		        }
		    }
		    Object.defineProperties(WritableStream.prototype, {
		        abort: { enumerable: true },
		        close: { enumerable: true },
		        getWriter: { enumerable: true },
		        locked: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
		            value: 'WritableStream',
		            configurable: true
		        });
		    }
		    // Abstract operations for the WritableStream.
		    function AcquireWritableStreamDefaultWriter(stream) {
		        return new WritableStreamDefaultWriter(stream);
		    }
		    // Throws if and only if startAlgorithm throws.
		    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
		        const stream = Object.create(WritableStream.prototype);
		        InitializeWritableStream(stream);
		        const controller = Object.create(WritableStreamDefaultController.prototype);
		        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
		        return stream;
		    }
		    function InitializeWritableStream(stream) {
		        stream._state = 'writable';
		        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is
		        // 'erroring' or 'errored'. May be set to an undefined value.
		        stream._storedError = undefined;
		        stream._writer = undefined;
		        // Initialize to undefined first because the constructor of the controller checks this
		        // variable to validate the caller.
		        stream._writableStreamController = undefined;
		        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data
		        // producer without waiting for the queued writes to finish.
		        stream._writeRequests = new SimpleQueue();
		        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents
		        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.
		        stream._inFlightWriteRequest = undefined;
		        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer
		        // has been detached.
		        stream._closeRequest = undefined;
		        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it
		        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.
		        stream._inFlightCloseRequest = undefined;
		        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.
		        stream._pendingAbortRequest = undefined;
		        // The backpressure signal set by the controller.
		        stream._backpressure = false;
		    }
		    function IsWritableStream(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {
		            return false;
		        }
		        return x instanceof WritableStream;
		    }
		    function IsWritableStreamLocked(stream) {
		        if (stream._writer === undefined) {
		            return false;
		        }
		        return true;
		    }
		    function WritableStreamAbort(stream, reason) {
		        var _a;
		        if (stream._state === 'closed' || stream._state === 'errored') {
		            return promiseResolvedWith(undefined);
		        }
		        stream._writableStreamController._abortReason = reason;
		        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();
		        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',
		        // but it doesn't know that signaling abort runs author code that might have changed the state.
		        // Widen the type again by casting to WritableStreamState.
		        const state = stream._state;
		        if (state === 'closed' || state === 'errored') {
		            return promiseResolvedWith(undefined);
		        }
		        if (stream._pendingAbortRequest !== undefined) {
		            return stream._pendingAbortRequest._promise;
		        }
		        let wasAlreadyErroring = false;
		        if (state === 'erroring') {
		            wasAlreadyErroring = true;
		            // reason will not be used, so don't keep a reference to it.
		            reason = undefined;
		        }
		        const promise = newPromise((resolve, reject) => {
		            stream._pendingAbortRequest = {
		                _promise: undefined,
		                _resolve: resolve,
		                _reject: reject,
		                _reason: reason,
		                _wasAlreadyErroring: wasAlreadyErroring
		            };
		        });
		        stream._pendingAbortRequest._promise = promise;
		        if (!wasAlreadyErroring) {
		            WritableStreamStartErroring(stream, reason);
		        }
		        return promise;
		    }
		    function WritableStreamClose(stream) {
		        const state = stream._state;
		        if (state === 'closed' || state === 'errored') {
		            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
		        }
		        const promise = newPromise((resolve, reject) => {
		            const closeRequest = {
		                _resolve: resolve,
		                _reject: reject
		            };
		            stream._closeRequest = closeRequest;
		        });
		        const writer = stream._writer;
		        if (writer !== undefined && stream._backpressure && state === 'writable') {
		            defaultWriterReadyPromiseResolve(writer);
		        }
		        WritableStreamDefaultControllerClose(stream._writableStreamController);
		        return promise;
		    }
		    // WritableStream API exposed for controllers.
		    function WritableStreamAddWriteRequest(stream) {
		        const promise = newPromise((resolve, reject) => {
		            const writeRequest = {
		                _resolve: resolve,
		                _reject: reject
		            };
		            stream._writeRequests.push(writeRequest);
		        });
		        return promise;
		    }
		    function WritableStreamDealWithRejection(stream, error) {
		        const state = stream._state;
		        if (state === 'writable') {
		            WritableStreamStartErroring(stream, error);
		            return;
		        }
		        WritableStreamFinishErroring(stream);
		    }
		    function WritableStreamStartErroring(stream, reason) {
		        const controller = stream._writableStreamController;
		        stream._state = 'erroring';
		        stream._storedError = reason;
		        const writer = stream._writer;
		        if (writer !== undefined) {
		            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
		        }
		        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
		            WritableStreamFinishErroring(stream);
		        }
		    }
		    function WritableStreamFinishErroring(stream) {
		        stream._state = 'errored';
		        stream._writableStreamController[ErrorSteps]();
		        const storedError = stream._storedError;
		        stream._writeRequests.forEach(writeRequest => {
		            writeRequest._reject(storedError);
		        });
		        stream._writeRequests = new SimpleQueue();
		        if (stream._pendingAbortRequest === undefined) {
		            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
		            return;
		        }
		        const abortRequest = stream._pendingAbortRequest;
		        stream._pendingAbortRequest = undefined;
		        if (abortRequest._wasAlreadyErroring) {
		            abortRequest._reject(storedError);
		            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
		            return;
		        }
		        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
		        uponPromise(promise, () => {
		            abortRequest._resolve();
		            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
		        }, (reason) => {
		            abortRequest._reject(reason);
		            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
		        });
		    }
		    function WritableStreamFinishInFlightWrite(stream) {
		        stream._inFlightWriteRequest._resolve(undefined);
		        stream._inFlightWriteRequest = undefined;
		    }
		    function WritableStreamFinishInFlightWriteWithError(stream, error) {
		        stream._inFlightWriteRequest._reject(error);
		        stream._inFlightWriteRequest = undefined;
		        WritableStreamDealWithRejection(stream, error);
		    }
		    function WritableStreamFinishInFlightClose(stream) {
		        stream._inFlightCloseRequest._resolve(undefined);
		        stream._inFlightCloseRequest = undefined;
		        const state = stream._state;
		        if (state === 'erroring') {
		            // The error was too late to do anything, so it is ignored.
		            stream._storedError = undefined;
		            if (stream._pendingAbortRequest !== undefined) {
		                stream._pendingAbortRequest._resolve();
		                stream._pendingAbortRequest = undefined;
		            }
		        }
		        stream._state = 'closed';
		        const writer = stream._writer;
		        if (writer !== undefined) {
		            defaultWriterClosedPromiseResolve(writer);
		        }
		    }
		    function WritableStreamFinishInFlightCloseWithError(stream, error) {
		        stream._inFlightCloseRequest._reject(error);
		        stream._inFlightCloseRequest = undefined;
		        // Never execute sink abort() after sink close().
		        if (stream._pendingAbortRequest !== undefined) {
		            stream._pendingAbortRequest._reject(error);
		            stream._pendingAbortRequest = undefined;
		        }
		        WritableStreamDealWithRejection(stream, error);
		    }
		    // TODO(ricea): Fix alphabetical order.
		    function WritableStreamCloseQueuedOrInFlight(stream) {
		        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {
		            return false;
		        }
		        return true;
		    }
		    function WritableStreamHasOperationMarkedInFlight(stream) {
		        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {
		            return false;
		        }
		        return true;
		    }
		    function WritableStreamMarkCloseRequestInFlight(stream) {
		        stream._inFlightCloseRequest = stream._closeRequest;
		        stream._closeRequest = undefined;
		    }
		    function WritableStreamMarkFirstWriteRequestInFlight(stream) {
		        stream._inFlightWriteRequest = stream._writeRequests.shift();
		    }
		    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
		        if (stream._closeRequest !== undefined) {
		            stream._closeRequest._reject(stream._storedError);
		            stream._closeRequest = undefined;
		        }
		        const writer = stream._writer;
		        if (writer !== undefined) {
		            defaultWriterClosedPromiseReject(writer, stream._storedError);
		        }
		    }
		    function WritableStreamUpdateBackpressure(stream, backpressure) {
		        const writer = stream._writer;
		        if (writer !== undefined && backpressure !== stream._backpressure) {
		            if (backpressure) {
		                defaultWriterReadyPromiseReset(writer);
		            }
		            else {
		                defaultWriterReadyPromiseResolve(writer);
		            }
		        }
		        stream._backpressure = backpressure;
		    }
		    /**
		     * A default writer vended by a {@link WritableStream}.
		     *
		     * @public
		     */
		    class WritableStreamDefaultWriter {
		        constructor(stream) {
		            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');
		            assertWritableStream(stream, 'First parameter');
		            if (IsWritableStreamLocked(stream)) {
		                throw new TypeError('This stream has already been locked for exclusive writing by another writer');
		            }
		            this._ownerWritableStream = stream;
		            stream._writer = this;
		            const state = stream._state;
		            if (state === 'writable') {
		                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
		                    defaultWriterReadyPromiseInitialize(this);
		                }
		                else {
		                    defaultWriterReadyPromiseInitializeAsResolved(this);
		                }
		                defaultWriterClosedPromiseInitialize(this);
		            }
		            else if (state === 'erroring') {
		                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
		                defaultWriterClosedPromiseInitialize(this);
		            }
		            else if (state === 'closed') {
		                defaultWriterReadyPromiseInitializeAsResolved(this);
		                defaultWriterClosedPromiseInitializeAsResolved(this);
		            }
		            else {
		                const storedError = stream._storedError;
		                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
		                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
		            }
		        }
		        /**
		         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or
		         * the writer’s lock is released before the stream finishes closing.
		         */
		        get closed() {
		            if (!IsWritableStreamDefaultWriter(this)) {
		                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));
		            }
		            return this._closedPromise;
		        }
		        /**
		         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.
		         * A producer can use this information to determine the right amount of data to write.
		         *
		         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort
		         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when
		         * the writer’s lock is released.
		         */
		        get desiredSize() {
		            if (!IsWritableStreamDefaultWriter(this)) {
		                throw defaultWriterBrandCheckException('desiredSize');
		            }
		            if (this._ownerWritableStream === undefined) {
		                throw defaultWriterLockException('desiredSize');
		            }
		            return WritableStreamDefaultWriterGetDesiredSize(this);
		        }
		        /**
		         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions
		         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips
		         * back to zero or below, the getter will return a new promise that stays pending until the next transition.
		         *
		         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become
		         * rejected.
		         */
		        get ready() {
		            if (!IsWritableStreamDefaultWriter(this)) {
		                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));
		            }
		            return this._readyPromise;
		        }
		        /**
		         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.
		         */
		        abort(reason = undefined) {
		            if (!IsWritableStreamDefaultWriter(this)) {
		                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));
		            }
		            if (this._ownerWritableStream === undefined) {
		                return promiseRejectedWith(defaultWriterLockException('abort'));
		            }
		            return WritableStreamDefaultWriterAbort(this, reason);
		        }
		        /**
		         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.
		         */
		        close() {
		            if (!IsWritableStreamDefaultWriter(this)) {
		                return promiseRejectedWith(defaultWriterBrandCheckException('close'));
		            }
		            const stream = this._ownerWritableStream;
		            if (stream === undefined) {
		                return promiseRejectedWith(defaultWriterLockException('close'));
		            }
		            if (WritableStreamCloseQueuedOrInFlight(stream)) {
		                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));
		            }
		            return WritableStreamDefaultWriterClose(this);
		        }
		        /**
		         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.
		         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from
		         * now on; otherwise, the writer will appear closed.
		         *
		         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the
		         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).
		         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents
		         * other producers from writing in an interleaved manner.
		         */
		        releaseLock() {
		            if (!IsWritableStreamDefaultWriter(this)) {
		                throw defaultWriterBrandCheckException('releaseLock');
		            }
		            const stream = this._ownerWritableStream;
		            if (stream === undefined) {
		                return;
		            }
		            WritableStreamDefaultWriterRelease(this);
		        }
		        write(chunk = undefined) {
		            if (!IsWritableStreamDefaultWriter(this)) {
		                return promiseRejectedWith(defaultWriterBrandCheckException('write'));
		            }
		            if (this._ownerWritableStream === undefined) {
		                return promiseRejectedWith(defaultWriterLockException('write to'));
		            }
		            return WritableStreamDefaultWriterWrite(this, chunk);
		        }
		    }
		    Object.defineProperties(WritableStreamDefaultWriter.prototype, {
		        abort: { enumerable: true },
		        close: { enumerable: true },
		        releaseLock: { enumerable: true },
		        write: { enumerable: true },
		        closed: { enumerable: true },
		        desiredSize: { enumerable: true },
		        ready: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
		            value: 'WritableStreamDefaultWriter',
		            configurable: true
		        });
		    }
		    // Abstract operations for the WritableStreamDefaultWriter.
		    function IsWritableStreamDefaultWriter(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {
		            return false;
		        }
		        return x instanceof WritableStreamDefaultWriter;
		    }
		    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.
		    function WritableStreamDefaultWriterAbort(writer, reason) {
		        const stream = writer._ownerWritableStream;
		        return WritableStreamAbort(stream, reason);
		    }
		    function WritableStreamDefaultWriterClose(writer) {
		        const stream = writer._ownerWritableStream;
		        return WritableStreamClose(stream);
		    }
		    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
		        const stream = writer._ownerWritableStream;
		        const state = stream._state;
		        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {
		            return promiseResolvedWith(undefined);
		        }
		        if (state === 'errored') {
		            return promiseRejectedWith(stream._storedError);
		        }
		        return WritableStreamDefaultWriterClose(writer);
		    }
		    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {
		        if (writer._closedPromiseState === 'pending') {
		            defaultWriterClosedPromiseReject(writer, error);
		        }
		        else {
		            defaultWriterClosedPromiseResetToRejected(writer, error);
		        }
		    }
		    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {
		        if (writer._readyPromiseState === 'pending') {
		            defaultWriterReadyPromiseReject(writer, error);
		        }
		        else {
		            defaultWriterReadyPromiseResetToRejected(writer, error);
		        }
		    }
		    function WritableStreamDefaultWriterGetDesiredSize(writer) {
		        const stream = writer._ownerWritableStream;
		        const state = stream._state;
		        if (state === 'errored' || state === 'erroring') {
		            return null;
		        }
		        if (state === 'closed') {
		            return 0;
		        }
		        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
		    }
		    function WritableStreamDefaultWriterRelease(writer) {
		        const stream = writer._ownerWritableStream;
		        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
		        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
		        // The state transitions to "errored" before the sink abort() method runs, but the writer.closed promise is not
		        // rejected until afterwards. This means that simply testing state will not work.
		        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
		        stream._writer = undefined;
		        writer._ownerWritableStream = undefined;
		    }
		    function WritableStreamDefaultWriterWrite(writer, chunk) {
		        const stream = writer._ownerWritableStream;
		        const controller = stream._writableStreamController;
		        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
		        if (stream !== writer._ownerWritableStream) {
		            return promiseRejectedWith(defaultWriterLockException('write to'));
		        }
		        const state = stream._state;
		        if (state === 'errored') {
		            return promiseRejectedWith(stream._storedError);
		        }
		        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {
		            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));
		        }
		        if (state === 'erroring') {
		            return promiseRejectedWith(stream._storedError);
		        }
		        const promise = WritableStreamAddWriteRequest(stream);
		        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
		        return promise;
		    }
		    const closeSentinel = {};
		    /**
		     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.
		     *
		     * @public
		     */
		    class WritableStreamDefaultController {
		        constructor() {
		            throw new TypeError('Illegal constructor');
		        }
		        /**
		         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.
		         *
		         * @deprecated
		         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.
		         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.
		         */
		        get abortReason() {
		            if (!IsWritableStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException$2('abortReason');
		            }
		            return this._abortReason;
		        }
		        /**
		         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.
		         */
		        get signal() {
		            if (!IsWritableStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException$2('signal');
		            }
		            if (this._abortController === undefined) {
		                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.
		                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,
		                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.
		                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');
		            }
		            return this._abortController.signal;
		        }
		        /**
		         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.
		         *
		         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying
		         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the
		         * normal lifecycle of interactions with the underlying sink.
		         */
		        error(e = undefined) {
		            if (!IsWritableStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException$2('error');
		            }
		            const state = this._controlledWritableStream._state;
		            if (state !== 'writable') {
		                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so
		                // just treat it as a no-op.
		                return;
		            }
		            WritableStreamDefaultControllerError(this, e);
		        }
		        /** @internal */
		        [AbortSteps](reason) {
		            const result = this._abortAlgorithm(reason);
		            WritableStreamDefaultControllerClearAlgorithms(this);
		            return result;
		        }
		        /** @internal */
		        [ErrorSteps]() {
		            ResetQueue(this);
		        }
		    }
		    Object.defineProperties(WritableStreamDefaultController.prototype, {
		        abortReason: { enumerable: true },
		        signal: { enumerable: true },
		        error: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
		            value: 'WritableStreamDefaultController',
		            configurable: true
		        });
		    }
		    // Abstract operations implementing interface required by the WritableStream.
		    function IsWritableStreamDefaultController(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {
		            return false;
		        }
		        return x instanceof WritableStreamDefaultController;
		    }
		    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
		        controller._controlledWritableStream = stream;
		        stream._writableStreamController = controller;
		        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.
		        controller._queue = undefined;
		        controller._queueTotalSize = undefined;
		        ResetQueue(controller);
		        controller._abortReason = undefined;
		        controller._abortController = createAbortController();
		        controller._started = false;
		        controller._strategySizeAlgorithm = sizeAlgorithm;
		        controller._strategyHWM = highWaterMark;
		        controller._writeAlgorithm = writeAlgorithm;
		        controller._closeAlgorithm = closeAlgorithm;
		        controller._abortAlgorithm = abortAlgorithm;
		        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
		        WritableStreamUpdateBackpressure(stream, backpressure);
		        const startResult = startAlgorithm();
		        const startPromise = promiseResolvedWith(startResult);
		        uponPromise(startPromise, () => {
		            controller._started = true;
		            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
		        }, r => {
		            controller._started = true;
		            WritableStreamDealWithRejection(stream, r);
		        });
		    }
		    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
		        const controller = Object.create(WritableStreamDefaultController.prototype);
		        let startAlgorithm = () => undefined;
		        let writeAlgorithm = () => promiseResolvedWith(undefined);
		        let closeAlgorithm = () => promiseResolvedWith(undefined);
		        let abortAlgorithm = () => promiseResolvedWith(undefined);
		        if (underlyingSink.start !== undefined) {
		            startAlgorithm = () => underlyingSink.start(controller);
		        }
		        if (underlyingSink.write !== undefined) {
		            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);
		        }
		        if (underlyingSink.close !== undefined) {
		            closeAlgorithm = () => underlyingSink.close();
		        }
		        if (underlyingSink.abort !== undefined) {
		            abortAlgorithm = reason => underlyingSink.abort(reason);
		        }
		        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
		    }
		    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.
		    function WritableStreamDefaultControllerClearAlgorithms(controller) {
		        controller._writeAlgorithm = undefined;
		        controller._closeAlgorithm = undefined;
		        controller._abortAlgorithm = undefined;
		        controller._strategySizeAlgorithm = undefined;
		    }
		    function WritableStreamDefaultControllerClose(controller) {
		        EnqueueValueWithSize(controller, closeSentinel, 0);
		        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
		    }
		    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
		        try {
		            return controller._strategySizeAlgorithm(chunk);
		        }
		        catch (chunkSizeE) {
		            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
		            return 1;
		        }
		    }
		    function WritableStreamDefaultControllerGetDesiredSize(controller) {
		        return controller._strategyHWM - controller._queueTotalSize;
		    }
		    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
		        try {
		            EnqueueValueWithSize(controller, chunk, chunkSize);
		        }
		        catch (enqueueE) {
		            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
		            return;
		        }
		        const stream = controller._controlledWritableStream;
		        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {
		            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
		            WritableStreamUpdateBackpressure(stream, backpressure);
		        }
		        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
		    }
		    // Abstract operations for the WritableStreamDefaultController.
		    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
		        const stream = controller._controlledWritableStream;
		        if (!controller._started) {
		            return;
		        }
		        if (stream._inFlightWriteRequest !== undefined) {
		            return;
		        }
		        const state = stream._state;
		        if (state === 'erroring') {
		            WritableStreamFinishErroring(stream);
		            return;
		        }
		        if (controller._queue.length === 0) {
		            return;
		        }
		        const value = PeekQueueValue(controller);
		        if (value === closeSentinel) {
		            WritableStreamDefaultControllerProcessClose(controller);
		        }
		        else {
		            WritableStreamDefaultControllerProcessWrite(controller, value);
		        }
		    }
		    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {
		        if (controller._controlledWritableStream._state === 'writable') {
		            WritableStreamDefaultControllerError(controller, error);
		        }
		    }
		    function WritableStreamDefaultControllerProcessClose(controller) {
		        const stream = controller._controlledWritableStream;
		        WritableStreamMarkCloseRequestInFlight(stream);
		        DequeueValue(controller);
		        const sinkClosePromise = controller._closeAlgorithm();
		        WritableStreamDefaultControllerClearAlgorithms(controller);
		        uponPromise(sinkClosePromise, () => {
		            WritableStreamFinishInFlightClose(stream);
		        }, reason => {
		            WritableStreamFinishInFlightCloseWithError(stream, reason);
		        });
		    }
		    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
		        const stream = controller._controlledWritableStream;
		        WritableStreamMarkFirstWriteRequestInFlight(stream);
		        const sinkWritePromise = controller._writeAlgorithm(chunk);
		        uponPromise(sinkWritePromise, () => {
		            WritableStreamFinishInFlightWrite(stream);
		            const state = stream._state;
		            DequeueValue(controller);
		            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {
		                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
		                WritableStreamUpdateBackpressure(stream, backpressure);
		            }
		            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
		        }, reason => {
		            if (stream._state === 'writable') {
		                WritableStreamDefaultControllerClearAlgorithms(controller);
		            }
		            WritableStreamFinishInFlightWriteWithError(stream, reason);
		        });
		    }
		    function WritableStreamDefaultControllerGetBackpressure(controller) {
		        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
		        return desiredSize <= 0;
		    }
		    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.
		    function WritableStreamDefaultControllerError(controller, error) {
		        const stream = controller._controlledWritableStream;
		        WritableStreamDefaultControllerClearAlgorithms(controller);
		        WritableStreamStartErroring(stream, error);
		    }
		    // Helper functions for the WritableStream.
		    function streamBrandCheckException$2(name) {
		        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);
		    }
		    // Helper functions for the WritableStreamDefaultController.
		    function defaultControllerBrandCheckException$2(name) {
		        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);
		    }
		    // Helper functions for the WritableStreamDefaultWriter.
		    function defaultWriterBrandCheckException(name) {
		        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);
		    }
		    function defaultWriterLockException(name) {
		        return new TypeError('Cannot ' + name + ' a stream using a released writer');
		    }
		    function defaultWriterClosedPromiseInitialize(writer) {
		        writer._closedPromise = newPromise((resolve, reject) => {
		            writer._closedPromise_resolve = resolve;
		            writer._closedPromise_reject = reject;
		            writer._closedPromiseState = 'pending';
		        });
		    }
		    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
		        defaultWriterClosedPromiseInitialize(writer);
		        defaultWriterClosedPromiseReject(writer, reason);
		    }
		    function defaultWriterClosedPromiseInitializeAsResolved(writer) {
		        defaultWriterClosedPromiseInitialize(writer);
		        defaultWriterClosedPromiseResolve(writer);
		    }
		    function defaultWriterClosedPromiseReject(writer, reason) {
		        if (writer._closedPromise_reject === undefined) {
		            return;
		        }
		        setPromiseIsHandledToTrue(writer._closedPromise);
		        writer._closedPromise_reject(reason);
		        writer._closedPromise_resolve = undefined;
		        writer._closedPromise_reject = undefined;
		        writer._closedPromiseState = 'rejected';
		    }
		    function defaultWriterClosedPromiseResetToRejected(writer, reason) {
		        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
		    }
		    function defaultWriterClosedPromiseResolve(writer) {
		        if (writer._closedPromise_resolve === undefined) {
		            return;
		        }
		        writer._closedPromise_resolve(undefined);
		        writer._closedPromise_resolve = undefined;
		        writer._closedPromise_reject = undefined;
		        writer._closedPromiseState = 'resolved';
		    }
		    function defaultWriterReadyPromiseInitialize(writer) {
		        writer._readyPromise = newPromise((resolve, reject) => {
		            writer._readyPromise_resolve = resolve;
		            writer._readyPromise_reject = reject;
		        });
		        writer._readyPromiseState = 'pending';
		    }
		    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
		        defaultWriterReadyPromiseInitialize(writer);
		        defaultWriterReadyPromiseReject(writer, reason);
		    }
		    function defaultWriterReadyPromiseInitializeAsResolved(writer) {
		        defaultWriterReadyPromiseInitialize(writer);
		        defaultWriterReadyPromiseResolve(writer);
		    }
		    function defaultWriterReadyPromiseReject(writer, reason) {
		        if (writer._readyPromise_reject === undefined) {
		            return;
		        }
		        setPromiseIsHandledToTrue(writer._readyPromise);
		        writer._readyPromise_reject(reason);
		        writer._readyPromise_resolve = undefined;
		        writer._readyPromise_reject = undefined;
		        writer._readyPromiseState = 'rejected';
		    }
		    function defaultWriterReadyPromiseReset(writer) {
		        defaultWriterReadyPromiseInitialize(writer);
		    }
		    function defaultWriterReadyPromiseResetToRejected(writer, reason) {
		        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
		    }
		    function defaultWriterReadyPromiseResolve(writer) {
		        if (writer._readyPromise_resolve === undefined) {
		            return;
		        }
		        writer._readyPromise_resolve(undefined);
		        writer._readyPromise_resolve = undefined;
		        writer._readyPromise_reject = undefined;
		        writer._readyPromiseState = 'fulfilled';
		    }

		    /// <reference lib="dom" />
		    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;

		    /// <reference types="node" />
		    function isDOMExceptionConstructor(ctor) {
		        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {
		            return false;
		        }
		        try {
		            new ctor();
		            return true;
		        }
		        catch (_a) {
		            return false;
		        }
		    }
		    function createDOMExceptionPolyfill() {
		        // eslint-disable-next-line no-shadow
		        const ctor = function DOMException(message, name) {
		            this.message = message || '';
		            this.name = name || 'Error';
		            if (Error.captureStackTrace) {
		                Error.captureStackTrace(this, this.constructor);
		            }
		        };
		        ctor.prototype = Object.create(Error.prototype);
		        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });
		        return ctor;
		    }
		    // eslint-disable-next-line no-redeclare
		    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();

		    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
		        const reader = AcquireReadableStreamDefaultReader(source);
		        const writer = AcquireWritableStreamDefaultWriter(dest);
		        source._disturbed = true;
		        let shuttingDown = false;
		        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.
		        let currentWrite = promiseResolvedWith(undefined);
		        return newPromise((resolve, reject) => {
		            let abortAlgorithm;
		            if (signal !== undefined) {
		                abortAlgorithm = () => {
		                    const error = new DOMException$1('Aborted', 'AbortError');
		                    const actions = [];
		                    if (!preventAbort) {
		                        actions.push(() => {
		                            if (dest._state === 'writable') {
		                                return WritableStreamAbort(dest, error);
		                            }
		                            return promiseResolvedWith(undefined);
		                        });
		                    }
		                    if (!preventCancel) {
		                        actions.push(() => {
		                            if (source._state === 'readable') {
		                                return ReadableStreamCancel(source, error);
		                            }
		                            return promiseResolvedWith(undefined);
		                        });
		                    }
		                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);
		                };
		                if (signal.aborted) {
		                    abortAlgorithm();
		                    return;
		                }
		                signal.addEventListener('abort', abortAlgorithm);
		            }
		            // Using reader and writer, read all chunks from this and write them to dest
		            // - Backpressure must be enforced
		            // - Shutdown must stop all activity
		            function pipeLoop() {
		                return newPromise((resolveLoop, rejectLoop) => {
		                    function next(done) {
		                        if (done) {
		                            resolveLoop();
		                        }
		                        else {
		                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid
		                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers
		                            PerformPromiseThen(pipeStep(), next, rejectLoop);
		                        }
		                    }
		                    next(false);
		                });
		            }
		            function pipeStep() {
		                if (shuttingDown) {
		                    return promiseResolvedWith(true);
		                }
		                return PerformPromiseThen(writer._readyPromise, () => {
		                    return newPromise((resolveRead, rejectRead) => {
		                        ReadableStreamDefaultReaderRead(reader, {
		                            _chunkSteps: chunk => {
		                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);
		                                resolveRead(false);
		                            },
		                            _closeSteps: () => resolveRead(true),
		                            _errorSteps: rejectRead
		                        });
		                    });
		                });
		            }
		            // Errors must be propagated forward
		            isOrBecomesErrored(source, reader._closedPromise, storedError => {
		                if (!preventAbort) {
		                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);
		                }
		                else {
		                    shutdown(true, storedError);
		                }
		            });
		            // Errors must be propagated backward
		            isOrBecomesErrored(dest, writer._closedPromise, storedError => {
		                if (!preventCancel) {
		                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);
		                }
		                else {
		                    shutdown(true, storedError);
		                }
		            });
		            // Closing must be propagated forward
		            isOrBecomesClosed(source, reader._closedPromise, () => {
		                if (!preventClose) {
		                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));
		                }
		                else {
		                    shutdown();
		                }
		            });
		            // Closing must be propagated backward
		            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {
		                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');
		                if (!preventCancel) {
		                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);
		                }
		                else {
		                    shutdown(true, destClosed);
		                }
		            }
		            setPromiseIsHandledToTrue(pipeLoop());
		            function waitForWritesToFinish() {
		                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait
		                // for that too.
		                const oldCurrentWrite = currentWrite;
		                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);
		            }
		            function isOrBecomesErrored(stream, promise, action) {
		                if (stream._state === 'errored') {
		                    action(stream._storedError);
		                }
		                else {
		                    uponRejection(promise, action);
		                }
		            }
		            function isOrBecomesClosed(stream, promise, action) {
		                if (stream._state === 'closed') {
		                    action();
		                }
		                else {
		                    uponFulfillment(promise, action);
		                }
		            }
		            function shutdownWithAction(action, originalIsError, originalError) {
		                if (shuttingDown) {
		                    return;
		                }
		                shuttingDown = true;
		                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {
		                    uponFulfillment(waitForWritesToFinish(), doTheRest);
		                }
		                else {
		                    doTheRest();
		                }
		                function doTheRest() {
		                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));
		                }
		            }
		            function shutdown(isError, error) {
		                if (shuttingDown) {
		                    return;
		                }
		                shuttingDown = true;
		                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {
		                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));
		                }
		                else {
		                    finalize(isError, error);
		                }
		            }
		            function finalize(isError, error) {
		                WritableStreamDefaultWriterRelease(writer);
		                ReadableStreamReaderGenericRelease(reader);
		                if (signal !== undefined) {
		                    signal.removeEventListener('abort', abortAlgorithm);
		                }
		                if (isError) {
		                    reject(error);
		                }
		                else {
		                    resolve(undefined);
		                }
		            }
		        });
		    }

		    /**
		     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.
		     *
		     * @public
		     */
		    class ReadableStreamDefaultController {
		        constructor() {
		            throw new TypeError('Illegal constructor');
		        }
		        /**
		         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is
		         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.
		         */
		        get desiredSize() {
		            if (!IsReadableStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException$1('desiredSize');
		            }
		            return ReadableStreamDefaultControllerGetDesiredSize(this);
		        }
		        /**
		         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from
		         * the stream, but once those are read, the stream will become closed.
		         */
		        close() {
		            if (!IsReadableStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException$1('close');
		            }
		            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
		                throw new TypeError('The stream is not in a state that permits close');
		            }
		            ReadableStreamDefaultControllerClose(this);
		        }
		        enqueue(chunk = undefined) {
		            if (!IsReadableStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException$1('enqueue');
		            }
		            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
		                throw new TypeError('The stream is not in a state that permits enqueue');
		            }
		            return ReadableStreamDefaultControllerEnqueue(this, chunk);
		        }
		        /**
		         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.
		         */
		        error(e = undefined) {
		            if (!IsReadableStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException$1('error');
		            }
		            ReadableStreamDefaultControllerError(this, e);
		        }
		        /** @internal */
		        [CancelSteps](reason) {
		            ResetQueue(this);
		            const result = this._cancelAlgorithm(reason);
		            ReadableStreamDefaultControllerClearAlgorithms(this);
		            return result;
		        }
		        /** @internal */
		        [PullSteps](readRequest) {
		            const stream = this._controlledReadableStream;
		            if (this._queue.length > 0) {
		                const chunk = DequeueValue(this);
		                if (this._closeRequested && this._queue.length === 0) {
		                    ReadableStreamDefaultControllerClearAlgorithms(this);
		                    ReadableStreamClose(stream);
		                }
		                else {
		                    ReadableStreamDefaultControllerCallPullIfNeeded(this);
		                }
		                readRequest._chunkSteps(chunk);
		            }
		            else {
		                ReadableStreamAddReadRequest(stream, readRequest);
		                ReadableStreamDefaultControllerCallPullIfNeeded(this);
		            }
		        }
		    }
		    Object.defineProperties(ReadableStreamDefaultController.prototype, {
		        close: { enumerable: true },
		        enqueue: { enumerable: true },
		        error: { enumerable: true },
		        desiredSize: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
		            value: 'ReadableStreamDefaultController',
		            configurable: true
		        });
		    }
		    // Abstract operations for the ReadableStreamDefaultController.
		    function IsReadableStreamDefaultController(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {
		            return false;
		        }
		        return x instanceof ReadableStreamDefaultController;
		    }
		    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
		        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
		        if (!shouldPull) {
		            return;
		        }
		        if (controller._pulling) {
		            controller._pullAgain = true;
		            return;
		        }
		        controller._pulling = true;
		        const pullPromise = controller._pullAlgorithm();
		        uponPromise(pullPromise, () => {
		            controller._pulling = false;
		            if (controller._pullAgain) {
		                controller._pullAgain = false;
		                ReadableStreamDefaultControllerCallPullIfNeeded(controller);
		            }
		        }, e => {
		            ReadableStreamDefaultControllerError(controller, e);
		        });
		    }
		    function ReadableStreamDefaultControllerShouldCallPull(controller) {
		        const stream = controller._controlledReadableStream;
		        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
		            return false;
		        }
		        if (!controller._started) {
		            return false;
		        }
		        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
		            return true;
		        }
		        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
		        if (desiredSize > 0) {
		            return true;
		        }
		        return false;
		    }
		    function ReadableStreamDefaultControllerClearAlgorithms(controller) {
		        controller._pullAlgorithm = undefined;
		        controller._cancelAlgorithm = undefined;
		        controller._strategySizeAlgorithm = undefined;
		    }
		    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.
		    function ReadableStreamDefaultControllerClose(controller) {
		        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
		            return;
		        }
		        const stream = controller._controlledReadableStream;
		        controller._closeRequested = true;
		        if (controller._queue.length === 0) {
		            ReadableStreamDefaultControllerClearAlgorithms(controller);
		            ReadableStreamClose(stream);
		        }
		    }
		    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
		        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
		            return;
		        }
		        const stream = controller._controlledReadableStream;
		        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
		            ReadableStreamFulfillReadRequest(stream, chunk, false);
		        }
		        else {
		            let chunkSize;
		            try {
		                chunkSize = controller._strategySizeAlgorithm(chunk);
		            }
		            catch (chunkSizeE) {
		                ReadableStreamDefaultControllerError(controller, chunkSizeE);
		                throw chunkSizeE;
		            }
		            try {
		                EnqueueValueWithSize(controller, chunk, chunkSize);
		            }
		            catch (enqueueE) {
		                ReadableStreamDefaultControllerError(controller, enqueueE);
		                throw enqueueE;
		            }
		        }
		        ReadableStreamDefaultControllerCallPullIfNeeded(controller);
		    }
		    function ReadableStreamDefaultControllerError(controller, e) {
		        const stream = controller._controlledReadableStream;
		        if (stream._state !== 'readable') {
		            return;
		        }
		        ResetQueue(controller);
		        ReadableStreamDefaultControllerClearAlgorithms(controller);
		        ReadableStreamError(stream, e);
		    }
		    function ReadableStreamDefaultControllerGetDesiredSize(controller) {
		        const state = controller._controlledReadableStream._state;
		        if (state === 'errored') {
		            return null;
		        }
		        if (state === 'closed') {
		            return 0;
		        }
		        return controller._strategyHWM - controller._queueTotalSize;
		    }
		    // This is used in the implementation of TransformStream.
		    function ReadableStreamDefaultControllerHasBackpressure(controller) {
		        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
		            return false;
		        }
		        return true;
		    }
		    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
		        const state = controller._controlledReadableStream._state;
		        if (!controller._closeRequested && state === 'readable') {
		            return true;
		        }
		        return false;
		    }
		    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
		        controller._controlledReadableStream = stream;
		        controller._queue = undefined;
		        controller._queueTotalSize = undefined;
		        ResetQueue(controller);
		        controller._started = false;
		        controller._closeRequested = false;
		        controller._pullAgain = false;
		        controller._pulling = false;
		        controller._strategySizeAlgorithm = sizeAlgorithm;
		        controller._strategyHWM = highWaterMark;
		        controller._pullAlgorithm = pullAlgorithm;
		        controller._cancelAlgorithm = cancelAlgorithm;
		        stream._readableStreamController = controller;
		        const startResult = startAlgorithm();
		        uponPromise(promiseResolvedWith(startResult), () => {
		            controller._started = true;
		            ReadableStreamDefaultControllerCallPullIfNeeded(controller);
		        }, r => {
		            ReadableStreamDefaultControllerError(controller, r);
		        });
		    }
		    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
		        const controller = Object.create(ReadableStreamDefaultController.prototype);
		        let startAlgorithm = () => undefined;
		        let pullAlgorithm = () => promiseResolvedWith(undefined);
		        let cancelAlgorithm = () => promiseResolvedWith(undefined);
		        if (underlyingSource.start !== undefined) {
		            startAlgorithm = () => underlyingSource.start(controller);
		        }
		        if (underlyingSource.pull !== undefined) {
		            pullAlgorithm = () => underlyingSource.pull(controller);
		        }
		        if (underlyingSource.cancel !== undefined) {
		            cancelAlgorithm = reason => underlyingSource.cancel(reason);
		        }
		        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
		    }
		    // Helper functions for the ReadableStreamDefaultController.
		    function defaultControllerBrandCheckException$1(name) {
		        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);
		    }

		    function ReadableStreamTee(stream, cloneForBranch2) {
		        if (IsReadableByteStreamController(stream._readableStreamController)) {
		            return ReadableByteStreamTee(stream);
		        }
		        return ReadableStreamDefaultTee(stream);
		    }
		    function ReadableStreamDefaultTee(stream, cloneForBranch2) {
		        const reader = AcquireReadableStreamDefaultReader(stream);
		        let reading = false;
		        let readAgain = false;
		        let canceled1 = false;
		        let canceled2 = false;
		        let reason1;
		        let reason2;
		        let branch1;
		        let branch2;
		        let resolveCancelPromise;
		        const cancelPromise = newPromise(resolve => {
		            resolveCancelPromise = resolve;
		        });
		        function pullAlgorithm() {
		            if (reading) {
		                readAgain = true;
		                return promiseResolvedWith(undefined);
		            }
		            reading = true;
		            const readRequest = {
		                _chunkSteps: chunk => {
		                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using
		                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let
		                    // successful synchronously-available reads get ahead of asynchronously-available errors.
		                    queueMicrotask(() => {
		                        readAgain = false;
		                        const chunk1 = chunk;
		                        const chunk2 = chunk;
		                        // There is no way to access the cloning code right now in the reference implementation.
		                        // If we add one then we'll need an implementation for serializable objects.
		                        // if (!canceled2 && cloneForBranch2) {
		                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));
		                        // }
		                        if (!canceled1) {
		                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
		                        }
		                        if (!canceled2) {
		                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
		                        }
		                        reading = false;
		                        if (readAgain) {
		                            pullAlgorithm();
		                        }
		                    });
		                },
		                _closeSteps: () => {
		                    reading = false;
		                    if (!canceled1) {
		                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);
		                    }
		                    if (!canceled2) {
		                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);
		                    }
		                    if (!canceled1 || !canceled2) {
		                        resolveCancelPromise(undefined);
		                    }
		                },
		                _errorSteps: () => {
		                    reading = false;
		                }
		            };
		            ReadableStreamDefaultReaderRead(reader, readRequest);
		            return promiseResolvedWith(undefined);
		        }
		        function cancel1Algorithm(reason) {
		            canceled1 = true;
		            reason1 = reason;
		            if (canceled2) {
		                const compositeReason = CreateArrayFromList([reason1, reason2]);
		                const cancelResult = ReadableStreamCancel(stream, compositeReason);
		                resolveCancelPromise(cancelResult);
		            }
		            return cancelPromise;
		        }
		        function cancel2Algorithm(reason) {
		            canceled2 = true;
		            reason2 = reason;
		            if (canceled1) {
		                const compositeReason = CreateArrayFromList([reason1, reason2]);
		                const cancelResult = ReadableStreamCancel(stream, compositeReason);
		                resolveCancelPromise(cancelResult);
		            }
		            return cancelPromise;
		        }
		        function startAlgorithm() {
		            // do nothing
		        }
		        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
		        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
		        uponRejection(reader._closedPromise, (r) => {
		            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);
		            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);
		            if (!canceled1 || !canceled2) {
		                resolveCancelPromise(undefined);
		            }
		        });
		        return [branch1, branch2];
		    }
		    function ReadableByteStreamTee(stream) {
		        let reader = AcquireReadableStreamDefaultReader(stream);
		        let reading = false;
		        let readAgainForBranch1 = false;
		        let readAgainForBranch2 = false;
		        let canceled1 = false;
		        let canceled2 = false;
		        let reason1;
		        let reason2;
		        let branch1;
		        let branch2;
		        let resolveCancelPromise;
		        const cancelPromise = newPromise(resolve => {
		            resolveCancelPromise = resolve;
		        });
		        function forwardReaderError(thisReader) {
		            uponRejection(thisReader._closedPromise, r => {
		                if (thisReader !== reader) {
		                    return;
		                }
		                ReadableByteStreamControllerError(branch1._readableStreamController, r);
		                ReadableByteStreamControllerError(branch2._readableStreamController, r);
		                if (!canceled1 || !canceled2) {
		                    resolveCancelPromise(undefined);
		                }
		            });
		        }
		        function pullWithDefaultReader() {
		            if (IsReadableStreamBYOBReader(reader)) {
		                ReadableStreamReaderGenericRelease(reader);
		                reader = AcquireReadableStreamDefaultReader(stream);
		                forwardReaderError(reader);
		            }
		            const readRequest = {
		                _chunkSteps: chunk => {
		                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using
		                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let
		                    // successful synchronously-available reads get ahead of asynchronously-available errors.
		                    queueMicrotask(() => {
		                        readAgainForBranch1 = false;
		                        readAgainForBranch2 = false;
		                        const chunk1 = chunk;
		                        let chunk2 = chunk;
		                        if (!canceled1 && !canceled2) {
		                            try {
		                                chunk2 = CloneAsUint8Array(chunk);
		                            }
		                            catch (cloneE) {
		                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
		                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
		                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
		                                return;
		                            }
		                        }
		                        if (!canceled1) {
		                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
		                        }
		                        if (!canceled2) {
		                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
		                        }
		                        reading = false;
		                        if (readAgainForBranch1) {
		                            pull1Algorithm();
		                        }
		                        else if (readAgainForBranch2) {
		                            pull2Algorithm();
		                        }
		                    });
		                },
		                _closeSteps: () => {
		                    reading = false;
		                    if (!canceled1) {
		                        ReadableByteStreamControllerClose(branch1._readableStreamController);
		                    }
		                    if (!canceled2) {
		                        ReadableByteStreamControllerClose(branch2._readableStreamController);
		                    }
		                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {
		                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
		                    }
		                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {
		                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
		                    }
		                    if (!canceled1 || !canceled2) {
		                        resolveCancelPromise(undefined);
		                    }
		                },
		                _errorSteps: () => {
		                    reading = false;
		                }
		            };
		            ReadableStreamDefaultReaderRead(reader, readRequest);
		        }
		        function pullWithBYOBReader(view, forBranch2) {
		            if (IsReadableStreamDefaultReader(reader)) {
		                ReadableStreamReaderGenericRelease(reader);
		                reader = AcquireReadableStreamBYOBReader(stream);
		                forwardReaderError(reader);
		            }
		            const byobBranch = forBranch2 ? branch2 : branch1;
		            const otherBranch = forBranch2 ? branch1 : branch2;
		            const readIntoRequest = {
		                _chunkSteps: chunk => {
		                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using
		                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let
		                    // successful synchronously-available reads get ahead of asynchronously-available errors.
		                    queueMicrotask(() => {
		                        readAgainForBranch1 = false;
		                        readAgainForBranch2 = false;
		                        const byobCanceled = forBranch2 ? canceled2 : canceled1;
		                        const otherCanceled = forBranch2 ? canceled1 : canceled2;
		                        if (!otherCanceled) {
		                            let clonedChunk;
		                            try {
		                                clonedChunk = CloneAsUint8Array(chunk);
		                            }
		                            catch (cloneE) {
		                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
		                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
		                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
		                                return;
		                            }
		                            if (!byobCanceled) {
		                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
		                            }
		                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
		                        }
		                        else if (!byobCanceled) {
		                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
		                        }
		                        reading = false;
		                        if (readAgainForBranch1) {
		                            pull1Algorithm();
		                        }
		                        else if (readAgainForBranch2) {
		                            pull2Algorithm();
		                        }
		                    });
		                },
		                _closeSteps: chunk => {
		                    reading = false;
		                    const byobCanceled = forBranch2 ? canceled2 : canceled1;
		                    const otherCanceled = forBranch2 ? canceled1 : canceled2;
		                    if (!byobCanceled) {
		                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);
		                    }
		                    if (!otherCanceled) {
		                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);
		                    }
		                    if (chunk !== undefined) {
		                        if (!byobCanceled) {
		                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
		                        }
		                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
		                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
		                        }
		                    }
		                    if (!byobCanceled || !otherCanceled) {
		                        resolveCancelPromise(undefined);
		                    }
		                },
		                _errorSteps: () => {
		                    reading = false;
		                }
		            };
		            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
		        }
		        function pull1Algorithm() {
		            if (reading) {
		                readAgainForBranch1 = true;
		                return promiseResolvedWith(undefined);
		            }
		            reading = true;
		            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
		            if (byobRequest === null) {
		                pullWithDefaultReader();
		            }
		            else {
		                pullWithBYOBReader(byobRequest._view, false);
		            }
		            return promiseResolvedWith(undefined);
		        }
		        function pull2Algorithm() {
		            if (reading) {
		                readAgainForBranch2 = true;
		                return promiseResolvedWith(undefined);
		            }
		            reading = true;
		            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
		            if (byobRequest === null) {
		                pullWithDefaultReader();
		            }
		            else {
		                pullWithBYOBReader(byobRequest._view, true);
		            }
		            return promiseResolvedWith(undefined);
		        }
		        function cancel1Algorithm(reason) {
		            canceled1 = true;
		            reason1 = reason;
		            if (canceled2) {
		                const compositeReason = CreateArrayFromList([reason1, reason2]);
		                const cancelResult = ReadableStreamCancel(stream, compositeReason);
		                resolveCancelPromise(cancelResult);
		            }
		            return cancelPromise;
		        }
		        function cancel2Algorithm(reason) {
		            canceled2 = true;
		            reason2 = reason;
		            if (canceled1) {
		                const compositeReason = CreateArrayFromList([reason1, reason2]);
		                const cancelResult = ReadableStreamCancel(stream, compositeReason);
		                resolveCancelPromise(cancelResult);
		            }
		            return cancelPromise;
		        }
		        function startAlgorithm() {
		            return;
		        }
		        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
		        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
		        forwardReaderError(reader);
		        return [branch1, branch2];
		    }

		    function convertUnderlyingDefaultOrByteSource(source, context) {
		        assertDictionary(source, context);
		        const original = source;
		        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
		        const cancel = original === null || original === void 0 ? void 0 : original.cancel;
		        const pull = original === null || original === void 0 ? void 0 : original.pull;
		        const start = original === null || original === void 0 ? void 0 : original.start;
		        const type = original === null || original === void 0 ? void 0 : original.type;
		        return {
		            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?
		                undefined :
		                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
		            cancel: cancel === undefined ?
		                undefined :
		                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),
		            pull: pull === undefined ?
		                undefined :
		                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),
		            start: start === undefined ?
		                undefined :
		                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),
		            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)
		        };
		    }
		    function convertUnderlyingSourceCancelCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (reason) => promiseCall(fn, original, [reason]);
		    }
		    function convertUnderlyingSourcePullCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (controller) => promiseCall(fn, original, [controller]);
		    }
		    function convertUnderlyingSourceStartCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (controller) => reflectCall(fn, original, [controller]);
		    }
		    function convertReadableStreamType(type, context) {
		        type = `${type}`;
		        if (type !== 'bytes') {
		            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);
		        }
		        return type;
		    }

		    function convertReaderOptions(options, context) {
		        assertDictionary(options, context);
		        const mode = options === null || options === void 0 ? void 0 : options.mode;
		        return {
		            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)
		        };
		    }
		    function convertReadableStreamReaderMode(mode, context) {
		        mode = `${mode}`;
		        if (mode !== 'byob') {
		            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
		        }
		        return mode;
		    }

		    function convertIteratorOptions(options, context) {
		        assertDictionary(options, context);
		        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
		        return { preventCancel: Boolean(preventCancel) };
		    }

		    function convertPipeOptions(options, context) {
		        assertDictionary(options, context);
		        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;
		        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
		        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;
		        const signal = options === null || options === void 0 ? void 0 : options.signal;
		        if (signal !== undefined) {
		            assertAbortSignal(signal, `${context} has member 'signal' that`);
		        }
		        return {
		            preventAbort: Boolean(preventAbort),
		            preventCancel: Boolean(preventCancel),
		            preventClose: Boolean(preventClose),
		            signal
		        };
		    }
		    function assertAbortSignal(signal, context) {
		        if (!isAbortSignal(signal)) {
		            throw new TypeError(`${context} is not an AbortSignal.`);
		        }
		    }

		    function convertReadableWritablePair(pair, context) {
		        assertDictionary(pair, context);
		        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;
		        assertRequiredField(readable, 'readable', 'ReadableWritablePair');
		        assertReadableStream(readable, `${context} has member 'readable' that`);
		        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;
		        assertRequiredField(writable, 'writable', 'ReadableWritablePair');
		        assertWritableStream(writable, `${context} has member 'writable' that`);
		        return { readable, writable };
		    }

		    /**
		     * A readable stream represents a source of data, from which you can read.
		     *
		     * @public
		     */
		    class ReadableStream {
		        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
		            if (rawUnderlyingSource === undefined) {
		                rawUnderlyingSource = null;
		            }
		            else {
		                assertObject(rawUnderlyingSource, 'First parameter');
		            }
		            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');
		            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');
		            InitializeReadableStream(this);
		            if (underlyingSource.type === 'bytes') {
		                if (strategy.size !== undefined) {
		                    throw new RangeError('The strategy for a byte stream cannot have a size function');
		                }
		                const highWaterMark = ExtractHighWaterMark(strategy, 0);
		                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
		            }
		            else {
		                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
		                const highWaterMark = ExtractHighWaterMark(strategy, 1);
		                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
		            }
		        }
		        /**
		         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.
		         */
		        get locked() {
		            if (!IsReadableStream(this)) {
		                throw streamBrandCheckException$1('locked');
		            }
		            return IsReadableStreamLocked(this);
		        }
		        /**
		         * Cancels the stream, signaling a loss of interest in the stream by a consumer.
		         *
		         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}
		         * method, which might or might not use it.
		         */
		        cancel(reason = undefined) {
		            if (!IsReadableStream(this)) {
		                return promiseRejectedWith(streamBrandCheckException$1('cancel'));
		            }
		            if (IsReadableStreamLocked(this)) {
		                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));
		            }
		            return ReadableStreamCancel(this, reason);
		        }
		        getReader(rawOptions = undefined) {
		            if (!IsReadableStream(this)) {
		                throw streamBrandCheckException$1('getReader');
		            }
		            const options = convertReaderOptions(rawOptions, 'First parameter');
		            if (options.mode === undefined) {
		                return AcquireReadableStreamDefaultReader(this);
		            }
		            return AcquireReadableStreamBYOBReader(this);
		        }
		        pipeThrough(rawTransform, rawOptions = {}) {
		            if (!IsReadableStream(this)) {
		                throw streamBrandCheckException$1('pipeThrough');
		            }
		            assertRequiredArgument(rawTransform, 1, 'pipeThrough');
		            const transform = convertReadableWritablePair(rawTransform, 'First parameter');
		            const options = convertPipeOptions(rawOptions, 'Second parameter');
		            if (IsReadableStreamLocked(this)) {
		                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');
		            }
		            if (IsWritableStreamLocked(transform.writable)) {
		                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');
		            }
		            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
		            setPromiseIsHandledToTrue(promise);
		            return transform.readable;
		        }
		        pipeTo(destination, rawOptions = {}) {
		            if (!IsReadableStream(this)) {
		                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));
		            }
		            if (destination === undefined) {
		                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);
		            }
		            if (!IsWritableStream(destination)) {
		                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
		            }
		            let options;
		            try {
		                options = convertPipeOptions(rawOptions, 'Second parameter');
		            }
		            catch (e) {
		                return promiseRejectedWith(e);
		            }
		            if (IsReadableStreamLocked(this)) {
		                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));
		            }
		            if (IsWritableStreamLocked(destination)) {
		                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));
		            }
		            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
		        }
		        /**
		         * Tees this readable stream, returning a two-element array containing the two resulting branches as
		         * new {@link ReadableStream} instances.
		         *
		         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.
		         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be
		         * propagated to the stream's underlying source.
		         *
		         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,
		         * this could allow interference between the two branches.
		         */
		        tee() {
		            if (!IsReadableStream(this)) {
		                throw streamBrandCheckException$1('tee');
		            }
		            const branches = ReadableStreamTee(this);
		            return CreateArrayFromList(branches);
		        }
		        values(rawOptions = undefined) {
		            if (!IsReadableStream(this)) {
		                throw streamBrandCheckException$1('values');
		            }
		            const options = convertIteratorOptions(rawOptions, 'First parameter');
		            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);
		        }
		    }
		    Object.defineProperties(ReadableStream.prototype, {
		        cancel: { enumerable: true },
		        getReader: { enumerable: true },
		        pipeThrough: { enumerable: true },
		        pipeTo: { enumerable: true },
		        tee: { enumerable: true },
		        values: { enumerable: true },
		        locked: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {
		            value: 'ReadableStream',
		            configurable: true
		        });
		    }
		    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {
		        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {
		            value: ReadableStream.prototype.values,
		            writable: true,
		            configurable: true
		        });
		    }
		    // Abstract operations for the ReadableStream.
		    // Throws if and only if startAlgorithm throws.
		    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
		        const stream = Object.create(ReadableStream.prototype);
		        InitializeReadableStream(stream);
		        const controller = Object.create(ReadableStreamDefaultController.prototype);
		        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
		        return stream;
		    }
		    // Throws if and only if startAlgorithm throws.
		    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
		        const stream = Object.create(ReadableStream.prototype);
		        InitializeReadableStream(stream);
		        const controller = Object.create(ReadableByteStreamController.prototype);
		        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);
		        return stream;
		    }
		    function InitializeReadableStream(stream) {
		        stream._state = 'readable';
		        stream._reader = undefined;
		        stream._storedError = undefined;
		        stream._disturbed = false;
		    }
		    function IsReadableStream(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {
		            return false;
		        }
		        return x instanceof ReadableStream;
		    }
		    function IsReadableStreamLocked(stream) {
		        if (stream._reader === undefined) {
		            return false;
		        }
		        return true;
		    }
		    // ReadableStream API exposed for controllers.
		    function ReadableStreamCancel(stream, reason) {
		        stream._disturbed = true;
		        if (stream._state === 'closed') {
		            return promiseResolvedWith(undefined);
		        }
		        if (stream._state === 'errored') {
		            return promiseRejectedWith(stream._storedError);
		        }
		        ReadableStreamClose(stream);
		        const reader = stream._reader;
		        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {
		            reader._readIntoRequests.forEach(readIntoRequest => {
		                readIntoRequest._closeSteps(undefined);
		            });
		            reader._readIntoRequests = new SimpleQueue();
		        }
		        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
		        return transformPromiseWith(sourceCancelPromise, noop);
		    }
		    function ReadableStreamClose(stream) {
		        stream._state = 'closed';
		        const reader = stream._reader;
		        if (reader === undefined) {
		            return;
		        }
		        defaultReaderClosedPromiseResolve(reader);
		        if (IsReadableStreamDefaultReader(reader)) {
		            reader._readRequests.forEach(readRequest => {
		                readRequest._closeSteps();
		            });
		            reader._readRequests = new SimpleQueue();
		        }
		    }
		    function ReadableStreamError(stream, e) {
		        stream._state = 'errored';
		        stream._storedError = e;
		        const reader = stream._reader;
		        if (reader === undefined) {
		            return;
		        }
		        defaultReaderClosedPromiseReject(reader, e);
		        if (IsReadableStreamDefaultReader(reader)) {
		            reader._readRequests.forEach(readRequest => {
		                readRequest._errorSteps(e);
		            });
		            reader._readRequests = new SimpleQueue();
		        }
		        else {
		            reader._readIntoRequests.forEach(readIntoRequest => {
		                readIntoRequest._errorSteps(e);
		            });
		            reader._readIntoRequests = new SimpleQueue();
		        }
		    }
		    // Helper functions for the ReadableStream.
		    function streamBrandCheckException$1(name) {
		        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);
		    }

		    function convertQueuingStrategyInit(init, context) {
		        assertDictionary(init, context);
		        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;
		        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');
		        return {
		            highWaterMark: convertUnrestrictedDouble(highWaterMark)
		        };
		    }

		    // The size function must not have a prototype property nor be a constructor
		    const byteLengthSizeFunction = (chunk) => {
		        return chunk.byteLength;
		    };
		    try {
		        Object.defineProperty(byteLengthSizeFunction, 'name', {
		            value: 'size',
		            configurable: true
		        });
		    }
		    catch (_a) {
		        // This property is non-configurable in older browsers, so ignore if this throws.
		        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility
		    }
		    /**
		     * A queuing strategy that counts the number of bytes in each chunk.
		     *
		     * @public
		     */
		    class ByteLengthQueuingStrategy {
		        constructor(options) {
		            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');
		            options = convertQueuingStrategyInit(options, 'First parameter');
		            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;
		        }
		        /**
		         * Returns the high water mark provided to the constructor.
		         */
		        get highWaterMark() {
		            if (!IsByteLengthQueuingStrategy(this)) {
		                throw byteLengthBrandCheckException('highWaterMark');
		            }
		            return this._byteLengthQueuingStrategyHighWaterMark;
		        }
		        /**
		         * Measures the size of `chunk` by returning the value of its `byteLength` property.
		         */
		        get size() {
		            if (!IsByteLengthQueuingStrategy(this)) {
		                throw byteLengthBrandCheckException('size');
		            }
		            return byteLengthSizeFunction;
		        }
		    }
		    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
		        highWaterMark: { enumerable: true },
		        size: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
		            value: 'ByteLengthQueuingStrategy',
		            configurable: true
		        });
		    }
		    // Helper functions for the ByteLengthQueuingStrategy.
		    function byteLengthBrandCheckException(name) {
		        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);
		    }
		    function IsByteLengthQueuingStrategy(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {
		            return false;
		        }
		        return x instanceof ByteLengthQueuingStrategy;
		    }

		    // The size function must not have a prototype property nor be a constructor
		    const countSizeFunction = () => {
		        return 1;
		    };
		    try {
		        Object.defineProperty(countSizeFunction, 'name', {
		            value: 'size',
		            configurable: true
		        });
		    }
		    catch (_a) {
		        // This property is non-configurable in older browsers, so ignore if this throws.
		        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility
		    }
		    /**
		     * A queuing strategy that counts the number of chunks.
		     *
		     * @public
		     */
		    class CountQueuingStrategy {
		        constructor(options) {
		            assertRequiredArgument(options, 1, 'CountQueuingStrategy');
		            options = convertQueuingStrategyInit(options, 'First parameter');
		            this._countQueuingStrategyHighWaterMark = options.highWaterMark;
		        }
		        /**
		         * Returns the high water mark provided to the constructor.
		         */
		        get highWaterMark() {
		            if (!IsCountQueuingStrategy(this)) {
		                throw countBrandCheckException('highWaterMark');
		            }
		            return this._countQueuingStrategyHighWaterMark;
		        }
		        /**
		         * Measures the size of `chunk` by always returning 1.
		         * This ensures that the total queue size is a count of the number of chunks in the queue.
		         */
		        get size() {
		            if (!IsCountQueuingStrategy(this)) {
		                throw countBrandCheckException('size');
		            }
		            return countSizeFunction;
		        }
		    }
		    Object.defineProperties(CountQueuingStrategy.prototype, {
		        highWaterMark: { enumerable: true },
		        size: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
		            value: 'CountQueuingStrategy',
		            configurable: true
		        });
		    }
		    // Helper functions for the CountQueuingStrategy.
		    function countBrandCheckException(name) {
		        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);
		    }
		    function IsCountQueuingStrategy(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {
		            return false;
		        }
		        return x instanceof CountQueuingStrategy;
		    }

		    function convertTransformer(original, context) {
		        assertDictionary(original, context);
		        const flush = original === null || original === void 0 ? void 0 : original.flush;
		        const readableType = original === null || original === void 0 ? void 0 : original.readableType;
		        const start = original === null || original === void 0 ? void 0 : original.start;
		        const transform = original === null || original === void 0 ? void 0 : original.transform;
		        const writableType = original === null || original === void 0 ? void 0 : original.writableType;
		        return {
		            flush: flush === undefined ?
		                undefined :
		                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),
		            readableType,
		            start: start === undefined ?
		                undefined :
		                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),
		            transform: transform === undefined ?
		                undefined :
		                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),
		            writableType
		        };
		    }
		    function convertTransformerFlushCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (controller) => promiseCall(fn, original, [controller]);
		    }
		    function convertTransformerStartCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (controller) => reflectCall(fn, original, [controller]);
		    }
		    function convertTransformerTransformCallback(fn, original, context) {
		        assertFunction(fn, context);
		        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
		    }

		    // Class TransformStream
		    /**
		     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},
		     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.
		     * In a manner specific to the transform stream in question, writes to the writable side result in new data being
		     * made available for reading from the readable side.
		     *
		     * @public
		     */
		    class TransformStream {
		        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
		            if (rawTransformer === undefined) {
		                rawTransformer = null;
		            }
		            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');
		            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');
		            const transformer = convertTransformer(rawTransformer, 'First parameter');
		            if (transformer.readableType !== undefined) {
		                throw new RangeError('Invalid readableType specified');
		            }
		            if (transformer.writableType !== undefined) {
		                throw new RangeError('Invalid writableType specified');
		            }
		            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
		            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
		            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
		            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
		            let startPromise_resolve;
		            const startPromise = newPromise(resolve => {
		                startPromise_resolve = resolve;
		            });
		            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
		            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);
		            if (transformer.start !== undefined) {
		                startPromise_resolve(transformer.start(this._transformStreamController));
		            }
		            else {
		                startPromise_resolve(undefined);
		            }
		        }
		        /**
		         * The readable side of the transform stream.
		         */
		        get readable() {
		            if (!IsTransformStream(this)) {
		                throw streamBrandCheckException('readable');
		            }
		            return this._readable;
		        }
		        /**
		         * The writable side of the transform stream.
		         */
		        get writable() {
		            if (!IsTransformStream(this)) {
		                throw streamBrandCheckException('writable');
		            }
		            return this._writable;
		        }
		    }
		    Object.defineProperties(TransformStream.prototype, {
		        readable: { enumerable: true },
		        writable: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
		            value: 'TransformStream',
		            configurable: true
		        });
		    }
		    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
		        function startAlgorithm() {
		            return startPromise;
		        }
		        function writeAlgorithm(chunk) {
		            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
		        }
		        function abortAlgorithm(reason) {
		            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
		        }
		        function closeAlgorithm() {
		            return TransformStreamDefaultSinkCloseAlgorithm(stream);
		        }
		        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
		        function pullAlgorithm() {
		            return TransformStreamDefaultSourcePullAlgorithm(stream);
		        }
		        function cancelAlgorithm(reason) {
		            TransformStreamErrorWritableAndUnblockWrite(stream, reason);
		            return promiseResolvedWith(undefined);
		        }
		        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
		        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.
		        stream._backpressure = undefined;
		        stream._backpressureChangePromise = undefined;
		        stream._backpressureChangePromise_resolve = undefined;
		        TransformStreamSetBackpressure(stream, true);
		        stream._transformStreamController = undefined;
		    }
		    function IsTransformStream(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {
		            return false;
		        }
		        return x instanceof TransformStream;
		    }
		    // This is a no-op if both sides are already errored.
		    function TransformStreamError(stream, e) {
		        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);
		        TransformStreamErrorWritableAndUnblockWrite(stream, e);
		    }
		    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {
		        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
		        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);
		        if (stream._backpressure) {
		            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()
		            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time
		            // _backpressure is set.
		            TransformStreamSetBackpressure(stream, false);
		        }
		    }
		    function TransformStreamSetBackpressure(stream, backpressure) {
		        // Passes also when called during construction.
		        if (stream._backpressureChangePromise !== undefined) {
		            stream._backpressureChangePromise_resolve();
		        }
		        stream._backpressureChangePromise = newPromise(resolve => {
		            stream._backpressureChangePromise_resolve = resolve;
		        });
		        stream._backpressure = backpressure;
		    }
		    // Class TransformStreamDefaultController
		    /**
		     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.
		     *
		     * @public
		     */
		    class TransformStreamDefaultController {
		        constructor() {
		            throw new TypeError('Illegal constructor');
		        }
		        /**
		         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.
		         */
		        get desiredSize() {
		            if (!IsTransformStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException('desiredSize');
		            }
		            const readableController = this._controlledTransformStream._readable._readableStreamController;
		            return ReadableStreamDefaultControllerGetDesiredSize(readableController);
		        }
		        enqueue(chunk = undefined) {
		            if (!IsTransformStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException('enqueue');
		            }
		            TransformStreamDefaultControllerEnqueue(this, chunk);
		        }
		        /**
		         * Errors both the readable side and the writable side of the controlled transform stream, making all future
		         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.
		         */
		        error(reason = undefined) {
		            if (!IsTransformStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException('error');
		            }
		            TransformStreamDefaultControllerError(this, reason);
		        }
		        /**
		         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the
		         * transformer only needs to consume a portion of the chunks written to the writable side.
		         */
		        terminate() {
		            if (!IsTransformStreamDefaultController(this)) {
		                throw defaultControllerBrandCheckException('terminate');
		            }
		            TransformStreamDefaultControllerTerminate(this);
		        }
		    }
		    Object.defineProperties(TransformStreamDefaultController.prototype, {
		        enqueue: { enumerable: true },
		        error: { enumerable: true },
		        terminate: { enumerable: true },
		        desiredSize: { enumerable: true }
		    });
		    if (typeof SymbolPolyfill.toStringTag === 'symbol') {
		        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
		            value: 'TransformStreamDefaultController',
		            configurable: true
		        });
		    }
		    // Transform Stream Default Controller Abstract Operations
		    function IsTransformStreamDefaultController(x) {
		        if (!typeIsObject(x)) {
		            return false;
		        }
		        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {
		            return false;
		        }
		        return x instanceof TransformStreamDefaultController;
		    }
		    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
		        controller._controlledTransformStream = stream;
		        stream._transformStreamController = controller;
		        controller._transformAlgorithm = transformAlgorithm;
		        controller._flushAlgorithm = flushAlgorithm;
		    }
		    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {
		        const controller = Object.create(TransformStreamDefaultController.prototype);
		        let transformAlgorithm = (chunk) => {
		            try {
		                TransformStreamDefaultControllerEnqueue(controller, chunk);
		                return promiseResolvedWith(undefined);
		            }
		            catch (transformResultE) {
		                return promiseRejectedWith(transformResultE);
		            }
		        };
		        let flushAlgorithm = () => promiseResolvedWith(undefined);
		        if (transformer.transform !== undefined) {
		            transformAlgorithm = chunk => transformer.transform(chunk, controller);
		        }
		        if (transformer.flush !== undefined) {
		            flushAlgorithm = () => transformer.flush(controller);
		        }
		        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
		    }
		    function TransformStreamDefaultControllerClearAlgorithms(controller) {
		        controller._transformAlgorithm = undefined;
		        controller._flushAlgorithm = undefined;
		    }
		    function TransformStreamDefaultControllerEnqueue(controller, chunk) {
		        const stream = controller._controlledTransformStream;
		        const readableController = stream._readable._readableStreamController;
		        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
		            throw new TypeError('Readable side is not in a state that permits enqueue');
		        }
		        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still
		        // accept TransformStreamDefaultControllerEnqueue() calls.
		        try {
		            ReadableStreamDefaultControllerEnqueue(readableController, chunk);
		        }
		        catch (e) {
		            // This happens when readableStrategy.size() throws.
		            TransformStreamErrorWritableAndUnblockWrite(stream, e);
		            throw stream._readable._storedError;
		        }
		        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
		        if (backpressure !== stream._backpressure) {
		            TransformStreamSetBackpressure(stream, true);
		        }
		    }
		    function TransformStreamDefaultControllerError(controller, e) {
		        TransformStreamError(controller._controlledTransformStream, e);
		    }
		    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
		        const transformPromise = controller._transformAlgorithm(chunk);
		        return transformPromiseWith(transformPromise, undefined, r => {
		            TransformStreamError(controller._controlledTransformStream, r);
		            throw r;
		        });
		    }
		    function TransformStreamDefaultControllerTerminate(controller) {
		        const stream = controller._controlledTransformStream;
		        const readableController = stream._readable._readableStreamController;
		        ReadableStreamDefaultControllerClose(readableController);
		        const error = new TypeError('TransformStream terminated');
		        TransformStreamErrorWritableAndUnblockWrite(stream, error);
		    }
		    // TransformStreamDefaultSink Algorithms
		    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
		        const controller = stream._transformStreamController;
		        if (stream._backpressure) {
		            const backpressureChangePromise = stream._backpressureChangePromise;
		            return transformPromiseWith(backpressureChangePromise, () => {
		                const writable = stream._writable;
		                const state = writable._state;
		                if (state === 'erroring') {
		                    throw writable._storedError;
		                }
		                return TransformStreamDefaultControllerPerformTransform(controller, chunk);
		            });
		        }
		        return TransformStreamDefaultControllerPerformTransform(controller, chunk);
		    }
		    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
		        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already
		        // errored.
		        TransformStreamError(stream, reason);
		        return promiseResolvedWith(undefined);
		    }
		    function TransformStreamDefaultSinkCloseAlgorithm(stream) {
		        // stream._readable cannot change after construction, so caching it across a call to user code is safe.
		        const readable = stream._readable;
		        const controller = stream._transformStreamController;
		        const flushPromise = controller._flushAlgorithm();
		        TransformStreamDefaultControllerClearAlgorithms(controller);
		        // Return a promise that is fulfilled with undefined on success.
		        return transformPromiseWith(flushPromise, () => {
		            if (readable._state === 'errored') {
		                throw readable._storedError;
		            }
		            ReadableStreamDefaultControllerClose(readable._readableStreamController);
		        }, r => {
		            TransformStreamError(stream, r);
		            throw readable._storedError;
		        });
		    }
		    // TransformStreamDefaultSource Algorithms
		    function TransformStreamDefaultSourcePullAlgorithm(stream) {
		        // Invariant. Enforced by the promises returned by start() and pull().
		        TransformStreamSetBackpressure(stream, false);
		        // Prevent the next pull() call until there is backpressure.
		        return stream._backpressureChangePromise;
		    }
		    // Helper functions for the TransformStreamDefaultController.
		    function defaultControllerBrandCheckException(name) {
		        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);
		    }
		    // Helper functions for the TransformStream.
		    function streamBrandCheckException(name) {
		        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);
		    }

		    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;
		    exports.CountQueuingStrategy = CountQueuingStrategy;
		    exports.ReadableByteStreamController = ReadableByteStreamController;
		    exports.ReadableStream = ReadableStream;
		    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;
		    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;
		    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;
		    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;
		    exports.TransformStream = TransformStream;
		    exports.TransformStreamDefaultController = TransformStreamDefaultController;
		    exports.WritableStream = WritableStream;
		    exports.WritableStreamDefaultController = WritableStreamDefaultController;
		    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;

		    Object.defineProperty(exports, '__esModule', { value: true });

		})));
		
} (ponyfill_es2018, ponyfill_es2018.exports));
	return ponyfill_es2018.exports;
}

/* c8 ignore start */

// 64 KiB (same size chrome slice theirs blob into Uint8array's)
const POOL_SIZE$1 = 65536;

if (!globalThis.ReadableStream) {
  // `node:stream/web` got introduced in v16.5.0 as experimental
  // and it's preferred over the polyfilled version. So we also
  // suppress the warning that gets emitted by NodeJS for using it.
  try {
    const process = __nccwpck_require__(7742);
    const { emitWarning } = process;
    try {
      process.emitWarning = () => {};
      Object.assign(globalThis, __nccwpck_require__(2477));
      process.emitWarning = emitWarning;
    } catch (error) {
      process.emitWarning = emitWarning;
      throw error
    }
  } catch (error) {
    // fallback to polyfill implementation
    Object.assign(globalThis, requirePonyfill_es2018());
  }
}

try {
  // Don't use node: prefix for this, require+node: is not supported until node v14.14
  // Only `import()` can use prefix in 12.20 and later
  const { Blob } = __nccwpck_require__(4300);
  if (Blob && !Blob.prototype.stream) {
    Blob.prototype.stream = function name (params) {
      let position = 0;
      const blob = this;

      return new ReadableStream({
        type: 'bytes',
        async pull (ctrl) {
          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));
          const buffer = await chunk.arrayBuffer();
          position += buffer.byteLength;
          ctrl.enqueue(new Uint8Array(buffer));

          if (position === blob.size) {
            ctrl.close();
          }
        }
      })
    };
  }
} catch (error) {}

/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */

// 64 KiB (same size chrome slice theirs blob into Uint8array's)
const POOL_SIZE = 65536;

/** @param {(Blob | Uint8Array)[]} parts */
async function * toIterator (parts, clone = true) {
  for (const part of parts) {
    if ('stream' in part) {
      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()));
    } else if (ArrayBuffer.isView(part)) {
      if (clone) {
        let position = part.byteOffset;
        const end = part.byteOffset + part.byteLength;
        while (position !== end) {
          const size = Math.min(end - position, POOL_SIZE);
          const chunk = part.buffer.slice(position, position + size);
          position += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    /* c8 ignore next 10 */
    } else {
      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)
      let position = 0, b = (/** @type {Blob} */ (part));
      while (position !== b.size) {
        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE));
        const buffer = await chunk.arrayBuffer();
        position += buffer.byteLength;
        yield new Uint8Array(buffer);
      }
    }
  }
}

const _Blob = class Blob {
  /** @type {Array.<(Blob|Uint8Array)>} */
  #parts = []
  #type = ''
  #size = 0
  #endings = 'transparent'

  /**
   * The Blob() constructor returns a new Blob object. The content
   * of the blob consists of the concatenation of the values given
   * in the parameter array.
   *
   * @param {*} blobParts
   * @param {{ type?: string, endings?: string }} [options]
   */
  constructor (blobParts = [], options = {}) {
    if (typeof blobParts !== 'object' || blobParts === null) {
      throw new TypeError('Failed to construct \'Blob\': The provided value cannot be converted to a sequence.')
    }

    if (typeof blobParts[Symbol.iterator] !== 'function') {
      throw new TypeError('Failed to construct \'Blob\': The object must have a callable @@iterator property.')
    }

    if (typeof options !== 'object' && typeof options !== 'function') {
      throw new TypeError('Failed to construct \'Blob\': parameter 2 cannot convert to dictionary.')
    }

    if (options === null) options = {};

    const encoder = new TextEncoder();
    for (const element of blobParts) {
      let part;
      if (ArrayBuffer.isView(element)) {
        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));
      } else if (element instanceof ArrayBuffer) {
        part = new Uint8Array(element.slice(0));
      } else if (element instanceof Blob) {
        part = element;
      } else {
        part = encoder.encode(`${element}`);
      }

      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;
      // Avoid pushing empty parts into the array to better GC them
      if (size) {
        this.#size += size;
        this.#parts.push(part);
      }
    }

    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`;
    const type = options.type === undefined ? '' : String(options.type);
    this.#type = /^[\x20-\x7E]*$/.test(type) ? type : '';
  }

  /**
   * The Blob interface's size property returns the
   * size of the Blob in bytes.
   */
  get size () {
    return this.#size
  }

  /**
   * The type property of a Blob object returns the MIME type of the file.
   */
  get type () {
    return this.#type
  }

  /**
   * The text() method in the Blob interface returns a Promise
   * that resolves with a string containing the contents of
   * the blob, interpreted as UTF-8.
   *
   * @return {Promise<string>}
   */
  async text () {
    // More optimized than using this.arrayBuffer()
    // that requires twice as much ram
    const decoder = new TextDecoder();
    let str = '';
    for await (const part of toIterator(this.#parts, false)) {
      str += decoder.decode(part, { stream: true });
    }
    // Remaining
    str += decoder.decode();
    return str
  }

  /**
   * The arrayBuffer() method in the Blob interface returns a
   * Promise that resolves with the contents of the blob as
   * binary data contained in an ArrayBuffer.
   *
   * @return {Promise<ArrayBuffer>}
   */
  async arrayBuffer () {
    // Easier way... Just a unnecessary overhead
    // const view = new Uint8Array(this.size);
    // await this.stream().getReader({mode: 'byob'}).read(view);
    // return view.buffer;

    const data = new Uint8Array(this.size);
    let offset = 0;
    for await (const chunk of toIterator(this.#parts, false)) {
      data.set(chunk, offset);
      offset += chunk.length;
    }

    return data.buffer
  }

  stream () {
    const it = toIterator(this.#parts, true);

    return new globalThis.ReadableStream({
      // @ts-ignore
      type: 'bytes',
      async pull (ctrl) {
        const chunk = await it.next();
        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
      },

      async cancel () {
        await it.return();
      }
    })
  }

  /**
   * The Blob interface's slice() method creates and returns a
   * new Blob object which contains data from a subset of the
   * blob on which it's called.
   *
   * @param {number} [start]
   * @param {number} [end]
   * @param {string} [type]
   */
  slice (start = 0, end = this.size, type = '') {
    const { size } = this;

    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);
    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);

    const span = Math.max(relativeEnd - relativeStart, 0);
    const parts = this.#parts;
    const blobParts = [];
    let added = 0;

    for (const part of parts) {
      // don't add the overflow to new blobParts
      if (added >= span) {
        break
      }

      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;
      if (relativeStart && size <= relativeStart) {
        // Skip the beginning and change the relative
        // start & end position as we skip the unwanted parts
        relativeStart -= size;
        relativeEnd -= size;
      } else {
        let chunk;
        if (ArrayBuffer.isView(part)) {
          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd));
          added += chunk.byteLength;
        } else {
          chunk = part.slice(relativeStart, Math.min(size, relativeEnd));
          added += chunk.size;
        }
        relativeEnd -= size;
        blobParts.push(chunk);
        relativeStart = 0; // All next sequential parts should start at 0
      }
    }

    const blob = new Blob([], { type: String(type).toLowerCase() });
    blob.#size = span;
    blob.#parts = blobParts;

    return blob
  }

  get [Symbol.toStringTag] () {
    return 'Blob'
  }

  static [Symbol.hasInstance] (object) {
    return (
      object &&
      typeof object === 'object' &&
      typeof object.constructor === 'function' &&
      (
        typeof object.stream === 'function' ||
        typeof object.arrayBuffer === 'function'
      ) &&
      /^(Blob|File)$/.test(object[Symbol.toStringTag])
    )
  }
};

Object.defineProperties(_Blob.prototype, {
  size: { enumerable: true },
  type: { enumerable: true },
  slice: { enumerable: true }
});

/** @type {typeof globalThis.Blob} */
const Blob = _Blob;
const _Blob$1 = Blob;

const _File = class File extends _Blob$1 {
  #lastModified = 0
  #name = ''

  /**
   * @param {*[]} fileBits
   * @param {string} fileName
   * @param {{lastModified?: number, type?: string}} options
   */// @ts-ignore
  constructor (fileBits, fileName, options = {}) {
    if (arguments.length < 2) {
      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)
    }
    super(fileBits, options);

    if (options === null) options = {};

    // Simulate WebIDL type casting for NaN value in lastModified option.
    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified);
    if (!Number.isNaN(lastModified)) {
      this.#lastModified = lastModified;
    }

    this.#name = String(fileName);
  }

  get name () {
    return this.#name
  }

  get lastModified () {
    return this.#lastModified
  }

  get [Symbol.toStringTag] () {
    return 'File'
  }

  static [Symbol.hasInstance] (object) {
    return !!object && object instanceof _Blob$1 &&
      /^(File)$/.test(object[Symbol.toStringTag])
  }
};

/** @type {typeof globalThis.File} */// @ts-ignore
const File = _File;
const File$1 = File;

/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */

var {toStringTag:t,iterator:i,hasInstance:h}=Symbol,
r=Math.random,
m='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),
f=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new File$1([b],c,b):b]:[a,b+'']),
e=(c,f)=>(f?c:c.replace(/\r?\n|\r/g,'\r\n')).replace(/\n/g,'%0A').replace(/\r/g,'%0D').replace(/"/g,'%22'),
x=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}};

/** @type {typeof globalThis.FormData} */
const FormData = class FormData {
#d=[];
constructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}
get [t]() {return 'FormData'}
[i](){return this.entries()}
static [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}
append(...a){x('append',arguments,2);this.#d.push(f(...a));}
delete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a);}
get(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}
getAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}
has(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}
forEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this);}
set(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d);});c&&b.push(a);this.#d=b;}
*entries(){yield*this.#d;}
*keys(){for(var[a]of this)yield a;}
*values(){for(var[,a]of this)yield a;}};

/** @param {FormData} F */
function formDataToBlob (F,B=_Blob$1){
var b=`${r()}${r()}`.replace(/\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\r\nContent-Disposition: form-data; name="`;
F.forEach((v,n)=>typeof v=='string'
?c.push(p+e(n)+`"\r\n\r\n${v.replace(/\r(?!\n)|(?<!\r)\n/g, '\r\n')}\r\n`)
:c.push(p+e(n)+`"; filename="${e(v.name, 1)}"\r\nContent-Type: ${v.type||"application/octet-stream"}\r\n\r\n`, v, '\r\n'));
c.push(`--${b}--`);
return new B(c,{type:"multipart/form-data; boundary="+b})}

class FetchBaseError extends Error {
	constructor(message, type) {
		super(message);
		// Hide custom error implementation details from end-users
		Error.captureStackTrace(this, this.constructor);

		this.type = type;
	}

	get name() {
		return this.constructor.name;
	}

	get [Symbol.toStringTag]() {
		return this.constructor.name;
	}
}

/**
 * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError
*/

/**
 * FetchError interface for operational errors
 */
class FetchError extends FetchBaseError {
	/**
	 * @param  {string} message -      Error message for human
	 * @param  {string} [type] -        Error type for machine
	 * @param  {SystemError} [systemError] - For Node.js system error
	 */
	constructor(message, type, systemError) {
		super(message, type);
		// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code
		if (systemError) {
			// eslint-disable-next-line no-multi-assign
			this.code = this.errno = systemError.code;
			this.erroredSysCall = systemError.syscall;
		}
	}
}

/**
 * Is.js
 *
 * Object type checks.
 */

const NAME = Symbol.toStringTag;

/**
 * Check if `obj` is a URLSearchParams object
 * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143
 * @param {*} object - Object to check for
 * @return {boolean}
 */
const isURLSearchParameters = object => {
	return (
		typeof object === 'object' &&
		typeof object.append === 'function' &&
		typeof object.delete === 'function' &&
		typeof object.get === 'function' &&
		typeof object.getAll === 'function' &&
		typeof object.has === 'function' &&
		typeof object.set === 'function' &&
		typeof object.sort === 'function' &&
		object[NAME] === 'URLSearchParams'
	);
};

/**
 * Check if `object` is a W3C `Blob` object (which `File` inherits from)
 * @param {*} object - Object to check for
 * @return {boolean}
 */
const isBlob = object => {
	return (
		object &&
		typeof object === 'object' &&
		typeof object.arrayBuffer === 'function' &&
		typeof object.type === 'string' &&
		typeof object.stream === 'function' &&
		typeof object.constructor === 'function' &&
		/^(Blob|File)$/.test(object[NAME])
	);
};

/**
 * Check if `obj` is an instance of AbortSignal.
 * @param {*} object - Object to check for
 * @return {boolean}
 */
const isAbortSignal = object => {
	return (
		typeof object === 'object' && (
			object[NAME] === 'AbortSignal' ||
			object[NAME] === 'EventTarget'
		)
	);
};

/**
 * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of
 * the parent domain.
 *
 * Both domains must already be in canonical form.
 * @param {string|URL} original
 * @param {string|URL} destination
 */
const isDomainOrSubdomain = (destination, original) => {
	const orig = new URL(original).hostname;
	const dest = new URL(destination).hostname;

	return orig === dest || orig.endsWith(`.${dest}`);
};

/**
 * isSameProtocol reports whether the two provided URLs use the same protocol.
 *
 * Both domains must already be in canonical form.
 * @param {string|URL} original
 * @param {string|URL} destination
 */
const isSameProtocol = (destination, original) => {
	const orig = new URL(original).protocol;
	const dest = new URL(destination).protocol;

	return orig === dest;
};

const pipeline = node_util.promisify(Stream.pipeline);
const INTERNALS$2 = Symbol('Body internals');

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Body {
	constructor(body, {
		size = 0
	} = {}) {
		let boundary = null;

		if (body === null) {
			// Body is undefined or null
			body = null;
		} else if (isURLSearchParameters(body)) {
			// Body is a URLSearchParams
			body = node_buffer.Buffer.from(body.toString());
		} else if (isBlob(body)) ; else if (node_buffer.Buffer.isBuffer(body)) ; else if (node_util.types.isAnyArrayBuffer(body)) {
			// Body is ArrayBuffer
			body = node_buffer.Buffer.from(body);
		} else if (ArrayBuffer.isView(body)) {
			// Body is ArrayBufferView
			body = node_buffer.Buffer.from(body.buffer, body.byteOffset, body.byteLength);
		} else if (body instanceof Stream) ; else if (body instanceof FormData) {
			// Body is FormData
			body = formDataToBlob(body);
			boundary = body.type.split('=')[1];
		} else {
			// None of the above
			// coerce to string then buffer
			body = node_buffer.Buffer.from(String(body));
		}

		let stream = body;

		if (node_buffer.Buffer.isBuffer(body)) {
			stream = Stream.Readable.from(body);
		} else if (isBlob(body)) {
			stream = Stream.Readable.from(body.stream());
		}

		this[INTERNALS$2] = {
			body,
			stream,
			boundary,
			disturbed: false,
			error: null
		};
		this.size = size;

		if (body instanceof Stream) {
			body.on('error', error_ => {
				const error = error_ instanceof FetchBaseError ?
					error_ :
					new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);
				this[INTERNALS$2].error = error;
			});
		}
	}

	get body() {
		return this[INTERNALS$2].stream;
	}

	get bodyUsed() {
		return this[INTERNALS$2].disturbed;
	}

	/**
	 * Decode response as ArrayBuffer
	 *
	 * @return  Promise
	 */
	async arrayBuffer() {
		const {buffer, byteOffset, byteLength} = await consumeBody(this);
		return buffer.slice(byteOffset, byteOffset + byteLength);
	}

	async formData() {
		const ct = this.headers.get('content-type');

		if (ct.startsWith('application/x-www-form-urlencoded')) {
			const formData = new FormData();
			const parameters = new URLSearchParams(await this.text());

			for (const [name, value] of parameters) {
				formData.append(name, value);
			}

			return formData;
		}

		const {toFormData} = await __nccwpck_require__.e(/* import() */ 138).then(__nccwpck_require__.t.bind(__nccwpck_require__, 3138, 19));
		return toFormData(this.body, ct);
	}

	/**
	 * Return raw response as Blob
	 *
	 * @return Promise
	 */
	async blob() {
		const ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS$2].body && this[INTERNALS$2].body.type) || '';
		const buf = await this.arrayBuffer();

		return new _Blob$1([buf], {
			type: ct
		});
	}

	/**
	 * Decode response as json
	 *
	 * @return  Promise
	 */
	async json() {
		const text = await this.text();
		return JSON.parse(text);
	}

	/**
	 * Decode response as text
	 *
	 * @return  Promise
	 */
	async text() {
		const buffer = await consumeBody(this);
		return new TextDecoder().decode(buffer);
	}

	/**
	 * Decode response as buffer (non-spec api)
	 *
	 * @return  Promise
	 */
	buffer() {
		return consumeBody(this);
	}
}

Body.prototype.buffer = node_util.deprecate(Body.prototype.buffer, 'Please use \'response.arrayBuffer()\' instead of \'response.buffer()\'', 'node-fetch#buffer');

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: {enumerable: true},
	bodyUsed: {enumerable: true},
	arrayBuffer: {enumerable: true},
	blob: {enumerable: true},
	json: {enumerable: true},
	text: {enumerable: true},
	data: {get: node_util.deprecate(() => {},
		'data doesn\'t exist, use json(), text(), arrayBuffer(), or body instead',
		'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}
});

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return Promise
 */
async function consumeBody(data) {
	if (data[INTERNALS$2].disturbed) {
		throw new TypeError(`body used already for: ${data.url}`);
	}

	data[INTERNALS$2].disturbed = true;

	if (data[INTERNALS$2].error) {
		throw data[INTERNALS$2].error;
	}

	const {body} = data;

	// Body is null
	if (body === null) {
		return node_buffer.Buffer.alloc(0);
	}

	/* c8 ignore next 3 */
	if (!(body instanceof Stream)) {
		return node_buffer.Buffer.alloc(0);
	}

	// Body is stream
	// get ready to actually consume the body
	const accum = [];
	let accumBytes = 0;

	try {
		for await (const chunk of body) {
			if (data.size > 0 && accumBytes + chunk.length > data.size) {
				const error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');
				body.destroy(error);
				throw error;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		}
	} catch (error) {
		const error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);
		throw error_;
	}

	if (body.readableEnded === true || body._readableState.ended === true) {
		try {
			if (accum.every(c => typeof c === 'string')) {
				return node_buffer.Buffer.from(accum.join(''));
			}

			return node_buffer.Buffer.concat(accum, accumBytes);
		} catch (error) {
			throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);
		}
	} else {
		throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);
	}
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed   instance       Response or Request instance
 * @param   String  highWaterMark  highWaterMark for both PassThrough body streams
 * @return  Mixed
 */
const clone = (instance, highWaterMark) => {
	let p1;
	let p2;
	let {body} = instance[INTERNALS$2];

	// Don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// Check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {
		// Tee instance body
		p1 = new Stream.PassThrough({highWaterMark});
		p2 = new Stream.PassThrough({highWaterMark});
		body.pipe(p1);
		body.pipe(p2);
		// Set instance body to teed body and return the other teed body
		instance[INTERNALS$2].stream = p1;
		body = p2;
	}

	return body;
};

const getNonSpecFormDataBoundary = node_util.deprecate(
	body => body.getBoundary(),
	'form-data doesn\'t follow the spec and requires special treatment. Use alternative package',
	'https://github.com/node-fetch/node-fetch/issues/1167'
);

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param {any} body Any options.body input
 * @returns {string | null}
 */
const extractContentType = (body, request) => {
	// Body is null or undefined
	if (body === null) {
		return null;
	}

	// Body is string
	if (typeof body === 'string') {
		return 'text/plain;charset=UTF-8';
	}

	// Body is a URLSearchParams
	if (isURLSearchParameters(body)) {
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	}

	// Body is blob
	if (isBlob(body)) {
		return body.type || null;
	}

	// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)
	if (node_buffer.Buffer.isBuffer(body) || node_util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {
		return null;
	}

	if (body instanceof FormData) {
		return `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;
	}

	// Detect form data input from form-data module
	if (body && typeof body.getBoundary === 'function') {
		return `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;
	}

	// Body is stream - can't really do much about this
	if (body instanceof Stream) {
		return null;
	}

	// Body constructor defaults other things to string
	return 'text/plain;charset=UTF-8';
};

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param {any} obj.body Body object from the Body instance.
 * @returns {number | null}
 */
const getTotalBytes = request => {
	const {body} = request[INTERNALS$2];

	// Body is null or undefined
	if (body === null) {
		return 0;
	}

	// Body is Blob
	if (isBlob(body)) {
		return body.size;
	}

	// Body is Buffer
	if (node_buffer.Buffer.isBuffer(body)) {
		return body.length;
	}

	// Detect form data input from form-data module
	if (body && typeof body.getLengthSync === 'function') {
		return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;
	}

	// Body is stream
	return null;
};

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param {Stream.Writable} dest The stream to write to.
 * @param obj.body Body object from the Body instance.
 * @returns {Promise<void>}
 */
const writeToStream = async (dest, {body}) => {
	if (body === null) {
		// Body is null
		dest.end();
	} else {
		// Body is stream
		await pipeline(body, dest);
	}
};

/**
 * Headers.js
 *
 * Headers class offers convenient helpers
 */

/* c8 ignore next 9 */
const validateHeaderName = typeof http.validateHeaderName === 'function' ?
	http.validateHeaderName :
	name => {
		if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
			const error = new TypeError(`Header name must be a valid HTTP token [${name}]`);
			Object.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});
			throw error;
		}
	};

/* c8 ignore next 9 */
const validateHeaderValue = typeof http.validateHeaderValue === 'function' ?
	http.validateHeaderValue :
	(name, value) => {
		if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
			const error = new TypeError(`Invalid character in header content ["${name}"]`);
			Object.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});
			throw error;
		}
	};

/**
 * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit
 */

/**
 * This Fetch API interface allows you to perform various actions on HTTP request and response headers.
 * These actions include retrieving, setting, adding to, and removing.
 * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.
 * You can add to this using methods like append() (see Examples.)
 * In all methods of this interface, header names are matched by case-insensitive byte sequence.
 *
 */
class Headers extends URLSearchParams {
	/**
	 * Headers class
	 *
	 * @constructor
	 * @param {HeadersInit} [init] - Response headers
	 */
	constructor(init) {
		// Validate and normalize init object in [name, value(s)][]
		/** @type {string[][]} */
		let result = [];
		if (init instanceof Headers) {
			const raw = init.raw();
			for (const [name, values] of Object.entries(raw)) {
				result.push(...values.map(value => [name, value]));
			}
		} else if (init == null) ; else if (typeof init === 'object' && !node_util.types.isBoxedPrimitive(init)) {
			const method = init[Symbol.iterator];
			// eslint-disable-next-line no-eq-null, eqeqeq
			if (method == null) {
				// Record<ByteString, ByteString>
				result.push(...Object.entries(init));
			} else {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// Sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				result = [...init]
					.map(pair => {
						if (
							typeof pair !== 'object' || node_util.types.isBoxedPrimitive(pair)
						) {
							throw new TypeError('Each header pair must be an iterable object');
						}

						return [...pair];
					}).map(pair => {
						if (pair.length !== 2) {
							throw new TypeError('Each header pair must be a name/value tuple');
						}

						return [...pair];
					});
			}
		} else {
			throw new TypeError('Failed to construct \'Headers\': The provided value is not of type \'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');
		}

		// Validate and lowercase
		result =
			result.length > 0 ?
				result.map(([name, value]) => {
					validateHeaderName(name);
					validateHeaderValue(name, String(value));
					return [String(name).toLowerCase(), String(value)];
				}) :
				undefined;

		super(result);

		// Returning a Proxy that will lowercase key names, validate parameters and sort keys
		// eslint-disable-next-line no-constructor-return
		return new Proxy(this, {
			get(target, p, receiver) {
				switch (p) {
					case 'append':
					case 'set':
						return (name, value) => {
							validateHeaderName(name);
							validateHeaderValue(name, String(value));
							return URLSearchParams.prototype[p].call(
								target,
								String(name).toLowerCase(),
								String(value)
							);
						};

					case 'delete':
					case 'has':
					case 'getAll':
						return name => {
							validateHeaderName(name);
							return URLSearchParams.prototype[p].call(
								target,
								String(name).toLowerCase()
							);
						};

					case 'keys':
						return () => {
							target.sort();
							return new Set(URLSearchParams.prototype.keys.call(target)).keys();
						};

					default:
						return Reflect.get(target, p, receiver);
				}
			}
		});
		/* c8 ignore next */
	}

	get [Symbol.toStringTag]() {
		return this.constructor.name;
	}

	toString() {
		return Object.prototype.toString.call(this);
	}

	get(name) {
		const values = this.getAll(name);
		if (values.length === 0) {
			return null;
		}

		let value = values.join(', ');
		if (/^content-encoding$/i.test(name)) {
			value = value.toLowerCase();
		}

		return value;
	}

	forEach(callback, thisArg = undefined) {
		for (const name of this.keys()) {
			Reflect.apply(callback, thisArg, [this.get(name), name, this]);
		}
	}

	* values() {
		for (const name of this.keys()) {
			yield this.get(name);
		}
	}

	/**
	 * @type {() => IterableIterator<[string, string]>}
	 */
	* entries() {
		for (const name of this.keys()) {
			yield [name, this.get(name)];
		}
	}

	[Symbol.iterator]() {
		return this.entries();
	}

	/**
	 * Node-fetch non-spec method
	 * returning all headers and their values as array
	 * @returns {Record<string, string[]>}
	 */
	raw() {
		return [...this.keys()].reduce((result, key) => {
			result[key] = this.getAll(key);
			return result;
		}, {});
	}

	/**
	 * For better console.log(headers) and also to convert Headers into Node.js Request compatible format
	 */
	[Symbol.for('nodejs.util.inspect.custom')]() {
		return [...this.keys()].reduce((result, key) => {
			const values = this.getAll(key);
			// Http.request() only supports string as Host header.
			// This hack makes specifying custom Host header possible.
			if (key === 'host') {
				result[key] = values[0];
			} else {
				result[key] = values.length > 1 ? values : values[0];
			}

			return result;
		}, {});
	}
}

/**
 * Re-shaping object for Web IDL tests
 * Only need to do it for overridden methods
 */
Object.defineProperties(
	Headers.prototype,
	['get', 'entries', 'forEach', 'values'].reduce((result, property) => {
		result[property] = {enumerable: true};
		return result;
	}, {})
);

/**
 * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do
 * not conform to HTTP grammar productions.
 * @param {import('http').IncomingMessage['rawHeaders']} headers
 */
function fromRawHeaders(headers = []) {
	return new Headers(
		headers
			// Split into pairs
			.reduce((result, value, index, array) => {
				if (index % 2 === 0) {
					result.push(array.slice(index, index + 2));
				}

				return result;
			}, [])
			.filter(([name, value]) => {
				try {
					validateHeaderName(name);
					validateHeaderValue(name, String(value));
					return true;
				} catch {
					return false;
				}
			})

	);
}

const redirectStatus = new Set([301, 302, 303, 307, 308]);

/**
 * Redirect code matching
 *
 * @param {number} code - Status code
 * @return {boolean}
 */
const isRedirect = code => {
	return redirectStatus.has(code);
};

/**
 * Response.js
 *
 * Response class provides content decoding
 */

const INTERNALS$1 = Symbol('Response internals');

/**
 * Response class
 *
 * Ref: https://fetch.spec.whatwg.org/#response-class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response extends Body {
	constructor(body = null, options = {}) {
		super(body, options);

		// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition
		const status = options.status != null ? options.status : 200;

		const headers = new Headers(options.headers);

		if (body !== null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body, this);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			type: 'default',
			url: options.url,
			status,
			statusText: options.statusText || '',
			headers,
			counter: options.counter,
			highWaterMark: options.highWaterMark
		};
	}

	get type() {
		return this[INTERNALS$1].type;
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
	 * Convenience property representing if the request ended normally
	 */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	get highWaterMark() {
		return this[INTERNALS$1].highWaterMark;
	}

	/**
	 * Clone this response
	 *
	 * @return  Response
	 */
	clone() {
		return new Response(clone(this, this.highWaterMark), {
			type: this.type,
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected,
			size: this.size,
			highWaterMark: this.highWaterMark
		});
	}

	/**
	 * @param {string} url    The URL that the new response is to originate from.
	 * @param {number} status An optional status code for the response (e.g., 302.)
	 * @returns {Response}    A Response object.
	 */
	static redirect(url, status = 302) {
		if (!isRedirect(status)) {
			throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
		}

		return new Response(null, {
			headers: {
				location: new URL(url).toString()
			},
			status
		});
	}

	static error() {
		const response = new Response(null, {status: 0, statusText: ''});
		response[INTERNALS$1].type = 'error';
		return response;
	}

	get [Symbol.toStringTag]() {
		return 'Response';
	}
}

Object.defineProperties(Response.prototype, {
	type: {enumerable: true},
	url: {enumerable: true},
	status: {enumerable: true},
	ok: {enumerable: true},
	redirected: {enumerable: true},
	statusText: {enumerable: true},
	headers: {enumerable: true},
	clone: {enumerable: true}
});

const getSearch = parsedURL => {
	if (parsedURL.search) {
		return parsedURL.search;
	}

	const lastOffset = parsedURL.href.length - 1;
	const hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');
	return parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';
};

/**
 * @external URL
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}
 */

/**
 * @module utils/referrer
 * @private
 */

/**
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}
 * @param {string} URL
 * @param {boolean} [originOnly=false]
 */
function stripURLForUseAsAReferrer(url, originOnly = false) {
	// 1. If url is null, return no referrer.
	if (url == null) { // eslint-disable-line no-eq-null, eqeqeq
		return 'no-referrer';
	}

	url = new URL(url);

	// 2. If url's scheme is a local scheme, then return no referrer.
	if (/^(about|blob|data):$/.test(url.protocol)) {
		return 'no-referrer';
	}

	// 3. Set url's username to the empty string.
	url.username = '';

	// 4. Set url's password to null.
	// Note: `null` appears to be a mistake as this actually results in the password being `"null"`.
	url.password = '';

	// 5. Set url's fragment to null.
	// Note: `null` appears to be a mistake as this actually results in the fragment being `"#null"`.
	url.hash = '';

	// 6. If the origin-only flag is true, then:
	if (originOnly) {
		// 6.1. Set url's path to null.
		// Note: `null` appears to be a mistake as this actually results in the path being `"/null"`.
		url.pathname = '';

		// 6.2. Set url's query to null.
		// Note: `null` appears to be a mistake as this actually results in the query being `"?null"`.
		url.search = '';
	}

	// 7. Return url.
	return url;
}

/**
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}
 */
const ReferrerPolicy = new Set([
	'',
	'no-referrer',
	'no-referrer-when-downgrade',
	'same-origin',
	'origin',
	'strict-origin',
	'origin-when-cross-origin',
	'strict-origin-when-cross-origin',
	'unsafe-url'
]);

/**
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}
 */
const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';

/**
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}
 * @param {string} referrerPolicy
 * @returns {string} referrerPolicy
 */
function validateReferrerPolicy(referrerPolicy) {
	if (!ReferrerPolicy.has(referrerPolicy)) {
		throw new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);
	}

	return referrerPolicy;
}

/**
 * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}
 * @param {external:URL} url
 * @returns `true`: "Potentially Trustworthy", `false`: "Not Trustworthy"
 */
function isOriginPotentiallyTrustworthy(url) {
	// 1. If origin is an opaque origin, return "Not Trustworthy".
	// Not applicable

	// 2. Assert: origin is a tuple origin.
	// Not for implementations

	// 3. If origin's scheme is either "https" or "wss", return "Potentially Trustworthy".
	if (/^(http|ws)s:$/.test(url.protocol)) {
		return true;
	}

	// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return "Potentially Trustworthy".
	const hostIp = url.host.replace(/(^\[)|(]$)/g, '');
	const hostIPVersion = node_net.isIP(hostIp);

	if (hostIPVersion === 4 && /^127\./.test(hostIp)) {
		return true;
	}

	if (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {
		return true;
	}

	// 5. If origin's host component is "localhost" or falls within ".localhost", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return "Potentially Trustworthy".
	// We are returning FALSE here because we cannot ensure conformance to
	// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)
	if (url.host === 'localhost' || url.host.endsWith('.localhost')) {
		return false;
	}

	// 6. If origin's scheme component is file, return "Potentially Trustworthy".
	if (url.protocol === 'file:') {
		return true;
	}

	// 7. If origin's scheme component is one which the user agent considers to be authenticated, return "Potentially Trustworthy".
	// Not supported

	// 8. If origin has been configured as a trustworthy origin, return "Potentially Trustworthy".
	// Not supported

	// 9. Return "Not Trustworthy".
	return false;
}

/**
 * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}
 * @param {external:URL} url
 * @returns `true`: "Potentially Trustworthy", `false`: "Not Trustworthy"
 */
function isUrlPotentiallyTrustworthy(url) {
	// 1. If url is "about:blank" or "about:srcdoc", return "Potentially Trustworthy".
	if (/^about:(blank|srcdoc)$/.test(url)) {
		return true;
	}

	// 2. If url's scheme is "data", return "Potentially Trustworthy".
	if (url.protocol === 'data:') {
		return true;
	}

	// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were
	// created. Therefore, blobs created in a trustworthy origin will themselves be potentially
	// trustworthy.
	if (/^(blob|filesystem):$/.test(url.protocol)) {
		return true;
	}

	// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.
	return isOriginPotentiallyTrustworthy(url);
}

/**
 * Modifies the referrerURL to enforce any extra security policy considerations.
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7
 * @callback module:utils/referrer~referrerURLCallback
 * @param {external:URL} referrerURL
 * @returns {external:URL} modified referrerURL
 */

/**
 * Modifies the referrerOrigin to enforce any extra security policy considerations.
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7
 * @callback module:utils/referrer~referrerOriginCallback
 * @param {external:URL} referrerOrigin
 * @returns {external:URL} modified referrerOrigin
 */

/**
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}
 * @param {Request} request
 * @param {object} o
 * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback
 * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback
 * @returns {external:URL} Request's referrer
 */
function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {
	// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for
	// these cases:
	// > Note: If request's referrer is "no-referrer", Fetch will not call into this algorithm.
	// > Note: If request's referrer policy is the empty string, Fetch will not call into this
	// > algorithm.
	if (request.referrer === 'no-referrer' || request.referrerPolicy === '') {
		return null;
	}

	// 1. Let policy be request's associated referrer policy.
	const policy = request.referrerPolicy;

	// 2. Let environment be request's client.
	// not applicable to node.js

	// 3. Switch on request's referrer:
	if (request.referrer === 'about:client') {
		return 'no-referrer';
	}

	// "a URL": Let referrerSource be request's referrer.
	const referrerSource = request.referrer;

	// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.
	let referrerURL = stripURLForUseAsAReferrer(referrerSource);

	// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the
	//    origin-only flag set to true.
	let referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);

	// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set
	//    referrerURL to referrerOrigin.
	if (referrerURL.toString().length > 4096) {
		referrerURL = referrerOrigin;
	}

	// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary
	//    policy considerations in the interests of minimizing data leakage. For example, the user
	//    agent could strip the URL down to an origin, modify its host, replace it with an empty
	//    string, etc.
	if (referrerURLCallback) {
		referrerURL = referrerURLCallback(referrerURL);
	}

	if (referrerOriginCallback) {
		referrerOrigin = referrerOriginCallback(referrerOrigin);
	}

	// 8.Execute the statements corresponding to the value of policy:
	const currentURL = new URL(request.url);

	switch (policy) {
		case 'no-referrer':
			return 'no-referrer';

		case 'origin':
			return referrerOrigin;

		case 'unsafe-url':
			return referrerURL;

		case 'strict-origin':
			// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a
			//    potentially trustworthy URL, then return no referrer.
			if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
				return 'no-referrer';
			}

			// 2. Return referrerOrigin.
			return referrerOrigin.toString();

		case 'strict-origin-when-cross-origin':
			// 1. If the origin of referrerURL and the origin of request's current URL are the same, then
			//    return referrerURL.
			if (referrerURL.origin === currentURL.origin) {
				return referrerURL;
			}

			// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a
			//    potentially trustworthy URL, then return no referrer.
			if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
				return 'no-referrer';
			}

			// 3. Return referrerOrigin.
			return referrerOrigin;

		case 'same-origin':
			// 1. If the origin of referrerURL and the origin of request's current URL are the same, then
			//    return referrerURL.
			if (referrerURL.origin === currentURL.origin) {
				return referrerURL;
			}

			// 2. Return no referrer.
			return 'no-referrer';

		case 'origin-when-cross-origin':
			// 1. If the origin of referrerURL and the origin of request's current URL are the same, then
			//    return referrerURL.
			if (referrerURL.origin === currentURL.origin) {
				return referrerURL;
			}

			// Return referrerOrigin.
			return referrerOrigin;

		case 'no-referrer-when-downgrade':
			// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a
			//    potentially trustworthy URL, then return no referrer.
			if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
				return 'no-referrer';
			}

			// 2. Return referrerURL.
			return referrerURL;

		default:
			throw new TypeError(`Invalid referrerPolicy: ${policy}`);
	}
}

/**
 * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}
 * @param {Headers} headers Response headers
 * @returns {string} policy
 */
function parseReferrerPolicyFromHeader(headers) {
	// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`
	//    and response’s header list.
	const policyTokens = (headers.get('referrer-policy') || '').split(/[,\s]+/);

	// 2. Let policy be the empty string.
	let policy = '';

	// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty
	//    string, then set policy to token.
	// Note: This algorithm loops over multiple policy values to allow deployment of new policy
	// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.
	for (const token of policyTokens) {
		if (token && ReferrerPolicy.has(token)) {
			policy = token;
		}
	}

	// 4. Return policy.
	return policy;
}

/**
 * Request.js
 *
 * Request class contains server only options
 *
 * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.
 */

const INTERNALS = Symbol('Request internals');

/**
 * Check if `obj` is an instance of Request.
 *
 * @param  {*} object
 * @return {boolean}
 */
const isRequest = object => {
	return (
		typeof object === 'object' &&
		typeof object[INTERNALS] === 'object'
	);
};

const doBadDataWarn = node_util.deprecate(() => {},
	'.data is not a valid RequestInit property, use .body instead',
	'https://github.com/node-fetch/node-fetch/issues/1000 (request)');

/**
 * Request class
 *
 * Ref: https://fetch.spec.whatwg.org/#request-class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request extends Body {
	constructor(input, init = {}) {
		let parsedURL;

		// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)
		if (isRequest(input)) {
			parsedURL = new URL(input.url);
		} else {
			parsedURL = new URL(input);
			input = {};
		}

		if (parsedURL.username !== '' || parsedURL.password !== '') {
			throw new TypeError(`${parsedURL} is an url with embedded credentials.`);
		}

		let method = init.method || input.method || 'GET';
		if (/^(delete|get|head|options|post|put)$/i.test(method)) {
			method = method.toUpperCase();
		}

		if (!isRequest(init) && 'data' in init) {
			doBadDataWarn();
		}

		// eslint-disable-next-line no-eq-null, eqeqeq
		if ((init.body != null || (isRequest(input) && input.body !== null)) &&
			(method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		const inputBody = init.body ?
			init.body :
			(isRequest(input) && input.body !== null ?
				clone(input) :
				null);

		super(inputBody, {
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody !== null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody, this);
			if (contentType) {
				headers.set('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ?
			input.signal :
			null;
		if ('signal' in init) {
			signal = init.signal;
		}

		// eslint-disable-next-line no-eq-null, eqeqeq
		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');
		}

		// §5.4, Request constructor steps, step 15.1
		// eslint-disable-next-line no-eq-null, eqeqeq
		let referrer = init.referrer == null ? input.referrer : init.referrer;
		if (referrer === '') {
			// §5.4, Request constructor steps, step 15.2
			referrer = 'no-referrer';
		} else if (referrer) {
			// §5.4, Request constructor steps, step 15.3.1, 15.3.2
			const parsedReferrer = new URL(referrer);
			// §5.4, Request constructor steps, step 15.3.3, 15.3.4
			referrer = /^about:(\/\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;
		} else {
			referrer = undefined;
		}

		this[INTERNALS] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal,
			referrer
		};

		// Node-fetch-only options
		this.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;
		this.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
		this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;
		this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;

		// §5.4, Request constructor steps, step 16.
		// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy
		this.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';
	}

	/** @returns {string} */
	get method() {
		return this[INTERNALS].method;
	}

	/** @returns {string} */
	get url() {
		return node_url.format(this[INTERNALS].parsedURL);
	}

	/** @returns {Headers} */
	get headers() {
		return this[INTERNALS].headers;
	}

	get redirect() {
		return this[INTERNALS].redirect;
	}

	/** @returns {AbortSignal} */
	get signal() {
		return this[INTERNALS].signal;
	}

	// https://fetch.spec.whatwg.org/#dom-request-referrer
	get referrer() {
		if (this[INTERNALS].referrer === 'no-referrer') {
			return '';
		}

		if (this[INTERNALS].referrer === 'client') {
			return 'about:client';
		}

		if (this[INTERNALS].referrer) {
			return this[INTERNALS].referrer.toString();
		}

		return undefined;
	}

	get referrerPolicy() {
		return this[INTERNALS].referrerPolicy;
	}

	set referrerPolicy(referrerPolicy) {
		this[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);
	}

	/**
	 * Clone this request
	 *
	 * @return  Request
	 */
	clone() {
		return new Request(this);
	}

	get [Symbol.toStringTag]() {
		return 'Request';
	}
}

Object.defineProperties(Request.prototype, {
	method: {enumerable: true},
	url: {enumerable: true},
	headers: {enumerable: true},
	redirect: {enumerable: true},
	clone: {enumerable: true},
	signal: {enumerable: true},
	referrer: {enumerable: true},
	referrerPolicy: {enumerable: true}
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param {Request} request - A Request instance
 * @return The options object to be passed to http.request
 */
const getNodeRequestOptions = request => {
	const {parsedURL} = request[INTERNALS];
	const headers = new Headers(request[INTERNALS].headers);

	// Fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body === null && /^(post|put)$/i.test(request.method)) {
		contentLengthValue = '0';
	}

	if (request.body !== null) {
		const totalBytes = getTotalBytes(request);
		// Set Content-Length if totalBytes is a number (that is not NaN)
		if (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {
			contentLengthValue = String(totalBytes);
		}
	}

	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// 4.1. Main fetch, step 2.6
	// > If request's referrer policy is the empty string, then set request's referrer policy to the
	// > default referrer policy.
	if (request.referrerPolicy === '') {
		request.referrerPolicy = DEFAULT_REFERRER_POLICY;
	}

	// 4.1. Main fetch, step 2.7
	// > If request's referrer is not "no-referrer", set request's referrer to the result of invoking
	// > determine request's referrer.
	if (request.referrer && request.referrer !== 'no-referrer') {
		request[INTERNALS].referrer = determineRequestsReferrer(request);
	} else {
		request[INTERNALS].referrer = 'no-referrer';
	}

	// 4.5. HTTP-network-or-cache fetch, step 6.9
	// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized
	// >  and isomorphic encoded, to httpRequest's header list.
	if (request[INTERNALS].referrer instanceof URL) {
		headers.set('Referer', request.referrer);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip, deflate, br');
	}

	let {agent} = request;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	const search = getSearch(parsedURL);

	// Pass the full URL directly to request(), but overwrite the following
	// options:
	const options = {
		// Overwrite search to retain trailing ? (issue #776)
		path: parsedURL.pathname + search,
		// The following options are not expressed in the URL
		method: request.method,
		headers: headers[Symbol.for('nodejs.util.inspect.custom')](),
		insecureHTTPParser: request.insecureHTTPParser,
		agent
	};

	return {
		/** @type {URL} */
		parsedURL,
		options
	};
};

/**
 * AbortError interface for cancelled requests
 */
class AbortError extends FetchBaseError {
	constructor(message, type = 'aborted') {
		super(message, type);
	}
}

/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */

if (!globalThis.DOMException) {
  try {
    const { MessageChannel } = __nccwpck_require__(1267),
    port = new MessageChannel().port1,
    ab = new ArrayBuffer();
    port.postMessage(ab, [ab, ab]);
  } catch (err) {
    err.constructor.name === 'DOMException' && (
      globalThis.DOMException = err.constructor
    );
  }
}

var nodeDomexception = globalThis.DOMException;

/**
 * Index.js
 *
 * a request API compatible with window.fetch
 *
 * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.
 */

const supportedSchemas = new Set(['data:', 'http:', 'https:']);

/**
 * Fetch function
 *
 * @param   {string | URL | import('./request').default} url - Absolute url or Request instance
 * @param   {*} [options_] - Fetch options
 * @return  {Promise<import('./response').default>}
 */
async function fetch(url, options_) {
	return new Promise((resolve, reject) => {
		// Build request object
		const request = new Request(url, options_);
		const {parsedURL, options} = getNodeRequestOptions(request);
		if (!supportedSchemas.has(parsedURL.protocol)) {
			throw new TypeError(`node-fetch cannot load ${url}. URL scheme "${parsedURL.protocol.replace(/:$/, '')}" is not supported.`);
		}

		if (parsedURL.protocol === 'data:') {
			const data = dataUriToBuffer(request.url);
			const response = new Response(data, {headers: {'Content-Type': data.typeFull}});
			resolve(response);
			return;
		}

		// Wrap http.request into fetch
		const send = (parsedURL.protocol === 'https:' ? https : http).request;
		const {signal} = request;
		let response = null;

		const abort = () => {
			const error = new AbortError('The operation was aborted.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				request.body.destroy(error);
			}

			if (!response || !response.body) {
				return;
			}

			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = () => {
			abort();
			finalize();
		};

		// Send request
		const request_ = send(parsedURL.toString(), options);

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		const finalize = () => {
			request_.abort();
			if (signal) {
				signal.removeEventListener('abort', abortAndFinalize);
			}
		};

		request_.on('error', error => {
			reject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));
			finalize();
		});

		fixResponseChunkedTransferBadEnding(request_, error => {
			if (response && response.body) {
				response.body.destroy(error);
			}
		});

		/* c8 ignore next 18 */
		if (process.version < 'v14') {
			// Before Node.js 14, pipeline() does not fully support async iterators and does not always
			// properly handle when the socket close/end events are out of order.
			request_.on('socket', s => {
				let endedWithEventsCount;
				s.prependListener('end', () => {
					endedWithEventsCount = s._eventsCount;
				});
				s.prependListener('close', hadError => {
					// if end happened before close but the socket didn't emit an error, do it now
					if (response && endedWithEventsCount < s._eventsCount && !hadError) {
						const error = new Error('Premature close');
						error.code = 'ERR_STREAM_PREMATURE_CLOSE';
						response.body.emit('error', error);
					}
				});
			});
		}

		request_.on('response', response_ => {
			request_.setTimeout(0);
			const headers = fromRawHeaders(response_.rawHeaders);

			// HTTP fetch step 5
			if (isRedirect(response_.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				let locationURL = null;
				try {
					locationURL = location === null ? null : new URL(location, request.url);
				} catch {
					// error here can only be invalid URL in Location: header
					// do not throw when options.redirect == manual
					// let the user extract the errorneous redirect URL
					if (request.redirect !== 'manual') {
						reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));
						finalize();
						return;
					}
				}

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// Nothing to do
						break;
					case 'follow': {
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOptions = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: clone(request),
							signal: request.signal,
							size: request.size,
							referrer: request.referrer,
							referrerPolicy: request.referrerPolicy
						};

						// when forwarding sensitive headers like "Authorization",
						// "WWW-Authenticate", and "Cookie" to untrusted targets,
						// headers will be ignored when following a redirect to a domain
						// that is not a subdomain match or exact match of the initial domain.
						// For example, a redirect from "foo.com" to either "foo.com" or "sub.foo.com"
						// will forward the sensitive headers, but a redirect to "bar.com" will not.
						// headers will also be ignored when following a redirect to a domain using
						// a different protocol. For example, a redirect from "https://foo.com" to "http://foo.com"
						// will not forward the sensitive headers
						if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {
							for (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {
								requestOptions.headers.delete(name);
							}
						}

						// HTTP-redirect fetch step 9
						if (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {
							requestOptions.method = 'GET';
							requestOptions.body = undefined;
							requestOptions.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 14
						const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);
						if (responseReferrerPolicy) {
							requestOptions.referrerPolicy = responseReferrerPolicy;
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOptions)));
						finalize();
						return;
					}

					default:
						return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
				}
			}

			// Prepare response
			if (signal) {
				response_.once('end', () => {
					signal.removeEventListener('abort', abortAndFinalize);
				});
			}

			let body = Stream.pipeline(response_, new Stream.PassThrough(), error => {
				if (error) {
					reject(error);
				}
			});
			// see https://github.com/nodejs/node/pull/29376
			/* c8 ignore next 3 */
			if (process.version < 'v12.10') {
				response_.on('aborted', abortAndFinalize);
			}

			const responseOptions = {
				url: request.url,
				status: response_.statusCode,
				statusText: response_.statusMessage,
				headers,
				size: request.size,
				counter: request.counter,
				highWaterMark: request.highWaterMark
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
				response = new Response(body, responseOptions);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// For gzip
			if (codings === 'gzip' || codings === 'x-gzip') {
				body = Stream.pipeline(body, zlib.createGunzip(zlibOptions), error => {
					if (error) {
						reject(error);
					}
				});
				response = new Response(body, responseOptions);
				resolve(response);
				return;
			}

			// For deflate
			if (codings === 'deflate' || codings === 'x-deflate') {
				// Handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = Stream.pipeline(response_, new Stream.PassThrough(), error => {
					if (error) {
						reject(error);
					}
				});
				raw.once('data', chunk => {
					// See http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = Stream.pipeline(body, zlib.createInflate(), error => {
							if (error) {
								reject(error);
							}
						});
					} else {
						body = Stream.pipeline(body, zlib.createInflateRaw(), error => {
							if (error) {
								reject(error);
							}
						});
					}

					response = new Response(body, responseOptions);
					resolve(response);
				});
				raw.once('end', () => {
					// Some old IIS servers return zero-length OK deflate responses, so
					// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903
					if (!response) {
						response = new Response(body, responseOptions);
						resolve(response);
					}
				});
				return;
			}

			// For br
			if (codings === 'br') {
				body = Stream.pipeline(body, zlib.createBrotliDecompress(), error => {
					if (error) {
						reject(error);
					}
				});
				response = new Response(body, responseOptions);
				resolve(response);
				return;
			}

			// Otherwise, use response as-is
			response = new Response(body, responseOptions);
			resolve(response);
		});

		// eslint-disable-next-line promise/prefer-await-to-then
		writeToStream(request_, request).catch(reject);
	});
}

function fixResponseChunkedTransferBadEnding(request, errorCallback) {
	const LAST_CHUNK = node_buffer.Buffer.from('0\r\n\r\n');

	let isChunkedTransfer = false;
	let properLastChunkReceived = false;
	let previousChunk;

	request.on('response', response => {
		const {headers} = response;
		isChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];
	});

	request.on('socket', socket => {
		const onSocketClose = () => {
			if (isChunkedTransfer && !properLastChunkReceived) {
				const error = new Error('Premature close');
				error.code = 'ERR_STREAM_PREMATURE_CLOSE';
				errorCallback(error);
			}
		};

		const onData = buf => {
			properLastChunkReceived = node_buffer.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;

			// Sometimes final 0-length chunk and end of message code are in separate packets
			if (!properLastChunkReceived && previousChunk) {
				properLastChunkReceived = (
					node_buffer.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&
					node_buffer.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0
				);
			}

			previousChunk = buf;
		};

		socket.prependListener('close', onSocketClose);
		socket.on('data', onData);

		request.on('close', () => {
			socket.removeListener('close', onSocketClose);
			socket.removeListener('data', onData);
		});
	});
}

/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * @copyright 2015 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */
/**
 * @typedef {object} PrivateData
 * @property {EventTarget} eventTarget The event target.
 * @property {{type:string}} event The original event object.
 * @property {number} eventPhase The current event phase.
 * @property {EventTarget|null} currentTarget The current event target.
 * @property {boolean} canceled The flag to prevent default.
 * @property {boolean} stopped The flag to stop propagation.
 * @property {boolean} immediateStopped The flag to stop propagation immediately.
 * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.
 * @property {number} timeStamp The unix time.
 * @private
 */

/**
 * Private data for event wrappers.
 * @type {WeakMap<Event, PrivateData>}
 * @private
 */
const privateData = new WeakMap();

/**
 * Cache for wrapper classes.
 * @type {WeakMap<Object, Function>}
 * @private
 */
const wrappers = new WeakMap();

/**
 * Get private data.
 * @param {Event} event The event object to get private data.
 * @returns {PrivateData} The private data of the event.
 * @private
 */
function pd(event) {
    const retv = privateData.get(event);
    console.assert(
        retv != null,
        "'this' is expected an Event object, but got",
        event
    );
    return retv
}

/**
 * https://dom.spec.whatwg.org/#set-the-canceled-flag
 * @param data {PrivateData} private data.
 */
function setCancelFlag(data) {
    if (data.passiveListener != null) {
        if (
            typeof console !== "undefined" &&
            typeof console.error === "function"
        ) {
            console.error(
                "Unable to preventDefault inside passive event listener invocation.",
                data.passiveListener
            );
        }
        return
    }
    if (!data.event.cancelable) {
        return
    }

    data.canceled = true;
    if (typeof data.event.preventDefault === "function") {
        data.event.preventDefault();
    }
}

/**
 * @see https://dom.spec.whatwg.org/#interface-event
 * @private
 */
/**
 * The event wrapper.
 * @constructor
 * @param {EventTarget} eventTarget The event target of this dispatching.
 * @param {Event|{type:string}} event The original event to wrap.
 */
function Event(eventTarget, event) {
    privateData.set(this, {
        eventTarget,
        event,
        eventPhase: 2,
        currentTarget: eventTarget,
        canceled: false,
        stopped: false,
        immediateStopped: false,
        passiveListener: null,
        timeStamp: event.timeStamp || Date.now(),
    });

    // https://heycam.github.io/webidl/#Unforgeable
    Object.defineProperty(this, "isTrusted", { value: false, enumerable: true });

    // Define accessors
    const keys = Object.keys(event);
    for (let i = 0; i < keys.length; ++i) {
        const key = keys[i];
        if (!(key in this)) {
            Object.defineProperty(this, key, defineRedirectDescriptor(key));
        }
    }
}

// Should be enumerable, but class methods are not enumerable.
Event.prototype = {
    /**
     * The type of this event.
     * @type {string}
     */
    get type() {
        return pd(this).event.type
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get target() {
        return pd(this).eventTarget
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get currentTarget() {
        return pd(this).currentTarget
    },

    /**
     * @returns {EventTarget[]} The composed path of this event.
     */
    composedPath() {
        const currentTarget = pd(this).currentTarget;
        if (currentTarget == null) {
            return []
        }
        return [currentTarget]
    },

    /**
     * Constant of NONE.
     * @type {number}
     */
    get NONE() {
        return 0
    },

    /**
     * Constant of CAPTURING_PHASE.
     * @type {number}
     */
    get CAPTURING_PHASE() {
        return 1
    },

    /**
     * Constant of AT_TARGET.
     * @type {number}
     */
    get AT_TARGET() {
        return 2
    },

    /**
     * Constant of BUBBLING_PHASE.
     * @type {number}
     */
    get BUBBLING_PHASE() {
        return 3
    },

    /**
     * The target of this event.
     * @type {number}
     */
    get eventPhase() {
        return pd(this).eventPhase
    },

    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopPropagation() {
        const data = pd(this);

        data.stopped = true;
        if (typeof data.event.stopPropagation === "function") {
            data.event.stopPropagation();
        }
    },

    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopImmediatePropagation() {
        const data = pd(this);

        data.stopped = true;
        data.immediateStopped = true;
        if (typeof data.event.stopImmediatePropagation === "function") {
            data.event.stopImmediatePropagation();
        }
    },

    /**
     * The flag to be bubbling.
     * @type {boolean}
     */
    get bubbles() {
        return Boolean(pd(this).event.bubbles)
    },

    /**
     * The flag to be cancelable.
     * @type {boolean}
     */
    get cancelable() {
        return Boolean(pd(this).event.cancelable)
    },

    /**
     * Cancel this event.
     * @returns {void}
     */
    preventDefault() {
        setCancelFlag(pd(this));
    },

    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     */
    get defaultPrevented() {
        return pd(this).canceled
    },

    /**
     * The flag to be composed.
     * @type {boolean}
     */
    get composed() {
        return Boolean(pd(this).event.composed)
    },

    /**
     * The unix time of this event.
     * @type {number}
     */
    get timeStamp() {
        return pd(this).timeStamp
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     * @deprecated
     */
    get srcElement() {
        return pd(this).eventTarget
    },

    /**
     * The flag to stop event bubbling.
     * @type {boolean}
     * @deprecated
     */
    get cancelBubble() {
        return pd(this).stopped
    },
    set cancelBubble(value) {
        if (!value) {
            return
        }
        const data = pd(this);

        data.stopped = true;
        if (typeof data.event.cancelBubble === "boolean") {
            data.event.cancelBubble = true;
        }
    },

    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     * @deprecated
     */
    get returnValue() {
        return !pd(this).canceled
    },
    set returnValue(value) {
        if (!value) {
            setCancelFlag(pd(this));
        }
    },

    /**
     * Initialize this event object. But do nothing under event dispatching.
     * @param {string} type The event type.
     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.
     * @param {boolean} [cancelable=false] The flag to be possible to cancel.
     * @deprecated
     */
    initEvent() {
        // Do nothing.
    },
};

// `constructor` is not enumerable.
Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true,
});

// Ensure `event instanceof window.Event` is `true`.
if (typeof window !== "undefined" && typeof window.Event !== "undefined") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);

    // Make association for wrappers.
    wrappers.set(window.Event.prototype, Event);
}

/**
 * Get the property descriptor to redirect a given property.
 * @param {string} key Property name to define property descriptor.
 * @returns {PropertyDescriptor} The property descriptor to redirect the property.
 * @private
 */
function defineRedirectDescriptor(key) {
    return {
        get() {
            return pd(this).event[key]
        },
        set(value) {
            pd(this).event[key] = value;
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Get the property descriptor to call a given method property.
 * @param {string} key Property name to define property descriptor.
 * @returns {PropertyDescriptor} The property descriptor to call the method property.
 * @private
 */
function defineCallDescriptor(key) {
    return {
        value() {
            const event = pd(this).event;
            return event[key].apply(event, arguments)
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Define new wrapper class.
 * @param {Function} BaseEvent The base wrapper class.
 * @param {Object} proto The prototype of the original event.
 * @returns {Function} The defined wrapper class.
 * @private
 */
function defineWrapper(BaseEvent, proto) {
    const keys = Object.keys(proto);
    if (keys.length === 0) {
        return BaseEvent
    }

    /** CustomEvent */
    function CustomEvent(eventTarget, event) {
        BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
        constructor: { value: CustomEvent, configurable: true, writable: true },
    });

    // Define accessors.
    for (let i = 0; i < keys.length; ++i) {
        const key = keys[i];
        if (!(key in BaseEvent.prototype)) {
            const descriptor = Object.getOwnPropertyDescriptor(proto, key);
            const isFunc = typeof descriptor.value === "function";
            Object.defineProperty(
                CustomEvent.prototype,
                key,
                isFunc
                    ? defineCallDescriptor(key)
                    : defineRedirectDescriptor(key)
            );
        }
    }

    return CustomEvent
}

/**
 * Get the wrapper class of a given prototype.
 * @param {Object} proto The prototype of the original event to get its wrapper.
 * @returns {Function} The wrapper class.
 * @private
 */
function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
        return Event
    }

    let wrapper = wrappers.get(proto);
    if (wrapper == null) {
        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
        wrappers.set(proto, wrapper);
    }
    return wrapper
}

/**
 * Wrap a given event to management a dispatching.
 * @param {EventTarget} eventTarget The event target of this dispatching.
 * @param {Object} event The event to wrap.
 * @returns {Event} The wrapper instance.
 * @private
 */
function wrapEvent(eventTarget, event) {
    const Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event)
}

/**
 * Get the immediateStopped flag of a given event.
 * @param {Event} event The event to get.
 * @returns {boolean} The flag to stop propagation immediately.
 * @private
 */
function isStopped(event) {
    return pd(event).immediateStopped
}

/**
 * Set the current event phase of a given event.
 * @param {Event} event The event to set current target.
 * @param {number} eventPhase New event phase.
 * @returns {void}
 * @private
 */
function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
}

/**
 * Set the current target of a given event.
 * @param {Event} event The event to set current target.
 * @param {EventTarget|null} currentTarget New current target.
 * @returns {void}
 * @private
 */
function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
}

/**
 * Set a passive listener of a given event.
 * @param {Event} event The event to set current target.
 * @param {Function|null} passiveListener New passive listener.
 * @returns {void}
 * @private
 */
function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
}

/**
 * @typedef {object} ListenerNode
 * @property {Function} listener
 * @property {1|2|3} listenerType
 * @property {boolean} passive
 * @property {boolean} once
 * @property {ListenerNode|null} next
 * @private
 */

/**
 * @type {WeakMap<object, Map<string, ListenerNode>>}
 * @private
 */
const listenersMap = new WeakMap();

// Listener types
const CAPTURE = 1;
const BUBBLE = 2;
const ATTRIBUTE = 3;

/**
 * Check whether a given value is an object or not.
 * @param {any} x The value to check.
 * @returns {boolean} `true` if the value is an object.
 */
function isObject(x) {
    return x !== null && typeof x === "object" //eslint-disable-line no-restricted-syntax
}

/**
 * Get listeners.
 * @param {EventTarget} eventTarget The event target to get.
 * @returns {Map<string, ListenerNode>} The listeners.
 * @private
 */
function getListeners(eventTarget) {
    const listeners = listenersMap.get(eventTarget);
    if (listeners == null) {
        throw new TypeError(
            "'this' is expected an EventTarget object, but got another value."
        )
    }
    return listeners
}

/**
 * Get the property descriptor for the event attribute of a given event.
 * @param {string} eventName The event name to get property descriptor.
 * @returns {PropertyDescriptor} The property descriptor.
 * @private
 */
function defineEventAttributeDescriptor(eventName) {
    return {
        get() {
            const listeners = getListeners(this);
            let node = listeners.get(eventName);
            while (node != null) {
                if (node.listenerType === ATTRIBUTE) {
                    return node.listener
                }
                node = node.next;
            }
            return null
        },

        set(listener) {
            if (typeof listener !== "function" && !isObject(listener)) {
                listener = null; // eslint-disable-line no-param-reassign
            }
            const listeners = getListeners(this);

            // Traverse to the tail while removing old value.
            let prev = null;
            let node = listeners.get(eventName);
            while (node != null) {
                if (node.listenerType === ATTRIBUTE) {
                    // Remove old value.
                    if (prev !== null) {
                        prev.next = node.next;
                    } else if (node.next !== null) {
                        listeners.set(eventName, node.next);
                    } else {
                        listeners.delete(eventName);
                    }
                } else {
                    prev = node;
                }

                node = node.next;
            }

            // Add new value.
            if (listener !== null) {
                const newNode = {
                    listener,
                    listenerType: ATTRIBUTE,
                    passive: false,
                    once: false,
                    next: null,
                };
                if (prev === null) {
                    listeners.set(eventName, newNode);
                } else {
                    prev.next = newNode;
                }
            }
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Define an event attribute (e.g. `eventTarget.onclick`).
 * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.
 * @param {string} eventName The event name to define.
 * @returns {void}
 */
function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(
        eventTargetPrototype,
        `on${eventName}`,
        defineEventAttributeDescriptor(eventName)
    );
}

/**
 * Define a custom EventTarget with event attributes.
 * @param {string[]} eventNames Event names for event attributes.
 * @returns {EventTarget} The custom EventTarget.
 * @private
 */
function defineCustomEventTarget(eventNames) {
    /** CustomEventTarget */
    function CustomEventTarget() {
        EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
        constructor: {
            value: CustomEventTarget,
            configurable: true,
            writable: true,
        },
    });

    for (let i = 0; i < eventNames.length; ++i) {
        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget
}

/**
 * EventTarget.
 *
 * - This is constructor if no arguments.
 * - This is a function which returns a CustomEventTarget constructor if there are arguments.
 *
 * For example:
 *
 *     class A extends EventTarget {}
 *     class B extends EventTarget("message") {}
 *     class C extends EventTarget("message", "error") {}
 *     class D extends EventTarget(["message", "error"]) {}
 */
function EventTarget() {
    /*eslint-disable consistent-return */
    if (this instanceof EventTarget) {
        listenersMap.set(this, new Map());
        return
    }
    if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(arguments[0])
    }
    if (arguments.length > 0) {
        const types = new Array(arguments.length);
        for (let i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }
        return defineCustomEventTarget(types)
    }
    throw new TypeError("Cannot call a class as a function")
    /*eslint-enable consistent-return */
}

// Should be enumerable, but class methods are not enumerable.
EventTarget.prototype = {
    /**
     * Add a given listener to this event target.
     * @param {string} eventName The event name to add.
     * @param {Function} listener The listener to add.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    addEventListener(eventName, listener, options) {
        if (listener == null) {
            return
        }
        if (typeof listener !== "function" && !isObject(listener)) {
            throw new TypeError("'listener' should be a function or an object.")
        }

        const listeners = getListeners(this);
        const optionsIsObj = isObject(options);
        const capture = optionsIsObj
            ? Boolean(options.capture)
            : Boolean(options);
        const listenerType = capture ? CAPTURE : BUBBLE;
        const newNode = {
            listener,
            listenerType,
            passive: optionsIsObj && Boolean(options.passive),
            once: optionsIsObj && Boolean(options.once),
            next: null,
        };

        // Set it as the first node if the first node is null.
        let node = listeners.get(eventName);
        if (node === undefined) {
            listeners.set(eventName, newNode);
            return
        }

        // Traverse to the tail while checking duplication..
        let prev = null;
        while (node != null) {
            if (
                node.listener === listener &&
                node.listenerType === listenerType
            ) {
                // Should ignore duplication.
                return
            }
            prev = node;
            node = node.next;
        }

        // Add it.
        prev.next = newNode;
    },

    /**
     * Remove a given listener from this event target.
     * @param {string} eventName The event name to remove.
     * @param {Function} listener The listener to remove.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    removeEventListener(eventName, listener, options) {
        if (listener == null) {
            return
        }

        const listeners = getListeners(this);
        const capture = isObject(options)
            ? Boolean(options.capture)
            : Boolean(options);
        const listenerType = capture ? CAPTURE : BUBBLE;

        let prev = null;
        let node = listeners.get(eventName);
        while (node != null) {
            if (
                node.listener === listener &&
                node.listenerType === listenerType
            ) {
                if (prev !== null) {
                    prev.next = node.next;
                } else if (node.next !== null) {
                    listeners.set(eventName, node.next);
                } else {
                    listeners.delete(eventName);
                }
                return
            }

            prev = node;
            node = node.next;
        }
    },

    /**
     * Dispatch a given event.
     * @param {Event|{type:string}} event The event to dispatch.
     * @returns {boolean} `false` if canceled.
     */
    dispatchEvent(event) {
        if (event == null || typeof event.type !== "string") {
            throw new TypeError('"event.type" should be a string.')
        }

        // If listeners aren't registered, terminate.
        const listeners = getListeners(this);
        const eventName = event.type;
        let node = listeners.get(eventName);
        if (node == null) {
            return true
        }

        // Since we cannot rewrite several properties, so wrap object.
        const wrappedEvent = wrapEvent(this, event);

        // This doesn't process capturing phase and bubbling phase.
        // This isn't participating in a tree.
        let prev = null;
        while (node != null) {
            // Remove this listener if it's once
            if (node.once) {
                if (prev !== null) {
                    prev.next = node.next;
                } else if (node.next !== null) {
                    listeners.set(eventName, node.next);
                } else {
                    listeners.delete(eventName);
                }
            } else {
                prev = node;
            }

            // Call this listener
            setPassiveListener(
                wrappedEvent,
                node.passive ? node.listener : null
            );
            if (typeof node.listener === "function") {
                try {
                    node.listener.call(this, wrappedEvent);
                } catch (err) {
                    if (
                        typeof console !== "undefined" &&
                        typeof console.error === "function"
                    ) {
                        console.error(err);
                    }
                }
            } else if (
                node.listenerType !== ATTRIBUTE &&
                typeof node.listener.handleEvent === "function"
            ) {
                node.listener.handleEvent(wrappedEvent);
            }

            // Break if `event.stopImmediatePropagation` was called.
            if (isStopped(wrappedEvent)) {
                break
            }

            node = node.next;
        }
        setPassiveListener(wrappedEvent, null);
        setEventPhase(wrappedEvent, 0);
        setCurrentTarget(wrappedEvent, null);

        return !wrappedEvent.defaultPrevented
    },
};

// `constructor` is not enumerable.
Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true,
});

// Ensure `eventTarget instanceof window.EventTarget` is `true`.
if (
    typeof window !== "undefined" &&
    typeof window.EventTarget !== "undefined"
) {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
}

/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * See LICENSE file in root directory for full license.
 */

/**
 * The signal class.
 * @see https://dom.spec.whatwg.org/#abortsignal
 */
class AbortSignal extends EventTarget {
    /**
     * AbortSignal cannot be constructed directly.
     */
    constructor() {
        super();
        throw new TypeError("AbortSignal cannot be constructed directly");
    }
    /**
     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.
     */
    get aborted() {
        const aborted = abortedFlags.get(this);
        if (typeof aborted !== "boolean") {
            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        }
        return aborted;
    }
}
defineEventAttribute(AbortSignal.prototype, "abort");
/**
 * Create an AbortSignal object.
 */
function createAbortSignal() {
    const signal = Object.create(AbortSignal.prototype);
    EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
}
/**
 * Abort a given signal.
 */
function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
        return;
    }
    abortedFlags.set(signal, true);
    signal.dispatchEvent({ type: "abort" });
}
/**
 * Aborted flag for each instances.
 */
const abortedFlags = new WeakMap();
// Properties should be enumerable.
Object.defineProperties(AbortSignal.prototype, {
    aborted: { enumerable: true },
});
// `toString()` should return `"[object AbortSignal]"`
if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortSignal",
    });
}

/**
 * The AbortController.
 * @see https://dom.spec.whatwg.org/#abortcontroller
 */
class AbortController$1 {
    /**
     * Initialize this controller.
     */
    constructor() {
        signals.set(this, createAbortSignal());
    }
    /**
     * Returns the `AbortSignal` object associated with this object.
     */
    get signal() {
        return getSignal(this);
    }
    /**
     * Abort and signal to any observers that the associated activity is to be aborted.
     */
    abort() {
        abortSignal(getSignal(this));
    }
}
/**
 * Associated signals.
 */
const signals = new WeakMap();
/**
 * Get the associated signal of a given controller.
 */
function getSignal(controller) {
    const signal = signals.get(controller);
    if (signal == null) {
        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? "null" : typeof controller}`);
    }
    return signal;
}
// Properties should be enumerable.
Object.defineProperties(AbortController$1.prototype, {
    signal: { enumerable: true },
    abort: { enumerable: true },
});
if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortController$1.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortController",
    });
}

exports.AbortController = AbortController$1;
exports.AbortError = AbortError;
exports.FetchError = FetchError;
exports.File = File$1;
exports.FormData = FormData;
exports.Headers = Headers;
exports.Request = Request;
exports.Response = Response;
exports._Blob = _Blob$1;
exports.fetch = fetch;
exports.isRedirect = isRedirect;
exports.nodeDomexception = nodeDomexception;


/***/ }),

/***/ 7326:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const nodeFetch = __nccwpck_require__(450)

function fetch (input, options) {
  return nodeFetch.fetch(input, options)
}

for (const key in nodeFetch) {
  fetch[key] = nodeFetch[key]
}

module.exports = fetch


/***/ }),

/***/ 8360:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

const getExport = name => __nccwpck_require__.e(/* import() */ 8).then(__nccwpck_require__.bind(__nccwpck_require__, 5008)).then(r => r[name])
const createCaller = name => (input, init) => getExport(name).then(fn => fn(input, init))

exports.fetch = createCaller('fetch')
exports.$fetch = createCaller('$fetch')
exports.$fetch.raw = (input, init) => getExport('$fetch').then($fetch => $fetch.raw(input, init))


/***/ }),

/***/ 5577:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const path = __nccwpck_require__(8597);



exports.basename = path.basename;
exports["default"] = path.path;
exports.delimiter = path.delimiter;
exports.dirname = path.dirname;
exports.extname = path.extname;
exports.format = path.format;
exports.isAbsolute = path.isAbsolute;
exports.join = path.join;
exports.normalize = path.normalize;
exports.normalizeString = path.normalizeString;
exports.parse = path.parse;
exports.relative = path.relative;
exports.resolve = path.resolve;
exports.sep = path.sep;
exports.toNamespacedPath = path.toNamespacedPath;


/***/ }),

/***/ 8597:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


function normalizeWindowsPath(input = "") {
  if (!input || !input.includes("\\")) {
    return input;
  }
  return input.replace(/\\/g, "/");
}

const _UNC_REGEX = /^[/\\]{2}/;
const _IS_ABSOLUTE_RE = /^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/;
const _DRIVE_LETTER_RE = /^[A-Za-z]:$/;
const sep = "/";
const delimiter = ":";
const normalize = function(path) {
  if (path.length === 0) {
    return ".";
  }
  path = normalizeWindowsPath(path);
  const isUNCPath = path.match(_UNC_REGEX);
  const isPathAbsolute = isAbsolute(path);
  const trailingSeparator = path[path.length - 1] === "/";
  path = normalizeString(path, !isPathAbsolute);
  if (path.length === 0) {
    if (isPathAbsolute) {
      return "/";
    }
    return trailingSeparator ? "./" : ".";
  }
  if (trailingSeparator) {
    path += "/";
  }
  if (_DRIVE_LETTER_RE.test(path)) {
    path += "/";
  }
  if (isUNCPath) {
    if (!isPathAbsolute) {
      return `//./${path}`;
    }
    return `//${path}`;
  }
  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;
};
const join = function(...arguments_) {
  if (arguments_.length === 0) {
    return ".";
  }
  let joined;
  for (const argument of arguments_) {
    if (argument && argument.length > 0) {
      if (joined === void 0) {
        joined = argument;
      } else {
        joined += `/${argument}`;
      }
    }
  }
  if (joined === void 0) {
    return ".";
  }
  return normalize(joined.replace(/\/\/+/g, "/"));
};
function cwd() {
  if (typeof process !== "undefined") {
    return process.cwd().replace(/\\/g, "/");
  }
  return "/";
}
const resolve = function(...arguments_) {
  arguments_ = arguments_.map((argument) => normalizeWindowsPath(argument));
  let resolvedPath = "";
  let resolvedAbsolute = false;
  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {
    const path = index >= 0 ? arguments_[index] : cwd();
    if (!path || path.length === 0) {
      continue;
    }
    resolvedPath = `${path}/${resolvedPath}`;
    resolvedAbsolute = isAbsolute(path);
  }
  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);
  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {
    return `/${resolvedPath}`;
  }
  return resolvedPath.length > 0 ? resolvedPath : ".";
};
function normalizeString(path, allowAboveRoot) {
  let res = "";
  let lastSegmentLength = 0;
  let lastSlash = -1;
  let dots = 0;
  let char = null;
  for (let index = 0; index <= path.length; ++index) {
    if (index < path.length) {
      char = path[index];
    } else if (char === "/") {
      break;
    } else {
      char = "/";
    }
    if (char === "/") {
      if (lastSlash === index - 1 || dots === 1) ; else if (dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== "." || res[res.length - 2] !== ".") {
          if (res.length > 2) {
            const lastSlashIndex = res.lastIndexOf("/");
            if (lastSlashIndex === -1) {
              res = "";
              lastSegmentLength = 0;
            } else {
              res = res.slice(0, lastSlashIndex);
              lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
            }
            lastSlash = index;
            dots = 0;
            continue;
          } else if (res.length > 0) {
            res = "";
            lastSegmentLength = 0;
            lastSlash = index;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          res += res.length > 0 ? "/.." : "..";
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0) {
          res += `/${path.slice(lastSlash + 1, index)}`;
        } else {
          res = path.slice(lastSlash + 1, index);
        }
        lastSegmentLength = index - lastSlash - 1;
      }
      lastSlash = index;
      dots = 0;
    } else if (char === "." && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}
const isAbsolute = function(p) {
  return _IS_ABSOLUTE_RE.test(p);
};
const toNamespacedPath = function(p) {
  return normalizeWindowsPath(p);
};
const _EXTNAME_RE = /.(\.[^./]+)$/;
const extname = function(p) {
  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));
  return match && match[1] || "";
};
const relative = function(from, to) {
  const _from = resolve(from).split("/");
  const _to = resolve(to).split("/");
  const _fromCopy = [..._from];
  for (const segment of _fromCopy) {
    if (_to[0] !== segment) {
      break;
    }
    _from.shift();
    _to.shift();
  }
  return [..._from.map(() => ".."), ..._to].join("/");
};
const dirname = function(p) {
  const segments = normalizeWindowsPath(p).replace(/\/$/, "").split("/").slice(0, -1);
  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {
    segments[0] += "/";
  }
  return segments.join("/") || (isAbsolute(p) ? "/" : ".");
};
const format = function(p) {
  const segments = [p.root, p.dir, p.base ?? p.name + p.ext].filter(Boolean);
  return normalizeWindowsPath(
    p.root ? resolve(...segments) : segments.join("/")
  );
};
const basename = function(p, extension) {
  const lastSegment = normalizeWindowsPath(p).split("/").pop();
  return extension && lastSegment.endsWith(extension) ? lastSegment.slice(0, -extension.length) : lastSegment;
};
const parse = function(p) {
  const root = normalizeWindowsPath(p).split("/").shift() || "/";
  const base = basename(p);
  const extension = extname(base);
  return {
    root,
    dir: dirname(p),
    base,
    ext: extension,
    name: base.slice(0, base.length - extension.length)
  };
};

const path = {
  __proto__: null,
  basename: basename,
  delimiter: delimiter,
  dirname: dirname,
  extname: extname,
  format: format,
  isAbsolute: isAbsolute,
  join: join,
  normalize: normalize,
  normalizeString: normalizeString,
  parse: parse,
  relative: relative,
  resolve: resolve,
  sep: sep,
  toNamespacedPath: toNamespacedPath
};

exports.basename = basename;
exports.delimiter = delimiter;
exports.dirname = dirname;
exports.extname = extname;
exports.format = format;
exports.isAbsolute = isAbsolute;
exports.join = join;
exports.normalize = normalize;
exports.normalizeString = normalizeString;
exports.normalizeWindowsPath = normalizeWindowsPath;
exports.parse = parse;
exports.path = path;
exports.relative = relative;
exports.resolve = resolve;
exports.sep = sep;
exports.toNamespacedPath = toNamespacedPath;


/***/ }),

/***/ 4550:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const NUNBER_CHAR_RE = /[0-9]/;
function isUppercase(char = "") {
  if (NUNBER_CHAR_RE.test(char)) {
    return null;
  }
  return char.toUpperCase() === char;
}
const STR_SPLITTERS = ["-", "_", "/", "."];
function splitByCase(str, splitters = STR_SPLITTERS) {
  const parts = [];
  if (!str || typeof str !== "string") {
    return parts;
  }
  let buff = "";
  let previusUpper = null;
  let previousSplitter = null;
  for (const char of str.split("")) {
    const isSplitter = splitters.includes(char);
    if (isSplitter === true) {
      parts.push(buff);
      buff = "";
      previusUpper = null;
      continue;
    }
    const isUpper = isUppercase(char);
    if (previousSplitter === false) {
      if (previusUpper === false && isUpper === true) {
        parts.push(buff);
        buff = char;
        previusUpper = isUpper;
        continue;
      }
      if (previusUpper === true && isUpper === false && buff.length > 1) {
        const lastChar = buff[buff.length - 1];
        parts.push(buff.substr(0, buff.length - 1));
        buff = lastChar + char;
        previusUpper = isUpper;
        continue;
      }
    }
    buff += char;
    previusUpper = isUpper;
    previousSplitter = isSplitter;
  }
  parts.push(buff);
  return parts;
}
function upperFirst(str) {
  if (!str) {
    return "";
  }
  return str[0].toUpperCase() + str.substring(1);
}
function lowerFirst(str) {
  if (!str) {
    return "";
  }
  return str[0].toLowerCase() + str.substring(1);
}
function pascalCase(str = "") {
  return (Array.isArray(str) ? str : splitByCase(str)).map((p) => upperFirst(p)).join("");
}
function camelCase(str = "") {
  return lowerFirst(pascalCase(str));
}
function kebabCase(str = "", joiner = "-") {
  return (Array.isArray(str) ? str : splitByCase(str)).map((p = "") => p.toLowerCase()).join(joiner);
}
function snakeCase(str = "") {
  return kebabCase(str, "_");
}

exports.camelCase = camelCase;
exports.isUppercase = isUppercase;
exports.kebabCase = kebabCase;
exports.lowerFirst = lowerFirst;
exports.pascalCase = pascalCase;
exports.snakeCase = snakeCase;
exports.splitByCase = splitByCase;
exports.upperFirst = upperFirst;


/***/ }),

/***/ 2945:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


const n = /[^\0-\x7E]/;
const t = /[\x2E\u3002\uFF0E\uFF61]/g;
const o = {
  overflow: "Overflow Error",
  "not-basic": "Illegal Input",
  "invalid-input": "Invalid Input"
};
const e = Math.floor;
const r = String.fromCharCode;
function s(n2) {
  throw new RangeError(o[n2]);
}
const c = function(n2, t2) {
  return n2 + 22 + 75 * (n2 < 26) - ((t2 != 0) << 5);
};
const u = function(n2, t2, o2) {
  let r2 = 0;
  for (n2 = o2 ? e(n2 / 700) : n2 >> 1, n2 += e(n2 / t2); n2 > 455; r2 += 36) {
    n2 = e(n2 / 35);
  }
  return e(r2 + 36 * n2 / (n2 + 38));
};
function toASCII(o2) {
  return function(n2, o3) {
    const e2 = n2.split("@");
    let r2 = "";
    e2.length > 1 && (r2 = e2[0] + "@", n2 = e2[1]);
    const s2 = function(n3, t2) {
      const o4 = [];
      let e3 = n3.length;
      for (; e3--; ) {
        o4[e3] = t2(n3[e3]);
      }
      return o4;
    }((n2 = n2.replace(t, ".")).split("."), o3).join(".");
    return r2 + s2;
  }(o2, function(t2) {
    return n.test(t2) ? "xn--" + function(n2) {
      const t3 = [];
      const o3 = (n2 = function(n3) {
        const t4 = [];
        let o4 = 0;
        const e2 = n3.length;
        for (; o4 < e2; ) {
          const r2 = n3.charCodeAt(o4++);
          if (r2 >= 55296 && r2 <= 56319 && o4 < e2) {
            const e3 = n3.charCodeAt(o4++);
            (64512 & e3) == 56320 ? t4.push(((1023 & r2) << 10) + (1023 & e3) + 65536) : (t4.push(r2), o4--);
          } else {
            t4.push(r2);
          }
        }
        return t4;
      }(n2)).length;
      let f = 128;
      let i = 0;
      let l = 72;
      for (const o4 of n2) {
        o4 < 128 && t3.push(r(o4));
      }
      const h = t3.length;
      let p = h;
      for (h && t3.push("-"); p < o3; ) {
        let o4 = 2147483647;
        for (const t4 of n2) {
          t4 >= f && t4 < o4 && (o4 = t4);
        }
        const a = p + 1;
        o4 - f > e((2147483647 - i) / a) && s("overflow"), i += (o4 - f) * a, f = o4;
        for (const o5 of n2) {
          if (o5 < f && ++i > 2147483647 && s("overflow"), o5 == f) {
            let n3 = i;
            for (let o6 = 36; ; o6 += 36) {
              const s2 = o6 <= l ? 1 : o6 >= l + 26 ? 26 : o6 - l;
              if (n3 < s2) {
                break;
              }
              const u2 = n3 - s2;
              const f2 = 36 - s2;
              t3.push(r(c(s2 + u2 % f2, 0))), n3 = e(u2 / f2);
            }
            t3.push(r(c(n3, 0))), l = u(i, a, p == h), i = 0, ++p;
          }
        }
        ++i, ++f;
      }
      return t3.join("");
    }(t2) : t2;
  });
}

const HASH_RE = /#/g;
const AMPERSAND_RE = /&/g;
const SLASH_RE = /\//g;
const EQUAL_RE = /=/g;
const IM_RE = /\?/g;
const PLUS_RE = /\+/g;
const ENC_CARET_RE = /%5e/gi;
const ENC_BACKTICK_RE = /%60/gi;
const ENC_CURLY_OPEN_RE = /%7b/gi;
const ENC_PIPE_RE = /%7c/gi;
const ENC_CURLY_CLOSE_RE = /%7d/gi;
const ENC_SPACE_RE = /%20/gi;
const ENC_SLASH_RE = /%2f/gi;
const ENC_ENC_SLASH_RE = /%252f/gi;
function encode(text) {
  return encodeURI("" + text).replace(ENC_PIPE_RE, "|");
}
function encodeHash(text) {
  return encode(text).replace(ENC_CURLY_OPEN_RE, "{").replace(ENC_CURLY_CLOSE_RE, "}").replace(ENC_CARET_RE, "^");
}
function encodeQueryValue(input) {
  return encode(typeof input === "string" ? input : JSON.stringify(input)).replace(PLUS_RE, "%2B").replace(ENC_SPACE_RE, "+").replace(HASH_RE, "%23").replace(AMPERSAND_RE, "%26").replace(ENC_BACKTICK_RE, "`").replace(ENC_CARET_RE, "^");
}
function encodeQueryKey(text) {
  return encodeQueryValue(text).replace(EQUAL_RE, "%3D");
}
function encodePath(text) {
  return encode(text).replace(HASH_RE, "%23").replace(IM_RE, "%3F").replace(ENC_ENC_SLASH_RE, "%2F").replace(AMPERSAND_RE, "%26").replace(PLUS_RE, "%2B");
}
function encodeParam(text) {
  return encodePath(text).replace(SLASH_RE, "%2F");
}
function decode(text = "") {
  try {
    return decodeURIComponent("" + text);
  } catch {
    return "" + text;
  }
}
function decodePath(text) {
  return decode(text.replace(ENC_SLASH_RE, "%252F"));
}
function decodeQueryValue(text) {
  return decode(text.replace(PLUS_RE, " "));
}
function encodeHost(name = "") {
  return toASCII(name);
}

function parseQuery(parametersString = "") {
  const object = {};
  if (parametersString[0] === "?") {
    parametersString = parametersString.slice(1);
  }
  for (const parameter of parametersString.split("&")) {
    const s = parameter.match(/([^=]+)=?(.*)/) || [];
    if (s.length < 2) {
      continue;
    }
    const key = decode(s[1]);
    if (key === "__proto__" || key === "constructor") {
      continue;
    }
    const value = decodeQueryValue(s[2] || "");
    if (typeof object[key] !== "undefined") {
      if (Array.isArray(object[key])) {
        object[key].push(value);
      } else {
        object[key] = [object[key], value];
      }
    } else {
      object[key] = value;
    }
  }
  return object;
}
function encodeQueryItem(key, value) {
  if (typeof value === "number" || typeof value === "boolean") {
    value = String(value);
  }
  if (!value) {
    return encodeQueryKey(key);
  }
  if (Array.isArray(value)) {
    return value.map((_value) => `${encodeQueryKey(key)}=${encodeQueryValue(_value)}`).join("&");
  }
  return `${encodeQueryKey(key)}=${encodeQueryValue(value)}`;
}
function stringifyQuery(query) {
  return Object.keys(query).filter((k) => query[k] !== void 0).map((k) => encodeQueryItem(k, query[k])).join("&");
}

class $URL {
  constructor(input = "") {
    this.query = {};
    if (typeof input !== "string") {
      throw new TypeError(
        `URL input should be string received ${typeof input} (${input})`
      );
    }
    const parsed = parseURL(input);
    this.protocol = decode(parsed.protocol);
    this.host = decode(parsed.host);
    this.auth = decode(parsed.auth);
    this.pathname = decodePath(parsed.pathname);
    this.query = parseQuery(parsed.search);
    this.hash = decode(parsed.hash);
  }
  get hostname() {
    return parseHost(this.host).hostname;
  }
  get port() {
    return parseHost(this.host).port || "";
  }
  get username() {
    return parseAuth(this.auth).username;
  }
  get password() {
    return parseAuth(this.auth).password || "";
  }
  get hasProtocol() {
    return this.protocol.length;
  }
  get isAbsolute() {
    return this.hasProtocol || this.pathname[0] === "/";
  }
  get search() {
    const q = stringifyQuery(this.query);
    return q.length > 0 ? "?" + q : "";
  }
  get searchParams() {
    const p = new URLSearchParams();
    for (const name in this.query) {
      const value = this.query[name];
      if (Array.isArray(value)) {
        for (const v of value) {
          p.append(name, v);
        }
      } else {
        p.append(
          name,
          typeof value === "string" ? value : JSON.stringify(value)
        );
      }
    }
    return p;
  }
  get origin() {
    return (this.protocol ? this.protocol + "//" : "") + encodeHost(this.host);
  }
  get fullpath() {
    return encodePath(this.pathname) + this.search + encodeHash(this.hash);
  }
  get encodedAuth() {
    if (!this.auth) {
      return "";
    }
    const { username, password } = parseAuth(this.auth);
    return encodeURIComponent(username) + (password ? ":" + encodeURIComponent(password) : "");
  }
  get href() {
    const auth = this.encodedAuth;
    const originWithAuth = (this.protocol ? this.protocol + "//" : "") + (auth ? auth + "@" : "") + encodeHost(this.host);
    return this.hasProtocol && this.isAbsolute ? originWithAuth + this.fullpath : this.fullpath;
  }
  append(url) {
    if (url.hasProtocol) {
      throw new Error("Cannot append a URL with protocol");
    }
    Object.assign(this.query, url.query);
    if (url.pathname) {
      this.pathname = withTrailingSlash(this.pathname) + withoutLeadingSlash(url.pathname);
    }
    if (url.hash) {
      this.hash = url.hash;
    }
  }
  toJSON() {
    return this.href;
  }
  toString() {
    return this.href;
  }
}

function isRelative(inputString) {
  return ["./", "../"].some((string_) => inputString.startsWith(string_));
}
const PROTOCOL_STRICT_REGEX = /^\w{2,}:([/\\]{1,2})/;
const PROTOCOL_REGEX = /^\w{2,}:([/\\]{2})?/;
const PROTOCOL_RELATIVE_REGEX = /^([/\\]\s*){2,}[^/\\]/;
function hasProtocol(inputString, opts = {}) {
  if (typeof opts === "boolean") {
    opts = { acceptRelative: opts };
  }
  if (opts.strict) {
    return PROTOCOL_STRICT_REGEX.test(inputString);
  }
  return PROTOCOL_REGEX.test(inputString) || (opts.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(inputString) : false);
}
const TRAILING_SLASH_RE = /\/$|\/\?/;
function hasTrailingSlash(input = "", queryParameters = false) {
  if (!queryParameters) {
    return input.endsWith("/");
  }
  return TRAILING_SLASH_RE.test(input);
}
function withoutTrailingSlash(input = "", queryParameters = false) {
  if (!queryParameters) {
    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || "/";
  }
  if (!hasTrailingSlash(input, true)) {
    return input || "/";
  }
  const [s0, ...s] = input.split("?");
  return (s0.slice(0, -1) || "/") + (s.length > 0 ? `?${s.join("?")}` : "");
}
function withTrailingSlash(input = "", queryParameters = false) {
  if (!queryParameters) {
    return input.endsWith("/") ? input : input + "/";
  }
  if (hasTrailingSlash(input, true)) {
    return input || "/";
  }
  const [s0, ...s] = input.split("?");
  return s0 + "/" + (s.length > 0 ? `?${s.join("?")}` : "");
}
function hasLeadingSlash(input = "") {
  return input.startsWith("/");
}
function withoutLeadingSlash(input = "") {
  return (hasLeadingSlash(input) ? input.slice(1) : input) || "/";
}
function withLeadingSlash(input = "") {
  return hasLeadingSlash(input) ? input : "/" + input;
}
function cleanDoubleSlashes(input = "") {
  return input.split("://").map((string_) => string_.replace(/\/{2,}/g, "/")).join("://");
}
function withBase(input, base) {
  if (isEmptyURL(base) || hasProtocol(input)) {
    return input;
  }
  const _base = withoutTrailingSlash(base);
  if (input.startsWith(_base)) {
    return input;
  }
  return joinURL(_base, input);
}
function withoutBase(input, base) {
  if (isEmptyURL(base)) {
    return input;
  }
  const _base = withoutTrailingSlash(base);
  if (!input.startsWith(_base)) {
    return input;
  }
  const trimmed = input.slice(_base.length);
  return trimmed[0] === "/" ? trimmed : "/" + trimmed;
}
function withQuery(input, query) {
  const parsed = parseURL(input);
  const mergedQuery = { ...parseQuery(parsed.search), ...query };
  parsed.search = stringifyQuery(mergedQuery);
  return stringifyParsedURL(parsed);
}
function getQuery(input) {
  return parseQuery(parseURL(input).search);
}
function isEmptyURL(url) {
  return !url || url === "/";
}
function isNonEmptyURL(url) {
  return url && url !== "/";
}
function joinURL(base, ...input) {
  let url = base || "";
  for (const index of input.filter((url2) => isNonEmptyURL(url2))) {
    url = url ? withTrailingSlash(url) + withoutLeadingSlash(index) : index;
  }
  return url;
}
function withHttp(input) {
  return withProtocol(input, "http://");
}
function withHttps(input) {
  return withProtocol(input, "https://");
}
function withoutProtocol(input) {
  return withProtocol(input, "");
}
function withProtocol(input, protocol) {
  const match = input.match(PROTOCOL_REGEX);
  if (!match) {
    return protocol + input;
  }
  return protocol + input.slice(match[0].length);
}
function createURL(input) {
  return new $URL(input);
}
function normalizeURL(input) {
  return createURL(input).toString();
}
function resolveURL(base, ...input) {
  const url = createURL(base);
  for (const index of input.filter((url2) => isNonEmptyURL(url2))) {
    url.append(createURL(index));
  }
  return url.toString();
}
function isSamePath(p1, p2) {
  return decode(withoutTrailingSlash(p1)) === decode(withoutTrailingSlash(p2));
}
function isEqual(a, b, options = {}) {
  if (!options.trailingSlash) {
    a = withTrailingSlash(a);
    b = withTrailingSlash(b);
  }
  if (!options.leadingSlash) {
    a = withLeadingSlash(a);
    b = withLeadingSlash(b);
  }
  if (!options.encoding) {
    a = decode(a);
    b = decode(b);
  }
  return a === b;
}

function parseURL(input = "", defaultProto) {
  if (!hasProtocol(input, { acceptRelative: true })) {
    return defaultProto ? parseURL(defaultProto + input) : parsePath(input);
  }
  const [protocol = "", auth, hostAndPath = ""] = (input.replace(/\\/g, "/").match(/([^/:]+:)?\/\/([^/@]+@)?(.*)/) || []).splice(1);
  const [host = "", path = ""] = (hostAndPath.match(/([^#/?]*)(.*)?/) || []).splice(1);
  const { pathname, search, hash } = parsePath(
    path.replace(/\/(?=[A-Za-z]:)/, "")
  );
  return {
    protocol,
    auth: auth ? auth.slice(0, Math.max(0, auth.length - 1)) : "",
    host,
    pathname,
    search,
    hash
  };
}
function parsePath(input = "") {
  const [pathname = "", search = "", hash = ""] = (input.match(/([^#?]*)(\?[^#]*)?(#.*)?/) || []).splice(1);
  return {
    pathname,
    search,
    hash
  };
}
function parseAuth(input = "") {
  const [username, password] = input.split(":");
  return {
    username: decode(username),
    password: decode(password)
  };
}
function parseHost(input = "") {
  const [hostname, port] = (input.match(/([^/:]*):?(\d+)?/) || []).splice(1);
  return {
    hostname: decode(hostname),
    port
  };
}
function stringifyParsedURL(parsed) {
  const fullpath = parsed.pathname + (parsed.search ? (parsed.search.startsWith("?") ? "" : "?") + parsed.search : "") + parsed.hash;
  if (!parsed.protocol) {
    return fullpath;
  }
  return parsed.protocol + "//" + (parsed.auth ? parsed.auth + "@" : "") + parsed.host + fullpath;
}

exports.$URL = $URL;
exports.cleanDoubleSlashes = cleanDoubleSlashes;
exports.createURL = createURL;
exports.decode = decode;
exports.decodePath = decodePath;
exports.decodeQueryValue = decodeQueryValue;
exports.encode = encode;
exports.encodeHash = encodeHash;
exports.encodeHost = encodeHost;
exports.encodeParam = encodeParam;
exports.encodePath = encodePath;
exports.encodeQueryItem = encodeQueryItem;
exports.encodeQueryKey = encodeQueryKey;
exports.encodeQueryValue = encodeQueryValue;
exports.getQuery = getQuery;
exports.hasLeadingSlash = hasLeadingSlash;
exports.hasProtocol = hasProtocol;
exports.hasTrailingSlash = hasTrailingSlash;
exports.isEmptyURL = isEmptyURL;
exports.isEqual = isEqual;
exports.isNonEmptyURL = isNonEmptyURL;
exports.isRelative = isRelative;
exports.isSamePath = isSamePath;
exports.joinURL = joinURL;
exports.normalizeURL = normalizeURL;
exports.parseAuth = parseAuth;
exports.parseHost = parseHost;
exports.parsePath = parsePath;
exports.parseQuery = parseQuery;
exports.parseURL = parseURL;
exports.resolveURL = resolveURL;
exports.stringifyParsedURL = stringifyParsedURL;
exports.stringifyQuery = stringifyQuery;
exports.withBase = withBase;
exports.withHttp = withHttp;
exports.withHttps = withHttps;
exports.withLeadingSlash = withLeadingSlash;
exports.withProtocol = withProtocol;
exports.withQuery = withQuery;
exports.withTrailingSlash = withTrailingSlash;
exports.withoutBase = withoutBase;
exports.withoutLeadingSlash = withoutLeadingSlash;
exports.withoutProtocol = withoutProtocol;
exports.withoutTrailingSlash = withoutTrailingSlash;


/***/ }),

/***/ 9968:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"dotenv","version":"16.3.1","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://github.com/motdotla/dotenv?sponsor=1","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nccwpck_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__nccwpck_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__nccwpck_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__nccwpck_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__nccwpck_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__nccwpck_require__.o(definition, key) && !__nccwpck_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__nccwpck_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__nccwpck_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__nccwpck_require__.f).reduce((promises, key) => {
/******/ 				__nccwpck_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__nccwpck_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".index.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__nccwpck_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__nccwpck_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/******/ 	/* webpack/runtime/require chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "loaded", otherwise not loaded yet
/******/ 		var installedChunks = {
/******/ 			179: 1
/******/ 		};
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		var installChunk = (chunk) => {
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__nccwpck_require__.o(moreModules, moduleId)) {
/******/ 					__nccwpck_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__nccwpck_require__);
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 1;
/******/ 		
/******/ 		};
/******/ 		
/******/ 		// require() chunk loading for javascript
/******/ 		__nccwpck_require__.f.require = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					installChunk(require("./" + __nccwpck_require__.u(chunkId)));
/******/ 				} else installedChunks[chunkId] = 1;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		// no external install chunk
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
var exports = __webpack_exports__;

Object.defineProperty(exports, "__esModule", ({ value: true }));
const changelog_1 = __nccwpck_require__(5930);
(0, changelog_1.run)();

})();

module.exports = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=index.js.map